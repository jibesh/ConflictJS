"use strict";
function mosseFilter(a) {
  var b, c, d, e, f, g, h, i, j, k;
  (this.psr_prev = void 0), (this.peak_prev = void 0);
  var l = !1;
  if ((a || (a = {}), void 0 === a.drawResponse)) a.drawResponse = !1;
  else if ("CANVAS" != a.drawResponse.tagName) a.drawResponse = !1;
  else var m = a.drawResponse.getContext("2d");
  void 0 === a.psrThreshold && (a.psrThreshold = 10),
    void 0 === a.eta && (a.eta = 0.1),
    void 0 === a.convertToGrayscale && (a.convertToGrayscale = !0),
    (this.load = function (a) {
      (f = a.width),
        (g = a.height),
        (i = f * g),
        (b = [a.real, a.imag]),
        a.top &&
          a.bottom &&
          ((l = !0),
          (c = [a.top.real, a.top.imag]),
          (d = [a.bottom.real, a.bottom.imag])),
        (e = new FFT()),
        e.init(a.width),
        "undefined" != typeof Float64Array
          ? ((h = new Float64Array(i)), (k = new Float64Array(i)))
          : ((h = new Array(i)), (k = new Array(i)));
      var m = document.createElement("canvas");
      m.setAttribute("width", f),
        m.setAttribute("height", g),
        (j = m.getContext("2d"));
    }),
    (this.init = function (a, k) {
      (f = a),
        (g = k),
        (i = f * g),
        (b = [[], []]),
        (c = [[], []]),
        (d = [[], []]);
      for (var m = 0; i > m; m++)
        (b[0][m] = 0),
          (b[1][m] = 0),
          (c[0][m] = 0),
          (c[1][m] = 0),
          (d[0][m] = 0),
          (d[1][m] = 0);
      (l = !0),
        (e = new FFT()),
        e.init(a),
        (h =
          "undefined" != typeof Float64Array
            ? new Float64Array(i)
            : new Array(i));
      var n = document.createElement("canvas");
      n.setAttribute("width", f),
        n.setAttribute("height", g),
        (j = n.getContext("2d"));
    }),
    (this.fft = function (a) {
      for (var b = new Array(i), c = 0; i > c; c++) b[c] = 0;
      return e.fft2d(a, b), [a, b];
    }),
    (this.fft_inplace = function (a) {
      for (var b = 0; i > b; b++) h[b] = 0;
      return e.fft2d(a, h), [a, h];
    }),
    (this.ifft = function (a, b) {
      return e.ifft2d(a, b), a;
    }),
    (this.psr = function (a) {
      for (var b, c = 0, d = 0, e = [], h = 0, i = 0; f > i; i++)
        for (var j = 0; g > j; j++)
          (b = a[j * f + i]),
            (c += b),
            (h += b * b),
            b > d && ((d = b), (e = [i, j]));
      for (var i = -5; 6 > i; i++)
        for (var j = -5; 6 > j; j++)
          Math.sqrt(i * i + j * j) < 5 &&
            ((b = a[(e[1] + j) * f + (e[0] + i)]), (h -= b * b), (c -= b));
      var k = c / a.length,
        l = Math.sqrt(h / a.length - k * k),
        m = (d - k) / l;
      return m;
    }),
    (this.getResponse = function (a) {
      var c = n(a);
      c = o(c);
      var d = this.fft_inplace(c);
      q(d, b);
      var e = this.ifft(d[0], d[1]);
      return e;
    }),
    (this.track = function (e, h, q, t, u, v, w, x) {
      if (!b)
        return (
          console.log(
            "Mosse-filter needs to be initialized or trained before starting tracking."
          ),
          !1
        );
      if ("VIDEO" == e.tagName || "IMG" == e.tagName) {
        var y = Math.round((h / e.width) * e.videoWidth),
          z = Math.round((q / e.height) * e.videoHeight),
          A = Math.round((t / e.width) * e.videoWidth),
          B = Math.round((u / e.height) * e.videoHeight);
        j.drawImage(e, y, z, A, B, 0, 0, f, g);
      } else "CANVAS" == e.tagName && j.drawImage(e, h, q, t, u, 0, 0, f, g);
      var C = j.getImageData(0, 0, f, g),
        D = C.data;
      if (a.convertToGrayscale)
        for (var E = 0; i > E; E++)
          (k[E] = 0.3 * D[4 * E]),
            (k[E] += 0.59 * D[4 * E + 1]),
            (k[E] += 0.11 * D[4 * E + 2]);
      else for (var E = 0; i > E; E++) k[E] = D[4 * E];
      var F = n(k);
      F = o(F);
      var G = this.fft_inplace(F),
        H = p(G, b),
        I = this.ifft(H[0], H[1]),
        J = 0,
        K = 0,
        L = [];
      if (w)
        for (var M, N, O, P = 128, Q = 0; f > Q; Q++)
          for (var R = 0; g > R; R++)
            (N = Q - f / 2),
              (O = R - g / 2),
              (M = Math.exp((-0.5 * (N * N + O * O)) / P)),
              I[R * f + Q] * M > J && ((J = I[R * f + Q] * M), (L = [Q, R])),
              I[R * f + Q] < K && (K = I[R * f + Q]);
      else
        for (var Q = 0; f > Q; Q++)
          for (var R = 0; g > R; R++)
            I[R * f + Q] > J && ((J = I[R * f + Q]), (L = [Q, R])),
              I[R * f + Q] < K && (K = I[R * f + Q]);
      if (((this.peak_prev = J), a.drawResponse)) {
        var S = J - K,
          T = document.createElement("canvas");
        T.setAttribute("width", 32), T.setAttribute("height", 32);
        for (
          var U = T.getContext("2d"),
            V = U.createImageData(32, 32),
            W = V.data,
            X = 0;
          1024 > X;
          X++
        ) {
          var Y = I[X];
          (Y = Math.round((Y + Math.abs(K)) * (255 / S))),
            (W[4 * X] = Y),
            (W[4 * X + 1] = Y),
            (W[4 * X + 2] = Y),
            (W[4 * X + 3] = 255);
        }
        U.putImageData(V, 0, 0), m.drawImage(T, h, q, t, t);
      }
      if ((x && (this.psr_prev = this.psr(I)), v))
        if (l) {
          if (x) var Z = this.psr_prev;
          else var Z = this.psr(I);
          if (Z > a.psrThreshold) {
            for (var $ = [], _ = L[0], ab = L[1], Q = 0; f > Q; Q++)
              for (var R = 0; g > R; R++)
                $[R * f + Q] = Math.exp(
                  -((Q - _) * (Q - _) + (R - ab) * (R - ab)) / 4
                );
            $ = this.fft($);
            for (
              var bb = r(G), cb = p($, bb), db = p(G, bb), eb = a.eta, E = 0;
              i > E;
              E++
            )
              (c[0][E] = eb * cb[0][E] + (1 - eb) * c[0][E]),
                (c[1][E] = eb * cb[1][E] + (1 - eb) * c[1][E]),
                (d[0][E] = eb * db[0][E] + (1 - eb) * d[0][E]),
                (d[1][E] = eb * db[1][E] + (1 - eb) * d[1][E]);
            b = s(c, d);
          }
        } else
          console.log(
            "The loaded filter does not support updating. Ignoring parameter 'updateFilter'."
          );
      return (L[0] = L[0] * (t / f)), (L[1] = L[1] * (t / g)), 0 > J ? !1 : L;
    }),
    (this.train = function (e, h, m, q, t) {
      if (!l)
        return (
          console.log(
            "The loaded filter does not support updating. Unable to do training."
          ),
          !1
        );
      if ("VIDEO" == e.tagName || "IMG" == e.tagName) {
        var u = Math.round((h / e.width) * e.videoWidth),
          v = Math.round((m / e.height) * e.videoHeight),
          w = Math.round((q / e.width) * e.videoWidth),
          x = Math.round((t / e.height) * e.videoHeight);
        j.drawImage(e, u, v, w, x, 0, 0, f, g);
      } else "CANVAS" == e.tagName && j.drawImage(e, h, m, q, t, 0, 0, f, g);
      for (var y = j.getImageData(0, 0, f, g), z = y.data, A = 0; i > A; A++)
        (k[A] = 0.3 * z[4 * A]),
          (k[A] += 0.59 * z[4 * A + 1]),
          (k[A] += 0.11 * z[4 * A + 2]);
      var B = n(k);
      B = o(B);
      for (var C = [], D = f / 2, E = g / 2, F = 0; f > F; F++)
        for (var G = 0; g > G; G++)
          C[G * f + F] = Math.exp(-((F - D) * (F - D) + (G - E) * (G - E)) / 4);
      C = this.fft(C);
      for (
        var H = this.fft(B),
          I = r(H),
          J = p(C, I),
          K = p(H, I),
          L = a.eta,
          A = 0;
        i > A;
        A++
      )
        (c[0][A] = L * J[0][A] + (1 - L) * c[0][A]),
          (c[1][A] = L * J[1][A] + (1 - L) * c[1][A]),
          (d[0][A] = L * K[0][A] + (1 - L) * d[0][A]),
          (d[1][A] = L * K[1][A] + (1 - L) * d[1][A]);
      return (b = s(c, d)), !0;
    });
  var n = function (a) {
      for (var b = 0; i > b; b++) a[b] = Math.log(a[b] + 1);
      for (var c = 0, b = 0; i > b; b++) c += a[b];
      c /= i;
      for (var b = 0; i > b; b++) a[b] -= c;
      for (var d = 0, b = 0; i > b; b++) d += a[b] * a[b];
      d = Math.sqrt(d);
      for (var b = 0; i > b; b++) a[b] /= d;
      return a;
    },
    o = function (a) {
      for (var b = 0, c = 0; f > c; c++)
        for (var d = 0; g > d; d++) {
          var e = Math.sin((Math.PI * c) / (f - 1)),
            h = Math.sin((Math.PI * d) / (g - 1));
          (a[b] = Math.min(e, h) * a[b]), b++;
        }
      return a;
    },
    p = function (a, b) {
      for (
        var c = new Array(f), d = new Array(f), e = [c, d], g = 0;
        i > g;
        g++
      )
        (e[0][g] = a[0][g] * b[0][g] - a[1][g] * b[1][g]),
          (e[1][g] = a[0][g] * b[1][g] + a[1][g] * b[0][g]);
      return e;
    },
    q = function (a, b) {
      for (var c, d, e = 0; i > e; e++)
        (c = a[0][e] * b[0][e] - a[1][e] * b[1][e]),
          (d = a[0][e] * b[1][e] + a[1][e] * b[0][e]),
          (a[0][e] = c),
          (a[1][e] = d);
    },
    r = function (a) {
      for (var b = [[], []], c = 0; i > c; c++)
        (b[0][c] = a[0][c]), (b[1][c] = -a[1][c]);
      return b;
    },
    s = function (a, b) {
      for (var c = [[], []], d = 0; i > d; d++)
        (c[0][d] =
          (a[0][d] * b[0][d] + a[1][d] * b[1][d]) /
          (b[0][d] * b[0][d] + b[1][d] * b[1][d])),
          (c[1][d] =
            (a[1][d] * b[0][d] - a[0][d] * b[1][d]) /
            (b[0][d] * b[0][d] + b[1][d] * b[1][d]));
      return c;
    };
}
function FFT() {
  function a(a, b, c) {
    for (var d, e, f, j, k, l, m, n, o, p = g >> 2, q = 0; g > q; q++)
      (j = h[q]),
        j > q &&
          ((k = a[q]),
          (a[q] = a[j]),
          (a[j] = k),
          (k = b[q]),
          (b[q] = b[j]),
          (b[j] = k));
    for (var r = 1; g > r; r <<= 1) {
      (e = 0), (d = g / (r << 1));
      for (var s = 0; r > s; s++) {
        (l = i[e + p]), (m = c * i[e]);
        for (var t = s; g > t; t += r << 1)
          (f = t + r),
            (n = l * a[f] + m * b[f]),
            (o = l * b[f] - m * a[f]),
            (a[f] = a[t] - n),
            (a[t] += n),
            (b[f] = b[t] - o),
            (b[t] += o);
        e += d;
      }
    }
  }
  function b() {
    (h = "undefined" != typeof Uint8Array ? new Uint8Array(g) : new Array(g)),
      "undefined" != typeof Float64Array
        ? ((i = new Float64Array(1.25 * g)),
          (e = new Float64Array(g * g)),
          (f = new Float64Array(g * g)))
        : ((i = new Array(1.25 * g)),
          (e = new Array(g * g)),
          (f = new Array(g * g)));
  }
  function c() {
    var a = 0,
      b = 0,
      c = 0;
    for (h[0] = 0; ++a < g; ) {
      for (c = g >> 1; b >= c; ) (b -= c), (c >>= 1);
      (b += c), (h[a] = b);
    }
  }
  function d() {
    var a = g >> 1,
      b = g >> 2,
      c = g >> 3,
      d = a + b,
      e = Math.sin(Math.PI / g),
      f = 2 * e * e,
      h = Math.sqrt(f * (2 - f)),
      j = (i[b] = 1),
      k = (i[0] = 0);
    e = 2 * f;
    for (var l = 1; c > l; l++)
      (j -= f),
        (f += e * j),
        (k += h),
        (h -= e * k),
        (i[l] = k),
        (i[b - l] = j);
    0 !== c && (i[c] = Math.sqrt(0.5));
    for (var m = 0; b > m; m++) i[a - m] = i[m];
    for (var n = 0; d > n; n++) i[n + a] = -i[n];
  }
  var e,
    f,
    g = 0,
    h = null,
    i = null;
  (this.init = function (a) {
    if (0 === a || 0 !== (a & (a - 1)))
      throw new Error("init: radix-2 required");
    (g = a), b(), c(), d();
  }),
    (this.fft1d = function (b, c) {
      a(b, c, 1);
    }),
    (this.ifft1d = function (b, c) {
      var d = 1 / g;
      a(b, c, -1);
      for (var e = 0; g > e; e++) (b[e] *= d), (c[e] *= d);
    }),
    (this.fft2d = function (a, b) {
      for (var c = 0, d = 0; g > d; d++) {
        c = d * g;
        for (var h = 0; g > h; h++) (e[h] = a[h + c]), (f[h] = b[h + c]);
        this.fft1d(e, f);
        for (var i = 0; g > i; i++) (a[i + c] = e[i]), (b[i + c] = f[i]);
      }
      for (var j = 0; g > j; j++) {
        for (var k = 0; g > k; k++)
          (c = j + k * g), (e[k] = a[c]), (f[k] = b[c]);
        this.fft1d(e, f);
        for (var l = 0; g > l; l++)
          (c = j + l * g), (a[c] = e[l]), (b[c] = f[l]);
      }
    }),
    (this.ifft2d = function (a, b) {
      for (var c = 0, d = 0; g > d; d++) {
        c = d * g;
        for (var h = 0; g > h; h++) (e[h] = a[h + c]), (f[h] = b[h + c]);
        this.ifft1d(e, f);
        for (var i = 0; g > i; i++) (a[i + c] = e[i]), (b[i + c] = f[i]);
      }
      for (var j = 0; g > j; j++) {
        for (var k = 0; g > k; k++)
          (c = j + k * g), (e[k] = a[c]), (f[k] = b[c]);
        this.ifft1d(e, f);
        for (var l = 0; g > l; l++)
          (c = j + l * g), (a[c] = e[l]), (b[c] = f[l]);
      }
    });
}
var clm = {
    tracker: function (a) {
      function b(a, b, c) {
        var d, e, g, h, i;
        (d = 2 * b), (e = G[d / 2][0]), (g = G[d / 2][1]);
        for (var j = 0; f > j; j++)
          (e += q.shapeModel.eigenVectors[d][j] * c[j + 4]),
            (g += q.shapeModel.eigenVectors[d + 1][j] * c[j + 4]);
        (h = c[0] * e - c[1] * g + c[2]),
          (i = c[0] * g + c[1] * e + c[3]),
          (e += h),
          (g += i),
          a.beginPath(),
          a.arc(e, g, 1, 0, 2 * Math.PI, !0),
          a.closePath(),
          a.fill();
      }
      function c(a, b) {
        for (var c = [], d = [], e = 0; e < a.length; e++)
          c[e] = [a[e][0], a[e][1]];
        for (var e = 0; e < b.length; e++) d[e] = [b[e][0], b[e][1]];
        (b = d), (a = c);
        for (var f = [0, 0], e = 0; e < a.length; e++)
          (f[0] += a[e][0]), (f[1] += a[e][1]);
        (f[0] /= a.length), (f[1] /= a.length);
        for (var g = [0, 0], e = 0; e < b.length; e++)
          (g[0] += b[e][0]), (g[1] += b[e][1]);
        (g[0] /= b.length), (g[1] /= b.length);
        for (var h = f[0] - g[0], i = f[1] - g[1], e = 0; e < b.length; e++)
          (b[e][0] -= g[0]), (b[e][1] -= g[1]);
        for (var e = 0; e < a.length; e++) (a[e][0] -= f[0]), (a[e][1] -= f[1]);
        for (var j = 0, e = 0; e < b.length; e++)
          (j += b[e][0] * b[e][0]), (j += b[e][1] * b[e][1]);
        j = Math.sqrt(j / b.length);
        for (var k = 0, e = 0; e < a.length; e++)
          (k += a[e][0] * a[e][0]), (k += a[e][1] * a[e][1]);
        k = Math.sqrt(k / a.length);
        for (var l = k / j, e = 0; e < b.length; e++)
          (b[e][0] *= l), (b[e][1] *= l);
        for (var m = 0, n = 0, e = 0; e < b.length; e++)
          (m += b[e][0] * a[e][1] - b[e][1] * a[e][0]),
            (n += b[e][0] * a[e][0] + b[e][1] * a[e][1]);
        var o = Math.atan(m / n);
        return (
          (h += g[0] - l * Math.cos(-o) * g[0] - l * g[1] * Math.sin(-o)),
          (i += g[1] + l * Math.sin(-o) * g[0] - l * g[1] * Math.cos(-o)),
          [h, i, l, o]
        );
      }
      a || (a = {}),
        void 0 === a.constantVelocity && (a.constantVelocity = !0),
        void 0 === a.searchWindow && (a.searchWindow = 11),
        void 0 === a.useWebGL && (a.useWebGL = !0),
        void 0 === a.scoreThreshold && (a.scoreThreshold = 0.5),
        void 0 === a.stopOnConvergence && (a.stopOnConvergence = !1),
        void 0 === a.weightPoints && (a.weightPoints = void 0),
        void 0 === a.sharpenResponse && (a.sharpenResponse = !1);
      var d,
        e,
        f,
        g,
        h,
        i,
        j,
        k,
        l,
        m,
        n,
        o,
        p,
        q,
        r,
        s,
        t,
        u,
        v,
        w,
        x,
        y = !1,
        z = !1,
        A = [],
        B = [],
        C = [],
        D = [],
        E = [],
        F = [],
        G = [],
        H = "single",
        I = ["raw"],
        J = 0,
        K = [10, 5, 1],
        L = 0.1,
        M = !0,
        N = 0.01,
        O = [],
        P = [];
      if ("undefined" != typeof Float64Array)
        var Q = new Float64Array(2),
          R = new Float64Array(2);
      else
        var Q = new Array(2),
          R = new Array(2);
      var S,
        T,
        U,
        V,
        W,
        X,
        Y,
        Z,
        $,
        _,
        ab,
        bb,
        cb,
        db,
        eb,
        fb,
        gb,
        hb,
        ib,
        jb,
        kb,
        lb = 0,
        mb = document.createElement("canvas"),
        nb = mb.getContext("2d"),
        ob = [],
        pb = 0,
        qb = [0, 0],
        rb = [0, 0],
        sb = [0, 0],
        tb = Math.PI / 2;
      (this.init = function (b) {
        (q = b),
          (g = q.patchModel.patchType),
          (d = q.patchModel.numPatches),
          (e = q.patchModel.patchSize[0]),
          (s = "MOSSE" == g ? e : a.searchWindow),
          (f = q.shapeModel.numEvalues),
          (t = q.patchModel.canvasSize[0]),
          (u = q.patchModel.canvasSize[1]),
          (n = document.createElement("canvas")),
          (k = n.getContext("2d")),
          (l = n.width = t + (s - 1) + e - 1),
          (m = n.height = u + (s - 1) + e - 1),
          q.hints &&
          mosseFilter &&
          left_eye_filter &&
          right_eye_filter &&
          nose_filter
            ? ((eb = new mosseFilter()),
              eb.load(left_eye_filter),
              (fb = new mosseFilter()),
              fb.load(right_eye_filter),
              (gb = new mosseFilter()),
              gb.load(nose_filter))
            : console.log(
                "MOSSE filters not found, using rough approximation for initialization."
              ),
          (i = numeric.rep([2 * d, f], 0));
        for (var c = 0; 2 * d > c; c++)
          for (var o = 0; f > o; o++) i[c][o] = q.shapeModel.eigenVectors[c][o];
        for (var c = 0; d > c; c++)
          G[c] = [q.shapeModel.meanShape[c][0], q.shapeModel.meanShape[c][1]];
        ($ = _ = 0), (Y = Z = 1e6);
        for (var c = 0; d > c; c++)
          G[c][0] < Y && (Y = G[c][0]),
            G[c][1] < Z && (Z = G[c][1]),
            G[c][0] > $ && ($ = G[c][0]),
            G[c][1] > _ && (_ = G[c][1]);
        (ab = $ - Y),
          (bb = _ - Z),
          q.scoring &&
            ((cb = new Float64Array(q.scoring.coef)),
            (db = q.scoring.bias),
            (mb.width = q.scoring.size[0]),
            (mb.height = q.scoring.size[1])),
          (j = q.shapeModel.eigenValues),
          (p = q.patchModel.weights),
          (r = q.patchModel.bias),
          (h = numeric.rep([f + 4, f + 4], 0));
        for (var c = 0; f > c; c++)
          h[c + 4][c + 4] =
            q.shapeModel.nonRegularizedVectors.indexOf(c) >= 0
              ? 1e-7
              : 1 / j[c];
        for (var c = 0; f + 4 > c; c++) A[c] = 0;
        if ("SVM" == g) {
          var B,
            C = document.createElement("canvas");
          if (
            (window.WebGLRenderingContext &&
              ((B =
                C.getContext("webgl") || C.getContext("experimental-webgl")),
              (B && B.getExtension("OES_texture_float")) || (B = null)),
            B && a.useWebGL && "undefined" != typeof webglFilter)
          ) {
            V = new webglFilter();
            try {
              V.init(p, r, d, s + e - 1, s + e - 1, e, e),
                "lbp" in p && (z = !0),
                "sobel" in p && (y = !0);
            } catch (D) {
              alert(
                "There was a problem setting up webGL programs, falling back to slightly slower javascript version. :("
              ),
                (V = void 0),
                (W = new svmFilter()),
                W.init(p.raw, r.raw, d, e, s);
            }
          } else {
            if ("undefined" == typeof svmFilter)
              throw "Could not initiate filters, please make sure that svmfilter.js or svmfilter_conv_js.js is loaded.";
            (W = new svmFilter()), W.init(p.raw, r.raw, d, e, s);
          }
        } else
          "MOSSE" == g &&
            ((X = new mosseFilterResponses()), X.init(p, d, e, e));
        if (
          ((S = T = "SVM" == g ? e + s - 1 : s),
          (U = S * T),
          (v = (s - 1) / 2),
          (x = s * s),
          "undefined" != typeof Float64Array)
        ) {
          w = new Float64Array(x);
          for (var c = 0; d > c; c++) E[c] = new Float64Array(U);
        } else {
          w = new Array(x);
          for (var c = 0; d > c; c++) E[c] = new Array(U);
        }
        for (var c = 0; d > c; c++) (O[c] = 1), (P[c] = 0);
        if (a.weightPoints) {
          kb = [];
          for (var c = 0; d > c; c++)
            c in a.weightPoints
              ? ((kb[2 * c] = a.weightPoints[c]),
                (kb[2 * c + 1] = a.weightPoints[c]))
              : ((kb[2 * c] = 1), (kb[2 * c + 1] = 1));
          kb = numeric.diag(kb);
        }
      }),
        (this.start = function (a, b) {
          return "undefined" == typeof q
            ? (console.log(
                "tracker needs to be initalized before starting to track."
              ),
              !1)
            : ("undefined" == typeof ib && ((ib = a), (jb = b)),
              void (hb = Fb(ub)));
        }),
        (this.stop = function () {
          Gb(hb);
        }),
        (this.track = function (b, c) {
          var e, n, o, p, q, r, t;
          if (M) {
            var u = Db(b, c);
            if (!u) {
              var v = document.createEvent("Event");
              return (
                v.initEvent("clmtrackrNotFound", !0, !0),
                document.dispatchEvent(v),
                !1
              );
            }
            (e = u[0]), (p = u[1]), (n = u[2]), (o = u[3]), (M = !1);
          } else {
            if (((lb += 1), a.constantVelocity && C.length >= 2))
              for (var x = 0; x < A.length; x++)
                A[x] = L * C[1][x] + (1 - L) * (2 * C[1][x] - C[0][x]);
            (p = tb - Math.atan((A[0] + 1) / A[1])),
              p > tb && (p -= Math.PI),
              (e = A[1] / Math.sin(p)),
              (n = A[2]),
              (o = A[3]);
          }
          k.save(),
            k.clearRect(0, 0, l, m),
            k.scale(1 / e, 1 / e),
            k.rotate(-p),
            k.translate(-n, -o),
            k.drawImage(b, 0, 0, b.width, b.height),
            k.restore();
          var y = yb(A, !1);
          if (cb && lb % 10 == 0 && !Cb()) {
            (M = !0), (ob = []);
            for (var x = 0; x < A.length; x++) (A[x] = 0), (C = []);
            var v = document.createEvent("Event");
            return (
              v.initEvent("clmtrackrLost", !0, !0),
              document.dispatchEvent(v),
              !1
            );
          }
          for (var z, G, H, x = 0; d > x; x++) {
            (r = y[x][0] - S / 2),
              (t = y[x][1] - T / 2),
              (q = k.getImageData(Math.round(r), Math.round(t), S, T)),
              (z = q.data),
              (G = E[x]);
            for (var I = 0; U > I; I++)
              (H = 0.3 * z[4 * I] + 0.59 * z[4 * I + 1] + 0.11 * z[4 * I + 2]),
                (G[I] = H);
          }
          if ("SVM" == g)
            if ("undefined" != typeof V) F = wb(E);
            else {
              if ("undefined" == typeof W)
                throw "SVM-filters do not seem to be initiated properly.";
              F = W.getResponses(E);
            }
          else "MOSSE" == g && (F = X.getResponses(E));
          if (a.sharpenResponse)
            for (var x = 0; d > x; x++)
              for (var I = 0; I < F[x].length; I++)
                F[x][I] = Math.pow(F[x][I], a.sharpenResponse);
          for (var J, O = B, P = [], x = 0; x < K.length; x++) {
            J = xb(A, i);
            for (var Y, Z, I = 0; d > I; I++) {
              (Y = O[I][0] - ((s - 1) * e) / 2),
                (Z = O[I][1] - ((s - 1) * e) / 2);
              var $ = Ab(s, B[I], Q, w, F, Y, Z, I, K[x], e);
              Bb(s, R, Q, w, $, Y, Z, e),
                (P[I] = [R[0] - B[I][0], R[1] - B[I][1]]);
            }
            for (var _ = numeric.rep([2 * d, 1], 0), ab = 0; d > ab; ab++)
              (_[2 * ab][0] = P[ab][0]), (_[2 * ab + 1][0] = P[ab][1]);
            var bb = numeric.mul(h, K[x]);
            if (a.weightPoints)
              var db = numeric.dot(numeric.transpose(J), numeric.dot(kb, J));
            else var db = numeric.dot(numeric.transpose(J), J);
            for (var eb = numeric.rep([f + 4, 1], 0), fb = 0; f + 4 > fb; fb++)
              eb[fb][0] = A[fb];
            var gb = numeric.dot(bb, eb);
            if (a.weightPoints)
              var hb = numeric.dot(numeric.transpose(J), numeric.dot(kb, _));
            else var hb = numeric.dot(numeric.transpose(J), _);
            for (
              var ib = numeric.add(bb, db),
                jb = numeric.sub(gb, hb),
                mb = numeric.dot(numeric.inv(ib), jb),
                nb = B,
                ab = 0;
              f + 4 > ab;
              ab++
            )
              A[ab] -= mb[ab];
            for (var pb, ab = 0; f > ab; ab++)
              (pb = Math.abs(3 * Math.sqrt(j[ab]))),
                Math.abs(A[ab + 4]) > pb &&
                  (A[ab + 4] = A[ab + 4] > 0 ? pb : -pb);
            B = yb(A, !0);
            for (var qb, rb, sb = 0, ab = 0; ab < B.length; ab++)
              (qb = B[ab][0] - nb[ab][0]),
                (rb = B[ab][1] - nb[ab][1]),
                (sb += qb * qb + rb * rb);
            if (N > sb) break;
          }
          a.constantVelocity &&
            (C.push(A.slice()), C.splice(0, 3 == C.length ? 1 : 0)),
            D.splice(0, 10 == D.length ? 1 : 0),
            D.push(B.slice(0));
          var v = document.createEvent("Event");
          if (
            (v.initEvent("clmtrackrIteration", !0, !0),
            document.dispatchEvent(v),
            this.getConvergence() < 0.5 && ob.length >= 5)
          ) {
            a.stopOnConvergence && this.stop();
            var v = document.createEvent("Event");
            v.initEvent("clmtrackrConverged", !0, !0),
              document.dispatchEvent(v);
          }
          return B;
        }),
        (this.reset = function () {
          (M = !0), (ob = []);
          for (var a = 0; a < A.length; a++) (A[a] = 0), (C = []);
          (ib = void 0), (jb = void 0);
        }),
        (this.draw = function (a, c, d) {
          var e;
          e = void 0 === c ? A.slice(0) : c.slice(0);
          var f = a.getContext("2d");
          (f.fillStyle = "rgb(200,200,200)"),
            (f.strokeStyle = "rgb(130,255,50)");
          var g;
          g = void 0 === d ? q.path.normal : q.path[d];
          for (var h = 0; h < g.length; h++)
            "number" == typeof g[h] ? b(f, g[h], e) : Eb(f, g[h], e);
        }),
        (this.getScore = function () {
          return pb;
        }),
        (this.calculatePositions = function (a) {
          return yb(a, !0);
        }),
        (this.getCurrentPosition = function () {
          return M ? !1 : B;
        }),
        (this.getCurrentParameters = function () {
          return A;
        }),
        (this.getConvergence = function () {
          if (D.length < 10) return 999999;
          for (var a = 0, b = 0, c = 0, e = 0, f = 0; 5 > f; f++)
            for (var g = 0; d > g; g++) (a += D[f][g][0]), (b += D[f][g][1]);
          (a /= 5), (b /= 5);
          for (var f = 5; 10 > f; f++)
            for (var g = 0; d > g; g++) (c += D[f][g][0]), (e += D[f][g][1]);
          (c /= 5), (e /= 5);
          var h = c - a,
            i = e - b,
            j = h * h + i * i;
          return (j /= D.length);
        }),
        (this.setResponseMode = function (a, b) {
          if ("undefined" == typeof q)
            return void console.log(
              "Clmtrackr has not been initialized with a model yet. No changes made."
            );
          if ("undefined" == typeof V)
            return void console.log(
              "Responsemodes are only allowed when using webGL. In pure JS, only 'raw' mode is available."
            );
          if (["single", "blend", "cycle"].indexOf(a) < 0)
            return void console.log(
              "Tried to set an unknown responsemode : '" +
                a +
                "'. No changes made."
            );
          if (!(b instanceof Array))
            return void console.log(
              "List in setResponseMode must be an array of strings! No changes made."
            );
          for (var c = 0; c < b.length; c++)
            ["raw", "sobel", "lbp"].indexOf(b[c]) < 0 &&
              console.log(
                "Unknown element in responsemode list : '" +
                  b[c] +
                  "'. No changes made."
              ),
              "sobel" == b[c] &&
                0 == y &&
                console.log(
                  "The sobel filters have not been initialized! No changes made."
                ),
              "lbp" == b[c] &&
                0 == z &&
                console.log(
                  "The LBP filters have not been initialized! No changes made."
                );
          (J = 0), (H = a), (I = b);
        });
      var ub = function () {
          hb = Fb(ub);
          for (var a = new Date().getTime(); new Date().getTime() - a < 16; ) {
            {
              this.track(ib, jb);
            }
          }
        }.bind(this),
        vb = function (a, b) {
          return "lbp" == a
            ? V.getLBPResponses(b)
            : "raw" == a
            ? V.getRawResponses(b)
            : "sobel" == a
            ? V.getSobelResponses(b)
            : void 0;
        },
        wb = function (a) {
          if ("single" == H) return vb(I[0], a);
          if ("cycle" == H) {
            var b = vb(I[J], a);
            return J++, J >= I.length && (J = 0), b;
          }
          for (var c = [], e = 0; e < I.length; e++) c[e] = vb(I[e], a);
          for (var f = [], e = 0; d > e; e++) {
            for (var b = Array(s * s), g = 0; s * s > g; g++) b[g] = 0;
            for (var h = 0; h < I.length; h++)
              for (var g = 0; s * s > g; g++) b[g] += c[h][e][g] / I.length;
            f[e] = b;
          }
          return f;
        },
        xb = function (a, b) {
          for (
            var c, e, g = numeric.rep([2 * d, f + 4], 0), h = 0;
            d > h;
            h++
          ) {
            (c = G[h][0]), (e = G[h][1]);
            for (var i = 0; f > i; i++)
              (c += a[i + 4] * b[2 * h][i]), (e += a[i + 4] * b[2 * h + 1][i]);
            (g[2 * h][0] = c),
              (g[2 * h + 1][0] = e),
              (c = G[h][1]),
              (e = G[h][0]);
            for (var i = 0; f > i; i++)
              (c += a[i + 4] * b[2 * h + 1][i]), (e += a[i + 4] * b[2 * h][i]);
            (g[2 * h][1] = -c),
              (g[2 * h + 1][1] = e),
              (g[2 * h][2] = 1),
              (g[2 * h + 1][2] = 0),
              (g[2 * h][3] = 0),
              (g[2 * h + 1][3] = 1);
            for (var j = 0; f > j; j++)
              (c = a[0] * b[2 * h][j] - a[1] * b[2 * h + 1][j] + b[2 * h][j]),
                (e =
                  a[0] * b[2 * h + 1][j] +
                  a[1] * b[2 * h][j] +
                  b[2 * h + 1][j]),
                (g[2 * h][j + 4] = c),
                (g[2 * h + 1][j + 4] = e);
          }
          return g;
        },
        yb = function (a, b) {
          for (var c, e, f, g, h = a.length, i = [], j = 0; d > j; j++) {
            (c = G[j][0]), (e = G[j][1]);
            for (var k = 0; h - 4 > k; k++)
              (c += q.shapeModel.eigenVectors[2 * j][k] * a[k + 4]),
                (e += q.shapeModel.eigenVectors[2 * j + 1][k] * a[k + 4]);
            b &&
              ((f = a[0] * c - a[1] * e + a[2]),
              (g = a[0] * e + a[1] * c + a[3]),
              (c += f),
              (e += g)),
              (i[j] = [c, e]);
          }
          return i;
        },
        zb = function (a) {
          var b = document.createElement("canvas");
          (b.width = a.width), (b.height = a.height);
          var c = b.getContext("2d");
          c.drawImage(a, 0, 0, a.width, a.height);
          var d = new jsfeat_face(b),
            e = d.findFace();
          if (!(e.length > 0)) return !1;
          o = e[0];
          for (var f = 1; f < e.length; f++)
            e[f].confidence > o.confidence && (o = e[f]);
          return o;
        },
        Ab = function (a, b, c, d, e, f, g, h, i, j) {
          for (var k, l, m = 0, n = 0, o = 0; a > o; o++) {
            c[1] = g + o * j;
            for (var p = 0; a > p; p++)
              (c[0] = f + p * j),
                (k = b[0] - c[0]),
                (l = b[1] - c[1]),
                (d[m] = e[h][m] * Math.exp((-0.5 * (k * k + l * l)) / (i * j))),
                (n += d[m]),
                m++;
          }
          return n;
        },
        Bb = function (a, b, c, d, e, f, g, h) {
          var i = 0,
            j = 0;
          (b[0] = 0), (b[1] = 0);
          for (var k = 0; a > k; k++) {
            c[1] = g + k * h;
            for (var l = 0; a > l; l++)
              (c[0] = f + l * h),
                (j = d[i] / e),
                (b[0] += j * c[0]),
                (b[1] += j * c[1]),
                i++;
          }
        },
        Cb = function () {
          nb.drawImage(
            n,
            Math.round(Y + ab / 4.5),
            Math.round(Z - bb / 12),
            Math.round(ab - (2 * ab) / 4.5),
            Math.round(bb - bb / 12),
            0,
            0,
            20,
            22
          );
          for (
            var b = nb.getImageData(0, 0, 20, 22),
              c = new Array(440),
              d = b.data,
              e = 0,
              f = 0;
            440 > f;
            f++
          )
            (c[f] = 0.3 * d[4 * f] + 0.59 * d[4 * f + 1] + 0.11 * d[4 * f + 2]),
              (c[f] = Math.log(c[f] + 1)),
              c[f] > e && (e = c[f]);
          if (e > 0) {
            for (var g = 0, f = 0; 440 > f; f++) g += c[f];
            g /= 440;
            for (var h = 0, f = 0; 440 > f; f++) h += (c[f] - g) * (c[f] - g);
            (h /= 439), (h = Math.sqrt(h));
            for (var i = 0, f = 0; 440 > f; f++)
              (c[f] = (c[f] - g) / h), (i += c[f] * cb[f]);
            if (
              ((i += db),
              (i = 1 / (1 + Math.exp(-i))),
              ob.splice(0, 5 == ob.length ? 1 : 0),
              ob.push(i),
              ob.length > 4)
            ) {
              pb = 0;
              for (var f = 0; 5 > f; f++) pb += ob[f];
              if (((pb /= 5), pb < a.scoreThreshold)) return !1;
            }
          }
          return !0;
        },
        Db = function (a, b) {
          var d, e, f, g;
          if (b) o = { x: b[0], y: b[1], width: b[2], height: b[3] };
          else {
            var h = zb(a);
            if (!h) return !1;
          }
          if (
            q.hints &&
            mosseFilter &&
            left_eye_filter &&
            right_eye_filter &&
            nose_filter
          ) {
            var i = (4.5 * o.width) / 10,
              j = (6 * o.width) / 10,
              k = gb.track(
                a,
                Math.round(o.x + o.width / 2 - i / 2),
                Math.round(o.y + o.height * (5 / 8) - i / 2),
                i,
                i,
                !1
              ),
              l = fb.track(
                a,
                Math.round(o.x + (3 * o.width) / 4 - j / 2),
                Math.round(o.y + 0.4 * o.height - j / 2),
                j,
                j,
                !1
              ),
              m = eb.track(
                a,
                Math.round(o.x + o.width / 4 - j / 2),
                Math.round(o.y + 0.4 * o.height - j / 2),
                j,
                j,
                !1
              );
            (qb[0] = Math.round(o.x + (3 * o.width) / 4 - j / 2) + l[0]),
              (qb[1] = Math.round(o.y + 0.4 * o.height - j / 2) + l[1]),
              (rb[0] = Math.round(o.x + o.width / 4 - j / 2) + m[0]),
              (rb[1] = Math.round(o.y + 0.4 * o.height - j / 2) + m[1]),
              (sb[0] = Math.round(o.x + o.width / 2 - i / 2) + k[0]),
              (sb[1] = Math.round(o.y + o.height * (5 / 8) - i / 2) + k[1]);
            var n = q.hints.leftEye,
              p = q.hints.rightEye,
              r = q.hints.nose,
              s = c([rb, qb, sb], [n, p, r]);
            (d = s[0]),
              (e = s[1]),
              (f = s[2]),
              (g = s[3]),
              (A[0] = f * Math.cos(g) - 1),
              (A[1] = f * Math.sin(g)),
              (A[2] = d),
              (A[3] = e);
          } else
            (f = o.width / modelheight),
              (d = o.x - xmin * f + 0.1 * o.width),
              (e = o.y - ymin * f + 0.25 * o.height),
              (A[0] = f - 1),
              (A[2] = d),
              (A[3] = e);
          return (B = yb(A, !0)), [f, g, d, e];
        },
        Eb = function (a, b, c) {
          a.beginPath();
          for (var d, e, g, h, i, j = 0; j < b.length; j++) {
            (d = 2 * b[j]), (e = G[d / 2][0]), (g = G[d / 2][1]);
            for (var k = 0; f > k; k++)
              (e += q.shapeModel.eigenVectors[d][k] * c[k + 4]),
                (g += q.shapeModel.eigenVectors[d + 1][k] * c[k + 4]);
            (h = c[0] * e - c[1] * g + c[2]),
              (i = c[0] * g + c[1] * e + c[3]),
              (e += h),
              (g += i),
              0 == d ? a.moveTo(e, g) : a.lineTo(e, g);
          }
          a.moveTo(0, 0), a.closePath(), a.stroke();
        },
        Fb = (function () {
          return (
            window.requestAnimationFrame ||
            window.webkitRequestAnimationFrame ||
            window.mozRequestAnimationFrame ||
            window.oRequestAnimationFrame ||
            window.msRequestAnimationFrame ||
            function (a) {
              return window.setTimeout(a, 1e3 / 60);
            }
          );
        })(),
        Gb = (function () {
          return (
            window.cancelAnimationFrame ||
            window.webkitCancelRequestAnimationFrame ||
            window.mozCancelRequestAnimationFrame ||
            window.oCancelRequestAnimationFrame ||
            window.msCancelRequestAnimationFrame ||
            window.clearTimeout
          );
        })();
      return !0;
    },
  },
  webglFilter = function () {
    var a,
      b,
      c,
      d,
      e,
      f,
      g,
      h,
      i,
      j,
      k,
      l,
      m,
      n,
      o,
      p,
      q,
      r,
      s,
      t,
      u,
      v,
      w,
      x,
      y,
      z,
      A,
      B,
      C,
      D,
      E,
      F,
      G,
      H,
      I,
      J,
      K,
      L,
      M,
      N,
      O,
      P,
      Q,
      R,
      S,
      T,
      U,
      V,
      W = !1,
      X = !1,
      Y = !1,
      Z = [
        "attribute vec2 a_texCoord;",
        "attribute vec2 a_position;",
        "",
        "varying vec2 v_texCoord;",
        "",
        "void main() {",
        "   // transform coordinates to regular coordinates",
        "   gl_Position = vec4(a_position,0.0,1.0);",
        " ",
        "   // pass the texCoord to the fragment shader",
        "   v_texCoord = a_texCoord;",
        "}",
      ].join("\n"),
      $ = [
        "attribute vec2 a_texCoord;",
        "attribute vec2 a_position;",
        "",
        "varying vec2 v_texCoord;",
        "",
        "void main() {",
        "   // transform coordinates to regular coordinates",
        "   gl_Position = vec4(a_position,0.0,1.0);",
        " ",
        "   // pass the texCoord to the fragment shader",
        "   v_texCoord = a_texCoord;",
        "}",
      ].join("\n"),
      _ = [
        "attribute vec2 a_texCoord_draw;",
        "attribute vec2 a_position_draw;",
        "attribute float a_patchChoice_draw;",
        "",
        "uniform vec2 u_resolutiondraw;",
        "",
        "varying vec2 v_texCoord;",
        "varying float v_select;",
        "",
        "void main() {",
        "   // convert the rectangle from pixels to 0.0 to 1.0",
        "   vec2 zeroToOne = a_position_draw / u_resolutiondraw;",
        "",
        "   // convert from 0->1 to 0->2",
        "   vec2 zeroToTwo = zeroToOne * 2.0;",
        "",
        "   // convert from 0->2 to -1->+1 (clipspace)",
        "   vec2 clipSpace = zeroToTwo - 1.0;",
        "   ",
        "   // transform coordinates to regular coordinates",
        "   gl_Position = vec4(clipSpace * vec2(1.0, 1.0), 0, 1);",
        "",
        "   // pass the texCoord to the fragment shader",
        "   v_texCoord = a_texCoord_draw;",
        "   ",
        "   v_select = a_patchChoice_draw;",
        "}",
      ].join("\n"),
      ab = [
        "precision mediump float;",
        "",
        "// our responses",
        "uniform sampler2D u_responses;",
        "",
        "// the texCoords passed in from the vertex shader.",
        "varying vec2 v_texCoord;",
        "varying float v_select;",
        "",
        "const vec4 bit_shift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);",
        "const vec4 bit_mask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);",
        "",
        "// packing code from here http://stackoverflow.com/questions/9882716/packing-float-into-vec4-how-does-this-code-work",
        "void main() {",
        "  vec4 colorSum = texture2D(u_responses, v_texCoord);",
        "  float value = 0.0;",
        "  if (v_select < 0.1) {",
        "    value = colorSum[0];",
        "  } else if (v_select > 0.9 && v_select < 1.1) {",
        "    value = colorSum[1];",
        "  } else if (v_select > 1.9 && v_select < 2.1) {",
        "    value = colorSum[2];",
        "  } else if (v_select > 2.9 && v_select < 3.1) {",
        "    value = colorSum[3];",
        "  } else {",
        "    value = 1.0;",
        "  }",
        "  ",
        "  vec4 res = fract(value * bit_shift);",
        "  res -= res.xxyz * bit_mask;",
        "  ",
        "  //gl_FragColor = vec4(value, value, value, value);",
        "  //gl_FragColor = vec4(1.0, value, 1.0, 1.0);",
        "  gl_FragColor = res;",
        "}",
      ].join("\n");
    (this.init = function (bb, db, eb, fb, gb, hb, ib) {
      if (hb != ib)
        return void alert("filter width and height must be same size!");
      if (hb % 2 == 0 || ib % 2 == 0)
        return void alert("filters used in svm must be of odd dimensions!");
      (G = db),
        (c = hb),
        (d = ib),
        (e = fb),
        (f = gb),
        (g = eb),
        (m = Math.floor(g / 4) + Math.ceil((g % 4) / 4)),
        (h = e),
        (i = f * m),
        (v = e - c + 1),
        (w = f - c + 1),
        (x = w * g),
        (B = Math.floor(g / 4) + Math.ceil((g % 4) / 4)),
        (C = e),
        (D = f * B),
        (E = e * f),
        (F = new Float32Array(E * B * 4));
      var jb = [1 / e, 1 / (f * m)];
      if (
        ((V = [
          "precision mediump float;",
          "",
          "const vec2 u_onePixelPatches = vec2(" +
            (1 / e).toFixed(10) +
            "," +
            (1 / (f * m)).toFixed(10) +
            ");",
          "const vec2 u_onePixelFilters = vec2(" +
            (1 / c).toFixed(10) +
            "," +
            (1 / (d * m)).toFixed(10) +
            ");",
          "const float u_halffilterwidth = " + ((c - 1) / 2).toFixed(1) + ";",
          "const float u_halffilterheight = " + ((d - 1) / 2).toFixed(1) + ";",
          "",
          "// our patches",
          "uniform sampler2D u_patches;",
          "// our filters",
          "uniform sampler2D u_filters;",
          "",
          "// the texCoords passed in from the vertex shader.",
          "varying vec2 v_texCoord;",
          "varying vec2 v_texCoordFilters; // this should give us correct filter",
          "",
          "void main() {",
          "  vec4 colorSum = vec4(0.0, 0.0, 0.0, 0.0);",
          "  vec4 maxn = vec4(0.0, 0.0, 0.0, 0.0);",
          "  vec4 minn = vec4(256.0, 256.0, 256.0, 256.0);",
          "  vec4 scale = vec4(0.0, 0.0, 0.0, 0.0);",
          "  vec4 patchValue = vec4(0.0, 0.0, 0.0, 0.0);",
          "  vec4 filterValue = vec4(0.0, 0.0, 0.0, 0.0);",
          "  vec4 filterTemp = vec4(0.0, 0.0, 0.0, 0.0);",
          "  for (int w = 0;w < " + c + ";w++) {",
          "    for (int h = 0;h < " + d + ";h++) {",
          "      patchValue = texture2D(u_patches, v_texCoord + u_onePixelPatches * vec2(float(w)-u_halffilterwidth, float(h)-u_halffilterheight));",
          "      filterValue = texture2D(u_filters, v_texCoordFilters + u_onePixelFilters * vec2(float(w)-u_halffilterwidth, float(h)-u_halffilterheight));",
          "      maxn = max(patchValue, maxn);",
          "      minn = min(patchValue, minn);",
          "      colorSum += patchValue*filterValue;",
          "      filterTemp += filterValue;",
          "    } ",
          "  }",
          "  scale = maxn-minn;",
          "  colorSum = (colorSum-(minn*filterTemp))/scale;",
          "  // logistic transformation",
          "  colorSum = 1.0/(1.0 + exp(- (colorSum) ));",
          "  gl_FragColor = colorSum;",
          "}",
        ].join("\n")),
        (U = [
          "attribute vec2 a_texCoord;",
          "attribute vec2 a_position;",
          "",
          "const vec2 u_resolution = vec2(" +
            h.toFixed(1) +
            "," +
            i.toFixed(1) +
            ");",
          "const float u_patchHeight = " + (1 / m).toFixed(10) + ";",
          "const float u_filterHeight = " + (1 / m).toFixed(10) + ";",
          "const vec2 u_midpoint = vec2(0.5 ," +
            (1 / (2 * m)).toFixed(10) +
            ");",
          "",
          "varying vec2 v_texCoord;",
          "varying vec2 v_texCoordFilters;",
          "",
          "void main() {",
          "   // convert the rectangle from pixels to 0.0 to 1.0",
          "   vec2 zeroToOne = a_position / u_resolution;",
          "",
          "   // convert from 0->1 to 0->2",
          "   vec2 zeroToTwo = zeroToOne * 2.0;",
          "",
          "   // convert from 0->2 to -1->+1 (clipspace)",
          "   vec2 clipSpace = zeroToTwo - 1.0;",
          "   ",
          "   // transform coordinates to regular coordinates",
          "   gl_Position = vec4(clipSpace * vec2(1.0, 1.0), 0, 1);",
          " ",
          "   // pass the texCoord to the fragment shader",
          "   v_texCoord = a_texCoord;",
          "   ",
          "   // set the filtertexture coordinate based on number filter to use",
          "   v_texCoordFilters = u_midpoint + vec2(0.0, u_filterHeight * floor(a_texCoord[1]/u_patchHeight));",
          "}",
        ].join("\n")),
        "lbp" in bb &&
          (S = [
            "precision mediump float;",
            "",
            "uniform vec2 u_onePixelPatches;",
            "",
            "// our patches",
            "uniform sampler2D u_patches;",
            "",
            "// the texCoords passed in from the vertex shader.",
            "varying vec2 v_texCoord;",
            "",
            "void main() {",
            "  vec4 topLeft = texture2D(u_patches, v_texCoord + vec2(-" +
              jb[0].toFixed(5) +
              ", -" +
              jb[1].toFixed(5) +
              "));",
            "  vec4 topMid = texture2D(u_patches, v_texCoord + vec2(0.0, -" +
              jb[1].toFixed(5) +
              "));",
            "  vec4 topRight = texture2D(u_patches, v_texCoord + vec2(" +
              jb[0].toFixed(5) +
              ", -" +
              jb[1].toFixed(5) +
              "));",
            "  vec4 midLeft = texture2D(u_patches, v_texCoord + vec2(-" +
              jb[0].toFixed(5) +
              ", 0.0));",
            "  vec4 midMid = texture2D(u_patches, v_texCoord);",
            "  vec4 midRight = texture2D(u_patches, v_texCoord + vec2(" +
              jb[0].toFixed(5) +
              ", 0.0));",
            "  vec4 bottomLeft = texture2D(u_patches, v_texCoord + vec2(-" +
              jb[0].toFixed(5) +
              ", " +
              jb[1].toFixed(5) +
              "));",
            "  vec4 bottomMid = texture2D(u_patches, v_texCoord + vec2(0.0, " +
              jb[1].toFixed(5) +
              "));",
            "  vec4 bottomRight = texture2D(u_patches, v_texCoord + vec2(" +
              jb[0].toFixed(5) +
              ", " +
              jb[1].toFixed(5) +
              "));",
            "  vec4 lbp = step(midMid, midRight)*1.0 + step(midMid, topRight)*2.0 + step(midMid, topMid)*4.0;",
            "  lbp = lbp + step(midMid, topLeft)*8.0 + step(midMid, midLeft)*16.0 + step(midMid, bottomLeft)*32.0;",
            "  lbp = lbp + step(midMid, bottomMid)*64.0 + step(midMid, bottomRight)*128.0;",
            "  gl_FragColor = lbp;",
            "}",
          ].join("\n")),
        "sobel" in bb &&
          (T = [
            "precision mediump float;",
            "",
            "uniform vec2 u_onePixelPatches;",
            "",
            "// our patches",
            "uniform sampler2D u_patches;",
            "",
            "// the texCoords passed in from the vertex shader.",
            "varying vec2 v_texCoord;",
            "",
            "void main() {",
            "  vec4 bottomLeft = texture2D(u_patches, v_texCoord + vec2(-" +
              jb[0].toFixed(5) +
              ", " +
              jb[1].toFixed(5) +
              "));",
            "  vec4 bottomRight = texture2D(u_patches, v_texCoord + vec2(" +
              jb[0].toFixed(5) +
              ", " +
              jb[1].toFixed(5) +
              "));",
            "  vec4 topLeft = texture2D(u_patches, v_texCoord + vec2(-" +
              jb[0].toFixed(5) +
              ", -" +
              jb[1].toFixed(5) +
              "));",
            "  vec4 topRight = texture2D(u_patches, v_texCoord + vec2(" +
              jb[0].toFixed(5) +
              ", -" +
              jb[1].toFixed(5) +
              "));",
            "  vec4 dx = (",
            "    bottomLeft +",
            "    (texture2D(u_patches, v_texCoord + vec2(-" +
              jb[0].toFixed(5) +
              ", 0.0))*vec4(2.0,2.0,2.0,2.0)) +",
            "    topLeft -",
            "    bottomRight -",
            "    (texture2D(u_patches, v_texCoord + vec2(" +
              jb[0].toFixed(5) +
              ", 0.0))*vec4(2.0,2.0,2.0,2.0)) -",
            "    topRight)/4.0;",
            "  vec4 dy = (",
            "    bottomLeft +",
            "    (texture2D(u_patches, v_texCoord + vec2(0.0, " +
              jb[1].toFixed(5) +
              "))*vec4(2.0,2.0,2.0,2.0)) +",
            "    bottomRight -",
            "    topLeft -",
            "    (texture2D(u_patches, v_texCoord + vec2(0.0, -" +
              jb[1].toFixed(5) +
              "))*vec4(2.0,2.0,2.0,2.0)) -",
            "    topRight)/4.0;",
            "  vec4 gradient = sqrt((dx*dx) + (dy*dy));",
            "  gl_FragColor = gradient;",
            "}",
          ].join("\n")),
        (b = document.createElement("canvas")),
        b.setAttribute("width", e - c + 1 + "px"),
        b.setAttribute("height", (f - d + 1) * g + "px"),
        b.setAttribute("id", "renderCanvas"),
        b.setAttribute("style", "display:none;"),
        document.body.appendChild(b),
        (a = setupWebGL(b, {
          premultipliedAlpha: !1,
          preserveDrawingBuffer: !0,
          antialias: !1,
        })),
        !a.getExtension("OES_texture_float"))
      )
        return void alert(
          "Your graphics card does not support floating point textures! :("
        );
      "raw" in bb && (cb(bb.raw, a.TEXTURE0), (Y = !0)),
        "sobel" in bb && (cb(bb.sobel, a.TEXTURE4), (X = !0)),
        "lbp" in bb && (cb(bb.lbp, a.TEXTURE5), (W = !0));
      for (var kb, lb = [], mb = (c - 1) / 2, nb = 0; m > nb; nb++)
        (kb = nb * f),
          (lb = lb.concat([mb, kb + mb, e - mb, kb + mb, mb, kb + f - mb])),
          (lb = lb.concat([
            mb,
            kb + f - mb,
            e - mb,
            kb + mb,
            e - mb,
            kb + f - mb,
          ]));
      lb = new Float32Array(lb);
      for (var ob = [], nb = 0; nb < lb.length; nb++)
        ob[nb] = nb % 2 == 0 ? lb[nb] / h : lb[nb] / i;
      if (((ob = new Float32Array(ob)), "lbp" in bb || "sobel" in bb)) {
        for (
          var kb,
            pb = 1 - 2 / (f * m),
            qb = 1 - 2 / m + 2 / (f * m),
            rb = [],
            nb = 0;
          m > nb;
          nb++
        )
          (kb = nb * (2 / m)),
            (rb = rb.concat([-1, pb - kb, 1, pb - kb, -1, qb - kb])),
            (rb = rb.concat([-1, qb - kb, 1, pb - kb, 1, qb - kb]));
        (rb = new Float32Array(rb)),
          (pb = 1 - 1 / (f * m)),
          (qb = 1 - 1 / m + 1 / (f * m));
        for (var sb = [], nb = 0; m > nb; nb++)
          (kb = nb * (1 / m)),
            (sb = sb.concat([0, pb - kb, 1, pb - kb, 0, qb - kb])),
            (sb = sb.concat([0, qb - kb, 1, pb - kb, 1, qb - kb]));
        sb = new Float32Array(sb);
      }
      y = new Float32Array(12 * g);
      for (var kb, tb, nb = 0; g > nb; nb++)
        (kb = nb * w),
          (tb = 12 * nb),
          (y[tb] = 0),
          (y[tb + 1] = kb),
          (y[tb + 2] = v),
          (y[tb + 3] = kb),
          (y[tb + 4] = 0),
          (y[tb + 5] = kb + w),
          (y[tb + 6] = 0),
          (y[tb + 7] = kb + w),
          (y[tb + 8] = v),
          (y[tb + 9] = kb),
          (y[tb + 10] = v),
          (y[tb + 11] = kb + w);
      z = new Float32Array(12 * g);
      for (
        var ub = (c - 1) / 2 / e,
          vb = (c - 1) / 2 / (f * B),
          wb = f / (f * B),
          nb = 0;
        g > nb;
        nb++
      )
        (kb = Math.floor(nb / 4) * wb),
          (tb = 12 * nb),
          (z[tb] = ub),
          (z[tb + 1] = kb + vb),
          (z[tb + 2] = 1 - ub),
          (z[tb + 3] = kb + vb),
          (z[tb + 4] = ub),
          (z[tb + 5] = kb + wb - vb),
          (z[tb + 6] = ub),
          (z[tb + 7] = kb + wb - vb),
          (z[tb + 8] = 1 - ub),
          (z[tb + 9] = kb + vb),
          (z[tb + 10] = 1 - ub),
          (z[tb + 11] = kb + wb - vb);
      A = new Float32Array(6 * g);
      for (var xb, nb = 0; g > nb; nb++)
        (xb = nb % 4),
          (tb = 6 * nb),
          (A[tb] = xb),
          (A[tb + 1] = xb),
          (A[tb + 2] = xb),
          (A[tb + 3] = xb),
          (A[tb + 4] = xb),
          (A[tb + 5] = xb);
      if ("sobel" in bb) {
        var yb = loadShader(a, $, a.VERTEX_SHADER),
          zb = loadShader(a, T, a.FRAGMENT_SHADER);
        (M = createProgram(a, [yb, zb])),
          a.useProgram(M),
          (Q = a.getAttribLocation(M, "a_position")),
          (R = a.createBuffer()),
          a.bindBuffer(a.ARRAY_BUFFER, R),
          a.bufferData(a.ARRAY_BUFFER, rb, a.STATIC_DRAW),
          a.enableVertexAttribArray(Q),
          a.vertexAttribPointer(Q, 2, a.FLOAT, !1, 0, 0),
          (O = a.getAttribLocation(M, "a_texCoord")),
          (P = a.createBuffer()),
          a.bindBuffer(a.ARRAY_BUFFER, P),
          a.bufferData(a.ARRAY_BUFFER, sb, a.STATIC_DRAW),
          a.enableVertexAttribArray(O),
          a.vertexAttribPointer(O, 2, a.FLOAT, !1, 0, 0),
          a.uniform1i(a.getUniformLocation(M, "u_patches"), 1);
      }
      if ("lbp" in bb) {
        var Ab = loadShader(a, Z, a.VERTEX_SHADER),
          Bb = loadShader(a, S, a.FRAGMENT_SHADER);
        (H = createProgram(a, [Ab, Bb])),
          a.useProgram(H),
          (K = a.getAttribLocation(H, "a_position")),
          (L = a.createBuffer()),
          a.bindBuffer(a.ARRAY_BUFFER, L),
          a.bufferData(a.ARRAY_BUFFER, rb, a.STATIC_DRAW),
          a.enableVertexAttribArray(K),
          a.vertexAttribPointer(K, 2, a.FLOAT, !1, 0, 0),
          (O = a.getAttribLocation(H, "a_texCoord")),
          (J = a.createBuffer()),
          a.bindBuffer(a.ARRAY_BUFFER, J),
          a.bufferData(a.ARRAY_BUFFER, sb, a.STATIC_DRAW),
          a.enableVertexAttribArray(I),
          a.vertexAttribPointer(I, 2, a.FLOAT, !1, 0, 0),
          a.uniform1i(a.getUniformLocation(H, "u_patches"), 1);
      }
      var Cb = loadShader(a, _, a.VERTEX_SHADER),
        Db = loadShader(a, ab, a.FRAGMENT_SHADER);
      (k = createProgram(a, [Cb, Db])), a.useProgram(k);
      var Eb = a.getUniformLocation(k, "u_resolutiondraw");
      a.uniform2f(Eb, v, x);
      var Fb = a.getUniformLocation(k, "u_responses");
      a.uniform1i(Fb, 2);
      var Gb = loadShader(a, U, a.VERTEX_SHADER),
        Hb = loadShader(a, V, a.FRAGMENT_SHADER);
      (j = createProgram(a, [Gb, Hb])), a.useProgram(j);
      var Ib = a.getAttribLocation(j, "a_position");
      if (
        ((u = a.createBuffer()),
        a.bindBuffer(a.ARRAY_BUFFER, u),
        a.bufferData(a.ARRAY_BUFFER, lb, a.STATIC_DRAW),
        a.enableVertexAttribArray(Ib),
        a.vertexAttribPointer(Ib, 2, a.FLOAT, !1, 0, 0),
        (t = a.getAttribLocation(j, "a_texCoord")),
        (s = a.createBuffer()),
        a.bindBuffer(a.ARRAY_BUFFER, s),
        a.bufferData(a.ARRAY_BUFFER, ob, a.STATIC_DRAW),
        a.enableVertexAttribArray(t),
        a.vertexAttribPointer(t, 2, a.FLOAT, !1, 0, 0),
        "lbp" in bb || "sobel" in bb)
      ) {
        a.activeTexture(a.TEXTURE3);
        var Jb = a.createTexture();
        a.bindTexture(a.TEXTURE_2D, Jb),
          a.texImage2D(
            a.TEXTURE_2D,
            0,
            a.RGBA,
            e,
            f * m,
            0,
            a.RGBA,
            a.FLOAT,
            null
          ),
          a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_S, a.CLAMP_TO_EDGE),
          a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_T, a.CLAMP_TO_EDGE),
          a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MIN_FILTER, a.NEAREST),
          a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MAG_FILTER, a.NEAREST),
          (N = a.createFramebuffer()),
          a.bindFramebuffer(a.FRAMEBUFFER, N),
          a.framebufferTexture2D(
            a.FRAMEBUFFER,
            a.COLOR_ATTACHMENT0,
            a.TEXTURE_2D,
            Jb,
            0
          );
      }
      a.activeTexture(a.TEXTURE2),
        (r = a.createTexture()),
        a.bindTexture(a.TEXTURE_2D, r),
        a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_S, a.CLAMP_TO_EDGE),
        a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_T, a.CLAMP_TO_EDGE),
        a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MIN_FILTER, a.NEAREST),
        a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MAG_FILTER, a.NEAREST),
        a.texImage2D(
          a.TEXTURE_2D,
          0,
          a.RGBA,
          e,
          f * m,
          0,
          a.RGBA,
          a.FLOAT,
          null
        ),
        (l = a.createFramebuffer()),
        a.bindFramebuffer(a.FRAMEBUFFER, l),
        a.framebufferTexture2D(
          a.FRAMEBUFFER,
          a.COLOR_ATTACHMENT0,
          a.TEXTURE_2D,
          r,
          0
        ),
        a.viewport(0, 0, e, f * m),
        (n = a.createTexture()),
        (o = a.createBuffer()),
        (q = a.createBuffer()),
        (p = a.createBuffer());
    }),
      (this.getRawResponses = function (b) {
        bb(b),
          a.useProgram(j),
          a.uniform1i(a.getUniformLocation(j, "u_patches"), 1),
          a.uniform1i(a.getUniformLocation(j, "u_filters"), 0);
        var c = a.getAttribLocation(j, "a_position");
        a.bindBuffer(a.ARRAY_BUFFER, u),
          a.enableVertexAttribArray(c),
          a.vertexAttribPointer(c, 2, a.FLOAT, !1, 0, 0);
        var d = a.getAttribLocation(j, "a_texCoord");
        a.bindBuffer(a.ARRAY_BUFFER, s),
          a.enableVertexAttribArray(d),
          a.vertexAttribPointer(d, 2, a.FLOAT, !1, 0, 0),
          a.bindFramebuffer(a.FRAMEBUFFER, l),
          a.viewport(0, 0, e, f * m),
          a.clearColor(0, 0, 0, 1),
          a.clear(a.COLOR_BUFFER_BIT | a.DEPTH_BUFFER),
          a.drawArrays(a.TRIANGLES, 0, 6 * B);
        var g = db("raw");
        return g;
      }),
      (this.getSobelResponses = function (b) {
        if (X) {
          bb(b), a.useProgram(M);
          var c = a.getAttribLocation(M, "a_position");
          a.bindBuffer(a.ARRAY_BUFFER, R),
            a.enableVertexAttribArray(c),
            a.vertexAttribPointer(c, 2, a.FLOAT, !1, 0, 0);
          var d = a.getAttribLocation(M, "a_texCoord");
          a.bindBuffer(a.ARRAY_BUFFER, P),
            a.enableVertexAttribArray(d),
            a.vertexAttribPointer(d, 2, a.FLOAT, !1, 0, 0),
            a.bindFramebuffer(a.FRAMEBUFFER, N),
            a.viewport(0, 0, e, f * m),
            a.clearColor(0, 0, 0, 1),
            a.clear(a.COLOR_BUFFER_BIT | a.DEPTH_BUFFER),
            a.drawArrays(a.TRIANGLES, 0, 6 * B),
            a.useProgram(j),
            a.uniform1i(a.getUniformLocation(j, "u_filters"), 4),
            a.uniform1i(a.getUniformLocation(j, "u_patches"), 3);
          var g = a.getAttribLocation(j, "a_position");
          a.bindBuffer(a.ARRAY_BUFFER, u),
            a.enableVertexAttribArray(g),
            a.vertexAttribPointer(g, 2, a.FLOAT, !1, 0, 0);
          var h = a.getAttribLocation(j, "a_texCoord");
          a.bindBuffer(a.ARRAY_BUFFER, s),
            a.enableVertexAttribArray(h),
            a.vertexAttribPointer(h, 2, a.FLOAT, !1, 0, 0),
            a.bindFramebuffer(a.FRAMEBUFFER, l),
            a.viewport(0, 0, e, f * m),
            a.clearColor(0, 0, 0, 1),
            a.clear(a.COLOR_BUFFER_BIT | a.DEPTH_BUFFER),
            a.drawArrays(a.TRIANGLES, 0, 6 * B);
          var i = db("sobel");
          return i;
        }
      }),
      (this.getLBPResponses = function (b) {
        if (W) {
          bb(b), a.useProgram(H);
          var c = a.getAttribLocation(H, "a_position");
          a.bindBuffer(a.ARRAY_BUFFER, L),
            a.enableVertexAttribArray(c),
            a.vertexAttribPointer(c, 2, a.FLOAT, !1, 0, 0);
          var d = a.getAttribLocation(H, "a_texCoord");
          a.bindBuffer(a.ARRAY_BUFFER, J),
            a.enableVertexAttribArray(d),
            a.vertexAttribPointer(d, 2, a.FLOAT, !1, 0, 0),
            a.bindFramebuffer(a.FRAMEBUFFER, N),
            a.viewport(0, 0, e, f * m),
            a.clearColor(0, 0, 0, 1),
            a.clear(a.COLOR_BUFFER_BIT | a.DEPTH_BUFFER),
            a.drawArrays(a.TRIANGLES, 0, 6 * B),
            a.useProgram(j),
            a.uniform1i(a.getUniformLocation(j, "u_filters"), 5),
            a.uniform1i(a.getUniformLocation(j, "u_patches"), 3);
          var g = a.getAttribLocation(j, "a_position");
          a.bindBuffer(a.ARRAY_BUFFER, u),
            a.enableVertexAttribArray(g),
            a.vertexAttribPointer(g, 2, a.FLOAT, !1, 0, 0);
          var h = a.getAttribLocation(j, "a_texCoord");
          a.bindBuffer(a.ARRAY_BUFFER, s),
            a.enableVertexAttribArray(h),
            a.vertexAttribPointer(h, 2, a.FLOAT, !1, 0, 0),
            a.bindFramebuffer(a.FRAMEBUFFER, l),
            a.viewport(0, 0, e, f * m),
            a.clearColor(0, 0, 0, 1),
            a.clear(a.COLOR_BUFFER_BIT | a.DEPTH_BUFFER),
            a.drawArrays(a.TRIANGLES, 0, 6 * B);
          var i = db("lbp");
          return i;
        }
      });
    var bb = function (b) {
        for (var c = 0, d = 0, h = 0, i = 0; B > i; i++)
          for (var j = 0; f > j; j++)
            for (var k = 0; e > k; k++)
              (d = 4 * i),
                (h = j * e + k),
                (c = 4 * (E * i + h)),
                (F[c] = g > d ? b[d][h] : 0),
                (F[c + 1] = g > d + 1 ? b[d + 1][h] : 0),
                (F[c + 2] = g > d + 2 ? b[d + 2][h] : 0),
                (F[c + 3] = g > d + 3 ? b[d + 3][h] : 0);
        a.activeTexture(a.TEXTURE1),
          a.bindTexture(a.TEXTURE_2D, n),
          a.texImage2D(a.TEXTURE_2D, 0, a.RGBA, C, D, 0, a.RGBA, a.FLOAT, F),
          a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_S, a.CLAMP_TO_EDGE),
          a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_T, a.CLAMP_TO_EDGE),
          a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MIN_FILTER, a.NEAREST),
          a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MAG_FILTER, a.NEAREST);
      },
      cb = function (b, e) {
        for (var f = c * d, g = new Float32Array(f * m * 4), h = 0; m > h; h++)
          for (var i = 0; d > i; i++)
            for (var j = 0; c > j; j++)
              (g[4 * (f * h + i * c + j)] =
                4 * h < b.length ? b[4 * h][i * c + j] : 0),
                (g[4 * (f * h + i * c + j) + 1] =
                  4 * h + 1 < b.length ? b[4 * h + 1][i * c + j] : 0),
                (g[4 * (f * h + i * c + j) + 2] =
                  4 * h + 2 < b.length ? b[4 * h + 2][i * c + j] : 0),
                (g[4 * (f * h + i * c + j) + 3] =
                  4 * h + 3 < b.length ? b[4 * h + 3][i * c + j] : 0);
        a.activeTexture(e);
        var k = a.createTexture();
        a.bindTexture(a.TEXTURE_2D, k),
          a.texImage2D(
            a.TEXTURE_2D,
            0,
            a.RGBA,
            c,
            d * m,
            0,
            a.RGBA,
            a.FLOAT,
            g
          ),
          a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_S, a.CLAMP_TO_EDGE),
          a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_T, a.CLAMP_TO_EDGE),
          a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MIN_FILTER, a.NEAREST),
          a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MAG_FILTER, a.NEAREST);
      },
      db = function (b) {
        a.useProgram(k),
          a.bindFramebuffer(a.FRAMEBUFFER, null),
          a.viewport(0, 0, v, x),
          a.clearColor(0, 0, 0, 1),
          a.clear(a.COLOR_BUFFER_BIT | a.DEPTH_BUFFER),
          a.bindBuffer(a.ARRAY_BUFFER, o),
          a.bufferData(a.ARRAY_BUFFER, y, a.STATIC_DRAW);
        var c = a.getAttribLocation(k, "a_position_draw");
        a.enableVertexAttribArray(c),
          a.vertexAttribPointer(c, 2, a.FLOAT, !1, 0, 0),
          a.bindBuffer(a.ARRAY_BUFFER, q),
          a.bufferData(a.ARRAY_BUFFER, z, a.STATIC_DRAW);
        var d = a.getAttribLocation(k, "a_texCoord_draw");
        a.enableVertexAttribArray(d),
          a.vertexAttribPointer(d, 2, a.FLOAT, !1, 0, 0),
          a.bindBuffer(a.ARRAY_BUFFER, p),
          a.bufferData(a.ARRAY_BUFFER, A, a.STATIC_DRAW);
        var e = a.getAttribLocation(k, "a_patchChoice_draw");
        a.enableVertexAttribArray(e),
          a.vertexAttribPointer(e, 1, a.FLOAT, !1, 0, 0),
          a.drawArrays(a.TRIANGLES, 0, 6 * g);
        var f = gb();
        (f = hb(f)), (f = fb(f, g)), (f = eb(f, G[b]));
        for (var h = f.length, i = 0; h > i; i++) f[i] = ib(f[i]);
        return f;
      },
      eb = function (a, b) {
        for (var c, d = 0; d < a.length; d++) {
          c = Math.exp(b[d]);
          for (var e = 0; e < a[d].length; e++)
            a[d][e] = 1 / (1 + (1 - a[d][e]) / (a[d][e] * c));
        }
        return a;
      },
      fb = function (a, b) {
        for (var c = [], d = a.length, e = d / b, f = [], g = 0; d > g; g++)
          g % e == 0 && (0 != g && c.push(f), (f = [])), f.push(a[g]);
        return c.push(f), c;
      },
      gb = function () {
        {
          var c = new Uint8Array(4 * b.width * b.height);
          a.readPixels(0, 0, b.width, b.height, a.RGBA, a.UNSIGNED_BYTE, c);
        }
        return c;
      },
      hb = function (a) {
        for (var b = [], c = a.length, d = 0; c > d; d += 4)
          b[(d / 4) >> 0] =
            a[d] / 4294967296 +
            a[d + 1] / 16777216 +
            a[d + 2] / 65536 +
            a[d + 3] / 256;
        return b;
      },
      ib = function (a) {
        for (var b = a.length, c = 0, d = 1, e = 0; b > e; e++)
          (c = a[e] > c ? a[e] : c), (d = a[e] < d ? a[e] : d);
        var f = c - d;
        if (0 == f)
          console.log(
            "a patchresponse was monotone, causing normalization to fail. Leaving it unchanged."
          ),
            (a = a.map(function () {
              return 1;
            }));
        else for (var e = 0; b > e; e++) a[e] = (a[e] - d) / f;
        return a;
      };
  };
!(function () {
  var a = function (a) {
      throw (
        (window.console &&
          (window.console.error
            ? window.console.error(a)
            : window.console.log && window.console.log(a)),
        a)
      );
    },
    b = function () {
      return window != window.top;
    },
    c = function (a, b) {
      if (!window.WebGLRenderingContext) return null;
      var c = d(a, b);
      return c ? c : null;
    },
    d = function (a, b) {
      for (
        var c = ["webgl", "experimental-webgl"], d = null, e = 0;
        e < c.length;
        ++e
      ) {
        try {
          d = a.getContext(c[e], b);
        } catch (f) {}
        if (d) break;
      }
      return d;
    },
    e = function () {
      b() && (document.body.className = "iframe");
    },
    f = function (a) {
      b() && (e(), (a.width = a.clientWidth), (a.height = a.clientHeight));
      var d = c(a);
      return d;
    },
    g = function (b, c, d, e) {
      var f = e || a,
        g = b.createShader(d);
      b.shaderSource(g, c), b.compileShader(g);
      var h = b.getShaderParameter(g, b.COMPILE_STATUS);
      if (!h) {
        var i = b.getShaderInfoLog(g);
        return (
          f("*** Error compiling shader '" + g + "':" + i),
          b.deleteShader(g),
          null
        );
      }
      return g;
    },
    h = function (b, c, d, e) {
      for (var f = b.createProgram(), g = 0; g < c.length; ++g)
        b.attachShader(f, c[g]);
      if (d)
        for (var g = 0; g < d.length; ++g)
          b.bindAttribLocation(f, e ? e[g] : g, d[g]);
      b.linkProgram(f);
      var h = b.getProgramParameter(f, b.LINK_STATUS);
      if (!h) {
        var i = b.getProgramInfoLog(f);
        return a("Error in program linking:" + i), b.deleteProgram(f), null;
      }
      return f;
    },
    i = function (a, b, c, d) {
      var e,
        f = "",
        h = document.getElementById(b);
      if (!h) throw "*** Error: unknown script element" + b;
      if (((f = h.text), !c))
        if ("x-shader/x-vertex" == h.type) e = a.VERTEX_SHADER;
        else if ("x-shader/x-fragment" == h.type) e = a.FRAGMENT_SHADER;
        else if (e != a.VERTEX_SHADER && e != a.FRAGMENT_SHADER)
          throw "*** Error: unknown shader type";
      return g(a, f, c ? c : e, d);
    };
  (window.setupWebGL = c),
    (window.createProgram = h),
    (window.createShaderFromScriptElement = i),
    (window.getWebGLContext = f),
    (window.updateCSSIfInIFrame = e),
    (window.loadShader = g);
})();
var svmFilter = function () {
    function a() {
      function a(a, b, c) {
        for (var d, e, f, j, k, l, m, n, o, p = g >> 2, q = 0; g > q; q++)
          (j = h[q]),
            j > q &&
              ((k = a[q]),
              (a[q] = a[j]),
              (a[j] = k),
              (k = b[q]),
              (b[q] = b[j]),
              (b[j] = k));
        for (var r = 1; g > r; r <<= 1) {
          (e = 0), (d = g / (r << 1));
          for (var s = 0; r > s; s++) {
            (l = i[e + p]), (m = c * i[e]);
            for (var t = s; g > t; t += r << 1)
              (f = t + r),
                (n = l * a[f] + m * b[f]),
                (o = l * b[f] - m * a[f]),
                (a[f] = a[t] - n),
                (a[t] += n),
                (b[f] = b[t] - o),
                (b[t] += o);
            e += d;
          }
        }
      }
      function b() {
        (h =
          "undefined" != typeof Uint8Array ? new Uint8Array(g) : new Array(g)),
          "undefined" != typeof Float64Array
            ? ((i = new Float64Array(1.25 * g)),
              (e = new Float64Array(g)),
              (f = new Float64Array(g)))
            : ((i = new Array(1.25 * g)),
              (e = new Array(g)),
              (f = new Array(g)));
      }
      function c() {
        var a = 0,
          b = 0,
          c = 0;
        for (h[0] = 0; ++a < g; ) {
          for (c = g >> 1; b >= c; ) (b -= c), (c >>= 1);
          (b += c), (h[a] = b);
        }
      }
      function d() {
        var a = g >> 1,
          b = g >> 2,
          c = g >> 3,
          d = a + b,
          e = Math.sin(Math.PI / g),
          f = 2 * e * e,
          h = Math.sqrt(f * (2 - f)),
          j = (i[b] = 1),
          k = (i[0] = 0);
        e = 2 * f;
        for (var l = 1; c > l; l++)
          (j -= f),
            (f += e * j),
            (k += h),
            (h -= e * k),
            (i[l] = k),
            (i[b - l] = j);
        0 !== c && (i[c] = Math.sqrt(0.5));
        for (var m = 0; b > m; m++) i[a - m] = i[m];
        for (var n = 0; d > n; n++) i[n + a] = -i[n];
      }
      var e,
        f,
        g = 0,
        h = null,
        i = null;
      (this.init = function (a) {
        if (0 === a || 0 !== (a & (a - 1)))
          throw new Error("init: radix-2 required");
        (g = a), b(), c(), d();
      }),
        (this.fft1d = function (b, c) {
          a(b, c, 1);
        }),
        (this.ifft1d = function (b, c) {
          var d = 1 / g;
          a(b, c, -1);
          for (var e = 0; g > e; e++) (b[e] *= d), (c[e] *= d);
        }),
        (this.fft2d = function (a, b) {
          for (var c = 0, d = 0; g > d; d++) {
            c = d * g;
            for (var h = 0; g > h; h++) (e[h] = a[h + c]), (f[h] = b[h + c]);
            this.fft1d(e, f);
            for (var i = 0; g > i; i++) (a[i + c] = e[i]), (b[i + c] = f[i]);
          }
          for (var j = 0; g > j; j++) {
            for (var k = 0; g > k; k++)
              (c = j + k * g), (e[k] = a[c]), (f[k] = b[c]);
            this.fft1d(e, f);
            for (var l = 0; g > l; l++)
              (c = j + l * g), (a[c] = e[l]), (b[c] = f[l]);
          }
        }),
        (this.ifft2d = function (a, b) {
          for (var c = 0, d = 0; g > d; d++) {
            c = d * g;
            for (var h = 0; g > h; h++) (e[h] = a[h + c]), (f[h] = b[h + c]);
            this.ifft1d(e, f);
            for (var i = 0; g > i; i++) (a[i + c] = e[i]), (b[i + c] = f[i]);
          }
          for (var j = 0; g > j; j++) {
            for (var k = 0; g > k; k++)
              (c = j + k * g), (e[k] = a[c]), (f[k] = b[c]);
            this.ifft1d(e, f);
            for (var l = 0; g > l; l++)
              (c = j + l * g), (a[c] = e[l]), (b[c] = f[l]);
          }
        }),
        (this.real_ifft2d = function (a, b) {
          for (var c, d = 0, h = 0; g > h; h++) {
            d = h * g;
            for (var i = 0; g > i; i++) (e[i] = a[i + d]), (f[i] = b[i + d]);
            this.ifft1d(e, f);
            for (var j = 0; g > j; j++) (a[j + d] = e[j]), (b[j + d] = f[j]);
          }
          for (var k = g / 2, l = 0, m = 0; g > m; m += 2) {
            (d = m),
              (c = m + 1),
              (e[0] = a[0 + d]),
              (f[0] = a[0 + c]),
              (e[g / 2] = a[k * g + d]),
              (f[g / 2] = a[k * g + c]);
            for (var j = 1; k > j; j++)
              (l = j * g),
                (e[j] = a[l + d] - b[l + c]),
                (e[g - j] = a[l + d] + b[l + c]),
                (f[j] = b[l + d] + a[l + c]),
                (f[g - j] = a[l + c] - b[l + d]);
            this.ifft1d(e, f);
            for (var n = 0; g > n; n++)
              (d = m + n * g),
                (c = m + 1 + n * g),
                (a[d] = e[n]),
                (a[c] = f[n]);
          }
        }),
        (this.real_fft2d = function (a, b) {
          for (var c = 0, d = 0, h = 0; g > h; h += 2) {
            (c = h * g), (d = (h + 1) * g);
            for (var i = 0; g > i; i++) (e[i] = a[i + c]), (f[i] = a[i + d]);
            this.fft1d(e, f),
              (a[0 + c] = e[0]),
              (a[0 + d] = f[0]),
              (b[0 + c] = 0),
              (b[0 + d] = 0),
              (a[g / 2 + c] = e[g / 2]),
              (a[g / 2 + d] = f[g / 2]),
              (b[g / 2 + c] = 0),
              (b[g / 2 + d] = 0);
            for (var j = 1; g / 2 > j; j++)
              (a[j + c] = 0.5 * (e[j] + e[g - j])),
                (b[j + c] = 0.5 * (f[j] - f[g - j])),
                (a[j + d] = 0.5 * (f[j] + f[g - j])),
                (b[j + d] = -0.5 * (e[j] - e[g - j])),
                (a[g - j + c] = a[j + c]),
                (b[g - j + c] = -b[j + c]),
                (a[g - j + d] = a[j + d]),
                (b[g - j + d] = -b[j + d]);
          }
          for (var k = 0; g > k; k++) {
            for (var l = 0; g > l; l++)
              (c = k + l * g), (e[l] = a[c]), (f[l] = b[c]);
            this.fft1d(e, f);
            for (var m = 0; g > m; m++)
              (c = k + m * g), (a[c] = e[m]), (b[c] = f[m]);
          }
        });
    }
    var b, c, d, e, f, g, h, i, j, k, l;
    (this.fft_inplace = function (a, c) {
      "undefined" == typeof c && (c = k);
      for (var d = 0; g > d; d++) c[d] = 0;
      return b.real_fft2d(a, c), [a, c];
    }),
      (this.ifft = function (a, c) {
        return b.real_ifft2d(a, c), a;
      });
    var m = function (a, b) {
      for (var c, d, e = 0; g > e; e++)
        (c = a[0][e] * b[0][e] - a[1][e] * b[1][e]),
          (d = a[0][e] * b[1][e] + a[1][e] * b[0][e]),
          (a[0][e] = c),
          (a[1][e] = d);
    };
    (this.init = function (m, n, o, q, r) {
      (f = p(q - 1 + r)), (g = f * f), (b = new a()), b.init(f), (c = Array(o));
      for (var s, t = (q - 1) / 2, u = 0; o > u; u++) {
        for (
          var v, w, x = new Float64Array(g), y = new Float64Array(g), z = 0;
          q > z;
          z++
        )
          for (var A = 0; q > A; A++)
            (v = t > A ? f - t : -t),
              (w = t > z ? f - t : -t),
              (x[A + v + (z + w) * f] = m[u][q - 1 - z + (q - 1 - A) * q]);
        (s = this.fft_inplace(x, y)), (c[u] = s);
      }
      e = new Float64Array(o);
      for (var u = 0; o > u; u++) e[u] = n[u];
      (d = Array(o)), (k = Array(o));
      for (var u = 0; o > u; u++)
        (d[u] = new Float64Array(r * r)), (k[u] = new Float64Array(r * r));
      (l = new Float64Array(g)), (j = o), (h = q), (i = r);
    }),
      (this.getResponses = function (a) {
        for (var b, g, k = h - 1 + i, p = 0; j > p; p++) {
          for (var r = 0; f * f > r; r++) l[r] = 0;
          a[p] = n(a[p]);
          for (var r = 0; k > r; r++)
            for (var s = 0; k > s; s++) l[r + f * s] = a[p][s + k * r];
          (b = this.fft_inplace(l)),
            m(b, c[p]),
            (b = this.ifft(b[0], b[1])),
            (g = (h - 1) / 2);
          for (var r = 0; i > r; r++)
            for (var s = 0; i > s; s++)
              d[p][r + s * i] = b[g + s + (r + g) * f];
          for (var r = 0; i * i > r; r++) d[p][r] += e[p];
          (d[p] = o(d[p])), q(d[p]);
        }
        return d;
      });
    var n = function (a) {
        for (var b, c = h - 1 + i, d = 0, e = 1e3, f = 0; c > f; f++)
          for (var g = 0; c > g; g++)
            (b = a[g + c * f]), e > b && (e = b), b > d && (d = b);
        for (var j = d - e, f = 0; c > f; f++)
          for (var g = 0; c > g; g++) a[g + c * f] = (a[g + c * f] - e) / j;
        return a;
      },
      o = function (a) {
        for (var b = 0; i > b; b++)
          for (var c = 0; i > c; c++)
            a[b + c * i] = 1 / (1 + Math.exp(-(a[b + c * i] - 1)));
        return a;
      },
      p = function (a) {
        return (
          a--,
          (a |= a >> 1),
          (a |= a >> 2),
          (a |= a >> 4),
          (a |= a >> 8),
          (a |= a >> 16),
          a++,
          a
        );
      },
      q = function (a) {
        for (var b = a.length, c = 0, d = 1, e = 0; b > e; e++)
          (c = a[e] > c ? a[e] : c), (d = a[e] < d ? a[e] : d);
        var f = c - d;
        if (0 == f)
          console.log(
            "a patchresponse was monotone, causing normalization to fail. Leaving it unchanged."
          );
        else for (var e = 0; b > e; e++) a[e] = (a[e] - d) / f;
      };
  },
  mosseFilterResponses = function () {
    var a = [],
      b = [],
      c = 0;
    (this.init = function (b, d, e, f) {
      for (var g = 0; d > g; g++) {
        var h = {};
        (h.width = e), (h.height = f);
        for (
          var i = e * f,
            j = new Float64Array(i),
            k = new Float64Array(i),
            l = 0;
          i > l;
          l++
        )
          (j[l] = b[g][0][l]), (k[l] = b[g][1][l]);
        (h.real = j), (h.imag = k), (a[g] = new mosseFilter()), a[g].load(h);
      }
      c = d;
    }),
      (this.getResponses = function (e) {
        for (var f = 0; c > f; f++)
          (b[f] = a[f].getResponse(e[f])), (b[f] = d(b[f]));
        return b;
      });
    var d = function (a) {
      for (var b = a.length, c = 0, d = 1, e = 0; b > e; e++)
        (c = a[e] > c ? a[e] : c), (d = a[e] < d ? a[e] : d);
      var f = c - d;
      if (0 == f)
        console.log(
          "a patchresponse was monotone, causing normalization to fail. Leaving it unchanged."
        ),
          (a = a.map(function () {
            return 1;
          }));
      else for (var e = 0; b > e; e++) a[e] = (a[e] - d) / f;
      return a;
    };
  },
  left_eye_filter = {
    real: [
      1.5419219943717721, 0.40010880110578706, -0.7904364126534296,
      -1.2685464969238938, 0.39878117336167285, -1.0673489992245377,
      -0.07988083822940402, -0.45374680224191505, -0.04347409793890079,
      -0.31125662385352687, 0.17092430376098702, -0.29613086164846153,
      0.5616469648110296, -1.559786848789493, 0.6451303799749266,
      -1.2899747976234162, 1.1761667998175334, -1.289974797623355,
      0.6451303799749047, -1.5597868487894897, 0.561646964811025,
      -0.29613086164845964, 0.17092430376099094, -0.3112566238535296,
      -0.04347409793890079, -0.4537468022419118, -0.07988083822940466,
      -1.0673489992245357, 0.39878117336167307, -1.2685464969238942,
      -0.7904364126534301, 0.40010880110578717, -1.3820969331049027,
      0.06956047126920577, -1.9786339579213206, -1.9807415717551982,
      -0.7866727441045088, -1.2217002325587256, -0.19150029104902774,
      -0.3513161729077324, -0.17646388464205803, -0.1667209502050344,
      -0.09229861292456652, -0.028899376452253527, -0.1314555696102146,
      -0.32892265898101813, -0.40987148655061206, 0.11741827111366547,
      -0.6725433018260514, -0.46007833291519956, -0.67215259521101,
      -0.4487190743247301, -0.03474931672918458, 0.005563928130243397,
      -0.1767590236098159, -0.2619620808503219, -0.3630125430638704,
      -0.33546767337818123, -0.6458889740799838, -1.1981932989987978,
      0.12372650763830917, -1.4996172161865935, -2.408429802301389,
      -2.050529127959172, -1.7249706159518585, -2.277646289702639,
      -3.125963174341959, -2.9656385065342015, -2.848083508696201,
      -1.426096450031019, -0.6179259082917354, -0.2611655301498782,
      -0.38519889843539723, -0.17511899827006483, -0.32808050503227176,
      0.007680087103746304, -0.18710828510427668, 0.1976534820339281,
      -0.5544445310046505, 0.1458356759032838, -0.6984497111751529,
      -0.9018857723352662, -0.5350001638458337, -0.0444207518616698,
      0.014727914354086128, -0.28084584584371913, -0.2989040874868585,
      -0.3943138014933655, -0.39569215798819307, -0.743519999882583,
      -0.8250219837063175, -1.851491897104155, -0.7430237866893424,
      0.21156442062863762, -3.3061472495599986, -1.7990472945779568,
      -2.219376425173228, -2.343880246691925, -3.361597106712331,
      -3.538324908586371, -2.263967374508659, -2.027175780678075,
      -0.7524258340587223, -0.3014341101683938, -0.3625272253546275,
      -0.2548943100464769, -0.1892849156146708, -0.1179891518538482,
      0.027920290231533224, -0.03547210749814382, -0.2900872185756226,
      -0.3604588674139817, -0.391561438074338, -0.8222225740287656,
      -0.4497991497169593, -0.09813633035547625, 0.06562858246622937,
      -0.3360730432730313, -0.3216120132349778, -0.41856090178723965,
      -0.6402842542962905, -0.7766428172010218, -1.3946448661671447,
      -2.2603422126144683, -0.38769722219534525, -0.9534159393947865,
      -1.412952994959813, -2.360233685802043, -1.275639243727802,
      -2.0983496132652038, -2.568245461005427, -2.879105394693038,
      -2.1809972632688095, -0.8428129384777686, -0.759989367937187,
      -0.18584599820380068, -0.3010574835530826, -0.16098142942852958,
      -0.1379212574041719, -0.08979002287112871, -0.12321821342876504,
      -0.1128661923016878, -0.3924098378001975, -0.5780902167586397,
      -0.48685989567066695, -0.5356535944329623, -0.05103668985052638,
      -0.006854703392511769, -0.1896340515783942, -0.22514761090777807,
      -0.3555582346088891, -0.4667060397658552, -0.5617954148525789,
      -0.7495095888115163, -1.477207542226035, -1.5836466114968029,
      -2.3846549454186694, -1.4884613952536236, -1.8237453905245253,
      -1.6712324532934877, -1.5169157844507295, -1.6930052820597281,
      -2.1023566589276004, -2.2062031109308458, -1.7945281756942255,
      -0.2645739883891265, 0.22038139379151148, -0.43479836723775234,
      -0.19830827357221226, -0.18018565146479498, -0.09706087918479574,
      -0.10088329756370379, -0.06306970995727253, -0.17970932516041177,
      -0.1943040732581543, -0.3797056039227762, -0.4730230160625181,
      -0.3036696794805218, -0.0647323910189154, -0.08902516330269715,
      -0.08200020008302734, -0.22965854401457736, -0.32035624605031326,
      -0.3183678319655244, -0.4013205823631112, -0.6560174703347086,
      -0.5904048375141748, -1.8503084663080034, -1.8694842425148914,
      -1.9326778896298584, -1.630157842292352, -1.43320067851183,
      -1.305707665299106, -1.364200787821644, -1.5357935460809622,
      -1.616199233695124, -0.7400351866837052, -0.2942382417321069,
      0.025934598230976654, -0.043349004411304674, -0.2540802180302247,
      -0.0669656864849775, -0.07571749869863525, 0.007057189465364498,
      -0.04217135665833811, -0.03693831566176801, -0.3422156158175605,
      -0.20400167508805764, -0.3741711609707977, -0.25039909487805356,
      -0.07087453139452493, -0.0569972852039487, -0.06723820695040318,
      -0.17397285212300442, -0.20428337307808273, -0.23651154356493315,
      -0.3335649893327657, -0.07339749754226077, -0.703679598066816,
      -0.8240368002159505, -1.6058616381755235, -1.6192427030685497,
      -1.5705638815427956, -1.4659201063980019, -0.9550417954995102,
      -0.9723752616273987, -1.0460191987834688, -0.9146566894126572,
      -0.6054823236139852, 0.01898438364933451, -0.19419044456729498,
      -0.03962785112430722, 0.0012357796666701798, -0.07811082244532508,
      0.004862636492025052, -0.04044908966237959, -0.0035054269587873454,
      -0.1338754472473073, -0.10031131456276647, -0.2596867467568419,
      -0.20555329767005767, -0.26509289948725284, -0.038788452621647145,
      -0.07699989187225126, -0.0716614330389765, -0.14182240789719938,
      -0.1654673053291095, -0.19859450279267193, -0.05338232636581037,
      -0.2156585383674445, -0.0450973572847935, -0.6244981857994951,
      -0.9262490674491722, -1.0411254782363617, -1.122035196738675,
      -1.0607692164246043, -0.5772381177353403, -0.6318773589638808,
      -0.5481331120442192, -0.5532025210173874, -0.301972995874824,
      -0.04721324975783839, 0.08280893046738329, -0.06771513448322243,
      -0.01022881748368659, 0.04203831125895655, -0.06337176739998067,
      0.029161890169972702, -0.09139631658683613, -0.003460073507075481,
      -0.12424052925006424, -0.244329964180121, -0.265216641753595,
      -0.22745980283820413, -0.14361316535317664, -0.0007590420310057794,
      -0.02093616845786214, -0.14205665196423617, -0.19024248288823023,
      -0.0796861223622452, -0.15016133237735926, 0.049598910651295514,
      -0.11760486834511712, -0.1837522251545049, -0.3859420549411461,
      -0.5354251643699984, -0.5734099173080799, -0.5275362142401814,
      -0.23151163972118355, -0.2229509691994926, -0.33704349161770436,
      -0.26165852514054583, -0.13898866968588663, 0.034596483191139484,
      -0.012631210076789067, 0.04737131007634562, -0.03865183933075155,
      -0.001997076145443002, 0.0630488452583755, -0.1124891762554399,
      0.08556992539656616, -0.210436590518682, -0.19223333969456,
      -0.3908299483003586, -0.1929436800716272, -0.4102559543993857,
      -0.17178084419175166, -0.010933041190555012, -0.0895129361520745,
      -0.21569610281495066, -0.09144756671688016, -0.19525258909505316,
      -0.029753598134641936, -0.021307245660079924, 0.02908712794055101,
      0.03751129065309784, -0.2060099012070584, -0.26967580750352926,
      -0.21000923681194664, -0.2820901885828563, -0.11925518789339556,
      -0.24869348141289982, -0.21025892926356746, -0.15567029136726124,
      -0.04054672910839591, -0.00502661531005471, 0.030710887069787196,
      -0.006110434024585828, 0.0369376092260571, -0.05486266136790032,
      0.013297880203253048, 0.19659447375886394, -0.2499491329142558,
      -0.06295969900286576, -0.5305502909595601, -0.38784811281629444,
      -0.5389128507596239, -0.41886712861154285, -0.09923009726032588,
      -0.16474199810952628, -0.28693665642627014, -0.00956679808502211,
      -0.3261995499345093, -0.08627491478166284, -0.07325316175571477,
      0.01563417403869033, 0.08244053654753179, 0.025411878261881942,
      -0.11318909242737961, -0.1270560226842935, -0.21657212936164139,
      -0.1399387354961119, -0.3751027523762283, -0.2647292311107622,
      -0.24460131567533192, -0.14127652303494026, -0.05042868659104518,
      0.04134784037419077, -0.006178044515300064, 0.007399034521025015,
      -0.01406273903701438, 0.14348925152561878, -0.015321787554403667,
      0.0017746672356015968, 0.2516513542736105, -0.626463828190993,
      -0.4816713433080564, -1.045863293770664, -0.6951259178849319,
      -0.44532127384388254, -0.2847972402536839, -0.3947095508731798,
      0.2022722834472047, -0.5390991207348895, -0.12025629051789474,
      -0.1899243750597305, -0.04847480672159513, 0.06076477135322776,
      0.09064815178251616, 0.09160820891269728, 0.0036582478916540977,
      -0.2249253000526313, -0.27295314658024766, -0.3555973802525736,
      -0.6290292501441295, -0.57166411974881, -0.3725889517312918,
      -0.22157638610464933, 0.022494427132080854, 0.014769425415166171,
      0.003526808789406817, -0.011346909674078769, 0.05092117084834829,
      0.09030854179921963, 0.37260817254533324, -0.2590987139215991,
      -0.42379280974334355, -0.09538064780856813, -1.190608374889352,
      -0.7859991441489247, -0.9527791435273028, -0.6365977835942234,
      -0.9802601500895275, 0.481731982859161, -0.6009200901805519,
      -0.10265418316164113, -0.39913639006279306, -0.17310908908773887,
      -0.0194191171632387, 0.05404796528917988, 0.1388529643463832,
      0.15661099050146, -0.10898263774416243, -0.332912314567376,
      -0.5956902786588871, -0.6935308158494897, -1.0999707493347484,
      -0.7439208475373669, -0.4907478121415816, -0.06519055673385296,
      0.012289768389229717, 0.024577513704595676, 0.004030280469609632,
      0.036047756292976456, 0.058236765637246286, 0.1389384625679062,
      0.03694467603693463, 0.41686279554239464, -0.8523228638818582,
      -1.298831512762498, -0.4735277967730517, -0.8176363254154679,
      -0.7738445780362183, -1.425624000451928, 0.5258899353236068,
      -0.8982172402290268, 0.1591911967653899, -0.5504659677234687,
      -0.3098001604127102, -0.16709614007114884, -0.046029700131955266,
      0.04479326815042398, 0.1689242242845459, 0.14412365934528507,
      -0.008825007131336736, -0.3677854512466631, -0.793938445177321,
      -1.1610479066529615, -0.7652321000885066, -0.630098580320484,
      -0.13947023057344932, -0.017173105577524262, 0.039030007688455846,
      0.0144912730838054, 0.03979254294383725, 0.054072846696920814,
      0.11729310469925348, 0.053609281522667675, 0.008154949871808708,
      -0.3091081345284555, 0.25944224899607843, -1.3584842180322938,
      -1.5885570490138659, -0.6575958279461822, -1.139869490652734,
      0.7092826408059469, -1.9674198903133462, 0.37712664425406606,
      -0.8433603839057895, -0.47788074719428036, -0.1834200008666372,
      -0.18811394573901796, -0.05505002764598565, 0.045043056834335606,
      0.1148630355985436, 0.22023958716404868, 0.14735402009444676,
      -0.27894427087198, -0.7308053695312964, -0.7679430569329723,
      -0.37355919765840223, 0.12353986794322802, 0.09050534837631184,
      0.14069908672094206, 0.08737321438027885, 0.023353946735568523,
      0.03140055992039659, 0.07955023044620224, 0.08492716138218544,
      0.04077715825534942, -0.16274954314482293, -0.41184413435479567,
      -0.7187128882257487, 0.5530290745634285, -1.5309493464500674,
      -2.9026104205694736, 0.4204330359950835, -1.713810626479367,
      0.295138882491271, -1.2517216433630918, -0.6676994217651684,
      -0.28576739334390183, -0.24127777006787937, -0.10778095858902549,
      -0.03609242500919886, 0.021519213385077923, 0.13414694961717147,
      0.16917378957839613, 0.17307922682581758, 0.07624675882901567,
      -0.04790483513427262, -0.27544262702406924, 0.6182624956656319,
      0.269874231236934, 0.2085883517320696, 0.2607342621072197,
      0.12070625812911842, 0.06294558209330968, 0.08364957391650543,
      0.04968809534578587, 0.01956435760784307, -0.04603581747659695,
      -0.13409074070830324, -0.4902720181429455, -0.4775645732142016,
      -0.7440367513542755, -0.3080068432033089, -0.04371243884270504,
      -4.735594317158907, -0.043712438842706695, -0.3080068432033096,
      -0.7440367513542757, -0.47756457321420304, -0.49027201814294813,
      -0.13409074070830412, -0.046035817476598156, 0.01956435760784307,
      0.049688095345786006, 0.08364957391650606, 0.06294558209331085,
      0.12070625812911921, 0.2607342621072207, 0.2085883517320702,
      0.269874231236934, -0.3735591976583676, -0.2754426270240343,
      -0.04790483513427313, 0.07624675882901252, 0.17307922682581853,
      0.169173789578395, 0.13414694961716844, 0.02151921338507657,
      -0.03609242500919986, -0.1077809585890261, -0.24127777006787943,
      -0.2857673933439015, -0.667699421765169, -1.2517216433630949,
      0.2951388824912743, -1.7138106264793713, 0.4204330359950768,
      -2.902610420569474, -1.5309493464500692, 0.5530290745634223,
      -0.7187128882257502, -0.41184413435479833, -0.16274954314482265,
      0.04077715825534866, 0.08492716138218645, 0.07955023044620314,
      0.03140055992039842, 0.023353946735571576, 0.08737321438028138,
      0.14069908672095732, 0.09050534837633403, 0.1235398679432393,
      -0.7652321000884781, -0.7679430569329614, -0.730805369531285,
      -0.27894427087197604, 0.1473540200944477, 0.22023958716404682,
      0.11486303559854165, 0.04504305683433383, -0.05505002764598645,
      -0.18811394573901843, -0.18342000086663854, -0.4778807471942804,
      -0.8433603839057915, 0.37712664425406617, -1.9674198903133469,
      0.709282640805937, -1.1398694906527307, -0.657595827946194,
      -1.588557049013867, -1.3584842180322987, 0.2594422489960773,
      -0.3091081345284578, 0.008154949871808691, 0.05360928152266728,
      0.11729310469925426, 0.0540728466969212, 0.03979254294383871,
      0.01449127308380731, 0.039030007688458185, -0.017173105577517028,
      -0.13947023057343994, -0.6300985803204511, -1.0999707493347308,
      -1.1610479066529467, -0.793938445177313, -0.3677854512466584,
      -0.00882500713133401, 0.1441236593452856, 0.168924224284544,
      0.04479326815042012, -0.04602970013195615, -0.16709614007115095,
      -0.30980016041271097, -0.5504659677234705, 0.15919119676539073,
      -0.8982172402290286, 0.5258899353236033, -1.4256240004519327,
      -0.7738445780362169, -0.8176363254154656, -0.4735277967730568,
      -1.2988315127625027, -0.8523228638818583, 0.41686279554239525,
      0.036944676036935756, 0.13893846256790574, 0.058236765637246675,
      0.036047756292977066, 0.004030280469611113, 0.02457751370459911,
      0.012289768389232913, -0.06519055673384466, -0.49074781214156804,
      -0.7439208475373563, -0.629029250144129, -0.6935308158494856,
      -0.595690278658883, -0.3329123145673749, -0.10898263774416028,
      0.15661099050145985, 0.13885296434638142, 0.054047965289177706,
      -0.019419117163239467, -0.17310908908773912, -0.39913639006279433,
      -0.10265418316163986, -0.6009200901805531, 0.48173198285915786,
      -0.9802601500895259, -0.6365977835942213, -0.9527791435273002,
      -0.7859991441489246, -1.190608374889349, -0.09538064780857,
      -0.4237928097433449, -0.25909871392159683, 0.37260817254533357,
      0.09030854179921953, 0.05092117084834837, -0.011346909674079158,
      0.003526808789408155, 0.014769425415168456, 0.022494427132082863,
      -0.22157638610464575, -0.37258895173129003, -0.5716641197488066,
      -0.37510275237622537, -0.3555973802525706, -0.2729531465802467,
      -0.22492530005262792, 0.0036582478916564426, 0.09160820891269639,
      0.09064815178251497, 0.06076477135322488, -0.04847480672159565,
      -0.18992437505973167, -0.12025629051789351, -0.5390991207348887,
      0.20227228344720258, -0.394709550873178, -0.28479724025368247,
      -0.4453212738438783, -0.6951259178849327, -1.04586329377066,
      -0.4816713433080586, -0.6264638281909916, 0.2516513542736103,
      0.0017746672356018336, -0.0153217875544032, 0.14348925152561842,
      -0.01406273903701487, 0.007399034521024359, -0.00617804451529856,
      0.04134784037419488, -0.050428686591041855, -0.1412765230349349,
      -0.2446013156753272, -0.26472923111076024, -0.11925518789339257,
      -0.13993873549610955, -0.2165721293616384, -0.1270560226842922,
      -0.11318909242737903, 0.025411878261882927, 0.08244053654753017,
      0.015634174038688685, -0.0732531617557155, -0.08627491478166197,
      -0.326199549934509, -0.00956679808502389, -0.28693665642627003,
      -0.16474199810952764, -0.09923009726032403, -0.4188671286115432,
      -0.5389128507596231, -0.3878481128162946, -0.5305502909595622,
      -0.06295969900286663, -0.24994913291425488, 0.1965944737588636,
      0.013297880203252755, -0.054862661367901897, 0.03693760922605668,
      -0.0061104340245862225, 0.030710887069788338, -0.005026615310052167,
      -0.040546729108393256, -0.15567029136725916, -0.21025892926356554,
      -0.2486934814128962, -0.2315116397211769, -0.2820901885828492,
      -0.21000923681193823, -0.26967580750352416, -0.20600990120705304,
      0.03751129065309909, 0.029087127940549885, -0.02130724566008323,
      -0.0297535981346421, -0.19525258909505444, -0.09144756671688208,
      -0.2156961028149504, -0.08951293615207585, -0.010933041190555782,
      -0.17178084419175305, -0.41025595439938806, -0.19294368007162768,
      -0.39082994830036216, -0.19223333969456258, -0.2104365905186827,
      0.08556992539656708, -0.11248917625543933, 0.06304884525837423,
      -0.001997076145445627, -0.0386518393307522, 0.04737131007634562,
      -0.012631210076786959, 0.0345964831911426, -0.13898866968588444,
      -0.26165852514053983, -0.33704349161769737, -0.22295096919948695,
      -0.5772381177353403, -0.5275362142401814, -0.5734099173080794,
      -0.5354251643699987, -0.38594205494114614, -0.1837522251545064,
      -0.11760486834511884, 0.04959891065129376, -0.15016133237735926,
      -0.07968612236224891, -0.1902424828882312, -0.1420566519642383,
      -0.02093616845786258, -0.0007590420310084487, -0.14361316535317845,
      -0.2274598028382093, -0.265216641753595, -0.2443299641801253,
      -0.12424052925006639, -0.003460073507076083, -0.09139631658683596,
      0.029161890169972428, -0.06337176739998052, 0.042038311258955005,
      -0.01022881748368659, -0.06771513448322196, 0.08280893046738375,
      -0.047213249757837236, -0.3019729958748239, -0.5532025210173874,
      -0.548133112044219, -0.6318773589638805, -0.9550417954995029,
      -1.060769216424599, -1.1220351967386673, -1.0411254782363524,
      -0.9262490674491646, -0.6244981857994925, -0.045097357284792555,
      -0.21565853836744897, -0.05338232636581171, -0.19859450279267432,
      -0.16546730532911214, -0.14182240789720132, -0.07166143303897729,
      -0.07699989187225306, -0.038788452621649434, -0.2650928994872585,
      -0.20555329767005678, -0.2596867467568408, -0.10031131456276626,
      -0.13387544724730568, -0.0035054269587865765, -0.04044908966237997,
      0.004862636492024128, -0.07811082244532547, 0.0012357796666695618,
      -0.0396278511243066, -0.19419044456729473, 0.018984383649339364,
      -0.6054823236139799, -0.9146566894126499, -1.046019198783463,
      -0.9723752616273926, -1.3057076652991049, -1.4659201063979992,
      -1.5705638815427927, -1.6192427030685486, -1.6058616381755215,
      -0.8240368002159525, -0.7036795980668187, -0.07339749754226939,
      -0.3335649893327653, -0.23651154356493967, -0.2042833730780847,
      -0.17397285212300875, -0.06723820695040342, -0.056997285203952995,
      -0.07087453139452611, -0.25039909487805306, -0.3741711609707976,
      -0.2040016750880539, -0.3422156158175576, -0.03693831566176366,
      -0.042171356658337315, 0.00705718946536539, -0.07571749869863496,
      -0.0669656864849772, -0.25408021803022474, -0.04334900441130162,
      0.025934598230977574, -0.2942382417321012, -0.7400351866837027,
      -1.6161992336951192, -1.5357935460809593, -1.3642007878216427,
      -1.5169157844507262, -1.4332006785118279, -1.630157842292349,
      -1.932677889629856, -1.8694842425148879, -1.8503084663080056,
      -0.5904048375141792, -0.6560174703347134, -0.40132058236311047,
      -0.31836783196552787, -0.32035624605031593, -0.22965854401457814,
      -0.08200020008302822, -0.08902516330269802, -0.06473239101891355,
      -0.3036696794805129, -0.4730230160625184, -0.3797056039227587,
      -0.19430407325814622, -0.1797093251603995, -0.06306970995727144,
      -0.10088329756370083, -0.09706087918479443, -0.18018565146479387,
      -0.19830827357221226, -0.43479836723774673, 0.22038139379151372,
      -0.2645739883891143, -1.79452817569422, -2.206203110930839,
      -2.102356658927595, -1.6930052820597257, -1.2756392437278008,
      -1.6712324532934884, -1.8237453905245253, -1.4884613952536252,
      -2.384654945418673, -1.5836466114968115, -1.4772075422260404,
      -0.749509588811526, -0.561795414852579, -0.46670603976586306,
      -0.3555582346088905, -0.22514761090777982, -0.18963405157839525,
      -0.006854703392512414, -0.05103668985052919, -0.5356535944329562,
      -0.48685989567066656, -0.5780902167586235, -0.3924098378001862,
      -0.11286619230167973, -0.12321821342876334, -0.08979002287112711,
      -0.13792125740417074, -0.16098142942852883, -0.301057483553083,
      -0.18584599820379807, -0.7599893679371835, -0.8428129384777584,
      -2.1809972632688073, -2.879105394693035, -2.5682454610054237,
      -2.0983496132652038, -2.219376425173226, -2.3602336858020396,
      -1.4129529949598048, -0.9534159393947887, -0.38769722219534936,
      -2.260342212614477, -1.394644866167148, -0.7766428172010335,
      -0.6402842542962903, -0.41856090178724664, -0.3216120132349809,
      -0.3360730432730346, 0.06562858246623078, -0.09813633035547877,
      -0.44979914971695495, -0.822222574028781, -0.391561438074338,
      -0.3604588674139763, -0.2900872185756239, -0.03547210749813554,
      0.027920290231535812, -0.117989151853845, -0.1892849156146684,
      -0.25489431004647656, -0.3625272253546275, -0.30143411016838906,
      -0.7524258340587202, -2.027175780678063, -2.263967374508654,
      -3.538324908586366, -3.361597106712324, -2.343880246691923,
      -1.7249706159518579, -1.7990472945779559, -3.3061472495599995,
      0.21156442062862166, -0.743023786689344, -1.8514918971041745,
      -0.8250219837063265, -0.7435199998826033, -0.3956921579881928,
      -0.3943138014933833, -0.29890408748686254, -0.28084584584372846,
      0.01472791435408881, -0.04442075186168376, -0.5350001638458372,
      -0.9018857723352869, -0.6984497111751535, 0.14583567590324595,
      -0.5544445310046473, 0.1976534820339324, -0.18710828510427244,
      0.007680087103749638, -0.3280805050322698, -0.17511899827005836,
      -0.38519889843539723, -0.2611655301498714, -0.6179259082917326,
      -1.4260964500310052, -2.8480835086962, -2.9656385065341997,
      -3.1259631743419583, -2.2776462897026373, -1.3820969331049018,
      -2.0505291279591713, -2.408429802301388, -1.4996172161865962,
      0.12372650763830863, -1.1981932989988076, -0.6458889740799882,
      -0.33546767337818667, -0.36301254306387043, -0.2619620808503318,
      -0.176759023609821, 0.005563928130235761, -0.034749316729180774,
      -0.44871907432473696, -0.6721525952110092, -0.4600783329152383,
      -0.6725433018260518, 0.11741827111366224, -0.409871486550618,
      -0.32892265898101625, -0.1314555696102148, -0.028899376452251727,
      -0.09229861292456465, -0.1667209502050334, -0.17646388464205828,
      -0.3513161729077252, -0.1915002910490266, -1.22170023255872,
      -0.7866727441045076, -1.980741571755196, -1.978633957921319,
      0.06956047126920993,
    ],
    bottom: {
      real: [
        4103.3252596935745, 31959.928439656338, 10854.93487005055,
        5174.7646941682715, 2670.3793024702013, 1512.8812431609856,
        751.7211981350827, 487.34157279751093, 286.27976884850017,
        202.21445228809756, 139.363320073941, 96.32667662587427,
        67.41651339270402, 55.03603936156373, 42.61745504949191,
        37.32784123540667, 35.19880020906027, 37.32784123540659,
        42.6174550494918, 55.036039361563766, 67.41651339270402,
        96.32667662587428, 139.36332007394108, 202.21445228809804,
        286.27976884850017, 487.34157279751093, 751.7211981350829,
        1512.8812431609856, 2670.3793024702018, 5174.764694168275,
        10854.93487005055, 31959.928439656363, 12454.694619943468,
        7821.583390276555, 5473.1790170642225, 2925.2286142376206,
        1403.2127508507554, 917.0553055607355, 556.7335087890582,
        335.5815491134937, 222.7562369115075, 161.71079893305554,
        119.4497628246793, 75.60900751432125, 55.49608708093657,
        43.99882948912511, 34.72502996512234, 29.983374804996487,
        29.18733660878197, 30.714909872552553, 33.13572852856229,
        38.78004056055656, 50.11926248444739, 62.42660929674013,
        93.91676536356728, 123.96413175241418, 177.16967383039952,
        250.50030243800805, 399.94920918463373, 596.1485322845399,
        914.2463340693114, 1871.621027127744, 4518.422312124804,
        13565.815861293135, 16084.742683461694, 10028.519769850123,
        2736.2851033168113, 1377.4551350842332, 614.0817483175045,
        382.39730464420114, 237.0105878631189, 156.24359018004319,
        129.95938769710136, 95.53783206710068, 72.00409286489193,
        47.80430165384308, 38.41781199466849, 32.4520486224145,
        26.753427300507923, 23.7729362481657, 23.138404805980134,
        23.598476471031617, 24.755859033283485, 28.71332398916273,
        33.39553720167712, 40.85058654989144, 58.64988180671874,
        74.87296871197377, 93.46512922636781, 123.19419955144703,
        174.7570612705884, 262.71291650117263, 321.82068054258934,
        657.052536352664, 2163.593226520231, 10212.960963472207,
        3792.0213246064613, 2759.3366542985627, 1627.1011647050395,
        788.4497720201678, 362.8509317865861, 253.90720770691448,
        163.04342130809295, 117.95146004773997, 90.7661067039026,
        66.20774509684053, 48.204553381452804, 35.4292065515689,
        28.049881805648454, 23.25027473117818, 20.7789366420614,
        19.004228801577, 17.585642163629327, 17.6981813264345,
        18.806836162280465, 20.329571180523736, 23.456998427374465,
        27.472702254518477, 37.19312003574272, 49.11725258408396,
        59.57482901261523, 73.59994664128709, 112.97176733843995,
        181.91972084309376, 284.0343016488693, 486.2964820369405,
        857.0528785536101, 2037.977143592303, 2057.7285052573056,
        2152.595270625315, 1395.1090523951752, 736.2529768000007,
        343.98700964912916, 189.68478304615005, 127.37774106216496,
        91.12789293157843, 73.66725513376396, 55.964360327653644,
        39.48256704253295, 28.14219415335706, 21.278934963706885,
        18.193385040510105, 16.473354788100497, 15.086583853495943,
        14.403945056404867, 14.533202056236952, 15.306988390608382,
        16.092687824041843, 18.097466979870337, 20.289280537832838,
        26.201109009342694, 34.023571220637564, 41.620492531599325,
        50.685682074964014, 82.56070198163133, 127.19888958323958,
        237.89761616945128, 410.06312322518994, 1062.2303232610248,
        1612.0404058137353, 2295.1409914972487, 1787.3905923922546,
        1192.2295048012345, 614.2488252588063, 260.82616895243024,
        126.23242010647614, 84.15107628881098, 67.70941499278271,
        60.1225715594723, 42.830591238304876, 28.733103940874788,
        20.365121706656215, 16.211112474155353, 14.072758594539286,
        13.483685068827034, 12.859628868618824, 11.868475605254234,
        11.903201306554562, 12.816996745648828, 13.065794209061782,
        14.312459824747068, 16.296926608708432, 20.657711991677495,
        27.65339007023543, 33.59311041396786, 40.672720076575544,
        55.85662461850217, 103.16047843117397, 179.23484372919035,
        453.7513605151255, 902.2628504825688, 1683.7179352249004,
        1784.083505146898, 1577.4265763170067, 936.6630912289419,
        441.2089233758718, 176.43359667751182, 98.09397174153568,
        65.99594469503664, 53.24029570749545, 45.85166507919449,
        32.40748535978308, 22.496202298890402, 16.9656137144178,
        13.731573445856062, 12.28236966845588, 11.747735381447885,
        11.213125876643861, 10.807806034266576, 10.840341477375139,
        11.066245600125107, 11.119452781179984, 12.424913044930788,
        14.61002755646222, 16.887227742677396, 22.29462391228396,
        27.97815738132312, 31.99125039297179, 44.05265888187653,
        76.10956832779837, 159.13944268405785, 318.3920712827857,
        686.0032317807187, 1336.6568589814267, 1043.0649603599104,
        984.7874618280729, 618.0395600950327, 289.32426118556657,
        132.98214831862998, 71.52004843088118, 52.57629039600819,
        41.525598741467476, 33.63391272281399, 27.03125566244968,
        19.489513580793098, 14.812681614273632, 12.21137274400836,
        10.893625186679536, 10.482989068673637, 10.105487112246305,
        9.711689924381735, 9.948806980482882, 10.161347795217756,
        10.513274350469635, 11.294150924355744, 12.914730156139361,
        14.478861048855546, 19.021661277112585, 23.907610167423496,
        27.23573455134931, 38.74297641398302, 62.86922312590263,
        111.92503010834605, 213.21062569137553, 433.61330953226366,
        726.7026984582077, 562.2186141052522, 539.290746631297,
        362.9446461846826, 211.46669660189423, 107.79772661917396,
        60.67666837556757, 41.743276533116536, 34.42369696468284,
        31.26708433258414, 25.313030406949355, 18.452791878453507,
        13.956644256748325, 11.043046695375654, 10.111101652499672,
        9.455036044447306, 9.242959346939653, 8.952191122239926,
        9.232112416401021, 9.190804166916982, 9.566282735322787,
        10.506864865879585, 11.825879962774797, 13.52813582962821,
        15.999059082232355, 19.794027285196304, 22.4788452877151,
        32.16327238486775, 47.951984523863096, 81.30924286665513,
        150.93744536633105, 263.8463052599166, 439.2795103319926,
        309.78719189559973, 306.63257299287005, 244.19689848939953,
        151.98869039704036, 91.33048200427616, 57.35275332201335,
        38.70916070606743, 33.08708644900138, 29.826655436967027,
        23.987725148031473, 16.89184234468231, 13.041947079601194,
        10.535809562752126, 9.535947162168391, 8.937448349685543,
        8.567264312291233, 8.457273589565943, 8.46028044009711,
        8.55434575263303, 9.382376333669994, 10.37723041770863,
        11.799673812944503, 12.361176855966248, 14.786798351390814,
        16.739331260686697, 20.5901480313592, 25.753571174908508,
        38.3828930678668, 63.23013835373618, 105.62437218489313,
        175.68359833526657, 256.05708017959813, 224.80770864957879,
        228.96753655549054, 172.54966320095522, 116.2654682194649,
        80.46990226978717, 53.84433487661021, 37.483534347728245,
        31.075867215997253, 26.284110672635684, 20.645029038002825,
        15.025930043703783, 11.738276392873866, 10.201438772469425,
        8.820344522727998, 8.494550985699536, 8.19687284093449,
        8.179077730441959, 7.908377156922052, 8.678547729507404,
        9.647371515689038, 10.339435934253908, 10.728035799158873,
        11.983620383388951, 13.687783504221503, 16.433795900162693,
        18.309125668572698, 22.485075799802843, 31.76468437638305,
        49.270779583367755, 77.72985195627992, 123.50059845139852,
        179.77043479461938, 159.57955623939222, 154.5332986938033,
        127.96891349444883, 91.96783661678981, 66.92174464641701,
        48.818287955893446, 36.59106165352678, 27.834277069623926,
        23.04190215218159, 18.3587138942453, 13.567338391039883,
        11.281789781943191, 9.60382954556472, 8.733327756377252,
        8.338123667351045, 7.899208806186968, 7.710432242677591,
        7.998386998564103, 8.543643849090227, 9.443215884480004,
        9.787034441091842, 10.423788563863184, 11.253535869282553,
        13.327727562718719, 15.178485067808285, 17.337135682195893,
        21.668177060872456, 29.324826866357235, 41.49275321863635,
        60.042185621507166, 90.31813491621534, 130.8805255687621,
        104.24612656823803, 108.8028525877362, 89.55574556015725,
        69.78566957523967, 56.746590174428, 44.171218069814536,
        32.39838941697333, 25.18225275923646, 21.610810960419155,
        16.972539478480535, 13.238333358456819, 10.614964653675054,
        9.380692794630786, 8.749281483242108, 8.135298996501481,
        7.634398163782139, 7.485286988947929, 7.8316993609624435,
        8.385395741527464, 9.231574230561463, 9.838944162951421,
        10.386606043801919, 11.354519695989614, 13.10793814373473,
        15.240615596988986, 17.58979203150065, 21.461767190818147,
        26.661531554562984, 36.12333702897858, 50.32073186927438,
        69.0656097199978, 87.4422608573542, 76.67764327657595,
        72.68914763671407, 65.50785565022079, 58.29765840635796,
        49.55859874114894, 39.192968104211104, 29.954333787314212,
        23.9458863540046, 19.99476230299754, 16.735792774046942,
        12.901585018586687, 10.289994503175569, 9.397776582267992,
        8.670419628780323, 7.8828328381527575, 7.534147883901947,
        7.43129292000411, 7.798515976625768, 8.186906091241408,
        9.142118635191288, 9.830770779287306, 10.340589147553608,
        11.281171263863113, 12.984935438318947, 15.107976469419242,
        18.19770629294057, 20.668346478928893, 25.76149613251493,
        32.2514242661345, 39.95295492008993, 51.36943807862585,
        65.56929956266247, 55.46884946872952, 55.86542097352833,
        55.10113878297366, 50.53184836867472, 43.70147053696678,
        35.86638144085743, 28.439396618258566, 22.42863349391925,
        18.94503035808276, 15.596977301337661, 12.206893729284205,
        10.050508612628137, 9.547393948232287, 8.646327628083018,
        7.910774588392556, 7.275551408966156, 7.5482842032534565,
        7.544387941964139, 7.96361878033256, 8.992201544757735,
        9.635199784998907, 10.0402383165895, 11.706284711344862,
        13.336194440398188, 15.639893484781382, 17.791763978880017,
        20.83131115781941, 25.6818621728188, 31.387128642704546,
        37.14316604955522, 44.038766386780296, 52.90450693740585,
        48.059389050535145, 50.072432061388255, 49.11501031551525,
        44.16042346883115, 38.44095318130842, 32.35840674752788,
        26.251111011761232, 21.08192257046498, 17.515101530242855,
        14.10261621013594, 11.438986216849498, 10.422223192105227,
        9.76207732514108, 8.774631916934416, 7.5939451837729885,
        7.260594980680288, 7.476691949602524, 7.419064545103371,
        8.018735722916306, 8.926634451217284, 9.69756437118481,
        10.35689464395745, 11.451859179394017, 13.10319606057651,
        15.460942026724263, 18.825021564083144, 22.773162722002358,
        26.906890973713775, 31.803276985208164, 37.82902190094245,
        42.388788349798304, 44.62010567979956, 48.85927778095382,
        46.13611029220518, 41.908361785717766, 39.52102274454999,
        35.05229493371635, 29.18134316630342, 23.802472557875006,
        19.95574653975907, 16.22743816874862, 13.086681034223906,
        11.226909204888067, 10.616041272149978, 9.83854928426482,
        8.656300584619567, 7.8952678290472065, 7.276214992565685,
        7.309404620848296, 7.276214992565686, 7.895267829047208,
        8.656300584619574, 9.838549284264822, 10.61604127214999,
        11.226909204888063, 13.086681034223904, 16.22743816874862,
        19.955746539759044, 23.80247255787499, 29.181343166303414,
        35.05229493371636, 39.52102274454999, 41.908361785717766,
        46.13611029220517, 48.05938905053505, 44.620105679799494,
        42.388788349798226, 37.82902190094255, 31.803276985208186,
        26.906890973713825, 22.77316272200237, 18.825021564083173,
        15.460942026724263, 13.103196060576508, 11.451859179394024,
        10.35689464395744, 9.69756437118482, 8.926634451217275, 8.0187357229163,
        7.419064545103367, 7.476691949602523, 7.260594980680292,
        7.593945183772996, 8.774631916934418, 9.762077325141082,
        10.42222319210523, 11.438986216849505, 14.102616210135931,
        17.51510153024284, 21.08192257046497, 26.251111011761218,
        32.358406747527845, 38.44095318130838, 44.16042346883106,
        49.115010315515164, 50.07243206138801, 55.46884946872923,
        52.90450693740565, 44.03876638678024, 37.143166049555234,
        31.387128642704567, 25.681862172818796, 20.831311157819414,
        17.79176397888002, 15.639893484781378, 13.336194440398192,
        11.706284711344864, 10.040238316589498, 9.635199784998912,
        8.99220154475773, 7.963618780332553, 7.544387941964129,
        7.548284203253456, 7.275551408966155, 7.910774588392558,
        8.646327628083021, 9.547393948232287, 10.05050861262814,
        12.206893729284213, 15.596977301337661, 18.94503035808276,
        22.42863349391924, 28.439396618258566, 35.86638144085739,
        43.70147053696676, 50.531848368674645, 55.10113878297363,
        55.86542097352813, 76.67764327657582, 65.56929956266234,
        51.369438078625784, 39.95295492009, 32.251424266134514,
        25.76149613251495, 20.668346478928903, 18.19770629294057,
        15.107976469419244, 12.98493543831895, 11.28117126386311,
        10.340589147553612, 9.830770779287295, 9.142118635191292,
        8.18690609124141, 7.79851597662576, 7.431292920004107,
        7.5341478839019365, 7.882832838152761, 8.670419628780317,
        9.397776582267994, 10.289994503175565, 12.9015850185867,
        16.735792774046928, 19.99476230299755, 23.945886354004585,
        29.95433378731421, 39.19296810421109, 49.55859874114887,
        58.297658406357826, 65.50785565022066, 72.68914763671383,
        104.24612656823788, 87.44226085735421, 69.06560971999775,
        50.32073186927437, 36.123337028978554, 26.661531554563005,
        21.461767190818144, 17.589792031500657, 15.24061559698899,
        13.107938143734735, 11.354519695989618, 10.386606043801917,
        9.838944162951416, 9.231574230561453, 8.38539574152746,
        7.831699360962437, 7.48528698894793, 7.634398163782137,
        8.135298996501476, 8.749281483242111, 9.380692794630788,
        10.614964653675061, 13.238333358456819, 16.97253947848054,
        21.610810960419155, 25.182252759236462, 32.39838941697333,
        44.171218069814465, 56.74659017442797, 69.78566957523961,
        89.55574556015718, 108.80285258773613, 159.5795562393919,
        130.8805255687619, 90.31813491621534, 60.0421856215072,
        41.49275321863639, 29.32482686635726, 21.668177060872456,
        17.3371356821959, 15.178485067808294, 13.327727562718726,
        11.253535869282553, 10.423788563863175, 9.787034441091842,
        9.443215884480002, 8.543643849090223, 7.998386998564096,
        7.710432242677589, 7.89920880618696, 8.338123667351045,
        8.733327756377253, 9.603829545564714, 11.28178978194319,
        13.567338391039879, 18.358713894245295, 23.041902152181613,
        27.834277069623926, 36.59106165352677, 48.81828795589338,
        66.92174464641698, 91.96783661678955, 127.96891349444861,
        154.53329869380323, 224.80770864957842, 179.77043479461912,
        123.50059845139837, 77.72985195627996, 49.27077958336772,
        31.764684376383045, 22.485075799802868, 18.309125668572733,
        16.433795900162703, 13.6877835042215, 11.983620383388955,
        10.72803579915886, 10.339435934253904, 9.647371515689025,
        8.678547729507397, 7.908377156922045, 8.179077730441955,
        8.19687284093449, 8.494550985699535, 8.820344522727986,
        10.201438772469423, 11.73827639287387, 15.02593004370379,
        20.645029038002832, 26.28411067263568, 31.075867215997253,
        37.483534347728245, 53.84433487661013, 80.46990226978717,
        116.26546821946468, 172.54966320095502, 228.96753655548974,
        309.78719189559854, 256.05708017959756, 175.68359833526623,
        105.62437218489312, 63.23013835373606, 38.382893067866796,
        25.7535711749085, 20.590148031359234, 16.739331260686704,
        14.786798351390802, 12.36117685596625, 11.799673812944498,
        10.377230417708628, 9.382376333669995, 8.55434575263302,
        8.4602804400971, 8.457273589565942, 8.567264312291222, 8.93744834968554,
        9.535947162168387, 10.53580956275212, 13.041947079601202,
        16.89184234468233, 23.987725148031487, 29.826655436966995,
        33.087086449001376, 38.7091607060674, 57.35275332201325,
        91.33048200427605, 151.98869039704, 244.1968984893988,
        306.63257299286875, 562.2186141052522, 439.2795103319928,
        263.8463052599166, 150.93744536633125, 81.30924286665515,
        47.95198452386317, 32.16327238486775, 22.47884528771512,
        19.794027285196304, 15.999059082232373, 13.52813582962822,
        11.82587996277479, 10.50686486587958, 9.566282735322787,
        9.190804166916978, 9.232112416401021, 8.952191122239926,
        9.242959346939646, 9.455036044447304, 10.111101652499666,
        11.043046695375656, 13.956644256748326, 18.452791878453535,
        25.31303040694941, 31.26708433258414, 34.42369696468283,
        41.74327653311653, 60.67666837556751, 107.79772661917396,
        211.46669660189391, 362.9446461846827, 539.2907466312969,
        1043.064960359907, 726.7026984582062, 433.6133095322625,
        213.2106256913756, 111.92503010834588, 62.869223125902685,
        38.742976413983, 27.235734551349324, 23.9076101674235,
        19.021661277112635, 14.478861048855546, 12.91473015613936,
        11.29415092435573, 10.513274350469626, 10.161347795217747,
        9.948806980482875, 9.71168992438174, 10.105487112246305,
        10.48298906867363, 10.893625186679529, 12.211372744008356,
        14.812681614273641, 19.489513580793123, 27.031255662449723,
        33.63391272281395, 41.52559874146754, 52.57629039600815,
        71.52004843088102, 132.98214831862995, 289.32426118556515,
        618.0395600950308, 984.7874618280689, 1784.083505146894,
        1336.6568589814267, 686.003231780718, 318.39207128278593,
        159.1394426840578, 76.10956832779843, 44.05265888187656,
        31.991250392971853, 27.978157381323108, 22.294623912284028,
        16.8872277426774, 14.610027556462216, 12.424913044930783,
        11.119452781179971, 11.066245600125109, 10.840341477375128,
        10.807806034266576, 11.213125876643852, 11.747735381447885,
        12.282369668455885, 13.73157344585606, 16.96561371441783,
        22.496202298890438, 32.407485359783124, 45.85166507919449,
        53.24029570749542, 65.99594469503667, 98.09397174153547,
        176.43359667751176, 441.208923375871, 936.6630912289413,
        1577.4265763170022, 2295.1409914972464, 1683.7179352249,
        902.2628504825688, 453.7513605151263, 179.23484372919026,
        103.16047843117398, 55.856624618502074, 40.67272007657553,
        33.59311041396785, 27.65339007023547, 20.65771199167747,
        16.296926608708404, 14.312459824747059, 13.065794209061782,
        12.816996745648842, 11.903201306554557, 11.868475605254236,
        12.859628868618808, 13.483685068827036, 14.072758594539282,
        16.21111247415536, 20.36512170665626, 28.733103940874788,
        42.830591238304876, 60.12257155947228, 67.70941499278264,
        84.15107628881094, 126.23242010647601, 260.82616895243,
        614.2488252588045, 1192.2295048012338, 1787.3905923922525,
        2057.728505257306, 1612.0404058137367, 1062.2303232610243,
        410.0631232251907, 237.8976161694511, 127.19888958323968,
        82.56070198163133, 50.68568207496404, 41.620492531599325,
        34.0235712206376, 26.201109009342684, 20.289280537832823,
        18.09746697987034, 16.092687824041846, 15.306988390608383,
        14.533202056236956, 14.40394505640487, 15.08658385349593,
        16.47335478810048, 18.1933850405101, 21.278934963706888,
        28.14219415335708, 39.482567042533006, 55.964360327653644,
        73.66725513376396, 91.12789293157849, 127.37774106216477,
        189.68478304614982, 343.98700964912905, 736.2529767999998,
        1395.109052395176, 2152.5952706253147, 3792.021324606458,
        2037.977143592301, 857.0528785536089, 486.29648203694126,
        284.03430164886925, 181.91972084309373, 112.97176733844,
        73.59994664128712, 59.574829012615204, 49.11725258408404,
        37.19312003574272, 27.472702254518456, 23.45699842737447,
        20.329571180523697, 18.806836162280476, 17.698181326434526,
        17.585642163629327, 19.004228801577025, 20.77893664206141,
        23.250274731178163, 28.04988180564844, 35.429206551568925,
        48.20455338145283, 66.20774509684051, 90.7661067039026,
        117.95146004774013, 163.04342130809306, 253.9072077069139,
        362.850931786586, 788.4497720201659, 1627.1011647050398,
        2759.3366542985605, 16084.74268346169, 10212.960963472211,
        2163.5932265202296, 657.0525363526643, 321.82068054258923,
        262.71291650117286, 174.75706127058845, 123.19419955144714,
        93.46512922636784, 74.87296871197394, 58.64988180671873,
        40.850586549891496, 33.39553720167711, 28.713323989162756,
        24.75585903328349, 23.59847647103166, 23.138404805980127,
        23.77293624816566, 26.753427300507926, 32.45204862241451,
        38.4178119946685, 47.80430165384316, 72.004092864892, 95.53783206710088,
        129.95938769710136, 156.24359018004333, 237.01058786311899,
        382.3973046442005, 614.0817483175048, 1377.4551350842296,
        2736.2851033168104, 10028.51976985012, 12454.694619943462,
        13565.815861293133, 4518.422312124801, 1871.6210271277425,
        914.2463340693118, 596.14853228454, 399.9492091846334,
        250.50030243800833, 177.16967383039946, 123.96413175241405,
        93.91676536356745, 62.42660929674012, 50.119262484447404,
        38.78004056055657, 33.13572852856233, 30.714909872552628,
        29.187336608781973, 29.983374804996448, 34.725029965122346,
        43.998829489125086, 55.49608708093662, 75.60900751432128,
        119.44976282467937, 161.7107989330556, 222.75623691150756,
        335.5815491134934, 556.7335087890583, 917.0553055607353,
        1403.2127508507556, 2925.2286142376206, 5473.1790170642225,
        7821.583390276545,
      ],
      imag: [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ],
    },
    imag: [
      0, 1.2364045139795619, -1.417097645517349, -0.563991130501104,
      0.4461220475293454, -0.22857396866743723, -0.12233724123958876,
      -0.2217506337025343, -0.08184765447899214, -0.0821445284202198,
      -0.016319194688300422, -0.2278226981680879, -0.31553723757062957,
      -0.3462773758278895, 1.228987349434353, 0.2371473197924402, 0,
      -0.2371473197924659, -1.2289873494343397, 0.34627737582788415,
      0.31553723757063035, 0.2278226981680877, 0.01631919468830003,
      0.08214452842021792, 0.08184765447899214, 0.22175063370252604,
      0.12233724123959235, 0.22857396866743548, -0.4461220475293452,
      0.5639911305011042, 1.4170976455173483, -1.2364045139795607,
      1.3606412475160685, 1.4411916754234004, -0.3363973770718067,
      -0.400592898897314, 0.07786945045374206, 0.11933000679564014,
      -0.37020072416606636, -0.12600631152419078, -0.2929172313060311,
      -0.05068339188231875, -0.2123566898458312, -0.16517843825664788,
      -0.3743892093980239, 0.24863698196016526, 0.3956337373323095,
      0.6330846638456997, -0.4264395724952261, -0.28749903579454716,
      -0.4230156803297583, 0.2797162376269552, 0.37808744252168813,
      0.15296582393741, 0.10558339349178479, 0.08813592215903832,
      0.16705843369252343, 0.44192642538865684, 0.2991522518142107,
      -0.047649837051313024, -0.9104604552681237, 2.0668504460046964,
      1.0236217631956717, 0.09577502733112331, 0.7432738853191639,
      -0.03456213195457008, 0.8636112375382173, 0.14688086473050152,
      -0.480409603699644, 0.725531558693561, -0.8786532261255596,
      -0.4386512882244577, -0.4857318707028599, -0.32017932907631874,
      -0.2830749986604581, -0.26990648117356825, 0.02650526715020339,
      0.07048596936827395, 0.5437098167860802, -0.06793846381419581,
      0.03776680164210118, -0.5672727000472354, 0.7031723596162832,
      -0.02113335643666033, 0.3877841945469715, -0.021237638325898506,
      0.22272564345822293, -0.028529610958430065, 0.3838911656921847,
      0.5401519230094508, 0.6089048453513496, -0.5885198019984432,
      -0.4425799571579083, -0.3105478087846587, 0.29452233058397137,
      1.420373052298152, 0.5504297333386854, 1.0635980503754177,
      -0.3322328231573132, 0.34444399750770754, 1.481298784591465,
      0.2820348699677993, -0.5064081488092492, -0.6315271726552403,
      -0.629560147993244, -0.381439099170168, -0.2602400449478186,
      -0.19111004712688462, -0.0074049384249937926, 0.04814578185161191,
      0.1775395908501845, -0.010766872600667563, -0.3055754310904166,
      -0.1279044678178969, 0.26497067484017217, 0.49718432792560446,
      0.10847923107858634, 0.1836279844437401, 0.07579332872568043,
      0.06091583791907436, 0.19352569039908019, 0.7248413105946724,
      0.4476986361937191, 0.6572778182386981, -2.7705947112358387,
      -1.8545676439466314, 1.253480431944275, -0.3320127176659218,
      -0.8817924518615257, -0.49191197464707653, 0.25061306335904526,
      0.36434278784189494, 1.1059306596340364, 0.5161851914994362,
      -0.5625934272912334, -0.7981852522367001, -0.5061427531741151,
      -0.3345019295861077, -0.24220392956380443, -0.2936321736893144,
      -0.008975674876931768, 0.015702042401798396, 0.004328761309678161,
      0.11769772351691517, 0.14847974776257877, -0.07040420542590121,
      0.15992872157624444, 0.12352253662711207, 0.22950814490677918,
      0.17507285276321555, 0.13747467644410705, -0.011397583876153142,
      0.1103654239578318, 0.24404333943616102, 1.1434123865171273,
      -0.6056618650285197, -1.3365493166122577, -1.133825005706898,
      -1.8155993788135394, -1.0591766157447149, -0.6901024725301684,
      -0.4661262670583974, -0.20353239335470796, 0.5166385012265062,
      0.2659701357580968, -0.10657803670351902, -0.6973013864661958,
      -0.6010674473512339, -0.335428005062553, -0.3056428917979951,
      -0.2667283201489782, -0.19552146385155383, -0.07081825322981734,
      0.24716165183995586, 0.2487100107308503, 0.08790627274965952,
      -0.06639276489870762, 0.11463822183417864, -0.0973871145489355,
      0.203187369929616, 0.14292038700683402, 0.20736891492564988,
      0.013685307258532538, -0.024371827339033106, -0.07233585420108031,
      0.49291782026044645, 0.048917424863979306, 0.2263553910474094,
      0.10839909954530379, -1.1957108711898896, -1.074771579950879,
      -1.1175823884839045, -0.23901621577757862, -0.12877260884038383,
      0.23623861798820722, 0.17111767858219226, 0.4620869054676118,
      -0.23679486634226876, -0.5317886241837987, -0.34021620386249335,
      -0.23658495591681358, -0.22275756609764855, -0.20572232603908905,
      -0.1449473312771276, 0.04256966078595399, 0.07773307076521871,
      0.20558191361174552, 0.03171963561705125, -0.031869312918226284,
      0.00924466716916557, 0.05690796487103113, 0.006811401556527948,
      0.20608602740074444, 0.023033890597355222, 0.06494462602113064,
      -0.08971160087534784, 0.051877409795188095, -0.22207073062343796,
      0.2424827691685977, 0.8293224240232046, -0.0013771249391571728,
      -0.05913901763736715, -0.220679259578907, -0.040068334939789486,
      0.3067700518158289, 0.3449025548727411, 0.2222188244136875,
      0.30818729583490434, 0.04165627319971488, 0.04389672863559383,
      -0.30032839778423015, -0.2424624650890286, -0.178099692406481,
      -0.14126159805998126, -0.15553553242798068, -0.11510723629505018,
      0.024565620333015844, 0.09932497386133324, 0.11314958231531824,
      0.10920785431914558, -0.002747867764731495, -0.002197448124614016,
      -0.0699406561715515, 0.1465617772621658, 0.07877018936108643,
      0.10241250352514093, -0.021646587213105684, 0.019211160710794505,
      -0.26281055993233693, -0.05514681914050946, 0.35375643597531126,
      0.22411418130009836, 0.3875457037899096, 0.25423051056794166,
      0.30581901500051717, 0.08591146266209009, 0.39107302489471046,
      0.24699055160378858, 0.29387297238508514, 0.15373347718831995,
      -0.002984582508486469, -0.01726020797163449, 0.0728272552276582,
      -0.06208913525822485, -0.11929552297831249, -0.14454547803177953,
      -0.09526826450768199, -0.10089614648569632, 0.048761457544342565,
      0.09609679137720413, 0.10529567915508571, 0.012037966893712556,
      0.07634310058801329, -0.20546035926376272, 0.13459193297647368,
      0.025732944443593878, 0.15693288111736364, 0.04376164797318158,
      0.08347929962968435, -0.15251693996845875, -0.10657849804550705,
      0.03864181635108452, -0.10231188547257405, 0.21957600785318707,
      0.264774413728534, 0.35686545376814865, 0.2942848550600693,
      0.4993413545698925, 0.1828568991437829, 0.23675610338446562,
      0.10353827744151976, 0.06310794909144525, 0.03846587209017991,
      0.136617176259979, 0.09812275535485428, -0.003990620093458214,
      -0.09009439550122221, -0.16647262366552176, -0.19237746196753996,
      0.02664719406199056, 0.04850938386374907, 0.1654716680991411,
      -0.03591479523938604, 0.09927373929001723, -0.11264804489487676,
      0.14792025966567318, -0.09379152614028652, 0.10021979561886898,
      0.008044972903133957, 0.2539938219386156, -0.10951630791791984,
      -0.03354812223332894, -0.024275040060575473, -0.15565555640319179,
      -0.035231426543991154, 0.06348517358735144, 0.22814734409189322,
      0.10684932807789806, 0.2355554633425988, 0.10407564589066262,
      0.015525256999673128, -0.011913601076877599, -0.003929592004374066,
      0.04470159355949418, 0.16547295203389104, 0.15907957720488838,
      0.07466463078185209, -0.04243906497357175, -0.11246394245376416,
      -0.1697242715154008, -0.2153029085609272, -0.1519575050165171,
      0.40553391670472716, -0.05507255324487554, 0.18488826926783164,
      -0.03502892748503212, 0.3700138711951932, -0.15325722566754377,
      0.2716892969482076, -0.05970121628039784, 0.48380889084850937,
      -0.13017614472815323, 0.04767342132995452, 0.07130558425889642,
      -0.15733503034508964, -0.07959356603951166, -0.07548582078045694,
      0.06620598245919887, -0.0012785498169557718, 0.06382739270218783,
      -0.0024400785561267094, 0.050942947866382475, -0.16777938781510365,
      -0.09287604949663145, -0.010378011540593757, 0.1594331602275639,
      0.19523869399925237, 0.18464942262011227, 0.06328512198243717,
      -0.07722165855118322, -0.1491589460269398, -0.17912928670535297,
      -0.11490318286815507, -0.11189726101521234, -0.20487634390276235,
      0.7649837592101456, -0.23800865420158882, 0.7408363358679637,
      -0.08384674801899719, 0.46372256496136105, -0.1683495959766098,
      0.8086039606875512, -0.25555617026146216, 0.19463913189037535,
      0.3009779498087988, -0.16302064990391507, -0.10690976611351247,
      -0.13497815095121923, -0.04977220128469868, -0.07945189422396105,
      0.04040760416145534, -0.09194915079908203, -0.14731166465811507,
      -0.2649992211995451, -0.15560186997026057, -0.06949686732786686,
      0.16530147427910571, 0.22324548858793775, 0.26718136730575287,
      0.1916641951249017, 0.06093692301766854, -0.08862623473412004,
      -0.14658150061325853, -0.1598833096185107, -0.18630425886720847,
      0.20226767939927157, -0.0861423758749425, -0.7776631130885305,
      1.4090153420038987, -0.3038886842868152, 1.2888777036518135,
      -0.07447075817772283, 1.2482190395029773, -0.80123249840126,
      0.47055407026248136, 0.7557719984574562, -0.11037652666672627,
      -0.05445836926306743, -0.1991810754488677, -0.10899116252888987,
      -0.15332031366957818, 0.04365448634854576, -0.022154991408309264,
      -0.1523944889888934, -0.19372066727324463, -0.023769000914279543,
      0.24457812931884867, 0.5172290601462988, 0.4305115414461968,
      0.4535547011943914, 0.3493581281435395, 0.2107669845089832,
      0.06395623914002005, -0.043266091906771414, -0.12307402164456596,
      -0.17588597679362872, -0.05716033563257766, -0.0784239564694168,
      0.14377922602722487, -0.28610637890062873, -1.3867297053543113,
      2.707602155025657, -0.12637740826622818, 2.0046873376560574,
      -1.442367549533677, 0.4151690191416874, 1.1637625900709285,
      0.02187980097289477, 0.2119473473283329, -0.11885489129254229,
      -0.1159981397382039, -0.1889926920183694, -0.058557612447368006,
      -0.043992442353640485, -0.026879139952720663, -0.0192982065162415,
      0.11425895652801879, -0.10204731321609413, 1.0976378910336273,
      0.7808329817202355, 0.7892686156410853, 0.6558593420029429,
      0.41963945036689065, 0.2149537780289469, 0.10907743849349204,
      -0.015003791740152183, -0.0981083523247832, -0.09998346191476838,
      -0.14074054993981988, -0.04922222307913471, -0.6022563234411543,
      0.1482255131870283, -0.20779420774376042, -2.0348285284263787,
      4.025186119425146, -2.7420491756647705, 0.8073118378409511,
      1.5256751899261984, -0.015777910213839702, 0.5648106146365885,
      0.09474509067016074, 0.03230544111585742, -0.15496296066268442,
      -0.07089892296474551, -0.15185446167165811, -0.09901337883732231,
      -0.03383919809283262, 0.20170996830425536, 0.31395340400286426,
      0.9180493845319551, 0.9083748013224733, 1.1212514777242175,
      0.8111537128593137, 0.6546125277251835, 0.4481201828101785,
      0.2933813386224918, 0.08094250654372658, -0.004887613580663216,
      -0.04204543783114793, -0.048279129686226115, -0.13748504879992385,
      -0.22867414001479172, -0.6520602138291955, -1.4414816884582773,
      0.3490015618927237, 1.2663064061664397, -4.451906943808227,
      2.3981175155339263, 2.0366543361516527, -0.11574419894478603,
      0.9938253915317542, 0.4025305949854213, 0.2978752123577735,
      -0.04812880127462812, 0.001834095689180732, -0.06357806485663896,
      -0.1491109787327997, -0.17638384543546787, -0.15061392115741762,
      -0.13638564133647435, 0.3292785127452974, 0.4564601274895542, 0,
      -0.09838020244848457, 0.2889284460821786, 0.3998138477400701,
      0.45036129401449043, 0.22152969012775114, 0.11073273247786891,
      0.024117745722163984, -0.005028012954253469, -0.08710696057267951,
      -0.08365344819547284, -0.5152142695871454, -0.8612426220912759,
      -0.7893985113030451, -0.7442322593539389, -1.1208061672534484, 0,
      1.1208061672534437, 0.7442322593539381, 0.7893985113030426,
      0.8612426220912766, 0.5152142695871439, 0.08365344819547249,
      0.08710696057267933, 0.005028012954253469, -0.02411774572216354,
      -0.11073273247786865, -0.22152969012775126, -0.45036129401449054,
      -0.39981384774006945, -0.2889284460821784, 0.09838020244848424,
      -0.9083748013224145, -0.4564601274895271, -0.32927851274525655,
      0.13638564133649642, 0.15061392115742586, 0.17638384543547556,
      0.14911097873280194, 0.0635780648566394, -0.0018340956891807838,
      0.04812880127462774, -0.2978752123577729, -0.40253059498541977,
      -0.993825391531751, 0.11574419894478773, -2.0366543361516536,
      -2.39811751553392, 4.451906943808238, -1.2663064061664346,
      -0.34900156189272086, 1.441481688458285, 0.6520602138291958,
      0.22867414001479336, 0.13748504879992438, 0.04827912968622815,
      0.042045437831148495, 0.004887613580664909, -0.08094250654372509,
      -0.2933813386224868, -0.44812018281017507, -0.6546125277251672,
      -0.8111537128592801, -1.1212514777241573, -1.0976378910335893,
      -0.9180493845319213, -0.31395340400284805, -0.2017099683042456,
      0.033839198092839695, 0.09901337883732686, 0.1518544616716597,
      0.07089892296474593, 0.15496296066268506, -0.032305441115858605,
      -0.09474509067015939, -0.5648106146365897, 0.01577791021384034,
      -1.5256751899262007, -0.8073118378409491, 2.742049175664779,
      -4.02518611942514, 2.03482852842639, 0.20779420774376556,
      -0.14822551318702654, 0.6022563234411564, 0.04922222307913573,
      0.14074054993982205, 0.09998346191477035, 0.09810835232478354,
      0.015003791740153814, -0.10907743849349157, -0.21495377802894516,
      -0.4196394503668887, -0.6558593420029402, -0.789268615641069,
      -0.7808329817202074, -0.24457812931883488, 0.10204731321609872,
      -0.11425895652800651, 0.019298206516249916, 0.026879139952725083,
      0.04399244235364598, 0.058557612447370934, 0.18899269201837068,
      0.11599813973820411, 0.11885489129254237, -0.21194734732833254,
      -0.02187980097289353, -1.1637625900709312, -0.4151690191416833,
      1.4423675495336772, -2.0046873376560503, 0.12637740826623128,
      -2.7076021550256497, 1.3867297053543175, 0.2861063789006335,
      -0.143779226027226, 0.07842395646942202, 0.05716033563257912,
      0.1758859767936318, 0.12307402164456618, 0.04326609190677271,
      -0.06395623914001951, -0.21076698450897985, -0.3493581281435364,
      -0.4535547011943848, -0.4305115414461896, -0.5172290601462894,
      0.15560186997025938, 0.02376900091427863, 0.1937206672732435,
      0.15239448898889424, 0.022154991408310377, -0.043654486348542874,
      0.15332031366958024, 0.10899116252889095, 0.1991810754488677,
      0.054458369263066984, 0.11037652666672665, -0.7557719984574531,
      -0.4705540702624809, 0.8012324984012641, -1.2482190395029769,
      0.07447075817773094, -1.2888777036518133, 0.3038886842868241,
      -1.4090153420038936, 0.7776631130885349, 0.08614237587494372,
      -0.2022676793992712, 0.1863042588672104, 0.15988330961851227,
      0.14658150061325848, 0.08862623473412022, -0.060936923017667906,
      -0.19166419512490052, -0.26718136730575015, -0.22324548858793625,
      -0.16530147427910316, 0.06949686732786675, 0.16777938781510615,
      0.2649992211995447, 0.14731166465811715, 0.0919491507990829,
      -0.04040760416145386, 0.07945189422396387, 0.049772201284700876,
      0.13497815095122018, 0.10690976611351256, 0.16302064990391416,
      -0.3009779498087981, -0.19463913189037552, 0.2555561702614637,
      -0.8086039606875491, 0.16834959597661264, -0.46372256496135666,
      0.08384674801899664, -0.7408363358679616, 0.23800865420159104,
      -0.7649837592101448, 0.20487634390276502, 0.11189726101521356,
      0.11490318286815554, 0.1791292867053549, 0.14915894602693922,
      0.0772216585511834, -0.06328512198243683, -0.18464942262010964,
      -0.19523869399925042, -0.15943316022756263, 0.01037801154059478,
      0.09287604949663382, -0.015525256999667727, -0.050942947866376924,
      0.0024400785561280833, -0.06382739270218761, 0.0012785498169549515,
      -0.06620598245919762, 0.07548582078045817, 0.079593566039512,
      0.1573350303450895, -0.07130558425889703, -0.0476734213299555,
      0.13017614472815361, -0.48380889084851014, 0.05970121628039872,
      -0.27168929694820493, 0.1532572256675474, -0.37001387119519286,
      0.03502892748503371, -0.18488826926782947, 0.05507255324487735,
      -0.4055339167047277, 0.15195750501651886, 0.2153029085609278,
      0.1697242715154005, 0.11246394245376394, 0.04243906497357169,
      -0.07466463078185144, -0.159079577204887, -0.16547295203388937,
      -0.04470159355949411, 0.003929592004374638, 0.011913601076878649,
      -0.1828568991437799, -0.10407564589066134, -0.23555546334259525,
      -0.10684932807789757, -0.22814734409189458, -0.06348517358734926,
      0.035231426543992535, 0.15565555640319106, 0.02427504006057549,
      0.03354812223332628, 0.10951630791791925, -0.2539938219386176,
      -0.008044972903134084, -0.10021979561886678, 0.09379152614028896,
      -0.14792025966567243, 0.11264804489487593, -0.09927373929001457,
      0.03591479523938799, -0.1654716680991405, -0.04850938386374761,
      -0.02664719406199113, 0.192377461967541, 0.16647262366552154,
      0.09009439550122157, 0.003990620093459625, -0.09812275535485344,
      -0.1366171762599761, -0.03846587209018027, -0.0631079490914464,
      -0.10353827744152141, -0.2367561033844639, -0.39107302489471046,
      -0.4993413545698927, -0.2942848550600695, -0.35686545376814893,
      -0.2647744137285342, -0.21957600785318782, 0.10231188547257429,
      -0.038641816351083894, 0.10657849804550705, 0.15251693996845886,
      -0.08347929962968535, -0.043761647973181945, -0.1569328811173635,
      -0.02573294444359092, -0.13459193297646968, 0.2054603592637699,
      -0.07634310058801329, -0.012037966893705314, -0.10529567915508307,
      -0.09609679137720112, -0.048761457544342024, 0.10089614648569795,
      0.0952682645076824, 0.14454547803178003, 0.11929552297831249,
      0.062089135258225896, -0.07282725522765716, 0.017260207971635976,
      0.0029845825084865137, -0.15373347718831978, -0.29387297238508514,
      -0.24699055160378858, -0.3067700518158321, -0.08591146266209564,
      -0.3058190150005192, -0.25423051056794305, -0.3875457037899132,
      -0.22411418130009808, -0.3537564359753084, 0.055146819140510416,
      0.2628105599323362, -0.019211160710796572, 0.021646587213104713,
      -0.10241250352514171, -0.07877018936108618, -0.14656177726216213,
      0.06994065617155748, 0.002197448124624663, 0.002747867764730379,
      -0.10920785431913549, -0.11314958231531393, -0.0993249738613295,
      -0.024565620333014605, 0.11510723629505158, 0.15553553242798132,
      0.1412615980599799, 0.1780996924064803, 0.24246246508902825,
      0.300328397784228, -0.04389672863558922, -0.04165627319971637,
      -0.30818729583490695, -0.22221882441369153, -0.3449025548727439,
      0.23901621577757753, 0.04006833493978915, 0.22067925957890494,
      0.05913901763736636, 0.0013771249391555669, -0.8293224240232032,
      -0.2424827691685955, 0.2220707306234446, -0.05187740979518813,
      0.08971160087534878, -0.06494462602113076, -0.023033890597353883,
      -0.20608602740074317, -0.006811401556518173, -0.05690796487102039,
      -0.009244667169144016, 0.03186931291822486, -0.03171963561703066,
      -0.2055819136117401, -0.07773307076521087, -0.042569660785952056,
      0.14494733127713064, 0.20572232603908944, 0.2227575660976475,
      0.23658495591681294, 0.3402162038624952, 0.5317886241837994,
      0.2367948663422716, -0.4620869054676115, -0.17111767858219507,
      -0.23623861798820922, 0.12877260884038208, 0.690102472530167,
      1.1175823884838996, 1.0747715799508781, 1.1957108711898863,
      -0.10839909954530788, -0.2263553910474054, -0.04891742486397395,
      -0.49291782026044056, 0.07233585420108059, 0.024371827339035017,
      -0.013685307258532536, -0.2073689149256469, -0.1429203870068314,
      -0.20318736992960118, 0.09738711454895084, -0.11463822183415182,
      0.06639276489870634, -0.08790627274963889, -0.24871001073084317,
      -0.24716165183994784, 0.07081825322981992, 0.19552146385155544,
      0.2667283201489779, 0.3056428917979906, 0.3354280050625516,
      0.6010674473512297, 0.6973013864661962, 0.10657803670352221,
      -0.26597013575809814, -0.5166385012265116, 0.20353239335470413,
      0.46612626705839527, 0.8817924518615256, 1.0591766157447142,
      1.81559937881354, 1.1338250057069015, 1.336549316612259,
      0.6056618650285254, -1.143412386517127, -0.24404333943615408,
      -0.11036542395783162, 0.0113975838761526, -0.1374746764441064,
      -0.17507285276321236, -0.229508144906775, -0.1235225366270939,
      -0.15992872157622667, 0.07040420542593133, -0.14847974776257952,
      -0.11769772351689584, -0.0043287613096706385, -0.01570204240179094,
      0.008975674876936093, 0.2936321736893157, 0.24220392956380496,
      0.33450192958610414, 0.5061427531741152, 0.7981852522366981,
      0.5625934272912321, -0.5161851914994344, -1.105930659634037,
      -0.36434278784189805, -0.2506130633590454, 0.49191197464707476,
      -0.5504297333386833, 0.33201271766592266, -1.2534804319442674,
      1.8545676439466376, 2.7705947112358396, -0.6572778182386966,
      -0.4476986361937145, -0.724841310594671, -0.19352569039907921,
      -0.06091583791907576, -0.07579332872568335, -0.18362798444373865,
      -0.10847923107858076, -0.4971843279255892, -0.26497067484015147,
      0.1279044678179279, 0.3055754310904159, 0.010766872600696822,
      -0.17753959085018053, -0.04814578185160058, 0.007404938424997059,
      0.1911100471268881, 0.260240044947818, 0.38143909917016594,
      0.6295601479932434, 0.6315271726552409, 0.5064081488092473,
      -0.28203486996779953, -1.481298784591466, -0.34444399750770943,
      0.33223282315731145, -1.0635980503754157, -0.7432738853191642,
      -1.4203730522981521, -0.29452233058397176, 0.3105478087846589,
      0.4425799571579111, 0.5885198019984471, -0.608904845351347,
      -0.5401519230094439, -0.3838911656921845, 0.02852961095842791,
      -0.22272564345822352, 0.021237638325899852, -0.387784194546968,
      0.021133356436687064, -0.703172359616261, 0.5672727000473203,
      -0.037766801642101375, 0.06793846381428098, -0.5437098167860644,
      -0.0704859693682512, -0.02650526715020184, 0.26990648117357596,
      0.2830749986604576, 0.3201793290763222, 0.48573187070286,
      0.4386512882244713, 0.8786532261255616, -0.7255315586935562,
      0.48040960369964236, -0.14688086473049994, -0.8636112375382178,
      0.034562131954569586, -1.3606412475160699, -0.0957750273311256,
      -1.0236217631956728, -2.0668504460046977, 0.9104604552681247,
      0.04764983705131218, -0.29915225181420874, -0.4419264253886607,
      -0.16705843369252318, -0.08813592215903708, -0.1055833934917848,
      -0.1529658239374068, -0.37808744252168625, -0.2797162376269429,
      0.42301568032977793, 0.28749903579456393, 0.42643957249522774,
      -0.6330846638456163, -0.39563373733228846, -0.2486369819601503,
      0.3743892093980236, 0.1651784382566546, 0.21235668984583117,
      0.05068339188231969, 0.2929172313060312, 0.12600631152419559,
      0.3702007241660689, -0.11933000679563836, -0.07786945045374266,
      0.4005928988973134, 0.33639737707180556, -1.4411916754233998,
    ],
    height: 32,
    width: 32,
    top: {
      real: [
        6327.007467982786, 12787.448651417644, -8580.13577826938,
        -6564.429625192605, 1064.8969915597925, -1614.7722808334524,
        -60.04811942184231, -221.12968025641604, -12.445754708845573,
        -62.94058771358334, 23.82057845345795, -28.525301748952867,
        37.86428012515434, -85.844490405628, 27.49381496964307,
        -48.15197444336273, 41.39966019930714, -48.151974443360345,
        27.493814969642067, -85.84449040562787, 37.86428012515403,
        -28.52530174895269, 23.82057845345851, -62.94058771358404,
        -12.445754708845573, -221.12968025641445, -60.048119421842806,
        -1614.7722808334493, 1064.8969915597932, -6564.429625192613,
        -8580.135778269385, 12787.448651417659, -17213.595236981997,
        544.0730266990294, -10829.417860945707, -5794.121923108305,
        -1103.8692252742003, -1120.3666800727638, -106.61462896985108,
        -117.89522553300084, -39.30843089365121, -26.96057805653429,
        -11.02504742288635, -2.1850531713376355, -7.295269738362588,
        -14.472211987615461, -14.23279965231924, 3.5205960317557246,
        -19.62974773437861, -14.131264529804582, -22.272265924680642,
        -17.401343902608428, -1.7416101263052008, 0.34733716754184635,
        -16.60063574625633, -32.47390190466588, -64.31481385096977,
        -84.0347536394093, -258.3227844043639, -714.3011765913042,
        113.1165060355228, -2806.7151144576005, -10882.302955904926,
        -27817.100568112113, -27745.70849411807, -22841.4208450087,
        -8553.526467468835, -4085.033989629072, -1748.9561003744159,
        -545.3354386545253, -146.45498278007594, -40.80544006189128,
        -50.06021298226216, -16.73048944848435, -23.62313915150434,
        0.36714120063527833, -7.188290919780933, 6.414260409354566,
        -14.833291452397129, 3.4669422259569203, -16.161012153790594,
        -21.28313017801196, -13.244388638951026, -1.2754674400463286,
        0.4918466117149978, -11.472717532816317, -17.53068940264937,
        -29.523444921912187, -36.98341868022681, -91.5973512360268,
        -144.17841735614732, -486.41083616652156, -239.1204206916959,
        139.0089391760282, -7153.157795026505, -18373.599790964956,
        -8415.922731585739, -6467.554677983386, -5469.658567600724,
        -2789.7914675082047, -821.4826713748977, -514.7145420030545,
        -122.6780822655295, -35.554593402553344, -32.90518481960786,
        -16.87597750619218, -9.124394819051188, -4.180262031874417,
        0.783160840973908, -0.8247362446257293, -6.027703935454679,
        -6.850242789892616, -6.885859335051412, -14.551844205848809,
        -8.459298914659914, -1.9950695133570466, 1.5394495557011576,
        -9.232834653609892, -11.961754213185406, -20.558561534905806,
        -38.14482496917136, -57.16086990533409, -157.5554953403844,
        -411.2008243286849, -110.1193097574614, -463.64281724562954,
        -1210.9754315912523, -4810.1023052011815, -2624.9192342435695,
        -4516.897453633137, -3582.982491421491, -2119.74991736369,
        -750.2347266447723, -159.86878938364373, -96.80572891910141,
        -16.935754226078267, -22.178078450833883, -9.009222722598976,
        -5.445485292050662, -2.526888256673675, -2.621952349894846,
        -2.0534180946008638, -6.464306480423622, -8.721406530014862,
        -7.012703187407293, -7.7847619200438425, -0.7812180190370879,
        -0.11031060182209244, -3.431895986699017, -4.568083040130742,
        -9.316020064156948, -15.87900618307528, -23.382201868158507,
        -37.98940473063752, -121.95929165874175, -201.43809047465336,
        -567.3037269017944, -610.3631285378248, -1937.2376557226703,
        -2694.0942422163184, -3481.535597542074, -3026.0617140239533,
        -2506.491638388831, -1355.157669171596, -468.0599091435185,
        -33.397814851582154, 18.54533148158398, -29.439943085485314,
        -11.922803368680741, -7.717457984896304, -2.788860330209426,
        -2.054500633053642, -1.0224301618297007, -2.5290059501700397,
        -2.6199349314032494, -4.882873145781677, -5.6140621268617785,
        -3.6146413255535528, -0.829674845027506, -1.1631844631411599,
        -1.17362456930955, -3.7427284368684024, -6.617827065642342,
        -8.803949843157813, -13.481606634721874, -26.682014936266803,
        -32.97802138197703, -190.87870662958537, -335.07671606134033,
        -876.9552218570499, -1470.8308615232113, -2413.1056871868645,
        -2329.4915082040015, -2151.926578142459, -1438.5211303616525,
        -713.0815238595347, -130.56706965452, -28.862997769748436,
        1.7115783105395304, -2.3079138134833856, -11.650001060370576,
        -2.170189504369732, -1.7033561682904694, 0.11972955037883275,
        -0.5790790812653609, -0.45369004788794814, -4.0202584980239315,
        -2.2874964618085922, -4.043969331388718, -2.714411694103757,
        -0.7843149712055903, -0.6337786214807561, -0.8354288746558204,
        -2.5417481635934216, -3.449779845211915, -5.2729359146939485,
        -9.332533768451485, -2.348077722091996, -30.998957295773433,
        -62.717085150656224, -255.55592612696097, -515.5540381395323,
        -1077.4118984564277, -1959.4321649356718, -996.1706325647543,
        -957.5829658424543, -646.4812454670936, -264.6323709027533,
        -80.5183401631437, 1.357764038030833, -10.209813205700032,
        -1.6455702447745924, 0.04156410545341299, -2.111433611523795,
        0.09477041994978236, -0.5991594867560358, -0.04280607522064791,
        -1.4583889440112543, -1.0515624140257636, -2.624261072572436,
        -1.9962698899057387, -2.637358088895228, -0.39414295752688255,
        -0.8095209882094745, -0.8093550401978136, -1.831598128086258,
        -2.395778121988731, -3.7775973636187947, -1.2762438485839673,
        -5.873618704707699, -1.7472058496177199, -39.26171578474986,
        -103.67045476207605, -221.97901463800724, -486.52939506954147,
        -770.8638520171584, -324.5340145618874, -340.76561269504333,
        -198.9419784129981, -116.98390967138687, -32.55200245568722,
        -2.8647426984892057, 3.4567160839115996, -2.331005269373194,
        -0.31982529888503974, 1.0641170511547686, -1.1693860348016079,
        0.407002126956675, -1.0092937918537679, -0.03498515495516123,
        -1.1746986822405672, -2.25833192615608, -2.3742700657768196,
        -2.0999344700147127, -1.3199204785521135, -0.00726121067659493,
        -0.21997349279604808, -1.6799449140427334, -2.573626149077699,
        -1.274902979707558, -2.9722975102588807, 1.1149262389696764,
        -3.782557414370513, -8.811283856834226, -31.380656277665604,
        -80.81570649485545, -151.2920880811312, -231.73584987382,
        -71.71934076037124, -68.36402933689453, -82.30497530908133,
        -39.76913656733262, -12.693902195545155, 1.984203566270604,
        -0.4889435407745263, 1.5673786316984977, -1.1528550937233366,
        -0.047905313676576855, 1.0650111541187497, -1.4670778837513785,
        0.9015484382771278, -2.0067122081730173, -1.7180755446076856,
        -3.3483434682482898, -1.6317774897434336, -3.470880426438495,
        -1.4694727348954268, -0.10257790692130256, -0.9288963638157178,
        -2.5451436559397584, -1.1303995452351283, -2.8871606625355204,
        -0.49805533537312113, -0.4387193422815815, 0.7490974196906504,
        1.439791857975526, -13.026034555561825, -28.484337861014367,
        -36.89517840676591, -72.2311900358384, -26.809485534889244,
        -56.94273379652035, -36.28010742942203, -18.09907931367515,
        -3.2627913287121535, -0.2706547580504817, 1.1511525903295716,
        -0.1898870363801409, 0.9708722088802537, -1.132641237042418,
        0.1998130176636337, 2.307680270293133, -2.549840775656603,
        -0.5553262362525304, -4.506786497033707, -3.1791416623515807,
        -4.407810096297031, -3.312559231697057, -0.8611731352773999,
        -1.5893272599995412, -2.966763176308445, -0.10263295233944174,
        -3.9090515756474873, -1.1809123553765606, -1.20382750933502,
        0.286248057198718, 1.853681713247669, 0.8072002923997494,
        -5.576914824230862, -9.876045833403877, -26.746787584056406,
        -25.156847324745275, -59.858730768373135, -40.90948134422029,
        -31.301364606284917, -12.99289618826553, -3.374775686900119,
        2.018530777741562, -0.2260612077575776, 0.20594677690592242,
        -0.3240322568825497, 2.6342781156582364, -0.20787587650621794,
        0.020021422684959465, 2.4168167113542753, -5.471113939106749,
        -4.016235227521675, -8.261492540220937, -5.359721289980835,
        -3.561851886896915, -2.433206189931258, -3.72732750056158,
        1.9796458045760836, -5.619455249505039, -1.3533084788499918,
        -2.5312603283156982, -0.7357741299886245, 1.05348708564852,
        1.9641802030644013, 2.686394865901931, 0.1517907769810002,
        -13.505006616733285, -24.652619118640313, -46.54077201833177,
        -65.57386282564879, -62.198686950727755, -33.36748135977328,
        -15.462856466374785, 1.276482037672726, 0.652383510779166,
        0.11426292455840634, -0.28574074744887695, 1.1004477970868616,
        1.5327652909312646, 4.932711200240519, -2.7503236900904393,
        -3.9754701567757182, -0.834512135731142, -9.685955117463603,
        -6.000630422824884, -7.13182532638587, -4.985642454964987,
        -8.219869288149797, 4.4471445589999075, -5.912419213682183,
        -1.066228559248251, -4.532002002354178, -2.2691032318803455,
        -0.2959592999178123, 0.95069246916244, 2.9800299945570488,
        4.175488865046039, -3.9368165535394617, -16.75239131732446,
        -41.14171229985143, -60.64390251212476, -84.34316473215777,
        -54.07497231667312, -32.1478368384324, -3.8004568077904586,
        0.609063700223492, 0.9632657107050296, 0.12072436644318041,
        0.8631954755084683, 1.1644302862121145, 2.3252453178811563,
        0.4766448788746544, 4.289515874709642, -8.009939850720517,
        -11.261414242734404, -3.732740466180737, -6.1601929909303115,
        -5.750665733944118, -11.117751544185502, 4.305411514823387,
        -8.211608570347876, 1.5649721654809707, -5.692142411938895,
        -3.494908667188049, -2.1697325908161673, -0.6954156264880039,
        0.8151347377023449, 3.491384396197289, 3.712841092827461,
        -0.2846190491444036, -14.694115553922865, -40.78417179777688,
        -76.1290979979302, -42.44654416844914, -35.20072244442639,
        -7.684968530920968, -0.867788767062698, 1.7056687310546401,
        0.5197495279873948, 1.131675911228874, 1.212780060538119,
        2.222121429321137, 0.8361427470500683, 0.09954660645280876,
        -3.106693968311659, 2.4769973579809332, -11.745899626687375,
        -12.566716735550758, -4.784372252544112, -8.604058870064595,
        5.351103402740868, -15.66778198729919, 3.3911987930307137,
        -8.125945789685659, -4.798036588740434, -2.1471667518999764,
        -2.508724157326058, -0.860976568717486, 0.8013954360837776,
        2.3927476350849495, 5.65616272254561, 4.625019584724071,
        -10.360873371570062, -32.18376694299341, -40.627648783043085,
        -17.95302681367091, 6.185941644460162, 4.4451711191118575,
        6.213331251274599, 3.3587096432927233, 0.7556965076296271,
        0.8242995843017912, 1.6770717987294814, 1.487507854284298,
        0.5750646130151693, -1.8616897808321822, -4.292331488605052,
        -7.016130789435238, 4.852626568656962, -11.625945416074895,
        -21.07467865045702, 3.143448295571389, -12.714871655934468,
        2.366640700254353, -11.17366154497929, -6.475058123170597,
        -2.9596627855411386, -2.763079045935563, -1.4122750319888788,
        -0.5580228906711165, 0.4050996560161985, 3.054950312292098,
        4.5519407117959005, 5.504486591127148, 2.884340309618711,
        -2.0306279174386637, -12.290279126535582, 30.20785901727286,
        12.45094729737127, 8.741596108674122, 10.304484703022888,
        4.231031360287155, 1.8368366318675937, 1.9910666876255574,
        0.991563036763885, 0.31747940339256003, -0.6024560594659747,
        -1.5054245711483085, -5.204747979185773, -4.698542589986817,
        -6.440605765726458, -2.431796520269472, -0.318061102868901,
        -34.61437498430425, -0.3180611028689131, -2.431796520269478,
        -6.440605765726465, -4.6985425899868325, -5.2047479791858065,
        -1.505424571148318, -0.6024560594659905, 0.31747940339256003,
        0.9915630367638866, 1.9910666876255707, 1.836836631867627,
        4.231031360287185, 10.30448470302293, 8.741596108674146,
        12.450947297371268, -17.95302681366921, -12.290279126534008,
        -2.0306279174386814, 2.8843403096185996, 5.504486591127181,
        4.5519407117958774, 3.0549503122920303, 0.40509965601617365,
        -0.558022890671132, -1.4122750319888866, -2.763079045935566,
        -2.9596627855411324, -6.4750581231706095, -11.173661544979305,
        2.3666407002543774, -12.714871655934495, 3.1434482955713383,
        -21.074678650457034, -11.625945416074918, 4.852626568656909,
        -7.016130789435253, -4.292331488605082, -1.8616897808321802,
        0.5750646130151582, 1.4875078542843145, 1.6770717987294999,
        0.8242995843018388, 0.7556965076297252, 3.3587096432928165,
        6.21333125127526, 4.445171119112939, 6.185941644460696,
        -42.44654416844733, -40.62764878304236, -32.18376694299287,
        -10.36087337156992, 4.625019584724104, 5.656162722545562,
        2.392747635084909, 0.8013954360837462, -0.8609765687174984,
        -2.5087241573260646, -2.1471667518999924, -4.798036588740434,
        -8.125945789685682, 3.391198793030713, -15.66778198729918,
        5.351103402740785, -8.604058870064568, -4.7843722525441965,
        -12.56671673555077, -11.745899626687423, 2.4769973579809226,
        -3.1066939683116837, 0.09954660645280862, 0.8361427470500621,
        2.2221214293211515, 1.2127800605381271, 1.1316759112289154,
        0.5197495279874628, 1.7056687310547414, -0.8677887670623313,
        -7.684968530920446, -35.20072244442443, -84.3431647321563,
        -76.12909799792908, -40.784171797776416, -14.694115553922703,
        -0.28461904914431585, 3.712841092827477, 3.4913843961972515,
        0.8151347377022745, -0.6954156264880174, -2.169732590816195,
        -3.494908667188057, -5.692142411938915, 1.5649721654809774,
        -8.211608570347895, 4.3054115148233585, -11.117751544185527,
        -5.750665733944103, -6.160192990930285, -3.732740466180779,
        -11.261414242734437, -8.009939850720519, 4.289515874709647,
        0.47664487887466933, 2.3252453178811465, 1.164430286212123,
        0.8631954755084824, 0.12072436644322472, 0.9632657107051639,
        0.6090637002236494, -3.800456807789966, -32.147836838431445,
        -54.074972316672174, -65.57386282564865, -60.643902512124406,
        -41.14171229985112, -16.752391317324395, -3.936816553539381,
        4.175488865046039, 2.98002999455701, 0.9506924691624021,
        -0.295959299917824, -2.26910323188035, -4.532002002354194,
        -1.0662285592482377, -5.912419213682192, 4.447144558999873,
        -8.21986928814978, -4.9856424549649665, -7.1318253263858535,
        -6.000630422824882, -9.685955117463573, -0.8345121357311588,
        -3.9754701567757316, -2.7503236900904167, 4.932711200240523,
        1.5327652909312637, 1.1004477970868634, -0.2857407474488868,
        0.11426292455844969, 0.6523835107792659, 1.2764820376728394,
        -15.462856466374522, -33.367481359773095, -62.19868695072734,
        -59.85873076837255, -46.54077201833131, -24.652619118640224,
        -13.50500661673309, 0.15179077698109764, 2.686394865901908,
        1.9641802030643754, 1.0534870856484704, -0.7357741299886327,
        -2.5312603283157147, -1.353308478849978, -5.619455249505026,
        1.979645804576063, -3.7273275005615623, -2.4332061899312447,
        -3.561851886896878, -5.35972128998084, -8.261492540220898,
        -4.016235227521694, -5.471113939106738, 2.416816711354272,
        0.020021422684962133, -0.20787587650621156, 2.6342781156582284,
        -0.3240322568825613, 0.20594677690590416, -0.22606120775752253,
        2.01853077774176, -3.3747756868998953, -12.992896188264998,
        -31.301364606284267, -40.909481344219984, -26.809485534888527,
        -25.156847324744817, -26.74678758405601, -9.876045833403781,
        -5.576914824230828, 0.8072002923997806, 1.8536817132476344,
        0.28624805719868845, -1.2038275093350328, -1.1809123553765482,
        -3.9090515756474855, -0.10263295233946072, -2.9667631763084428,
        -1.589327259999552, -0.8611731352773833, -3.3125592316970565,
        -4.407810096297022, -3.179141662351582, -4.5067864970337235,
        -0.5553262362525373, -2.549840775656593, 2.30768027029313,
        0.19981301766362944, -1.1326412370424508, 0.9708722088802425,
        -0.18988703638015317, 1.1511525903296145, -0.27065475805034434,
        -3.2627913287119403, -18.099079313674878, -36.28010742942166,
        -56.94273379651932, -71.7193407603689, -72.2311900358364,
        -36.895178406764366, -28.484337861013827, -13.026034555561461,
        1.4397918579755735, 0.7490974196906212, -0.4387193422816503,
        -0.49805533537312413, -2.8871606625355364, -1.130399545235152,
        -2.5451436559397544, -0.9288963638157319, -0.10257790692130979,
        -1.4694727348954375, -3.47088042643851, -1.6317774897434372,
        -3.3483434682483164, -1.7180755446077083, -2.006712208173023,
        0.9015484382771369, -1.4670778837513718, 1.0650111541187297,
        -0.047905313676639846, -1.1528550937233546, 1.5673786316984972,
        -0.48894354077444435, 1.9842035662707793, -12.693902195544938,
        -39.769136567331614, -82.30497530907938, -68.36402933689251,
        -324.5340145618874, -231.73584987382011, -151.29208808113108,
        -80.8157064948556, -31.380656277665615, -8.811283856834311,
        -3.7825574143705687, 1.114926238969638, -2.9722975102588807,
        -1.2749029797076188, -2.573626149077714, -1.679944914042758,
        -0.21997349279605258, -0.007261210676620465, -1.3199204785521295,
        -2.09993447001476, -2.3742700657768196, -2.2583319261561177,
        -1.1746986822405874, -0.0349851549551673, -1.009293791853766,
        0.40700212695667115, -1.169386034801607, 1.0641170511547318,
        -0.31982529888503974, -2.3310052693731778, 3.456716083911618,
        -2.864742698489133, -32.55200245568721, -116.98390967138671,
        -198.9419784129981, -340.7656126950431, -996.1706325647434,
        -770.863852017153, -486.52939506953675, -221.97901463800537,
        -103.67045476207502, -39.261715784749725, -1.7472058496176825,
        -5.873618704707824, -1.2762438485839995, -3.7775973636188502,
        -2.3957781219887693, -1.831598128086283, -0.8093550401978216,
        -0.8095209882094927, -0.3941429575269055, -2.637358088895282,
        -1.9962698899057312, -2.6242610725724247, -1.0515624140257607,
        -1.4583889440112356, -0.042806075220638506, -0.5991594867560418,
        0.09477041994976447, -2.111433611523809, 0.04156410545339216,
        -1.645570244774569, -10.20981320570001, 1.357764038031177,
        -80.51834016314297, -264.63237090274987, -646.481245467088,
        -957.5829658424444, -2329.4915082039943, -1959.4321649356684,
        -1077.4118984564245, -515.5540381395323, -255.55592612696057,
        -62.717085150656416, -30.998957295773568, -2.348077722092276,
        -9.332533768451471, -5.272935914694109, -3.4497798452119492,
        -2.5417481635934838, -0.8354288746558232, -0.6337786214808031,
        -0.7843149712056035, -2.714411694103749, -4.043969331388717,
        -2.2874964618085487, -4.020258498023898, -0.4536900478878949,
        -0.5790790812653498, 0.1197295503788481, -1.7033561682904654,
        -2.170189504369725, -11.650001060370577, -2.3079138134832218,
        1.7115783105395919, -28.86299776974782, -130.5670696545195,
        -713.0815238595312, -1438.5211303616488, -2151.926578142451,
        -3481.535597542063, -2413.1056871868605, -1470.8308615232086,
        -876.9552218570503, -335.07671606133954, -190.87870662958562,
        -32.978021381977214, -26.682014936266988, -13.48160663472185,
        -8.803949843157923, -6.6178270656423885, -3.7427284368684086,
        -1.1736245693095617, -1.1631844631411714, -0.8296748450274833,
        -3.6146413255534444, -5.614062126861783, -4.8828731457814465,
        -2.619934931403141, -2.5290059501698665, -1.0224301618296836,
        -2.0545006330535864, -2.788860330209389, -7.717457984896257,
        -11.922803368680738, -29.439943085484902, 18.545331481584157,
        -33.39781485158058, -468.0599091435166, -1355.1576691715877,
        -2506.491638388823, -3026.0617140239456, -2624.9192342435676,
        -2694.0942422163216, -1937.2376557226696, -610.3631285378265,
        -567.3037269017948, -201.4380904746546, -121.9592916587422,
        -37.98940473063803, -23.38220186815851, -15.879006183075566,
        -9.31602006415698, -4.568083040130774, -3.431895986699037,
        -0.11031060182210287, -0.7812180190371311, -7.784761920043757,
        -7.012703187407289, -8.721406530014612, -6.46430648042343,
        -2.0534180946007163, -2.62195234989481, -2.526888256673632,
        -5.445485292050623, -9.009222722598933, -22.17807845083391,
        -16.93575422607804, -96.80572891910084, -159.86878938364163,
        -750.2347266447713, -2119.7499173636857, -3582.9824914214882,
        -4516.897453633135, -8415.922731585722, -4810.102305201169,
        -1210.9754315912437, -463.6428172456313, -110.11930975746253,
        -411.2008243286865, -157.55549534038482, -57.16086990533496,
        -38.144824969171324, -20.558561534906186, -11.961754213185522,
        -9.232834653609975, 1.5394495557011911, -1.995069513357094,
        -8.459298914659838, -14.5518442058491, -6.885859335051412,
        -6.850242789892523, -6.027703935454709, -0.8247362446255362,
        0.7831608409739802, -4.180262031874306, -9.124394819051078,
        -16.875977506192154, -32.90518481960786, -35.55459340255284,
        -122.67808226552924, -514.7145420030503, -821.4826713748957,
        -2789.7914675081947, -5469.658567600714, -6467.554677983375,
        -27745.70849411805, -18373.599790964956, -7153.157795026502,
        139.0089391760178, -239.12042069169632, -486.41083616652713,
        -144.17841735614894, -91.5973512360294, -36.9834186802268,
        -29.52344492191359, -17.530689402649603, -11.472717532816715,
        0.49184661171508715, -1.2754674400467305, -13.244388638951113,
        -21.283130178012485, -16.161012153790605, 3.4669422259560148,
        -14.833291452397047, 6.414260409354707, -7.18829091978077,
        0.3671412006354383, -23.623139151504223, -16.730489448483766,
        -50.06021298226216, -40.80544006189026, -146.45498278007528,
        -545.3354386545192, -1748.9561003744159, -4085.033989629059,
        -8553.52646746883, -22841.42084500867, -17213.59523698198,
        -27817.100568112102, -10882.302955904914, -2806.7151144576032,
        113.11650603552238, -714.3011765913102, -258.32278440436545,
        -84.03475363941075, -64.31481385096976, -32.473901904667066,
        -16.600635746256838, 0.34733716754136956, -1.7416101263050108,
        -17.401343902608698, -22.27226592468065, -14.131264529805808,
        -19.62974773437863, 3.5205960317556224, -14.232799652319452,
        -14.47221198761537, -7.295269738362605, -2.1850531713375,
        -11.025047422886134, -26.960578056534132, -39.30843089365128,
        -117.89522553299832, -106.61462896985047, -1120.3666800727583,
        -1103.8692252741987, -5794.121923108299, -10829.417860945698,
        544.0730266990613,
      ],
      imag: [
        0, 39515.399789254865, -15382.502646592808, -2918.5213899411633,
        1191.3150820979915, -345.8052698718326, -91.96349756116432,
        -108.0683025974378, -23.43132760503778, -16.61081082295881,
        -2.2742971526945692, -21.94540337447156, -21.27242040257718,
        -19.057735286082725, 52.37631312091274, 8.852197502614422, 0,
        -8.852197502615361, -52.376313120912044, 19.05773528608244,
        21.27242040257723, 21.945403374471546, 2.2742971526945164,
        16.61081082295847, 23.43132760503778, 108.06830259743377,
        91.96349756116703, 345.8052698718299, -1191.315082097991,
        2918.521389941166, 15382.502646592799, -39515.399789254865,
        16946.371225111547, 11272.40087069651, -1841.163065584854,
        -1171.8258105148211, 109.267405778432, 109.43221584454041,
        -206.10314812122442, -42.28539321936541, -65.24914017226911,
        -8.196051793926907, -25.36595623631852, -12.488977779350739,
        -20.777136166915728, 10.939736173955986, 13.738393384077787,
        18.982014759380824, -12.446635345723246, -8.830506972875275,
        -14.016932746731957, 10.847407040619599, 18.949463773817904,
        9.549137726694633, 9.916050792857149, 10.925693066643545,
        29.5976882079218, 110.70270321520633, 119.64570653889598,
        -28.406380421737747, -832.3851335439583, 3868.3607546707453,
        4625.155413999855, 1299.266384884336, 11955.36918869557,
        -346.60702359457474, 2363.08656433282, 202.32180136864196,
        -295.0107693483969, 277.4413124787238, -208.25011765184485,
        -68.53645210929017, -63.125416501511275, -30.589238972650307,
        -20.382558491276782, -12.902690844348575, 1.0182743702449766,
        2.287414105137245, 14.546101055958879, -1.6150967690531892,
        0.8738635446220925, -13.38677146472326, 17.407635810762027,
        -0.6068089103442856, 12.950261495215786, -0.8675699825474084,
        13.062832664150156, -2.136096668655318, 35.88043741028102,
        66.54358379132412, 106.41042136702396, -154.61175360170367,
        -142.4313830070681, -204.04622542072212, 637.2265195104327,
        14506.214536688893, 2087.241286517743, 2934.8250858413794,
        -540.5764135125077, 271.5767913086672, 537.4906442433505,
        71.61068630950663, -82.56651716015784, -74.48955207450676,
        -57.14272356927949, -25.254222647826957, -12.544755138678799,
        -6.770877333738462, -0.2077076475991805, 1.1194026551973495,
        3.6890839097334878, -0.20461611038051675, -5.373740185152839,
        -2.2636764639022453, 4.983260069528009, 10.10754418440443,
        2.544597152813191, 5.044756942220222, 2.818990373202739,
        2.9920185974422946, 11.529259915073515, 53.34828178316849,
        50.5773061658137, 119.57179721034167, -786.9439339579221,
        -901.8697209507841, 1074.2990124084633, -676.634329985113,
        -1814.4894639161919, -1058.8873901892568, 349.63255334068964,
        268.2484621242063, 380.4257804868011, 97.91247606120596,
        -71.66187990477866, -72.73694020539094, -37.286147332183255,
        -18.72018651765236, -9.562832886967836, -8.263453641636948,
        -0.1909928019616089, 0.2856733033383343, 0.0713092208473309,
        1.775656575203522, 2.1386941287610384, -1.0231985430634363,
        2.4480270844924137, 1.987809621173889, 4.1535160740617325,
        3.5521022242715827, 3.6019889835361654, -0.38778650675348675,
        4.593463303583732, 12.369503115173785, 94.4009292853464,
        -77.03951669454163, -317.9618963149653, -464.9398230309893,
        -1928.5847150696218, -1707.435501473529, -1583.8824730375936,
        -833.1497046070991, -242.65732454029356, 317.3445924618518,
        69.37197156554217, -13.453603503282046, -58.67866216881051,
        -40.69792523135727, -20.16679423742438, -13.090865763493372,
        -7.663932546815518, -3.9818184076004774, -1.1480426683317846,
        3.4782462601712654, 3.3535274581593777, 1.130442042784202,
        -0.7879809105656911, 1.364561831917687, -1.248210330241836,
        2.654804361380871, 2.0455422971726147, 3.3794759874708187,
        0.2827071358643787, -0.6739636481307105, -2.4299863370655714,
        20.048308524208917, 2.7323622379310764, 23.350930435926227,
        19.428895667387472, -542.5554345851384, -969.7264693441342,
        -1881.693511581832, -426.42488803140975, -203.1293354864958,
        221.2759941924873, 75.49864673782753, 81.52765470923214,
        -23.22814892751923, -35.0958926310836, -18.113211298120703,
        -10.84781416147373, -7.219012562090457, -4.627971063973636,
        -2.4591204313834965, 0.5845484236475059, 0.9547463106026568,
        2.4151219203224654, 0.35567626693527166, -0.3444373524655358,
        0.10021534895843374, 0.6297575158661224, 0.07573905798146836,
        2.560600970229473, 0.33652577635989583, 1.0967346902818458,
        -2.0000864020848046, 1.451434335785166, -7.104320348324592,
        10.682010714917043, 63.119371696969466, -0.21915489532378957,
        -18.829394319190524, -151.38668525810633, -53.557614725234764,
        319.9810919368852, 339.6557115911443, 137.34002448547074,
        89.16606167421133, 5.539540701045855, 3.139496157974919,
        -15.790153056071546, -10.068399035154068, -5.990189510359599,
        -3.818478372445559, -3.031311871551015, -1.7050468427375405,
        0.29997994657424726, 1.0820090369221063, 1.186145834536469,
        1.1035985643781976, -0.026686439684276222, -0.021861987241408937,
        -0.7106913323848779, 1.5408441736495715, 0.8896424069841912,
        1.3226298476418663, -0.3134179284404904, 0.3654281917809065,
        -6.283172414744601, -1.5019641274621849, 13.705577255286178,
        14.08988446983488, 43.37606456504579, 54.20464622802869,
        132.60719521227122, 62.432091745032416, 219.8685340702529,
        133.19971898528303, 106.65962198554573, 32.50951057813668,
        -0.3217312093221928, -1.0472919151881939, 3.040048254115993,
        -2.137337576928337, -3.730023177462626, -3.658884080605465,
        -1.7579654575817145, -1.4081716233776314, 0.5384750525967524,
        0.9716444260939648, 0.9955744417358943, 0.11126643861839057,
        0.6834380273282822, -1.8968331338371984, 1.2370080984335854,
        0.24616862215977253, 1.6488725749132858, 0.5175199959040523,
        1.1293193043526017, -2.440127533596657, -2.1096176983280075,
        0.8686234113923286, -3.2906850406637935, 10.529105330387669,
        21.528607110729595, 53.86435993126087, 77.64597170154937,
        219.35042572397626, 56.6467253044894, 72.59713315254464,
        25.283726226154087, 9.591694536051858, 3.513106638710965,
        7.835371209588592, 3.7982495059531924, -0.1320379920173739,
        -2.687214491416787, -3.993299541160216, -3.249609758225802,
        0.3475312947763441, 0.5110856303949012, 1.5779290838292743,
        -0.32098662744154494, 0.8505043637670686, -0.9526953350056799,
        1.2514468795435802, -0.8023251432711297, 0.9402998385797201,
        0.0834845375200434, 2.9970442493787712, -1.3537504507858638,
        -0.49606931853204594, -0.4063479369404129, -3.2049709482453,
        -0.9073350510942371, 2.436744629198272, 14.425788131967863,
        11.285893196605656, 41.38323140755873, 26.64930600456886,
        3.49019745229235, -2.7278278900775033, -0.6780497768719117,
        5.197251705350807, 13.315592278460391, 8.56553402704958,
        2.798694252472001, -1.3188307478897958, -2.9560147101356677,
        -3.503962513889325, -3.235126442242444, -1.7837191938553947,
        4.13702942142299, -0.485758893366084, 1.5705428299533406,
        -0.2871276643491235, 3.026372213847224, -1.2120159426024513,
        2.35786853116133, -0.5759598133955007, 5.0023110313506045,
        -1.3965343408401143, 0.5713001835955326, 0.9760153999777991,
        -2.585611776637107, -1.4572886030272592, -1.697304402058907,
        2.103012136644805, -0.06299514621758302, 4.961293785496401,
        -0.301351161950073, 9.158035887659205, -26.77416025365113,
        -14.352442298363405, -1.328062861082634, 14.662722831107068,
        13.065714024917916, 9.014268684358106, 2.3156698002103213,
        -2.1494090398895276, -3.4369058394752816, -3.2885833247038136,
        -1.5589303641797962, -1.2624013759488528, -1.9675974847606275,
        6.6808538974877765, -1.9845455926326385, 5.852020908231505,
        -0.6464946693693394, 3.7090325345277484, -1.4383189901623872,
        7.635821765818129, -2.5011370399824613, 2.0288771570791524,
        3.387066154036441, -2.1726948090167277, -1.6227282885568253,
        -2.3401345171732064, -1.0784728701462345, -2.329913042321786,
        1.6766227476276099, -5.520827980018438, -13.304914803323909,
        -34.683237345909106, -16.2208922311743, -7.561457411183358,
        14.803696771258469, 15.579335900760762, 15.161631552742872,
        8.466040959037517, 1.9742581617985508, -2.2318082441740326,
        -3.1677451000476946, -2.7136257844502993, -2.4663578849843404,
        2.147064267404146, -0.8080751646824499, -6.8039934755458935,
        11.462761097859508, -2.320007213313432, 9.647619505490004,
        -0.5832325892308606, 10.466810618341768, -7.39663728492945,
        4.629755222962074, 7.84990600691447, -1.2532724460122664,
        -0.7138369357089525, -3.035642205111053, -1.9171318821546592,
        -3.2905248775997, 1.1638954652799918, -0.8003122215164804,
        -7.6686022187651925, -13.379436000591463, -2.0784151782651223,
        18.75367455316294, 37.59693951497317, 28.201887912811504,
        26.441177038828386, 17.31369928962457, 8.260583701281336,
        1.91576653498145, -1.0360449197814665, -2.460835808457071,
        -2.9435912594789997, -0.7374589298546507, -0.806982080987579,
        1.3512050433752707, -2.4806623635392717, -10.931358459008862,
        20.399475046734903, -0.9391475392972903, 15.633586230850142,
        -11.808527677086202, 3.795524426649309, 11.440683264496995,
        0.22625003249094855, 2.3910143241324033, -1.5433230899620785,
        -1.7524971656611896, -3.4392335008624597, -1.2102890230410412,
        -1.1333111335531953, -0.8668905465240005, -0.7710203749819823,
        5.869418392294464, -6.691170849830921, 60.884710948918006,
        43.6215632338163, 43.48959952748494, 33.141784821271486,
        18.338861076357606, 7.709614194939609, 3.102096535420124,
        -0.33651454595896624, -1.858665713174497, -1.559439785993801,
        -1.7180049365163976, -0.49470837698954684, -5.749978377706704,
        1.2816063498557866, -1.6438131382345036, -14.80449956699707,
        30.38324880041191, -20.687082737158004, 6.429123713414993,
        13.719178799652914, -0.15202331710012035, 5.670833174690743,
        1.1091130063870853, 0.43083164420390874, -2.423604198850752,
        -1.2614169037455483, -3.163327541785472, -2.542847948565205,
        -1.0621152637056996, 7.492146846575477, 13.826120615216594,
        48.56895003285198, 43.655937980459306, 56.143788442077074,
        39.839822974553684, 28.907966432346075, 17.226166967005444,
        9.493352687280801, 2.124830724849576, -0.10304029106189502,
        -0.73643011249607, -0.6808620369242278, -1.5726895782452095,
        -2.38329292549688, -6.365462228048634, -12.648471231222512,
        2.6502987300645, 9.194137936615347, -33.28553680715055,
        17.791788634489134, 16.331392880531652, -1.0332061538290742,
        9.637685708097134, 4.168966963233515, 3.4112249849533103,
        -0.6306411192619769, 0.02835684712188818, -1.1968584419289052,
        -3.3957285823190806, -4.745940898656516, -4.790016252397657,
        -5.15933541309157, 13.957717184896774, 20.367299127198688, 0,
        -4.5388798707327584, 12.10851784859719, 15.801052170121357,
        15.786196904526062, 6.464533909142766, 2.6357128260629894,
        0.48128762074186304, -0.08159176932681525, -1.1399410088753745,
        -0.939169667566381, -5.469535949937741, -8.47337798315448,
        -6.833270794890364, -5.875913014616271, -8.155226637929625, 0,
        8.15522663792959, 5.875913014616266, 6.833270794890349,
        8.473377983154487, 5.469535949937732, 0.9391696675663769,
        1.139941008875372, 0.08159176932681525, -0.48128762074185355,
        -2.635712826062981, -6.464533909142767, -15.786196904526072,
        -15.80105217012133, -12.108517848597181, 4.538879870732742,
        -43.65593798045641, -20.367299127197448, -13.957717184895019,
        5.1593354130924185, 4.790016252397922, 4.745940898656731,
        3.395728582319133, 1.1968584419289152, -0.028356847121888983,
        0.6306411192619719, -3.411224984953306, -4.168966963233496,
        -9.637685708097113, 1.0332061538290882, -16.33139288053165,
        -17.79178863448908, 33.28553680715062, -9.194137936615315,
        -2.6502987300644807, 12.648471231222583, 6.365462228048637,
        2.383292925496898, 1.5726895782452166, 0.680862036924256,
        0.7364301124960793, 0.10304029106193066, -2.124830724849536,
        -9.493352687280627, -17.22616696700529, -28.907966432345297,
        -39.839822974551964, -56.14378844207378, -60.88471094891558,
        -48.56895003285002, -13.82612061521586, -7.492146846575117,
        1.0621152637059226, 2.542847948565322, 3.163327541785505,
        1.261416903745556, 2.4236041988507613, -0.43083164420392467,
        -1.1091130063870698, -5.6708331746907525, 0.1520233171001266,
        -13.719178799652925, -6.429123713414971, 20.687082737158036,
        -30.38324880041186, 14.804499566997148, 1.6438131382345447,
        -1.2816063498557717, 5.749978377706724, 0.49470837698955733,
        1.7180049365164254, 1.5594397859938318, 1.8586657131745035,
        0.33651454595900265, -3.102096535420111, -7.709614194939538,
        -18.33886107635751, -33.1417848212713, -43.48959952748401,
        -43.621563233814584, -18.75367455316185, 6.691170849831209,
        -5.8694183922938254, 0.77102037498232, 0.8668905465241434,
        1.133311133553338, 1.2102890230411023, 3.4392335008624833,
        1.7524971656611932, 1.5433230899620796, -2.3910143241323984,
        -0.22625003249093578, -11.44068326449701, -3.795524426649273,
        11.808527677086207, -15.633586230850069, 0.9391475392973129,
        -20.39947504673482, 10.931358459008916, 2.4806623635393117,
        -1.3512050433752816, 0.8069820809876324, 0.7374589298546702,
        2.943591259479049, 2.4608358084570767, 1.036044919781497,
        -1.9157665349814337, -8.2605837012812, -17.313699289624388,
        -26.441177038827938, -28.201887912810978, -37.59693951497237,
        16.22089223117415, 2.078415178265043, 13.379436000591378,
        7.6686022187652325, 0.8003122215165199, -1.1638954652799158,
        3.290524877599744, 1.917131882154679, 3.035642205111054,
        0.713836935708947, 1.253272446012271, -7.849906006914436,
        -4.629755222962067, 7.396637284929479, -10.46681061834176,
        0.5832325892309236, -9.647619505490004, 2.3200072133134997,
        -11.462761097859458, 6.803993475545934, 0.8080751646824615,
        -2.147064267404143, 2.4663578849843657, 2.7136257844503273,
        3.1677451000476933, 2.2318082441740374, -1.9742581617985304,
        -8.466040959037452, -15.161631552742712, -15.579335900760643,
        -14.803696771258227, 7.561457411183342, 26.774160253651477,
        34.683237345909006, 13.304914803324097, 5.520827980018494,
        -1.6766227476275497, 2.3299130423218712, 1.078472870146282,
        2.3401345171732237, 1.6227282885568277, 2.172694809016716,
        -3.3870661540364337, -2.0288771570791524, 2.5011370399824764,
        -7.635821765818108, 1.4383189901624107, -3.7090325345277098,
        0.646494669369335, -5.852020908231483, 1.984545592632657,
        -6.680853897487771, 1.9675974847606519, 1.2624013759488664,
        1.5589303641798025, 3.2885833247038483, 3.436905839475272,
        2.1494090398895325, -2.3156698002103084, -9.014268684357965,
        -13.06571402491778, -14.662722831106908, 1.328062861082763,
        14.352442298363767, -3.49019745229113, -9.158035887658194,
        0.30135116195024236, -4.9612937854963866, 0.06299514621754256,
        -2.103012136644765, 1.6973044020589363, 1.457288603027268,
        2.5856117766371063, -0.9760153999778071, -0.5713001835955446,
        1.396534340840117, -5.002311031350611, 0.5759598133955085,
        -2.357868531161305, 1.2120159426024788, -3.02637221384722,
        0.28712766434913656, -1.5705428299533217, 0.4857588933660993,
        -4.137029421422994, 1.783719193855416, 3.235126442242455,
        3.5039625138893205, 2.956014710135662, 1.3188307478897938,
        -2.7986942524719765, -8.56553402704949, -13.315592278460258,
        -5.19725170535079, 0.6780497768720096, 2.7278278900777337,
        -56.64672530448825, -26.649306004568476, -41.383231407558036,
        -11.285893196605604, -14.42578813196792, -2.4367446291981882,
        0.9073350510942723, 3.2049709482452906, 0.4063479369404134,
        0.4960693185320061, 1.3537504507858567, -2.9970442493787934,
        -0.0834845375200447, -0.9402998385796996, 0.8023251432711498,
        -1.2514468795435723, 0.9526953350056726, -0.8505043637670447,
        0.3209866274415623, -1.577929083829268, -0.5110856303948855,
        -0.3475312947763517, 3.2496097582258234, 3.9932995411602126,
        2.687214491416765, 0.13203799201742056, -3.798249505953158,
        -7.8353712095884145, -3.513106638710994, -9.591694536052009,
        -25.283726226154414, -72.5971331525438, -219.8685340702529,
        -219.35042572397646, -77.64597170154943, -53.86435993126099,
        -21.52860711072962, -10.52910533038772, 3.290685040663801,
        -0.8686234113923152, 2.1096176983280075, 2.4401275335966615,
        -1.1293193043526162, -0.5175199959040564, -1.6488725749132833,
        -0.24616862215974425, -1.2370080984335483, 1.8968331338372646,
        -0.6834380273282822, -0.11126643861832354, -0.9955744417358692,
        -0.9716444260939339, -0.5384750525967466, 1.408171623377654,
        1.757965457581725, 3.6588840806054854, 3.730023177462626,
        2.1373375769283727, -3.0400482541159497, 1.047291915188283,
        0.3217312093221976, -32.5095105781366, -106.65962198554575,
        -133.199718985283, -319.98109193688754, -62.432091745036324,
        -132.60719521227176, -54.20464622802902, -43.37606456504613,
        -14.089884469834875, -13.705577255286062, 1.5019641274622118,
        6.283172414744585, -0.3654281917809468, 0.31341792844047633,
        -1.322629847641876, -0.8896424069841873, -1.5408441736495315,
        0.7106913323849381, 0.021861987241514846, 0.0266864396842654,
        -1.1035985643780957, -1.186145834536423, -1.082009036922065,
        -0.29997994657423205, 1.7050468427375622, 3.031311871551031,
        3.818478372445528, 5.99018951035957, 10.06839903515407,
        15.790153056071421, -3.1394961579745826, -5.539540701046052,
        -89.16606167421166, -137.3400244854728, -339.65571159114575,
        426.42488803140685, 53.55761472523432, 151.38668525810476,
        18.829394319190286, 0.2191548953235339, -63.1193716969694,
        -10.682010714916952, 7.104320348324818, -1.4514343357851665,
        2.0000864020848317, -1.0967346902818478, -0.3365257763598761,
        -2.5606009702294568, -0.07573905798135958, -0.6297575158660037,
        -0.1002153489582, 0.34443735246552043, -0.35567626693504045,
        -2.415121920322402, -0.9547463106025608, -0.5845484236474793,
        2.4591204313835524, 4.627971063973652, 7.219012562090432,
        10.8478141614737, 18.11321129812079, 35.095892631083665,
        23.22814892751946, -81.52765470923207, -75.49864673782862,
        -221.27599419248904, 203.12933548649244, 1583.8824730375886,
        1881.6935115818235, 969.7264693441334, 542.5554345851378,
        -19.428895667388197, -23.350930435925818, -2.7323622379307726,
        -20.048308524208668, 2.4299863370655803, 0.6739636481307644,
        -0.2827071358643783, -3.3794759874707645, -2.045542297172576,
        -2.6548043613806773, 1.248210330242034, -1.3645618319173671,
        0.787980910565676, -1.130442042783935, -3.353527458159282,
        -3.4782462601711517, 1.1480426683318268, 3.981818407600519,
        7.663932546815509, 13.09086576349318, 20.166794237424288,
        40.69792523135695, 58.67866216881051, 13.453603503282435,
        -69.37197156554245, -317.3445924618542, 242.65732454028887,
        833.1497046070945, 1814.4894639161919, 1707.4355014735293,
        1928.5847150696216, 464.93982303099165, 317.9618963149654,
        77.03951669454241, -94.40092928534638, -12.369503115173439,
        -4.593463303583724, 0.3877865067534687, -3.6019889835361467,
        -3.5521022242715157, -4.153516074061658, -1.987809621173597,
        -2.4480270844921423, 1.0231985430638744, -2.1386941287610495,
        -1.775656575203229, -0.07130922084720692, -0.28567330333819857,
        0.19099280196170093, 8.26345364163699, 9.562832886967872,
        18.72018651765216, 37.28614733218326, 72.7369402053908,
        71.66187990477839, -97.91247606120552, -380.4257804868011,
        -268.24846212420823, -349.6325533406899, 1058.8873901892528,
        -2087.2412865177334, 676.6343299851142, -1074.2990124084556,
        901.8697209507884, 786.9439339579222, -119.57179721034137,
        -50.57730616581321, -53.34828178316841, -11.529259915073451,
        -2.9920185974423683, -2.818990373202848, -5.044756942220179,
        -2.5445971528130604, -10.107544184404102, -4.9832600695276215,
        2.2636764639027978, 5.373740185152825, 0.20461611038107308,
        -3.6890839097334074, -1.119402655197085, 0.20770764759927202,
        6.770877333738589, 12.544755138678777, 25.25422264782682,
        57.14272356927944, 74.48955207450695, 82.56651716015759,
        -71.61068630950653, -537.4906442433507, -271.57679130866813,
        540.5764135125049, -2934.825085841371, -11955.36918869557,
        -14506.214536688902, -637.2265195104331, 204.04622542072232,
        142.43138300706894, 154.61175360170483, -106.41042136702355,
        -66.54358379132336, -35.88043741028101, 2.1360966686551617,
        -13.062832664150186, 0.8675699825474646, -12.950261495215663,
        0.6068089103450538, -17.40763581076148, 13.386771464725289,
        -0.8738635446220966, 1.6150967690552112, -14.54610105595846,
        -2.2874141051365076, -1.018274370244917, 12.902690844348964,
        20.382558491276768, 30.589238972650698, 63.12541650151129,
        68.53645210929236, 208.25011765184536, -277.4413124787215,
        295.01076934839597, -202.32180136863923, -2363.0865643328207,
        346.6070235945696, -16946.371225111554, -1299.266384884367,
        -4625.155413999856, -3868.3607546707453, 832.3851335439597,
        28.40638042173725, -119.64570653889508, -110.70270321520742,
        -29.59768820792175, -10.925693066643381, -9.916050792857169,
        -9.54913772669443, -18.949463773817815, -10.847407040619126,
        14.016932746732627, 8.830506972875813, 12.446635345723296,
        -18.9820147593783, -13.73839338407706, -10.939736173955323,
        20.777136166915735, 12.48897777935125, 25.36595623631853,
        8.196051793927062, 65.24914017226915, 42.28539321936699,
        206.10314812122587, -109.43221584453876, -109.26740577843286,
        1171.8258105148195, 1841.1630655848473, -11272.40087069649,
      ],
    },
  },
  right_eye_filter = {
    real: [
      1.8229079259010603, 0.09781049864858246, -0.5584009213724859,
      -0.9997046284235658, 0.18757876559092043, -0.8161769486311446,
      -0.17457078018685562, 0.1382218261307309, -0.13830885288846723,
      0.14088352498892928, -0.11242245121823281, 0.6419014453075046,
      -0.18081689212517704, 0.8475744542340304, -2.0367692338977426,
      2.3450651085370726, -3.222777163962479, 2.3450651085369945,
      -2.03676923389771, 0.8475744542340385, -0.18081689212518082,
      0.6419014453075054, -0.11242245121823641, 0.1408835249889417,
      -0.13830885288846723, 0.13822182613073003, -0.17457078018684977,
      -0.8161769486311367, 0.18757876559091927, -0.9997046284235627,
      -0.5584009213724851, 0.09781049864858132, -1.0960340088024074,
      -1.91191994525123, -2.409570266538848, -0.5516235280495324,
      -0.5050532801402159, -1.3068505835636635, -0.4943718744397559,
      0.23127204626685588, 0.0433507943550392, -0.07178740615443681,
      0.07085444983720594, 0.17221102955705567, 0.44602122877614064,
      0.0741482055919004, -0.015611524439393865, -0.7989672475729291,
      -0.6715596106043705, -0.49375784053273253, 0.028167647498424205,
      -0.3191891366103583, 0.5358217017440822, 0.20183473326047152,
      0.12710467168208503, -0.0714002635141921, 0.07456060444801779,
      -0.12451483496807111, 0.051358135035693774, -0.7728239811338444,
      -0.42160647485916963, -1.1311602269894514, -1.4625324828122208,
      0.3337871926813808, -1.77011609742092, -1.4302518240108344,
      -3.0428213499062116, -0.6063122548783355, -0.13683987631719793,
      -2.369242408538352, -0.34105804260324346, -0.2596965785205799,
      0.2361043379661986, -0.2768516857968317, 0.16986402710259335,
      0.073612585805397, 0.5770491101708912, -0.059867579479423505,
      0.5168021952817504, -1.0666730319382505, -0.005655209467068683,
      -0.7580993906074581, -0.06470132025004456, -0.19832318162238824,
      0.37732986906226257, 0.20777584924550152, 0.15451076629740465,
      -0.013991851319401968, 0.13841341497021592, -0.08688394903692853,
      0.2526142361971455, -1.199138513843388, -1.9867837341406693,
      -2.275962773839737, -3.1079150257531585, -2.3995834975192567,
      -2.293769234372572, -2.1872173045799017, -1.3988308931230504,
      -2.207395781381544, -1.9667941627002865, -1.6748432066635108,
      -0.9265077203256434, -0.0541972372500527, -0.18026213329416008,
      -0.15232124758200827, -0.016555865669302033, 0.31289505893870784,
      0.4280654296827472, 0.23124350286854853, -0.08736638276460744,
      -0.12552132795947232, -0.12547908619418155, -0.38089709050886683,
      -0.2844407665876804, -0.11944152964360766, 0.12056136689031131,
      0.21189843131890268, 0.1658159847015422, 0.13376820638890077,
      0.22205496825803592, 0.15120100371874812, 0.12380717441381156,
      -1.235259678432226, -2.222275911684921, -3.378285680998969,
      -3.415076124219421, -2.7282977589825297, -1.5576789730825455,
      -1.6478932560447972, -2.067907968457094, -2.004290735457912,
      -2.6427456963680775, -1.930947467983862, -0.16864865516592528,
      -0.22642518078963322, -0.13321306237600422, -0.20692971953006373,
      -0.068344938706069, 0.14493915164047724, 0.4650583247482101,
      0.32789481378377733, 0.1852927254910838, -0.1356638873386786,
      -0.03585192275390197, -0.17203834043005656, -0.15954900238018477,
      -0.05958171313143122, -0.017228379259871054, 0.12402459410135006,
      0.1524538089963059, 0.1627194606370896, 0.24817234249560427,
      0.26053579199245763, -0.04769125558408293, -0.8145999303179203,
      -2.074066074419681, -3.154489159895426, -2.9212825837849565,
      -2.40774190894317, -1.6411629435379833, -1.576697627349694,
      -1.8007661961299257, -2.0001525985045707, -1.5107274159689619,
      -1.2839600483166405, -0.631967111188135, 0.3107157406422172,
      -0.21370915949408273, -0.16393119308951343, -0.0974817040158397,
      0.13767875532837173, 0.23695911940697742, 0.3615877419673283,
      -0.0006696253821662316, -0.1026502520704758, -0.18176695609293456,
      -0.059120611570986824, -0.13702193484548986, -0.00735380131579763,
      0.020281061259494877, 0.1503250145998206, 0.16876214929227357,
      0.18780650312631536, 0.16308782299108887, 0.18583847563977354,
      0.4490729609236465, -0.020800703185301726, -1.4297091333258476,
      -2.4259185480628145, -2.4053777736536626, -1.982130703567588,
      -1.3372642957080885, -1.2989780551182537, -1.3731553217305845,
      -1.2269479805895975, -1.2032897772528626, -0.22206046284030648,
      -0.1841554828910981, -0.23415549346578352, 0.07793632568988745,
      -0.21633114300736572, -0.05944972221175794, 0.013318329293146938,
      0.2877543730088398, 0.21963323601338633, 0.16649953505637383,
      -0.18974789333555656, -0.1737958013223644, -0.23416130311702454,
      -0.13478379984035538, -0.13112027137758978, 0.033522350558872455,
      0.13259733500476653, 0.171380750952115, 0.15737574769334917,
      0.09247716245660553, 0.13448891283084696, 0.4116145942481744,
      0.35609170613712005, -0.5531644985020381, -1.540851379466907,
      -1.8005308506197801, -1.5719273509294158, -0.9404057795331605,
      -0.8389941648002093, -0.7733641692859126, -0.6656241101650995,
      -0.4002640865408188, -0.3675097145491356, 0.2414435659750552,
      -0.0656771881779108, -0.21341675767851534, -0.041369287190265204,
      -0.08740484292179958, 0.04460147122538273, 0.19583406251777175,
      0.1830038441344799, 0.012219595757112435, -0.034593273427629516,
      -0.14926486203867156, -0.036665364495836496, -0.1306231554860259,
      -0.08638162405193898, 0.0020423415177502173, 0.11239290885891448,
      0.12781279786870536, 0.10954302373131516, 0.14996801038078228,
      0.12965098836907352, 0.14324588543961356, 0.0567484033157079,
      -0.07934259271000402, -0.7714589827483544, -1.1705860882999304,
      -1.0754357146023004, -0.5463269466436349, -0.37732231762995055,
      -0.29185933229148303, -0.18245346577017127, -0.15252816280103537,
      0.00992307413149221, -0.05334501261419268, 0.10643359538216246,
      -0.06963530217299803, -0.20853401810086858, 0.03871878333386132,
      0.024793140061197767, 0.2221501854940542, 0.1909069391112047,
      0.13458393481660855, -0.1226120784542075, -0.06040684690366743,
      -0.08306038338398455, -0.0169256864349541, -0.03335293819594764,
      0.0564744224029561, 0.04873056181166667, 0.09209822163153716,
      0.13542751998114597, 0.15540921558269635, 0.10094403852684107,
      0.050489672984821425, 0.08984099886151299, 0.018445471788018183,
      -0.4428032483123847, -0.6455947552354269, -0.6412340959287646,
      -0.2557177936173176, -0.15489773108593363, -0.10375533557574061,
      -0.07401894727409025, -0.07402176527738832, -0.034956034554291714,
      0.06533170031918539, -0.07929977184739372, 0.03572542409731947,
      -0.10252861876832269, -0.22107962950770202, 0.20755848067860572,
      0.23157078159613848, 0.34013467279608883, 0.23914223921471078,
      0.04359196404412921, -0.20186945117744784, 0.04172561648658725,
      -0.038784831650455286, 0.07624815101935192, -0.060276976551200255,
      -0.0031358189183758184, 0.13054366560393055, 0.16122088670834137,
      0.12129220423951546, 0.06462405927184613, 0.06315363352353807,
      0.0368689547736123, 0.025599835220982206, -0.17872521900892777,
      -0.3757789408279771, -0.33418602947194676, -0.19087946198724595,
      -0.09243055938719592, -0.15843188266072916, -0.1178716916883143,
      -0.07983285707762743, -0.0384556097211695, 0.015668866487966955,
      0.005265676601997658, -0.12562510603385343, -0.024970842739258457,
      -0.030574039563531708, -0.21969881405226874, 0.5919138706078211,
      0.39965780946904006, 0.2262476397429311, 0.07714378169383113,
      0.07854251680850119, -0.0038697706067326258, 0.21858339549378,
      0.08387013381984681, -0.1914992924369444, 0.05367331518054547,
      0.22201073984886688, 0.16922848807595664, 0.12511007660405662,
      0.09511163485538424, 0.0841953956240581, 0.010195208908487656,
      -0.01658912331368151, -0.07692269919160621, -0.17023093289451025,
      -0.26998035777525775, -0.28189859430096476, -0.32749231042729776,
      -0.240474927671948, -0.27714150491609907, -0.16857870511456344,
      -0.056310601502134704, 0.026291702225850644, -0.028508101274427284,
      -0.06630706179098649, -0.27187198211633473, 0.06621925794626239,
      0.32825613521942065, -0.2130375838630078, 1.1917438602108388,
      0.2807025357241521, 0.23447144426975483, 0.1651152909709915,
      0.40113579910945835, 0.017152293761210982, -0.1450564820739392,
      0.13833755803781553, 0.2361453534315919, 0.16033553043559276,
      0.17442784770871, 0.17988585089228476, 0.143828955260344,
      0.07132752932041192, 0.016244981011210025, -0.013577696292888701,
      -0.024045478766089354, -0.11184718959298219, -0.1466657480521107,
      0.008087681789972736, -0.16842937423863127, -0.4354348937994489,
      -0.2997528685170986, -0.22753898297998879, -0.06903603291657966,
      0.014977564920406507, -0.02042087790603848, -0.13524198281736244,
      -0.1573938044754166, -0.3340126093430992, 0.46815371603113554,
      0.9302172976832263, -0.26733338229185055, 1.4166629302294091,
      0.6066447960893963, 0.3603810860087503, 0.4605515924213614,
      -0.32071019427276837, 0.15916183580862947, 0.5514216292911032,
      0.20419289205444074, 0.051921880744650394, 0.24679565757292954,
      0.2706202610478356, 0.15590400545853877, 0.08185944105119965,
      -0.04098023110727716, 0.019596242113331462, 0.09436442791977376,
      0.06527851980277598, -0.029838116901178446, 0.15435464918439099,
      -0.03938665594416125, -0.07779640601620462, -0.28158476919608044,
      -0.03311012802272485, 0.018548614200940845, 0.06704610765103773,
      -0.0442452017815352, -0.1525534131110006, -0.22929077462390082,
      -0.08530271071238826, -0.04930239368333223, 0.8574436846312782,
      1.8448220136861364, -0.6874455683197501, 1.810880881855317,
      0.6623703970370957, -0.31567909429421087, 0.8323221790747578,
      0.9786336592299799, 0.30994126117364096, -0.041163173314528664,
      0.17633262873947353, 0.23161854928102976, 0.2508770436670255,
      0.19868696729956423, 0.09356988769444988, 0.03236232444292232,
      -0.002750766613633768, 0.21821986304703905, 0.37880734420129814,
      0.40096920495374666, 0.9356115419306689, 0.6132603995532996,
      0.1638528799494483, 0.1009541629695858, 0.05660159184623324,
      0.15561323638878471, 0.07300029281297159, -0.005544245314691569,
      -0.13817032242271102, -0.11770539535407684, -0.09624545727844742,
      0.4644289412509608, 0.45587938373772585, 1.3432089992982477,
      2.5059762271849535, -0.9382969763987489, 0.6492144586928863,
      0.7978253203448007, 1.3025551528258366, 0.9417497410073223,
      0.0999214696597348, 0.2871278626692066, 0.1585368007924338,
      0.130717335778855, 0.17042917695126153, 0.1998644332453962,
      0.13725228360851915, 0.029723534135295476, 0.09814363533870286,
      0.19047751491127032, 0.4933533797343521, 0.7808930441209985,
      0.2968658742882804, 0.38131881367791126, 0.4064367365251492,
      0.19053499830856688, 0.20033550195294633, 0.13287714582076576,
      0.10533560171090586, 0.0008548789781538824, -0.04943529640626747,
      -0.08130941155497949, 0.05794771671040313, 0.48207744089263116,
      1.2538880645112733, 1.2204758332556214, 0.8779386387662574,
      1.8796293205435075, -0.45285576127696725, 2.2308682152547137,
      1.2382711063757557, -0.03520793699594507, 0.8817567227830668,
      0.5591603196165794, 0.18718127547628777, 0.01176467325227445,
      0.06874700659527258, 0.13522321325294812, 0.17151312046437606,
      0.10315365060575944, -0.0011239413451798732, 0.14993420590829387,
      0.3895911022808224, 0.3884586226441047, 0.6971673018273219,
      0.5180206439350141, 0.2883776700148891, 0.10583936790249669,
      0.0710166156702107, 0.16001776032454934, 0.10715662619027419,
      0.05618871675953212, -0.03582584015504452, 0.006146991796811139,
      0.08949387784356472, 0.68387295014826, 1.1016519558168656,
      1.3182383587355595, 0.6663538204015352, 0.5486367363209722,
      4.054777023104894, 0.5486367363209715, 0.6663538204015342,
      1.3182383587355562, 1.101651955816866, 0.6838729501482614,
      0.08949387784356506, 0.006146991796810629, -0.03582584015504452,
      0.05618871675953043, 0.10715662619027334, 0.16001776032454856,
      0.07101661567021002, 0.10583936790249539, 0.2883776700148883,
      0.5180206439350135, 0.2968658742883096, 0.388458622644122,
      0.38959110228084654, 0.14993420590831108, -0.001123941345177488,
      0.10315365060576374, 0.17151312046437922, 0.13522321325295103,
      0.06874700659527355, 0.011764673252275867, 0.18718127547628682,
      0.5591603196165779, 0.881756722783062, -0.035207936995944634,
      1.2382711063757532, 2.2308682152547106, -0.45285576127696175,
      1.8796293205435037, 0.8779386387662579, 1.2204758332556218,
      1.2538880645112747, 0.4820774408926327, 0.05794771671040518,
      -0.08130941155497955, -0.04943529640626837, 0.0008548789781495917,
      0.10533560171090255, 0.132877145820761, 0.20033550195294705,
      0.19053499830855697, 0.40643673652513423, 0.38131881367792647,
      0.9356115419306881, 0.7808930441210271, 0.49335337973436416,
      0.1904775149112758, 0.0981436353387047, 0.029723534135297252,
      0.13725228360851988, 0.19986443324539666, 0.17042917695126267,
      0.13071733577885625, 0.15853680079243432, 0.28712786266920415,
      0.09992146965973223, 0.9417497410073171, 1.3025551528258328,
      0.7978253203448017, 0.6492144586928862, -0.9382969763987445,
      2.505976227184955, 1.3432089992982421, 0.45587938373772335,
      0.46442894125096235, -0.09624545727844717, -0.11770539535407766,
      -0.13817032242271216, -0.005544245314694519, 0.07300029281296944,
      0.1556132363887834, 0.05660159184623321, 0.10095416296958591,
      0.16385287994945555, 0.613260399553306, 0.15435464918440814,
      0.40096920495376004, 0.37880734420131523, 0.218219863047049,
      -0.0027507666136306606, 0.03236232444292454, 0.09356988769444934,
      0.19868696729956342, 0.2508770436670255, 0.2316185492810306,
      0.17633262873947425, -0.041163173314526666, 0.30994126117363635,
      0.9786336592299767, 0.8323221790747578, -0.3156790942942159,
      0.662370397037097, 1.810880881855315, -0.6874455683197483,
      1.8448220136861369, 0.8574436846312773, -0.0493023936833296,
      -0.08530271071238829, -0.2292907746239018, -0.15255341311100187,
      -0.04424520178153933, 0.0670461076510356, 0.018548614200940294,
      -0.03311012802272051, -0.2815847691960758, -0.07779640601620005,
      -0.039386655944146774, 0.008087681789976134, -0.02983811690117316,
      0.0652785198027806, 0.09436442791977824, 0.019596242113334855,
      -0.04098023110727665, 0.08185944105119855, 0.15590400545853553,
      0.2706202610478356, 0.24679565757292907, 0.05192188074465168,
      0.20419289205443947, 0.5514216292910992, 0.15916183580862936,
      -0.3207101942727711, 0.46055159242136157, 0.36038108600874996,
      0.606644796089398, 1.416662930229405, -0.2673333822918505,
      0.9302172976832263, 0.4681537160311345, -0.3340126093430979,
      -0.1573938044754171, -0.13524198281736302, -0.02042087790604074,
      0.014977564920405115, -0.06903603291657855, -0.2275389829799863,
      -0.29975286851709465, -0.4354348937994427, -0.16842937423862725,
      -0.28189859430095965, -0.1466657480521052, -0.1118471895929717,
      -0.024045478766081197, -0.01357769629288397, 0.01624498101121273,
      0.07132752932040962, 0.14382895526034015, 0.1798858508922834,
      0.17442784770871067, 0.16033553043559218, 0.23614535343159299,
      0.13833755803781575, -0.14505648207394348, 0.01715229376121234,
      0.40113579910946, 0.16511529097099317, 0.23447144426975502,
      0.2807025357241538, 1.1917438602108381, -0.21303758386300692,
      0.3282561352194251, 0.06621925794626213, -0.2718719821163353,
      -0.06630706179098739, -0.028508101274429792, 0.026291702225849072,
      -0.056310601502134, -0.1685787051145608, -0.27714150491609657,
      -0.24047492767194564, -0.3274923104272947, -0.19087946198724157,
      -0.2699803577752515, -0.17023093289450597, -0.07692269919160243,
      -0.016589123313677224, 0.01019520890848913, 0.08419539562405712,
      0.09511163485538146, 0.12511007660405613, 0.1692284880759545,
      0.22201073984886613, 0.053673315180547035, -0.19149929243694658,
      0.08387013381984704, 0.21858339549377928, -0.0038697706067313737,
      0.0785425168085006, 0.07714378169383322, 0.2262476397429297,
      0.3996578094690411, 0.5919138706078217, -0.21969881405226852,
      -0.0305740395635305, -0.024970842739259945, -0.1256251060338537,
      0.005265676601996701, 0.015668866487966397, -0.038455609721168606,
      -0.07983285707762636, -0.11787169168831266, -0.15843188266072725,
      -0.09243055938719412, -0.25571779361731145, -0.33418602947193976,
      -0.3757789408279684, -0.17872521900892277, 0.025599835220983438,
      0.0368689547736149, 0.0631536335235363, 0.06462405927184454,
      0.12129220423951372, 0.1612208867083402, 0.1305436656039314,
      -0.003135818918377517, -0.060276976551199596, 0.07624815101935135,
      -0.03878483165045592, 0.04172561648658526, -0.20186945117744698,
      0.043591964044126186, 0.23914223921470992, 0.3401346727960877,
      0.23157078159613964, 0.20755848067860685, -0.22107962950770196,
      -0.1025286187683216, 0.03572542409731814, -0.07929977184739355,
      0.06533170031918509, -0.034956034554288036, -0.07402176527738524,
      -0.07401894727408691, -0.10375533557573537, -0.15489773108592672,
      -0.5463269466436349, -0.641234095928764, -0.6455947552354269,
      -0.44280324831238616, 0.018445471788017767, 0.08984099886151031,
      0.05048967298482026, 0.10094403852683856, 0.15540921558269635,
      0.13542751998114574, 0.09209822163153619, 0.04873056181166658,
      0.056474422402955825, -0.03335293819594981, -0.01692568643495722,
      -0.08306038338399054, -0.06040684690366743, -0.1226120784542102,
      0.13458393481660744, 0.19090693911120402, 0.22215018549405383,
      0.02479314006119874, 0.038718783333861403, -0.20853401810086775,
      -0.06963530217299803, 0.1064335953821621, -0.05334501261419192,
      0.00992307413149367, -0.15252816280103507, -0.1824534657701707,
      -0.291859332291483, -0.3773223176299495, -0.9404057795331534,
      -1.0754357146022915, -1.1705860882999222, -0.7714589827483473,
      -0.07934259271000449, 0.05674840331570382, 0.14324588543960787,
      0.12965098836906794, 0.14996801038078103, 0.10954302373131049,
      0.12781279786870486, 0.11239290885891398, 0.002042341517751725,
      -0.08638162405194173, -0.13062315548602732, -0.03666536449584196,
      -0.149264862038672, -0.03459327342763485, 0.012219595757109143,
      0.18300384413447635, 0.1958340625177715, 0.0446014712253844,
      -0.08740484292179726, -0.04136928719026287, -0.21341675767851565,
      -0.0656771881779069, 0.24144356597505726, -0.36750971454912684,
      -0.40026408654081164, -0.6656241101650917, -0.7733641692859056,
      -0.8389941648002021, -1.3372642957080858, -1.5719273509294132,
      -1.8005308506197781, -1.5408513794669076, -0.5531644985020383,
      0.3560917061371113, 0.4116145942481696, 0.1344889128308404,
      0.09247716245660478, 0.1573757476933456, 0.17138075095211283,
      0.1325973350047658, 0.03352235055887238, -0.13112027137759125,
      -0.13478379984035713, -0.23416130311702804, -0.1737958013223642,
      -0.18974789333555622, 0.16649953505637016, 0.21963323601338522,
      0.28775437300883855, 0.013318329293152468, -0.05944972221175441,
      -0.21633114300735917, 0.07793632568988698, -0.2341554934657765,
      -0.18415548289109335, -0.2220604628402971, -1.203289777252857,
      -1.2269479805895944, -1.3731553217305832, -1.2989780551182524,
      -1.64116294353798, -1.9821307035675826, -2.4053777736536572,
      -2.4259185480628087, -1.4297091333258454, -0.020800703185307738,
      0.44907296092364196, 0.1858384756397643, 0.16308782299108818,
      0.18780650312631128, 0.1687621492922723, 0.15032501459981898,
      0.020281061259495404, -0.007353801315796421, -0.13702193484548603,
      -0.059120611570979247, -0.18176695609293375, -0.10265025207047287,
      -0.0006696253821684415, 0.3615877419673271, 0.2369591194069768,
      0.13767875532837892, -0.09748170401583293, -0.1639311930895031,
      -0.2137091594940832, 0.3107157406422304, -0.6319671111881267,
      -1.283960048316625, -1.5107274159689543, -2.0001525985045667,
      -1.800766196129921, -1.5766976273496909, -1.557678973082544,
      -2.4077419089431698, -2.921282583784955, -3.1544891598954266,
      -2.074066074419682, -0.8145999303179303, -0.04769125558408684,
      0.26053579199245114, 0.24817234249560396, 0.16271946063708537,
      0.1524538089963024, 0.12402459410134949, -0.017228379259870755,
      -0.05958171313142866, -0.15954900238017725, -0.17203834043004781,
      -0.03585192275390215, -0.13566388733867182, 0.1852927254910774,
      0.32789481378377766, 0.4650583247482103, 0.14493915164048596,
      -0.06834493870606016, -0.20692971953005135, -0.13321306237600447,
      -0.22642518078961474, -0.16864865516591712, -1.9309474679838514,
      -2.6427456963680735, -2.0042907354579094, -2.067907968457093,
      -1.6478932560447959, -2.2937692343725686, -2.7282977589825266,
      -3.4150761242194196, -3.378285680998969, -2.222275911684919,
      -1.2352596784322352, 0.12380717441380877, 0.15120100371873849,
      0.22205496825803597, 0.13376820638889372, 0.16581598470153905,
      0.21189843131890046, 0.1205613668903118, -0.11944152964360859,
      -0.2844407665876833, -0.3808970905088692, -0.1254790861941803,
      -0.12552132795948226, -0.08736638276460633, 0.2312435028685467,
      0.42806542968274885, 0.31289505893871633, -0.016555865669298363,
      -0.15232124758199445, -0.18026213329416074, -0.054197237250036744,
      -0.9265077203256314, -1.6748432066634964, -1.966794162700286,
      -2.2073957813815404, -1.3988308931230464, -2.187217304579897,
      -1.7701160974209202, -2.3995834975192563, -3.1079150257531603,
      -2.2759627738397428, -1.9867837341406698, -1.1991385138433992,
      0.25261423619714135, -0.08688394903694385, 0.13841341497021575,
      -0.013991851319408978, 0.15451076629740176, 0.20777584924549833,
      0.37732986906226257, -0.1983231816223982, -0.06470132025005006,
      -0.7580993906075129, -0.005655209467068792, -1.0666730319382445,
      0.5168021952817432, -0.05986757947942188, 0.5770491101708914,
      0.07361258580540825, 0.16986402710259826, -0.27685168579682035,
      0.23610433796619823, -0.25969657852055217, -0.3410580426032341,
      -2.3692424085383355, -0.13683987631719494, -0.6063122548783239,
      -3.0428213499062093, -1.4302518240108333, -1.0960340088024054,
      0.33378719268138207, -1.462532482812221, -1.1311602269894572,
      -0.42160647485916913, -0.7728239811338516, 0.051358135035689895,
      -0.12451483496808054, 0.07456060444801794, -0.0714002635141984,
      0.12710467168208478, 0.20183473326046905, 0.5358217017440833,
      -0.3191891366103783, 0.028167647498415164, -0.4937578405327754,
      -0.671559610604369, -0.7989672475729755, -0.01561152443937639,
      0.07414820559189893, 0.44602122877613765, 0.17221102955705844,
      0.07085444983721219, -0.07178740615442418, 0.04335079435503895,
      0.23127204626685866, -0.49437187443974595, -1.3068505835636535,
      -0.5050532801402167, -0.5516235280495194, -2.409570266538846,
      -1.9119199452512292,
    ],
    bottom: {
      real: [
        4046.4241509904555, 28839.973879370627, 10191.512031448321,
        4381.745580729326, 2071.954841391502, 1107.282586745483,
        528.3455155315031, 308.973302997304, 185.81061014820492,
        130.08108126519062, 87.65365496956511, 59.09553675383809,
        43.5062694558484, 34.57522231168169, 30.79809745290528,
        25.523061346781674, 25.951646714603154, 25.52306134678159,
        30.79809745290521, 34.575222311681706, 43.50626945584836,
        59.09553675383802, 87.65365496956517, 130.08108126519082,
        185.81061014820492, 308.9733029973038, 528.3455155315033,
        1107.2825867454833, 2071.954841391503, 4381.745580729332,
        10191.512031448323, 28839.973879370646, 13493.224333003216,
        16392.51995145616, 4871.835388507577, 1571.3337493887716,
        567.6409664515353, 373.6703632325283, 244.24660034041102,
        142.79597933554817, 106.13580676907658, 75.85834762271053,
        58.06132256419008, 39.85453847302155, 30.569538051408923,
        25.094853941398878, 22.929757321982656, 20.808198660555963,
        22.04888812794956, 23.622937534136554, 29.13868315116802,
        38.08298107447914, 54.39934218587819, 77.82662149201184,
        121.61239162949131, 177.63416429867098, 254.30481783551838,
        430.47940336338183, 664.6352580903059, 1219.8477670929726,
        1935.5749815900854, 3358.0980991141623, 6069.217591691605,
        8660.703929170162, 15384.540019848313, 11175.737303494303,
        2216.879483433469, 674.5985908630485, 308.5763093759745,
        222.13525013253278, 144.62539946693838, 89.35178904734964,
        66.20028378403181, 53.5880480094322, 38.10483512466045,
        27.11271894406526, 23.0333116325101, 19.85886354561889,
        19.408029208714364, 19.38215160767772, 20.87171121755368,
        24.726583224259915, 29.429525390428484, 39.688247321389746,
        54.02667736866649, 71.50918951653236, 109.7023701375058,
        145.30501493896827, 183.8476594317636, 237.38092500065588,
        353.51632607639505, 531.2703272946572, 719.1706536370991,
        1367.9024800373177, 2857.732229334478, 8625.014975132006,
        3926.861100346452, 2444.3527388912776, 1028.8359899085383,
        585.5616655429562, 332.57137935864864, 180.13762334769046,
        105.17011934648103, 61.496465220623485, 45.504823244138095,
        37.90846017249317, 30.846794326525625, 21.222093075405745,
        18.718288087401802, 17.679602313216872, 17.409839934721365,
        17.794391783727544, 18.55926931620083, 21.34840958130715,
        24.39997962145603, 30.767061622228063, 38.103008129659166,
        44.81251118779231, 61.577721983396955, 87.29148588450872,
        106.99539363556599, 134.18057082099898, 169.37440787587974,
        269.99443977661724, 364.5624879914471, 674.5083954608231,
        1521.022929703357, 2634.7343778883865, 2024.849011267275,
        1926.8239401023498, 1491.9478410044117, 611.8362791883309,
        316.43682665588744, 155.99683828976544, 89.67337986475002,
        50.013293885425135, 37.52800970717606, 32.4518569290627,
        24.96614670350918, 19.130394004010906, 15.343856356149828,
        14.843145659919786, 14.861292517540363, 15.036681247518919,
        15.312687438440403, 17.138709070816013, 19.446116741695533,
        22.850207518010233, 27.457440287528367, 32.58150530830809,
        40.985078317877736, 54.412823137373685, 75.7624376442659,
        94.73305934658734, 128.1467358253355, 182.29010502256293,
        275.9549807303486, 527.3269557849401, 1132.5867520786235,
        1866.4077869841046, 2266.7457843108455, 2107.849516989544,
        1234.6592459623437, 673.7095428348114, 266.6693703142779,
        139.47307538222793, 66.73073111331448, 41.917980917088734,
        31.2590211502941, 26.786032891522527, 20.35627716260823,
        16.038244917569745, 14.499148814332527, 13.459360575928033,
        13.144389071570192, 12.567429683418663, 12.230328765246885,
        13.466217665828195, 15.328301760046475, 17.144679989146308,
        19.68756841312236, 24.07413404470534, 32.72703461228699,
        43.026808431859955, 59.19377390623037, 78.82051256303095,
        92.99417854470647, 120.42091176843755, 201.9182636225097,
        436.44287859172925, 877.8862778005057, 1439.6385876846614,
        1649.991139346905, 1699.4038415062987, 1039.2560892520887,
        495.5166152968933, 235.81544665938515, 113.58561083280532,
        60.921551746622946, 35.725757089786256, 25.024628727892466,
        22.490208420088727, 17.75982379192019, 13.543616943986416,
        12.938917306264663, 11.956364952724385, 11.421939705679733,
        11.372903592178258, 11.032765269291394, 11.408229662647633,
        12.481114469594095, 13.60275540468532, 14.91952183557448,
        17.807798659576154, 23.277252196336814, 31.950664619854233,
        47.416694920263616, 56.268912844615144, 64.959626427587,
        85.07080953900385, 130.82046704446515, 257.6757193526242,
        627.4672126329166, 1194.1693767483914, 1080.1900960853154,
        902.674413704009, 600.0405579473822, 333.23520458042, 166.5653831933532,
        88.94630554757107, 50.71739323274513, 31.897215329939996,
        23.060146944216118, 18.57978056254417, 15.572760511446054,
        13.273777678692191, 12.224913053368416, 11.68638594982613,
        10.392044527527784, 10.422646713468026, 10.113778554702394,
        10.225072497047023, 10.776357928238541, 11.471833692521193,
        12.585855785544721, 15.131216045563061, 18.856673404562432,
        24.858220592568422, 32.65728080220338, 43.03798769624031,
        51.536289299313914, 59.08796022590117, 89.41884663641925,
        168.4478105078281, 382.14409608709747, 745.2779764237599,
        544.9352379585605, 546.6325594355021, 362.69938393816085,
        222.4530875664997, 124.7835476428534, 69.15551045543614,
        41.705006957506896, 26.952419331651356, 19.77855541151112,
        17.743475715717917, 14.471795156401063, 12.765457059373892,
        11.899864411981882, 10.85818004844373, 10.325708895539952,
        9.569271974525638, 9.211348082086339, 9.068032997029013,
        9.773443256037565, 10.488284402310196, 11.32319714067481,
        13.23504887223821, 16.674941080314653, 20.771526297093455,
        27.56941781857049, 33.10306848160457, 37.13160941522371,
        47.9647604307364, 66.57881750760357, 119.94841754808802,
        237.18123750436465, 409.50889944188236, 307.01018353832677,
        288.6676029163843, 236.16368190120858, 154.32114106589464,
        92.30377324569548, 55.468009578938926, 35.843010431224045,
        24.692475316947775, 18.31794202383119, 15.815283825259236,
        13.970653175227845, 12.321358605090134, 11.166914874614415,
        10.532076178141539, 9.973858270077274, 9.439553232293433,
        8.852477993151703, 8.596032516390286, 8.723315099425728,
        9.460546505870271, 10.702831587760128, 11.695932356823622,
        14.406509159208545, 18.893042693096525, 25.031728162044864,
        28.237283751764654, 32.11015444012318, 38.78178298956029,
        56.41249717617234, 92.1569459348398, 157.10935603874077,
        244.2492508143064, 218.20881258539546, 216.90433976724358,
        169.13695858014356, 112.62100758585845, 68.70530790516959,
        45.982361360241526, 32.725373555898344, 22.221572369125827,
        17.135020014783734, 14.281960328360523, 12.699315839076576,
        11.637118060780567, 11.004832210877884, 10.393382355075936,
        9.625960216653379, 8.765201384599987, 8.56501202823621,
        8.585447651774187, 8.185151868753188, 9.127087262857684,
        9.83839770401408, 11.693775785132257, 13.287947209975439,
        16.544820171465705, 21.672488061489553, 27.762087103200397,
        29.796933806391767, 35.44318849026896, 51.826480475596476,
        76.69213661877438, 114.45554660359461, 172.81330831382385,
        150.57608076172548, 151.07347077509746, 119.80060075739978,
        84.30708089677061, 55.59442395215062, 38.954469932130465,
        27.855857296119165, 21.147383956632677, 16.095362427853317,
        14.114901096214023, 12.272097096384341, 11.279235865220194,
        10.45557624282722, 10.21340372397941, 9.435254000412767,
        9.059591562681522, 8.428576772270588, 8.218967691673965,
        8.248320783896837, 8.727213385180734, 9.38534177467142,
        10.436988631508529, 11.737372360714012, 14.160123000210135,
        18.9595792421897, 24.173697545434358, 27.627516713161423,
        33.591531685669004, 45.29743998493664, 65.89753949730466,
        88.61094452128638, 122.51594786973793, 102.9717174324289,
        99.77114417163114, 80.2546364501959, 61.009511746666256,
        44.78691291380718, 34.27102450032318, 25.65851527359349,
        19.184194785168692, 15.369946764821139, 13.384363033613122,
        12.174478369218367, 10.905903566261369, 10.181651684644681,
        9.640875595253302, 9.574230453297359, 8.97633087224121,
        8.549303268806982, 8.064448476431524, 8.427686598834292,
        8.72909633979811, 9.121092688430965, 10.045472592156113,
        11.11042960636143, 12.723025686618605, 15.905816263070196,
        20.70949104573221, 24.791931496783274, 30.865414152401307,
        41.83571418562319, 55.039237230593706, 69.94725096238655,
        86.30565695416685, 70.24607741665449, 70.16319096773124,
        60.94158545735483, 46.98868155158853, 37.426824229947464,
        31.10511465478153, 24.71795750943227, 18.191253220796238,
        14.40571246916225, 12.794837539520243, 11.45286867499644,
        10.555233980671725, 10.138595490186225, 9.761793932644013,
        9.29451140670217, 9.19785195708974, 8.526970468266507,
        8.369498694773359, 8.390085060120985, 8.901978011001628,
        9.499322405169718, 10.189344774081897, 11.038776504531349,
        12.139382952337165, 14.296273465828305, 18.325479810549485,
        23.245126565071455, 28.658675517780157, 38.227879918404916,
        50.026933715114076, 59.913478880080035, 67.14288472835021,
        60.67320096274469, 56.006191670589025, 48.95238380733793,
        41.87728990082497, 35.56375265114289, 29.381802508508265,
        23.323351055229473, 18.385352146785323, 14.386074460433269,
        11.971768024825069, 10.813949701229296, 10.104265892334448,
        9.787383736052597, 9.787645018242003, 9.37365706088819,
        9.106783751430337, 8.878274256847538, 8.410860465515668,
        8.514529191196903, 9.144463863378933, 9.590368756917496,
        10.050972673200409, 10.599176866339214, 12.029252308933458,
        13.885440808202775, 16.9338405396521, 20.94976745380013,
        27.39267044577291, 35.24694581160402, 44.844494652773115,
        53.52792012053346, 59.51190645761453, 53.048047546158344,
        49.66790259120493, 45.161821768091436, 39.040569237963304,
        34.15349837076654, 28.812200326236947, 21.915204963295363,
        16.82529154292102, 14.19448100676546, 11.707465544074312,
        10.438485210613589, 9.815124564873926, 9.283134914271356,
        9.082142057825001, 9.047050535951438, 9.09240899822194,
        8.846694431391352, 8.473593906264338, 8.498070251525021,
        9.011344572210785, 9.28987103872928, 9.957567886683233,
        10.426127211956205, 11.223822839806607, 13.77325124182781,
        16.688691177663944, 20.746301629724744, 26.320191080313084,
        33.9798684365786, 42.0788988747152, 48.313306819757166,
        52.481937610238305, 49.070609767594966, 49.766679020971374,
        46.54427285231858, 40.229040805773415, 32.55983963778149,
        26.180018982316895, 21.083604085221012, 16.97356072267355,
        13.301411970448795, 11.264067238060504, 10.255581922596939,
        9.653621368211203, 9.215377406296422, 8.746811076118282,
        8.435654271837505, 8.73238467436222, 8.845859907838124,
        8.73238467436222, 8.435654271837503, 8.74681107611829,
        9.215377406296428, 9.653621368211212, 10.255581922596944,
        11.264067238060512, 13.301411970448795, 16.973560722673543,
        21.08360408522101, 26.18001898231688, 32.559839637781494,
        40.22904080577338, 46.54427285231857, 49.76667902097133,
        53.048047546158344, 52.4819376102382, 48.31330681975705,
        42.0788988747152, 33.97986843657858, 26.320191080313087,
        20.746301629724748, 16.68869117766396, 13.773251241827822,
        11.22382283980661, 10.426127211956201, 9.957567886683226,
        9.289871038729279, 9.011344572210792, 8.498070251525027,
        8.473593906264336, 8.84669443139135, 9.092408998221947,
        9.04705053595144, 9.082142057825006, 9.283134914271354,
        9.815124564873928, 10.438485210613582, 11.707465544074319,
        14.19448100676546, 16.825291542921, 21.915204963295366,
        28.81220032623694, 34.15349837076655, 39.04056923796328,
        45.16182176809137, 49.667902591205, 60.67320096274468,
        59.51190645761457, 53.5279201205334, 44.84449465277307,
        35.24694581160401, 27.392670445772925, 20.949767453800135,
        16.933840539652095, 13.88544080820277, 12.029252308933453,
        10.599176866339214, 10.0509726732004, 9.590368756917488,
        9.144463863378933, 8.51452919119691, 8.410860465515672,
        8.878274256847535, 9.106783751430338, 9.373657060888185,
        9.787645018242001, 9.787383736052602, 10.10426589233446,
        10.813949701229305, 11.971768024825074, 14.386074460433273,
        18.385352146785333, 23.323351055229466, 29.38180250850825,
        35.56375265114288, 41.87728990082496, 48.952383807337874,
        56.00619167058891, 70.24607741665429, 67.14288472835011,
        59.913478880079964, 50.02693371511406, 38.22787991840492,
        28.65867551778019, 23.24512656507147, 18.325479810549478,
        14.296273465828305, 12.139382952337156, 11.038776504531354,
        10.189344774081897, 9.499322405169723, 8.901978011001633,
        8.390085060120985, 8.369498694773357, 8.526970468266507,
        9.197851957089739, 9.294511406702163, 9.761793932644014,
        10.138595490186225, 10.555233980671725, 11.452868674996441,
        12.794837539520238, 14.405712469162248, 18.19125322079625,
        24.717957509432264, 31.105114654781534, 37.42682422994745,
        46.98868155158849, 60.941585457354776, 70.16319096773115,
        102.97171743242879, 86.3056569541668, 69.94725096238649,
        55.039237230593784, 41.83571418562317, 30.865414152401325,
        24.791931496783278, 20.709491045732214, 15.905816263070196,
        12.723025686618604, 11.110429606361421, 10.045472592156107,
        9.121092688430974, 8.729096339798112, 8.427686598834294,
        8.064448476431526, 8.549303268806982, 8.976330872241213,
        9.574230453297362, 9.640875595253306, 10.181651684644681,
        10.905903566261369, 12.174478369218367, 13.384363033613125,
        15.369946764821144, 19.18419478516869, 25.658515273593498,
        34.27102450032314, 44.78691291380715, 61.00951174666618,
        80.25463645019579, 99.77114417163101, 150.57608076172505,
        122.51594786973776, 88.61094452128623, 65.89753949730463,
        45.297439984936574, 33.591531685669025, 27.627516713161402,
        24.173697545434354, 18.9595792421897, 14.160123000210131,
        11.737372360714007, 10.436988631508525, 9.385341774671417,
        8.727213385180733, 8.248320783896826, 8.218967691673969,
        8.42857677227059, 9.05959156268152, 9.435254000412765,
        10.213403723979411, 10.455576242827226, 11.27923586522019,
        12.272097096384336, 14.114901096214016, 16.09536242785333,
        21.1473839566327, 27.85585729611916, 38.95446993213041,
        55.594423952150585, 84.30708089677043, 119.80060075739968,
        151.0734707750972, 218.20881258539524, 172.81330831382382,
        114.45554660359451, 76.69213661877443, 51.82648047559643,
        35.44318849026896, 29.796933806391745, 27.762087103200372,
        21.67248806148955, 16.544820171465698, 13.287947209975444,
        11.693775785132251, 9.838397704014087, 9.127087262857684,
        8.18515186875319, 8.58544765177418, 8.565012028236207,
        8.765201384599994, 9.625960216653379, 10.393382355075921,
        11.004832210877884, 11.637118060780562, 12.699315839076572,
        14.281960328360505, 17.13502001478374, 22.221572369125806,
        32.72537355589832, 45.98236136024148, 68.70530790516956,
        112.62100758585837, 169.13695858014344, 216.90433976724287,
        307.01018353832563, 244.24925081430612, 157.1093560387404,
        92.15694593483975, 56.412497176172316, 38.7817829895603,
        32.11015444012317, 28.237283751764654, 25.031728162044857,
        18.893042693096504, 14.406509159208543, 11.695932356823613,
        10.702831587760132, 9.460546505870267, 8.72331509942572,
        8.596032516390284, 8.852477993151705, 9.439553232293427,
        9.973858270077281, 10.53207617814155, 11.166914874614413,
        12.321358605090143, 13.970653175227838, 15.815283825259229,
        18.317942023831186, 24.692475316947778, 35.84301043122402,
        55.46800957893881, 92.30377324569537, 154.32114106589427,
        236.1636819012079, 288.66760291638354, 544.9352379585605,
        409.5088994418828, 237.18123750436465, 119.9484175480882,
        66.57881750760357, 47.964760430736455, 37.13160941522369,
        33.10306848160456, 27.56941781857049, 20.771526297093434,
        16.674941080314646, 13.235048872238199, 11.323197140674804,
        10.488284402310184, 9.773443256037565, 9.068032997029011,
        9.211348082086339, 9.569271974525646, 10.325708895539957,
        10.85818004844373, 11.899864411981884, 12.765457059373892,
        14.471795156401072, 17.743475715717903, 19.77855541151112,
        26.952419331651342, 41.70500695750688, 69.15551045543599,
        124.7835476428534, 222.45308756649936, 362.6993839381608,
        546.6325594355021, 1080.190096085312, 745.2779764237579,
        382.1440960870959, 168.44781050782805, 89.41884663641922,
        59.087960225901135, 51.53628929931389, 43.03798769624031,
        32.657280802203374, 24.858220592568383, 18.8566734045624,
        15.131216045563052, 12.585855785544725, 11.471833692521184,
        10.776357928238532, 10.22507249704702, 10.113778554702403,
        10.422646713468026, 10.39204452752778, 11.686385949826136,
        12.224913053368411, 13.273777678692191, 15.572760511446033,
        18.57978056254414, 23.06014694421612, 31.897215329939918,
        50.717393232745025, 88.94630554757079, 166.56538319335294,
        333.23520458041884, 600.0405579473809, 902.6744137040065,
        1649.9911393469013, 1194.1693767483896, 627.4672126329157,
        257.67571935262464, 130.82046704446515, 85.0708095390039,
        64.95962642758694, 56.2689128446152, 47.416694920263595,
        31.950664619854226, 23.277252196336782, 17.807798659576147,
        14.919521835574468, 13.60275540468532, 12.48111446959408,
        11.408229662647638, 11.032765269291394, 11.37290359217827,
        11.42193970567975, 11.956364952724407, 12.938917306264656,
        13.543616943986398, 17.75982379192014, 22.490208420088635,
        25.024628727892473, 35.72575708978623, 60.92155174662291,
        113.58561083280503, 235.81544665938503, 495.516615296892,
        1039.2560892520876, 1699.403841506296, 2266.7457843108423,
        1439.6385876846614, 877.8862778005042, 436.4428785917297,
        201.91826362250967, 120.42091176843758, 92.99417854470644,
        78.82051256303102, 59.19377390623031, 43.02680843185989,
        32.72703461228695, 24.074134044705318, 19.68756841312234,
        17.1446799891463, 15.32830176004647, 13.466217665828177,
        12.230328765246888, 12.567429683418707, 13.144389071570203,
        13.459360575928054, 14.499148814332536, 16.03824491756973,
        20.356277162608194, 26.786032891522385, 31.259021150294068,
        41.91798091708869, 66.7307311133144, 139.47307538222745,
        266.6693703142776, 673.7095428348102, 1234.659245962343,
        2107.8495169895405, 2024.849011267276, 1866.4077869841062,
        1132.5867520786235, 527.3269557849405, 275.9549807303485,
        182.29010502256293, 128.14673582533564, 94.7330593465875,
        75.76243764426589, 54.41282313737368, 40.98507831787773,
        32.58150530830807, 27.457440287528364, 22.85020751801021,
        19.446116741695526, 17.13870907081601, 15.312687438440404,
        15.036681247518965, 14.861292517540395, 14.843145659919811,
        15.343856356149836, 19.130394004010878, 24.966146703509185,
        32.45185692906261, 37.528009707176075, 50.013293885425036,
        89.67337986474986, 155.9968382897651, 316.4368266558874,
        611.8362791883301, 1491.9478410044112, 1926.8239401023493,
        3926.8611003464503, 2634.734377888386, 1521.0229297033557,
        674.508395460824, 364.56248799144686, 269.9944397766174,
        169.37440787587963, 134.18057082099915, 106.99539363556599,
        87.2914858845087, 61.577721983396906, 44.81251118779232,
        38.103008129659166, 30.767061622228066, 24.399979621456033,
        21.348409581307155, 18.55926931620083, 17.794391783727576,
        17.409839934721397, 17.67960231321689, 18.71828808740179,
        21.222093075405763, 30.846794326525586, 37.90846017249308,
        45.504823244138095, 61.496465220623335, 105.17011934648093,
        180.13762334768973, 332.5713793586485, 585.5616655429553,
        1028.835989908537, 2444.352738891274, 15384.54001984831,
        8625.01497513201, 2857.732229334476, 1367.90248003732,
        719.1706536370989, 531.2703272946578, 353.516326076395,
        237.38092500065625, 183.84765943176362, 145.3050149389683,
        109.70237013750581, 71.50918951653222, 54.02667736866647,
        39.68824732138969, 29.429525390428473, 24.726583224260004,
        20.871711217553678, 19.38215160767773, 19.408029208714364,
        19.85886354561895, 23.033311632510113, 27.11271894406525,
        38.10483512466044, 53.58804800943198, 66.20028378403181,
        89.35178904734937, 144.6253994669383, 222.13525013253218,
        308.5763093759745, 674.5985908630483, 2216.8794834334685,
        11175.737303494294, 13493.224333003214, 8660.703929170164,
        6069.217591691604, 3358.098099114159, 1935.5749815900851,
        1219.8477670929722, 664.635258090306, 430.47940336338263,
        254.30481783551838, 177.63416429867087, 121.61239162949126,
        77.82662149201184, 54.399342185878204, 38.082981074479164,
        29.138683151168006, 23.622937534136597, 22.04888812794956,
        20.80819866055599, 22.92975732198266, 25.094853941398917,
        30.56953805140891, 39.85453847302151, 58.06132256419004,
        75.85834762271038, 106.13580676907651, 142.795979335548,
        244.246600340411, 373.6703632325282, 567.6409664515357,
        1571.3337493887695, 4871.835388507573, 16392.519951456165,
      ],
      imag: [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ],
    },
    imag: [
      0, -1.343901621327011, 1.721833324939457, 1.3937858919791224,
      -0.904784867734521, 0.9956083728012485, 0.13374486301187097,
      0.7978179059888694, 0.08123543012206277, 0.47338465820086184,
      -0.07853466443921621, 0.2950011933196759, -0.6247916276373429,
      0.2951717097474046, -1.8712573358384692, 0.14096520515743682, 0,
      -0.14096520515741828, 1.8712573358384816, -0.2951717097473781,
      0.6247916276373373, -0.29500119331966146, 0.07853466443922305,
      -0.4733846582008596, -0.08123543012206277, -0.79781790598886,
      -0.1337448630118737, -0.9956083728012485, 0.9047848677345208,
      -1.3937858919791226, -1.7218333249394557, 1.3439016213270112,
      1.5871307700950068, 0.5637011092588632, 1.2603198064423482,
      2.9317402483699255, -0.8409084656280159, 0.2839544102155089,
      1.0393523450590114, 0.8310491123379952, 0.5733425968094368,
      0.30043904784975134, 0.29266755430531527, 0.08293010406402415,
      -0.3650283542031338, -0.7621355462343821, -0.5431683864795783,
      -0.6602817924610193, 0.20250391456576916, -0.059393044635645806,
      0.9730252602081445, -0.01782962412134724, 0.18933865423621773,
      0.011846708470834844, 0.014269719747672759, -0.16281560265463554,
      -0.24410560657714067, -0.34963232308526365, -0.32234943120999277,
      -0.6691127915152365, 0.14162995430492473, -0.9690987495763558,
      -1.0446282489208472, 1.3612809629252947, 0.7046490796090316,
      1.644656498115789, 1.457626495523533, -0.6840361527612806,
      -0.681474708971962, 0.7311857387294264, 1.2398159392319572,
      1.2736175855463174, 0.6555066385893611, 0.4589733287486102,
      0.2494812924962717, 0.2295941880121868, -0.6735544911252082,
      -0.7891737944140509, -0.833663158873984, -0.02279594414115591,
      0.157531969600533, 0.5083619532158246, 0.16292155588892338,
      0.14047533322536612, -0.029004083819245446, 0.042892010327960466,
      -0.0847803286744503, -0.1321705591443332, -0.30971168558439593,
      -0.44061350110378666, -0.593809888932934, -0.4671902772630274,
      -1.2068396187631398, -0.9496940875254227, 0.2896061689589903,
      -0.40038203546320883, 0.5562024927443893, 0.14065731983379595,
      1.390858139437829, -0.6783334205276503, -2.0926714021100303,
      1.5120873610545131, 1.7251253398279642, 1.0499886203647506,
      0.6413261932720733, 0.43315407205712014, 0.32584150801434064,
      0.17968537990933128, -0.27887473465086693, -0.7264668532809715,
      -0.9520027428255372, -0.38747270801185796, 0.31172559850957127,
      0.3167238274644899, 0.25925756638025876, 0.20404659434537992,
      0.19201780058118942, 0.0025274006864131854, -0.20254250312507205,
      -0.301466819890184, -0.45156398868756126, -0.7158395939816518,
      -0.7863634374888125, -1.3089140888320636, 0.4139391942136343,
      -0.9230837800112506, -0.9608676869506684, 0.994894967509791,
      -0.39381772120025876, -0.5926473858270555, -1.1161873115341066,
      -0.38954314931717815, 0.15776662530084892, 0.39428020304678685,
      1.7089894615168126, 0.9286849101064603, 0.350973234838865,
      0.3212528804707568, 0.23669588269358602, 0.19592809956108717,
      -0.3264696987509312, -0.5617213523679232, -0.7659613758273989,
      -0.4848448097808058, 0.0035984972735877987, 0.36234031342999445,
      0.02584515038201295, 0.3813234596441356, 0.2917223569671276,
      0.10460468586389386, -0.14942504329756173, -0.2340648419056832,
      -0.5970258341713899, -0.6479171630934003, -1.1972380302487249,
      -0.37081056871520385, 0.31028937719203986, -0.11181138224479611,
      0.05022415004119631, -0.5924281903599851, -0.4703174557375312,
      -0.5556706599080107, -0.18073895078348806, -0.07286620180284567,
      0.9080135456055427, 1.3448759333642528, 0.5639174664677074,
      0.6882456370936582, 0.270544474915452, 0.1855550606492347,
      0.21628766080629094, 0.08922769637111864, -0.1330464412169812,
      -0.5104407538921645, -0.5748295632952253, -0.499928421733889,
      -0.008888226974178647, -0.026119953804469152, 0.16649307508904443,
      0.18021017930701566, 0.24129551707937363, 0.05141476622049072,
      -0.05440923791370335, -0.21354052285348152, -0.34065461819243753,
      -0.8321595295545801, -0.6545515144341882, -0.5171174887453374,
      -0.34193161983249143, 0.2599196779142151, -0.3192283896931117,
      -0.2509623323107447, -0.019538834540300996, 0.23386297177233037,
      0.39736821511961345, 0.7260382384711854, 0.8168297825020705,
      1.0763583447726135, 0.806113881274012, -0.023349196100613815,
      0.09911450222934183, 0.11136104528246665, 0.11912886110102348,
      0.1510441091194204, -0.10294245821664937, -0.34339582552474845,
      -0.46071517851602106, -0.2745498847774613, -0.021291149638310566,
      0.03581857177521538, 0.08165077597052256, 0.19593247304969552,
      0.16021249355536668, 0.07341110181145782, -0.09441366146062889,
      -0.14774431296435828, -0.3788677957633147, -0.38953231590523063,
      -0.6289222156301494, -0.8021965599423332, 0.19764870263775744,
      -0.2862016389005325, 0.04173881161878554, -0.04750283167130345,
      0.42759360787810174, 0.4435334033074589, 0.612327609854575,
      0.7020782016690547, 0.7219260366639536, 0.6392879141687147,
      0.3258926130651039, 0.17268517789923485, -0.1183225223006091,
      0.04939158090533926, 0.12347320818582375, 0.06469798143401673,
      -0.006710209168704759, -0.2737081974258909, -0.26939466873920287,
      -0.25176222060999, 0.00813102285298534, 0.013089808045657288,
      0.185105158015618, 0.11713478908555769, 0.20974664985683705,
      0.04874577836816892, -0.006935953460316863, -0.18083894269546222,
      -0.1590773470203919, -0.3049032697254573, -0.4952504311071168,
      -0.2063397715454307, -0.28929558460304977, 0.01725566086804829,
      0.08925055891284024, 0.3434977458343078, 0.3827720504358852,
      0.5677210207032581, 0.4881147517750161, 0.43659704639067964,
      0.38858095560717315, 0.35469216713625445, 0.11095078972724678,
      -0.05035409898656247, 0.010426074631633324, -0.023032548262322892,
      0.0685580235114857, 0.1199625535177883, -0.004434755204994449,
      -0.14323623171577524, -0.2742488887234425, -0.15059247824174998,
      -0.18695930341705305, 0.06813688020408373, 0.04916201156820307,
      0.16362595169702937, 0.07832572097557808, 0.11153460033842358,
      -0.10346450949096449, -0.03925026108281402, -0.12027128091306288,
      -0.23113762225192683, -0.07885965728132803, -0.2598298090974699,
      -0.112193082069427, -0.19372413199270677, 0.1843821378255476,
      0.22544536191476028, 0.22838873802709003, 0.11856768480607156,
      0.2001101062269439, 0.16443500436191505, 0.1344103610721337,
      0.1560099579732318, 0.02998498079292612, -0.01795042558889614,
      -0.095997178609832, 0.04581555915567668, 0.05060040141112804,
      0.0625550701522621, 0.09536267957415628, -0.2588472108186818,
      -0.19352665675464722, -0.35758313393883445, 0.05724199410125697,
      -0.07448979769121256, 0.15760636776309309, 0.07711029442456042,
      0.21793581355625327, -0.0853841567280578, 0.0542780951185194,
      -0.06351351655225722, -0.13925876777247995, -0.05309048214962413,
      -0.08855066431481835, 0.09705317802047587, 0.021982682491266895,
      -0.0320570437725536, 0.011606155190390474, 0.20297398899260674,
      0.08713770793778194, 0.14235450986309658, -0.006634429052264465,
      0.06944355111332648, 0.037974760198136455, 0.02723212012252952,
      -0.030406089689394462, -0.06289143982632239, -0.033462702565164315,
      -0.13091343010011852, 0.18662643567548856, 0.14580799486104234,
      -0.055902479292620696, -0.12813917376287484, -0.4370654490609753,
      -0.09792671156559801, -0.17130544619864244, 0.30727693305691806,
      -0.2953735036217468, 0.2205640575182558, -0.16529753202987246,
      0.3404745588343642, -0.0020829156573361745, -0.1477566402016345,
      -0.07451855199653255, -0.1485032050753669, -0.057283952975165524,
      0.06466541846880637, 0.23511892751228192, 0.11870789775778592,
      0.0625549454189092, -0.03129802431166904, 0.0064402102662661845,
      -0.07908206366482008, 0.0553675188881671, 0.025089334126077875,
      0.06380009174949475, 0.01598882409357055, -0.0485453569421806,
      -0.11558972094679192, -0.09748734332934658, -0.0004949292816682794,
      -0.18157168721539482, 0.3394228896917068, 0.3052238631985539,
      -0.5463958953710175, 0.013830571830100688, -0.38850732372171304,
      0.223075916963486, -0.31865288748874443, 0.25745374979707547,
      -0.8188534714960727, 0.5085516891060978, 0.20195166784419227,
      -0.06978574367189032, 0.05088417995496527, -0.18377202523753672,
      -0.17303565260659334, -0.15924096907201105, 0.0921469322051947,
      0.26379835890783954, 0.35934781180257075, 0.24329566614587647,
      0.18564601960109514, 0.24223475523068938, 0.2896764687039265,
      0.15967526911861643, 0.2236525476678126, 0.12185893624650075,
      0.07010515076512246, -0.045495054958742086, -0.13016925945874308,
      -0.12331107551299306, -0.09658598904032947, 0.22919036999990153,
      -0.39865574246315477, 0.3675558227752026, 0.4559731496763589,
      -0.9322732995444801, 0.3211078437592451, -0.5916002406790702,
      0.39469180639349893, -1.5810043928614619, 0.7192616842627553,
      -0.09592034339847655, -0.08487714593751221, 0.4039957386289845,
      -0.04174339774265379, -0.1030386108486746, -0.21220001866353477,
      -0.17318676777643013, 0.015792824133968684, 0.3799471493407144,
      0.4573031649737595, 0.4849146321923636, 0.278045596991639,
      0.330997517931827, 0.07346181941874468, 0.3044571730020384,
      0.3481533243335257, 0.27336662525128713, 0.05011351109495184,
      -0.05940584463270739, -0.1626114347474223, -0.10891422081227681,
      -0.07507029717115797, 0.15348950297637756, 0.6313299455118446,
      -0.9360445989877769, 0.4232569705540574, 1.1782712312395338,
      -1.6700526640562563, 0.6730754801286777, -2.036587646020969,
      0.696651869739933, -0.3990336398782886, -0.7775110416888031,
      0.5628167675812451, 0.04446899108365955, 0.08127813274590998,
      -0.07099339435842372, -0.09185286036621106, -0.10956166698887557,
      0.07294149309473505, 0.3516732889665791, 0.6348806757989582,
      0.5619968460520506, 0.6062770727450226, -0.01897019762481933,
      0.37668655809680845, 0.2231700372991837, 0.17596357423928666,
      0.182021098919622, 0.038230887694388455, -0.10475039750351335,
      -0.1512317199312191, -0.11278544639649389, 0.05411089572076022,
      0.23852479976301316, 0.30802887330694756, 0.9587111952302938,
      -1.4503952980081434, -0.06145839150349969, 2.138997807668353,
      -3.5142346308062073, 1.6764175122847729, -0.6325266075787294,
      -1.1970497991660358, 0.46027494328631885, -0.38868529039399474,
      0.06306613375883041, 0.08502403448097447, 0.047630852690686495,
      -0.022775175196356016, 0.011847923870825085, 0.13095780969018636,
      0.39870906011464996, 0.5410013327184018, 0.6285964225750199,
      0.12859489098386362, -0.17371304193339687, -0.7713566279215256,
      -0.3569696489220254, -0.15350152251372465, -0.08110842702990148,
      -0.12890403553126065, -0.14048874638904316, -0.18368108831833277,
      -0.13143015225876853, 0.03731818798640201, 0.398153506664189,
      0.446850695599386, 0.29854169122462937, 1.0193515924216456,
      -2.1696976832709978, -1.5476694374721527, 4.111501359710062,
      -1.6066056279080296, -1.1129988398741206, 0.9464135190271308,
      -0.6646448718237143, -0.22405122030787003, -0.1684513504650424,
      0.10281428632219461, 0.12776142939872864, 0.10903691838775739,
      0.0974771489483065, 0.19622512970077355, 0.3758189010900003,
      0.5815217498439217, 0.575882448967759, 0.5683582142796539, 0,
      -0.07566059104010174, -0.5319087481065502, -0.4906650633876551,
      -0.2538852177443554, -0.17759782612549996, -0.17342105765811164,
      -0.1717237906748887, -0.17163733194043357, -0.009691726103346027,
      0.23320936684713756, 0.6154416324788491, 0.2303178322389413,
      0.4504667163321609, -0.2542218615438303, -1.2338903723029762, 0,
      1.233890372302968, 0.2542218615438289, -0.45046671633216256,
      -0.23031783223894184, -0.61544163247885, -0.2332093668471385,
      0.009691726103345007, 0.17163733194043357, 0.17172379067488885,
      0.17342105765811225, 0.17759782612550043, 0.25388521774435546,
      0.4906650633876564, 0.5319087481065498, 0.07566059104010284,
      0.17371304193345374, -0.5683582142795844, -0.5758824489677223,
      -0.5815217498439111, -0.37581890108999716, -0.1962251297007692,
      -0.09747714894830553, -0.1090369183877569, -0.12776142939873006,
      -0.10281428632219579, 0.1684513504650413, 0.22405122030786861,
      0.6646448718237126, -0.9464135190271386, 1.112998839874119,
      1.6066056279080259, -4.111501359710058, 1.5476694374721462,
      2.169697683270998, -1.0193515924216472, -0.2985416912246324,
      -0.44685069559938834, -0.39815350666419097, -0.03731818798640415,
      0.13143015225876697, 0.18368108831833294, 0.14048874638904385,
      0.12890403553126736, 0.0811084270299098, 0.15350152251374438,
      0.3569696489220662, 0.7713566279215556, 0.018970197624865574,
      -0.1285948909838308, -0.6285964225750031, -0.5410013327183986,
      -0.39870906011464824, -0.13095780969018578, -0.011847923870824886,
      0.02277517519635736, -0.04763085269068705, -0.08502403448097469,
      -0.06306613375883256, 0.38868529039399197, -0.4602749432863225,
      1.1970497991660347, 0.6325266075787281, -1.6764175122847713,
      3.5142346308062082, -2.138997807668362, 0.06145839150349631,
      1.4503952980081398, -0.9587111952302971, -0.30802887330694667,
      -0.2385247997630148, -0.0541108957207615, 0.11278544639649313,
      0.15123171993121864, 0.1047503975035141, -0.03823088769438403,
      -0.18202109891961496, -0.1759635742392747, -0.2231700372991606,
      -0.3766865580967669, -0.33099751793180054, -0.6062770727449965,
      -0.5619968460520336, -0.6348806757989502, -0.35167328896657507,
      -0.07294149309473368, 0.1095616669888755, 0.0918528603662118,
      0.07099339435842339, -0.08127813274590924, -0.044468991083660724,
      -0.5628167675812489, 0.7775110416888034, 0.3990336398782871,
      -0.6966518697399285, 2.0365876460209633, -0.6730754801286755,
      1.6700526640562572, -1.17827123123954, -0.42325697055405653,
      0.9360445989877786, -0.6313299455118465, -0.15348950297637845,
      0.0750702971711561, 0.10891422081227575, 0.16261143474742193,
      0.05940584463270852, -0.05011351109494761, -0.2733666252512826,
      -0.3481533243335174, -0.3044571730020204, -0.07346181941872514,
      -0.24223475523068566, -0.278045596991634, -0.48491463219235625,
      -0.45730316497375445, -0.37994714934071183, -0.015792824133968708,
      0.17318676777642958, 0.21220001866353638, 0.10303861084867472,
      0.04174339774265514, -0.40399573862898636, 0.08487714593751182,
      0.0959203433984764, -0.719261684262751, 1.5810043928614652,
      -0.3946918063934955, 0.59160024067907, -0.32110784375924395,
      0.932273299544479, -0.4559731496763611, -0.3675558227752009,
      0.39865574246315755, -0.22919036999990147, 0.09658598904032888,
      0.12331107551299252, 0.1301692594587433, 0.045495054958742745,
      -0.07010515076512172, -0.12185893624649984, -0.223652547667811,
      -0.15967526911861513, -0.28967646870392255, -0.006440210266261173,
      -0.18564601960108706, -0.2432956661458719, -0.3593478118025666,
      -0.2637983589078372, -0.0921469322051936, 0.15924096907201093,
      0.17303565260659445, 0.18377202523753683, -0.05088417995496395,
      0.06978574367189057, -0.20195166784419286, -0.5085516891060973,
      0.8188534714960719, -0.25745374979707175, 0.3186528874887527,
      -0.22307591696348483, 0.3885073237217165, -0.013830571830101068,
      0.546395895371022, -0.305223863198555, -0.3394228896917048,
      0.18157168721539607, 0.0004949292816654663, 0.09748734332934587,
      0.11558972094679136, 0.04854535694218131, -0.015988824093569717,
      -0.06380009174949508, -0.025089334126078205, -0.055367518888164394,
      0.07908206366482075, -0.08713770793777711, 0.03129802431166981,
      -0.06255494541890674, -0.1187078977577844, -0.23511892751228033,
      -0.06466541846880579, 0.05728395297516605, 0.14850320507536743,
      0.07451855199653275, 0.14775664020163706, 0.0020829156573371555,
      -0.34047455883436323, 0.16529753202987046, -0.22056405751825445,
      0.29537350362174863, -0.30727693305691484, 0.17130544619864224,
      0.0979267115656023, 0.4370654490609771, 0.12813917376287753,
      0.055902479292622584, -0.14580799486104357, -0.18662643567548898,
      0.13091343010011883, 0.03346270256516358, 0.06289143982632284,
      0.03040608968939467, -0.02723212012252924, -0.03797476019813689,
      -0.06944355111332663, 0.006634429052265361, -0.14235450986309153,
      -0.22838873802708684, -0.2029739889926063, -0.011606155190393872,
      0.032057043772551565, -0.021982682491265355, -0.09705317802047468,
      0.08855066431481819, 0.05309048214962463, 0.13925876777248047,
      0.06351351655226015, -0.054278095118517826, 0.08538415672805795,
      -0.21793581355625447, -0.07711029442455894, -0.1576063677630919,
      0.07448979769121587, -0.057241994101257694, 0.3575831339388394,
      0.1935266567546499, 0.25884721081868634, -0.09536267957415476,
      -0.06255507015225903, -0.050600401411129904, -0.04581555915567774,
      0.09599717860983221, 0.0179504255888953, -0.029984980792924155,
      -0.15600995797322956, -0.13441036107213314, -0.16443500436191227,
      -0.20011010622694014, -0.1185676848060674, -0.3827720504358852,
      -0.22544536191476122, -0.18438213782554774, 0.19372413199270522,
      0.11219308206942717, 0.25982980909746933, 0.07885965728132813,
      0.23113762225192824, 0.12027128091306288, 0.03925026108281611,
      0.10346450949096535, -0.11153460033842286, -0.07832572097557809,
      -0.16362595169702793, -0.049162011568201006, -0.06813688020407746,
      0.18695930341705305, 0.15059247824175628, 0.2742488887234457,
      0.14323623171577923, 0.004434755204995782, -0.11996255351778637,
      -0.0685580235114842, 0.023032548262321723, -0.010426074631633324,
      0.05035409898656467, -0.11095078972724633, -0.35469216713625396,
      -0.38858095560717304, -0.43659704639067964, -0.4881147517750165,
      -0.5677210207032584, -0.4275936078781049, -0.34349774583431025,
      -0.08925055891284522, -0.017255660868053985, 0.2892955846030494,
      0.20633977154543065, 0.49525043110711575, 0.30490326972545867,
      0.15907734702039197, 0.1808389426954664, 0.006935953460319154,
      -0.04874577836816606, -0.20974664985683683, -0.11713478908555536,
      -0.18510515801561447, -0.013089808045645399, -0.008131022852986567,
      0.2517622206100028, 0.2693946687392072, 0.273708197425899,
      0.006710209168707876, -0.06469798143401254, -0.12347320818582255,
      -0.0493915809053365, 0.11832252230060807, -0.17268517789922963,
      -0.32589261306509937, -0.639287914168712, -0.7219260366639526,
      -0.7020782016690555, -0.6123276098545748, -0.44353340330746277,
      0.01953883454029997, 0.04750283167129971, -0.041738811618788646,
      0.2862016389005296, -0.19764870263775797, 0.8021965599423365,
      0.6289222156301542, 0.3895323159052357, 0.37886779576331475,
      0.14774431296436413, 0.09441366146063283, -0.07341110181145313,
      -0.16021249355536557, -0.19593247304968892, -0.08165077597051315,
      -0.03581857177519336, 0.021291149638310077, 0.27454988477748077,
      0.46071517851603194, 0.3433958255247594, 0.10294245821665464,
      -0.15104410911941546, -0.11912886110102075, -0.1113610452824651,
      -0.09911450222934172, 0.02334919610061857, -0.8061138812740085,
      -1.0763583447726097, -0.8168297825020715, -0.7260382384711874,
      -0.39736821511961523, -0.23386297177233123, 0.4703174557375292,
      0.2509623323107428, 0.31922838969310624, -0.25991967791422005,
      0.34193161983249054, 0.517117488745342, 0.6545515144341917,
      0.8321595295545877, 0.3406546181924375, 0.21354052285348993,
      0.05440923791370753, -0.051414766220484194, -0.24129551707937194,
      -0.18021017930700467, -0.16649307508903324, 0.02611995380449984,
      0.008888226974177819, 0.4999284217339134, 0.5748295632952383,
      0.510440753892181, 0.13304644121698647, -0.08922769637111018,
      -0.21628766080628836, -0.18555506064923225, -0.27054447491545125,
      -0.688245637093645, -0.5639174664677029, -1.344875933364252,
      -0.9080135456055456, 0.07286620180284165, 0.18073895078348665,
      0.5556706599080086, 0.3938177212002582, 0.5924281903599832,
      -0.05022415004119711, 0.11181138224479518, -0.31028937719204,
      0.3708105687152074, 1.1972380302487284, 0.6479171630934083,
      0.5970258341713901, 0.2340648419056917, 0.1494250432975659,
      -0.10460468586388726, -0.2917223569671256, -0.38132345964412656,
      -0.02584515038199919, -0.36234031342997136, -0.0035984972735878563,
      0.484844809780835, 0.7659613758274156, 0.5617213523679431,
      0.32646969875093934, -0.19592809956107882, -0.23669588269358457,
      -0.32125288047075495, -0.3509732348388646, -0.9286849101064518,
      -1.7089894615168075, -0.3942802030467882, -0.1577666253008498,
      0.3895431493171764, 1.1161873115341048, 0.5926473858270547,
      -0.5562024927443876, -0.9948949675097908, 0.9608676869506646,
      0.923083780011243, -0.4139391942136339, 1.3089140888320632,
      0.7863634374888133, 0.7158395939816597, 0.4515639886875609,
      0.3014668198901915, 0.2025425031250778, -0.0025274006864056797,
      -0.1920178005811869, -0.20404659434537004, -0.25925756638025355,
      -0.31672382746446043, -0.3117255985095709, 0.387472708011902,
      0.9520027428255602, 0.7264668532809944, 0.2788747346508717,
      -0.17968537990931685, -0.3258415080143367, -0.4331540720571135,
      -0.6413261932720714, -1.0499886203647348, -1.7251253398279605,
      -1.5120873610545145, 2.092671402110029, 0.678333420527655,
      -1.3908581394378237, -0.14065731983379445, -0.704649079609032,
      0.4003820354632061, -0.2896061689589916, 0.9496940875254203,
      1.2068396187631385, 0.4671902772630277, 0.5938098889329356,
      0.44061350110379105, 0.30971168558439566, 0.1321705591443394,
      0.08478032867445422, -0.042892010327952576, 0.02900408381925063,
      -0.1404753332253544, -0.16292155588890503, -0.5083619532157557,
      -0.15753196960053273, 0.022795944141262008, 0.8336631588740234,
      0.7891737944140912, 0.6735544911252132, -0.2295941880121686,
      -0.24948129249626083, -0.4589733287485918, -0.6555066385893606,
      -1.2736175855462932, -1.2398159392319503, -0.7311857387294178,
      0.681474708971963, 0.6840361527612938, -1.4576264955235338,
      -1.6446564981157907, -1.587130770095007, -1.361280962925294,
      1.044628248920846, 0.9690987495763536, -0.1416299543049248,
      0.6691127915152362, 0.32234943120999365, 0.34963232308526704,
      0.244105606577141, 0.16281560265463482, -0.014269719747667968,
      -0.011846708470826806, -0.18933865423621368, 0.017829624121361812,
      -0.9730252602081131, 0.05939304463575307, -0.2025039145657705,
      0.6602817924610479, 0.5431683864796097, 0.7621355462344159,
      0.36502835420313695, -0.08293010406400844, -0.29266755430530383,
      -0.30043904784973247, -0.5733425968094366, -0.8310491123379783,
      -1.039352345059011, -0.28395441021550044, 0.840908465628016,
      -2.9317402483699175, -1.2603198064423498, -0.5637011092588653,
    ],
    height: 32,
    width: 32,
    top: {
      real: [
        7376.258656397969, 2820.8522261533344, -5690.949708539517,
        -4380.451337629613, 388.6547315083493, -903.738522922329,
        -92.23368885456094, 42.706854165930984, -25.699252344104405,
        18.326281263011424, -9.854238749915744, 37.93351045351143,
        -7.866668430967025, 29.305075180843883, -62.72861735466191,
        59.85324062738893, -83.63637439904494, 59.853240627386725,
        -62.728617354660756, 29.305075180844177, -7.866668430967183,
        37.93351045351143, -9.854238749916066, 18.326281263013065,
        -25.699252344104405, 42.70685416593069, -92.23368885455788,
        -903.7385229223205, 388.6547315083471, -4380.4513376296045,
        -5690.949708539511, 2820.8522261533035, -14789.032757371706,
        -31341.18584811776, -11739.029695619593, -866.7846665811339,
        -286.68893204831016, -488.3313322508757, -120.74864963582691,
        33.024718339611894, 4.6010715329524166, -5.445674010995977,
        4.113903067106239, 6.8633911029603265, 13.634662924808397,
        1.860738389345556, -0.35796846682150263, -16.62506921077511,
        -14.807142725465134, -11.664010623894898, 0.8207681555703734,
        -12.155673848711613, 29.148348103795893, 15.708115389403888,
        15.457503110539639, -12.683126140048403, 18.96112093185931,
        -53.601071866945205, 34.13442733448511, -942.7276077420217,
        -816.050944813798, -3798.5470080468217, -8876.42787310433,
        2890.8320511623124, -27232.42194054986, -15984.118662988652,
        -6745.568222360413, -409.0173927639226, -42.225544009425754,
        -526.2922550452712, -49.32565565290618, -23.20435390028933,
        15.630174176003303, -14.835941429972856, 6.4726407463551725,
        1.9958373496876167, 13.291351981828791, -1.1889020916883648,
        10.030112101155916, -20.67441842084843, -0.1180338988714332,
        -18.74520767411604, -1.9041291470929314, -7.871099481794243,
        20.38587909738803, 14.857882580655026, 16.95019727458754,
        -2.033086164989526, 25.446982376231624, -20.62459219009594,
        89.30325669500957, -637.0667107212057, -1428.8365567175017,
        -3113.2951228079887, -8881.588935127695, -20696.443600183225,
        -9007.313179629116, -5346.330609000281, -1439.1675666408983,
        -1292.5663502582722, -654.0994476037728, -301.7022747283896,
        -97.440927522084, -3.3329385156017457, -8.202796513162015,
        -5.774263947387032, -0.5106953831985463, 6.640288063631823,
        8.012652033059101, 4.0882931682311625, -1.521034739607415,
        -2.233575686924605, -2.3288001542285928, -8.13154709651151,
        -6.9403489082507335, -3.674864902798056, 4.593750742744353,
        9.495700824153968, 10.21057060635477, 11.67682549979278,
        23.75885873750166, 20.28823698768961, 20.9697668571251,
        -333.51324485695324, -810.1584353673162, -2278.682054098889,
        -5194.409091620209, -7188.339898707115, -3154.0647285180166,
        -3175.2001764803263, -3085.2108289353805, -1226.2977859942123,
        -836.2620618172178, -301.22169990911055, -15.123294918373254,
        -11.324269109892445, -4.999221097969336, -6.7152536525607,
        -1.7063097661780617, 2.7727430774894133, 7.135788132168215,
        4.866990482124882, 2.7536893948953045, -2.039934630711028,
        -0.5489892871976103, -2.9485150656567436, -3.1026085263061316,
        -1.3614545093317587, -0.47304719477880164, 4.040907971073893,
        6.248331301572371, 8.854025232654797, 18.80214162335462,
        24.681352644731625, -6.111478730512031, -148.49350684902615,
        -572.3488635999528, -1663.447165744248, -3308.605953472853,
        -4493.828247899506, -3720.0991836319017, -3323.4413322476125,
        -2223.332633868252, -1347.5218927383742, -402.86472873295924,
        -179.0778566066358, -42.17162736915355, 13.024576486879551,
        -6.680339136637107, -4.3910663300422375, -1.9843645852297727,
        2.2081255979025864, 3.4357055351949564, 4.866739798973896,
        -0.008801816555391827, -1.2900498248809058, -2.223069631674785,
        -0.7961310239517896, -2.1003135650570957, -0.12607857026311342,
        0.39928478103703097, 3.6189445517483683, 5.523084701132182,
        8.08071443227348, 9.653783720993834, 14.647883903859292,
        41.76117110773358, -2.5048396429986766, -288.68438568639834,
        -1058.7748743456032, -2111.6481404168812, -2853.5518466904464,
        -2206.474238883325, -2207.488296900341, -1427.060029597421,
        -607.9731104871157, -283.75431628355585, -25.222873313531675,
        -11.21903778037437, -8.365382280797615, 1.9503276148055415,
        -4.8653324939916756, -1.0558165909594248, 0.18037835028025548,
        3.723230036877415, 2.6260151255238955, 1.901747650437611,
        -2.157984497724208, -1.9174482807780493, -2.671365924063863,
        -1.6822520344543337, -1.783596980145315, 0.50013744114288,
        2.3612666445612516, 3.9892729615099713, 5.028259733848998,
        4.384961399296521, 7.567544914645971, 26.73833027450421,
        30.29300971120987, -72.36523804645397, -397.03998761961856,
        -1129.7740740979677, -1877.1475049531305, -1015.8170093531105,
        -757.3385658121136, -464.0498676348327, -221.8093865245269,
        -66.67014095320897, -32.688631361988044, 12.245388279073117,
        -2.09491941357581, -4.921421792424727, -0.7686322780239969,
        -1.3611346863617457, 0.5920300131883174, 2.3940543871676745,
        2.138653552857357, 0.12698658321630202, -0.36055346759858353,
        -1.509631760657328, -0.37490601010058217, -1.4076418772333708,
        -0.9909556252137327, 0.02570461580723476, 1.7006413859335137,
        2.41012418633353, 2.72304464828999, 4.897547426352959,
        5.579917642233582, 7.382361392952302, 3.3531473980019464,
        -7.094723129271724, -129.95057654055665, -447.33256260550814,
        -801.4985531526427, -297.712804672423, -206.25666421819534,
        -105.85720001872387, -40.587336797783266, -19.033005269759897,
        0.6862352568504775, -2.224754122223199, 2.868642893715354,
        -1.3772856826259623, -3.700118286073842, 0.5603303011127165,
        0.3164957648182627, 2.6435570864758695, 2.072901917366745,
        1.3896745329326239, -1.1733083260901866, -0.5564284933709801,
        -0.7531942972718523, -0.16542223594150865, -0.3498151014517736,
        0.639471018274414, 0.6449513671490333, 1.5357324193076427,
        2.8130362926385226, 4.284541597255651, 3.341557420163751,
        1.8747628167747612, 4.309201987250532, 1.2280777000161127,
        -53.113548920223614, -153.12296297306594, -262.5910689083988,
        -78.50796675246865, -44.71395672976317, -24.503242066462356,
        -11.422688403833899, -6.832488237410147, -1.9389416594991726,
        2.3416848160301655, -1.9581076589813595, 0.6544162473914797,
        -1.6215192060328243, -3.0886268279599727, 2.557402471968773,
        2.5859312055320047, 3.582324284715654, 2.385170800316441,
        0.411488665094779, -1.7870448740379692, 0.3586747560851346,
        -0.33833230756510146, 0.7213491787051987, -0.6451343286468626,
        -0.036676325952571386, 1.880678514199683, 3.0459530955995717,
        3.0361534846987768, 1.8248078988499765, 2.0278729258957484,
        1.4298438030821454, 1.444150632114136, -16.470770345398158,
        -59.03838740640355, -81.62468733113072, -41.65158074717607,
        -20.04858945819673, -26.796686775361913, -13.274828683787613,
        -5.48494102646779, -1.7682797425272327, 0.5127695090162155,
        0.11701161368370352, -2.1525887062494076, -0.35663258536781867,
        -0.3882693848937121, -2.5566610369397282, 6.513912829330354,
        4.153796425003821, 2.177850779277181, 0.6761807821160477,
        0.6727176011927574, -0.03322371296847739, 1.7891382881043305,
        0.7654900301212932, -1.8840461990319548, 0.6276437133660342,
        2.9500669911593334, 2.799854903105731, 2.7114466415734606,
        2.640497491382968, 2.5087646302130264, 0.3613507110411972,
        -0.8597558755237771, -5.89936615548755, -19.483874473281006,
        -46.656198806892085, -42.44718550207896, -49.47539998840752,
        -28.80904080219163, -23.364991274814315, -9.372036001443622,
        -2.193549633075087, 0.7323779052753541, -0.6028717635248831,
        -1.067236191051992, -3.837446138403733, 0.8126491631670523,
        3.702478373345459, -2.227430700667376, 12.171761179906976,
        2.648499723117314, 2.1242155181960216, 1.3916869062247985,
        3.2969221728544564, 0.1414776211221006, -1.2659388719629114,
        1.2983452624583423, 2.4646463691490883, 1.8819178233751466,
        2.469919778217255, 3.410560044540994, 3.476877662739366,
        1.970602508408192, 0.5456937943711528, -0.6150348829608226,
        -1.584537886719974, -9.910885111885545, -17.96889314262851,
        0.8328024839604734, -16.804391379900096, -34.94566909960443,
        -18.287776152890835, -10.19076861522101, -2.365935575489219,
        0.38430207827148843, -0.39175809943359, -2.078662076271716,
        -2.1066158183404973, -4.0664292874937455, 5.105639281222473,
        9.471148516042044, -2.577327881134023, 13.563457368659881,
        5.445444411621721, 3.0810071966308192, 3.71409458782056,
        -2.7028450063821525, 1.3893389983926554, 5.029567791169772,
        2.0512141006459763, 0.5768744010433312, 3.139987490646312,
        4.304436149290965, 3.228692605037394, 2.0294536549063102,
        -1.2648718051872285, 0.8198227841656076, 5.193746134405688,
        4.566053007097891, -2.575198281431435, 10.842808636227273,
        -2.7634934625905125, -4.741036325511608, -13.231297049532179,
        -1.239206941737581, 0.576956771407574, 1.6572428400911725,
        -0.8048756694131317, -2.197640605466401, -2.9337382106235617,
        -0.9769607434101947, -0.5203983011347634, 8.693274674091336,
        18.008772340009436, -6.389470676234774, 16.656214263229323,
        5.648012814589276, -2.642075767662634, 6.983253879862469,
        8.71177531529134, 2.944231966553327, -0.4194257648970201,
        1.9464964791115495, 2.8117062685871983, 3.586606822562346,
        3.6410340078674697, 2.1750438821370093, 0.9274613552108363,
        -0.10515597578954901, 10.916870623975495, 22.695665816423684,
        26.922229107827643, 56.766547106622895, 34.3463794813641,
        8.02098906722306, 4.227686749372474, 2.0129650120803855,
        4.572197379285084, 1.7026114564114816, -0.10193290249876912,
        -1.9877285465951933, -1.4091416884493304, -1.0407935339809435,
        4.692713510495082, 4.461866465996299, 13.14685287043932,
        23.49016175637019, -8.54486765868434, 5.763904015786262,
        6.710397445275458, 11.090643871879529, 8.611796474987928, 0.95828374077,
        2.885914301402635, 1.6803595914225926, 1.5724318132354216,
        2.366484248547459, 3.3844724421254813, 2.8754034241014996,
        0.8142069750518306, 3.4592633965370854, 8.541867898911974,
        26.408180301615612, 46.47243379513072, 15.748155014076561,
        18.939305693948317, 18.355423454953527, 7.438594793720825,
        6.84215823955665, 3.828482944166501, 2.3084513014265475,
        0.01438358804135348, -0.7017083759025844, -0.9519271341888802,
        0.604886383870369, 4.7316501322768225, 11.640012070252736,
        11.084534895769892, 7.942755232382746, 17.090358547431578,
        -4.006276541512437, 18.90347131446114, 10.522914852414784,
        -0.3172708519471489, 8.191406242187256, 5.567876842121583,
        1.9515757898119943, 0.13204460835173984, 0.9468697939602826,
        2.2566984460298456, 3.5582629306092612, 2.7150237945754423,
        -0.038191379039643265, 6.309066288275824, 18.822434458740766,
        20.387061197767007, 34.21042461069561, 25.78016711295075,
        13.422328957688888, 4.257816250206805, 2.3122896178400203,
        4.189268002804536, 2.259247881703766, 0.9537225958470233,
        -0.4765342590896943, 0.06924012891108702, 0.917811795795561,
        6.601850524692877, 10.152138543237006, 11.530381877152177,
        5.6211304516254526, 4.790907028041365, 35.86798950390679,
        4.790907028041358, 5.621130451625443, 11.530381877152157,
        10.152138543237017, 6.601850524692898, 0.917811795795565,
        0.06924012891108133, -0.4765342590896943, 0.9537225958469944,
        2.2592478817037476, 4.189268002804514, 2.3122896178399985,
        4.257816250206748, 13.422328957688848, 25.78016711295069,
        15.74815501407811, 20.387061197767874, 18.82243445874189,
        6.309066288276548, -0.03819137903956219, 2.7150237945755555,
        3.5582629306093274, 2.2566984460298958, 0.946869793960297,
        0.1320446083517558, 1.951575789811984, 5.567876842121564,
        8.19140624218721, -0.3172708519471452, 10.522914852414772,
        18.90347131446111, -4.006276541512388, 17.090358547431556,
        7.942755232382751, 11.084534895769902, 11.640012070252746,
        4.7316501322768385, 0.60488638387039, -0.9519271341888812,
        -0.7017083759025972, 0.014383588041281273, 2.308451301426475,
        3.8284829441663635, 6.842158239556676, 7.438594793720435,
        18.355423454952824, 18.9393056939491, 56.76654710662406,
        46.47243379513245, 26.408180301616227, 8.54186789891221,
        3.4592633965371484, 0.8142069750518798, 2.875403424101515,
        3.384472442125488, 2.3664842485474735, 1.572431813235436,
        1.6803595914225982, 2.8859143014026083, 0.9582837407699747,
        8.61179647498788, 11.090643871879506, 6.710397445275469,
        5.763904015786259, -8.544867658684302, 23.490161756370185,
        13.146852870439265, 4.461866465996277, 4.692713510495103,
        -1.0407935339809418, -1.4091416884493408, -1.98772854659521,
        -0.1019329024988234, 1.7026114564114307, 4.572197379285043,
        2.0129650120803833, 4.227686749372477, 8.020989067223404,
        34.346379481364394, 10.842808636228447, 26.9222291078285,
        22.695665816424683, 10.916870623975989, -0.10515597578943024,
        0.9274613552109011, 2.175043882136998, 3.6410340078674537,
        3.5866068225623455, 2.8117062685872063, 1.9464964791115584,
        -0.41942576489699973, 2.944231966553285, 8.711775315291318,
        6.983253879862468, -2.642075767662676, 5.648012814589287,
        16.6562142632293, -6.389470676234752, 18.008772340009443,
        8.693274674091327, -0.5203983011347356, -0.9769607434101951,
        -2.9337382106235728, -2.1976406054664195, -0.8048756694132073,
        1.657242840091119, 0.5769567714075567, -1.2392069417374179,
        -13.231297049531948, -4.741036325511325, -2.763493462589494,
        0.8328024839608222, -2.5751982814309775, 4.566053007098211,
        5.1937461344059415, 0.8198227841657492, -1.2648718051872136,
        2.029453654906283, 3.2286926050373275, 4.304436149290965,
        3.1399874906463054, 0.576874401043345, 2.051214100645962,
        5.02956779116974, 1.3893389983926545, -2.7028450063821756,
        3.7140945878205622, 3.081007196630816, 5.4454444116217395,
        13.563457368659845, -2.5773278811340234, 9.471148516042044,
        5.105639281222461, -4.06642928749373, -2.1066158183405044,
        -2.0786620762717254, -0.39175809943363327, 0.38430207827145285,
        -2.3659355754891784, -10.190768615220893, -18.28777615289057,
        -34.94566909960389, -16.804391379899673, -42.447185502078064,
        -17.968893142627813, -9.910885111884598, -1.5845378867194357,
        -0.6150348829606075, 0.5456937943712441, 1.970602508408127,
        3.4768776627392723, 3.410560044540968, 2.469919778217264,
        1.881917823375139, 2.4646463691490985, 1.2983452624583438,
        -1.2659388719629485, 0.1414776211221116, 3.2969221728544715,
        1.391686906224813, 2.124215518196023, 2.6484997231173293,
        12.171761179906973, -2.227430700667368, 3.702478373345508,
        0.8126491631670488, -3.837446138403738, -1.0672361910520076,
        -0.6028717635249369, 0.7323779052753103, -2.1935496330750563,
        -9.372036001443469, -23.364991274814056, -28.809040802191326,
        -49.47539998840697, -41.65158074717507, -46.656198806891,
        -19.4838744732805, -5.899366155487263, -0.8597558755235543,
        0.3613507110412495, 2.5087646302129953, 2.640497491382889,
        2.711446641573449, 2.7998549031056945, 2.950066991159325,
        0.6276437133660522, -1.8840461990319775, 0.7654900301212954,
        1.789138288104325, -0.033223712968466615, 0.6727176011927521,
        0.6761807821160666, 2.177850779277167, 4.153796425003827,
        6.51391282933036, -2.5566610369397242, -0.38826938489369667,
        -0.3566325853678395, -2.152588706249413, 0.11701161368368215,
        0.5127695090161969, -1.76827974252719, -5.484941026467714,
        -13.274828683787417, -26.79668677536157, -20.048589458196275,
        -78.50796675246646, -81.62468733112892, -59.03838740640205,
        -16.47077034539769, 1.4441506321142048, 1.429843803082246,
        2.0278729258956907, 1.8248078988499317, 3.036153484698732,
        3.045953095599546, 1.8806785141996951, -0.036676325952591224,
        -0.6451343286468558, 0.721349178705193, -0.3383323075651067,
        0.35867475608511745, -1.7870448740379619, 0.4114886650947502,
        2.385170800316434, 3.582324284715646, 2.585931205532017,
        2.5574024719687887, -3.08862682795997, -1.6215192060328063,
        0.6544162473914552, -1.9581076589813555, 2.341684816030153,
        -1.9389416594989646, -6.832488237409854, -11.422688403833355,
        -24.50324206646105, -44.71395672976105, -297.712804672423,
        -262.5910689083989, -153.12296297306594, -53.11354892022388,
        1.2280777000160852, 4.309201987250408, 1.8747628167747172,
        3.341557420163666, 4.284541597255651, 2.813036292638515,
        1.5357324193076258, 0.6449513671490316, 0.6394710182744104,
        -0.34981510145179595, -0.16542223594153913, -0.7531942972719063,
        -0.5564284933709801, -1.1733083260902135, 1.3896745329326132,
        2.0729019173667376, 2.6435570864758655, 0.3164957648182751,
        0.5603303011127181, -3.7001182860738244, -1.3772856826259623,
        2.8686428937153425, -2.224754122223166, 0.6862352568505768,
        -19.033005269759858, -40.587336797783074, -105.85720001872383,
        -206.25666421819477, -1015.8170093530997, -801.4985531526338,
        -447.3325626055032, -129.9505765405554, -7.094723129271765,
        3.3531473980017035, 7.382361392952007, 5.579917642233341,
        4.897547426352917, 2.7230446482898696, 2.4101241863335168,
        1.700641385933505, 0.025704615807253747, -0.9909556252137635,
        -1.4076418772333852, -0.37490601010063784, -1.5096317606573337,
        -0.36055346759863915, 0.12698658321626774, 2.1386535528573165,
        2.39405438716767, 0.5920300131883396, -1.3611346863617075,
        -0.7686322780239524, -4.921421792424735, -2.0949194135756803,
        12.245388279073195, -32.688631361987156, -66.67014095320768,
        -221.8093865245236, -464.0498676348275, -757.3385658121049,
        -2206.474238883316, -1877.1475049531243, -1129.7740740979648,
        -397.03998761961947, -72.365238046454, 30.293009711209137,
        26.738330274503873, 7.567544914645611, 4.3849613992964835,
        5.028259733848883, 3.9892729615099154, 2.361266644561238,
        0.5001374411428784, -1.783596980145335, -1.6822520344543537,
        -2.6713659240639043, -1.9174482807780469, -2.1579844977242066,
        1.9017476504375719, 2.626015125523887, 3.7232300368773963,
        0.18037835028033014, -1.0558165909593593, -4.865332493991508,
        1.9503276148055297, -8.365382280797357, -11.219037780374073,
        -25.22287331353055, -283.7543162835544, -607.9731104871125,
        -1427.0600295974182, -2207.488296900335, -3720.099183631889,
        -2853.5518466904387, -2111.648140416873, -1058.7748743456016,
        -288.6843856863979, -2.5048396429994018, 41.76117110773314,
        14.647883903858578, 9.653783720993783, 8.080714432273291,
        5.523084701132133, 3.618944551748326, 0.3992847810370409,
        -0.12607857026309263, -2.100313565057036, -0.7961310239516864,
        -2.223069631674776, -1.2900498248808734, -0.008801816555420883,
        4.866739798973889, 3.4357055351949497, 2.2081255979026997,
        -1.9843645852296314, -4.391066330041937, -6.680339136637114,
        13.024576486880093, -42.171627369152944, -179.07785660663302,
        -402.86472873295685, -1347.5218927383694, -2223.332633868245,
        -3323.4413322476003, -3154.064728518015, -4493.828247899509,
        -3308.6059534728515, -1663.4471657442498, -572.3488635999529,
        -148.49350684902797, -6.111478730512539, 24.681352644731046,
        18.802141623354593, 8.854025232654564, 6.248331301572226,
        4.040907971073872, -0.4730471947787934, -1.361454509331699,
        -3.102608526305984, -2.948515065656593, -0.5489892871976132,
        -2.039934630710932, 2.753689394895215, 4.866990482124894,
        7.135788132168221, 2.7727430774895763, -1.706309766177841,
        -6.715253652560278, -4.999221097969348, -11.324269109891496,
        -15.123294918372496, -301.2216999091082, -836.2620618172166,
        -1226.2977859942089, -3085.2108289353782, -3175.200176480323,
        -9007.3131796291, -7188.339898707104, -5194.409091620202,
        -2278.6820540988915, -810.158435367315, -333.5132448569559,
        20.969766857124615, 20.288236987688347, 23.75885873750167,
        11.676825499792164, 10.210570606354567, 9.49570082415387,
        4.593750742744372, -3.6748649027980855, -6.9403489082508045,
        -8.131547096511563, -2.3288001542285697, -2.2335756869247856,
        -1.5210347396073984, 4.088293168231135, 8.012652033059126,
        6.64028806363201, -0.5106953831984324, -5.774263947386494,
        -8.202796513162045, -3.3329385156007563, -97.44092752208263,
        -301.70227472838576, -654.0994476037723, -1292.5663502582681,
        -1439.1675666408923, -5346.33060900026, -27232.421940549855,
        -20696.44360018323, -8881.588935127695, -3113.2951228080024,
        -1428.8365567175017, -637.0667107212123, 89.30325669500809,
        -20.62459219009961, 25.446982376231595, -2.0330861649905447,
        16.950197274587225, 14.857882580654767, 20.385879097388024,
        -7.871099481794626, -1.9041291470930921, -18.74520767411746,
        -0.11803389887143546, -20.674418420848326, 10.030112101155776,
        -1.1889020916883362, 13.291351981828802, 1.995837349687921,
        6.472640746355359, -14.835941429972186, 15.63017417600328,
        -23.204353900286776, -49.325655652904786, -526.2922550452662,
        -42.22554400942483, -409.0173927639147, -6745.568222360406,
        -15984.118662988625, -14789.032757371675, 2890.832051162324,
        -8876.42787310433, -3798.5470080468367, -816.0509448137971,
        -942.7276077420302, 34.13442733448254, -53.60107186694936,
        18.961120931859348, -12.683126140049515, 15.4575031105396,
        15.708115389403696, 29.148348103795954, -12.15567384871238,
        0.8207681555701095, -11.664010623895932, -14.807142725465098,
        -16.625069210776097, -0.357968466821102, 1.860738389345522,
        13.634662924808296, 6.863391102960431, 4.1139030671066,
        -5.445674010995009, 4.601071532952386, 33.02471833961225,
        -120.74864963582446, -488.33133225087175, -286.68893204831085,
        -866.7846665811124, -11739.029695619576, -31341.18584811775,
      ],
      imag: [
        0, -38758.087655514835, 17548.08504726914, 6107.2151726624015,
        -1874.673387120311, 1102.4198144208276, 70.66349859769723,
        246.50443360377355, 15.094404836632346, 61.578388193120794,
        -6.883850379905633, 17.433253862249003, -27.18235290574834,
        10.205627484635695, -57.63116578861708, 3.5978635789949243, 0,
        -3.597863578994439, 57.63116578861733, -10.205627484634785,
        27.18235290574807, -17.43325386224813, 6.883850379906236,
        -61.5783881931206, -15.094404836632346, -246.50443360377048,
        -70.66349859769869, -1102.4198144208278, 1874.6733871203112,
        -6107.21517266241, -17548.085047269135, 38758.087655514864,
        21415.51152670408, 9240.481680183884, 6140.0706338628515,
        4606.742396705084, -477.33409412636456, 106.10534760670754,
        253.8582768364973, 118.670471872242, 60.85217906744696,
        22.7908097312226, 16.992665274593527, 3.3051410229913314,
        -11.158748163655874, -19.12568021630007, -12.454719286949617,
        -13.739274709476872, 4.4649861577325, -1.403038183390045,
        28.35267475528794, -0.6790052379783438, 10.299898240809684,
        0.9219892960858738, 1.7353747463970652, -28.921613512340663,
        -62.07723181322848, -150.50951383829744, -214.24479740751684,
        -816.215744663207, 274.1353961963593, -3254.328668806272,
        -6340.0761451284025, 11789.65138431164, 10840.701965194425,
        18380.24897742693, 3231.3822724351476, -461.44982475214084,
        -210.28695062763435, 162.42212696600188, 179.30887547689923,
        113.80000983072934, 43.39472549693249, 24.59548477602943,
        9.50644351725762, 6.2249226907652995, -15.514190495563678,
        -15.67209469704693, -16.179758937655365, -0.4418344453840365,
        3.28796177703477, 12.57005414423841, 4.794704065681184,
        5.575219767602969, -1.566994278876134, 3.0671728952871886,
        -9.300602996623944, -19.205045070959127, -56.93976849335746,
        -104.59324045979437, -209.921490323403, -248.20433151041027,
        -867.9236374610348, -1299.0888976028032, 827.6168828481927,
        -3453.30105164401, 2184.1299326736716, 343.8161049808456,
        1430.9649107108667, -397.20604751762147, -695.9626147441301,
        272.38382351444113, 181.43163787734565, 64.57058867431132,
        29.183435066681643, 16.420203889130576, 10.051165980763317,
        3.81329985672547, -5.220057623492661, -12.843645059741645,
        -16.57421537000831, -6.894841171864867, 5.785399335493025,
        6.761549992871188, 6.325879336386598, 6.277914142030076,
        7.316455816584333, 0.11325917153592484, -12.472105947256997,
        -26.315486653091728, -48.31526672127188, -96.05176533673017,
        -133.189841599909, -353.39952612993443, 150.90670251969735,
        -622.6277593313, -1461.5017842629939, 2621.2839732861958,
        -797.4214233918754, -1141.9271710506443, -1665.2932495998289,
        -238.3366310615267, 49.92317026240907, 61.50646507554549,
        153.25086116745172, 46.446591336114025, 13.171326963991907,
        10.42525251508628, 5.909384131444669, 3.748181741060674,
        -5.009304162269796, -8.337711853484214, -11.383176063308646,
        -7.290456859187921, 0.05510266399852992, 6.210045216504963,
        0.5025878115353007, 8.7133201843541, 8.009949196961943,
        3.408178127748358, -6.12419710220284, -12.736128845291272,
        -45.232132533425755, -61.3791750629996, -153.42214558232837,
        -67.5950975145708, 85.62589910386124, -58.961155821254636,
        56.88320697106799, -1105.7125877167775, -1066.0901100808514,
        -1171.2701320923616, -223.1510166903665, -49.090655504704266,
        242.13940044346495, 187.57398243385657, 37.63062482495811,
        28.849867481961542, 8.456955463477327, 4.970283957738858,
        4.402811570225055, 1.43105564783055, -1.929060150422355,
        -6.870206159283182, -7.555783429793225, -6.282815286883121,
        -0.1087059380343404, -0.35173698335235887, 2.55205609592295,
        3.0896458550054593, 4.750522000279903, 1.2377659738692817,
        -1.7806530124299274, -9.187967169255963, -20.16463244939638,
        -65.5912406537027, -60.86948040000092, -62.27175948611826,
        -69.04223895420877, 113.44009243151515, -280.2462227959351,
        -361.29505764988915, -32.2389038646619, 397.42763261597736,
        412.9673372382922, 359.76401050336045, 192.6210800054142,
        122.25882006598455, 49.109708531705785, -0.8341677081323136,
        2.4803036198391495, 2.5045331182816137, 2.1157075816863125,
        2.045683555559115, -1.3319639541688315, -4.10576581321596,
        -5.262260990501468, -3.122429370817716, -0.23490025627283884,
        0.40862649299968534, 1.019092681419275, 2.6652215067301066,
        2.390293795931129, 1.3072901204360872, -2.1976906085986245,
        -4.720528993014994, -17.96465868682184, -21.918559933832515,
        -40.85455217934482, -68.24351076369831, 25.856495589804037,
        -73.74721318359471, 26.189735785049756, -56.7264268907042,
        461.88238037931336, 400.3662547887042, 367.42140066372616,
        233.95717316464078, 120.24788693419019, 56.86229814651989,
        16.52842380846973, 5.508176303740889, -2.7285347510623343,
        0.9176847348583501, 1.922818700657754, 0.8587866218152932,
        -0.08203172365733125, -3.1986596327501684, -2.7995613930163934,
        -2.624028681216124, 0.08223536455831822, 0.1338442362392752,
        1.9947594371394528, 1.3437508199980643, 2.6398410865992954,
        0.7375829037978984, -0.13078900915043976, -4.49533432925064,
        -5.195033590914489, -13.12242317098767, -25.523369493146305,
        -12.192196214097944, -25.868477512213353, 2.906678292088343,
        34.10657416101557, 256.00130492151595, 208.58597838816522,
        310.3347945923577, 177.03891975992664, 97.122360992021,
        48.48851018711319, 24.52891787285255, 4.627203457515712,
        -1.3571647909533122, 0.2062126948263101, -0.40867746076362715,
        0.9921576725859489, 1.531376825664169, -0.05277298563976486,
        -1.5552847934304939, -2.8318141898835965, -1.44106038161314,
        -1.7221472209588695, 0.6178674780052442, 0.48048213041449506,
        1.7161555169971148, 0.8868975797919587, 1.4761658864245926,
        -1.7252645996654892, -0.8152878302494553, -3.3158091950668926,
        -7.6513645380807835, -2.928185992788675, -12.462674546124116,
        -7.4696827367159715, -23.236903073402107, 43.7319836231637,
        92.32188204199035, 70.11766837978374, 34.22664935631408,
        47.258739472197036, 25.375797504306092, 12.406583490274283,
        8.653561843269081, 1.0747519793409035, -0.44324044078252567,
        -1.7584707522262704, 0.724586071659981, 0.7069206586421795,
        0.7707634519125917, 1.064906925019734, -2.726198542841819,
        -1.9302074459527443, -3.37542502778594, 0.506733493065497,
        -0.6403167230929973, 1.374850007673434, 0.729505526484903,
        2.3325303094340692, -0.9986473214357906, 0.7819578744693423,
        -1.1999635798104886, -3.4858876190620522, -1.4991310089769327,
        -2.843375506924322, 3.7638952884372583, 1.240098013963287,
        -2.9542792497780144, 1.823435568047936, 49.57624474623547,
        19.014215780516388, 30.877310974744532, -1.1221271518157558,
        7.8208026967228905, 2.609067592037944, 1.2521971880796572,
        -0.9950506434595828, -1.3975466814991453, -0.5733840782028455,
        -1.8697004151394911, 2.370028050564138, 1.696784850403636,
        -0.6151974047873662, -1.3317994275810727, -4.207174624734692,
        -0.8583473478041032, -1.4672332071937433, 2.6381100233578914,
        -2.417676985149717, 2.013107400019082, -1.626262859601891,
        3.9814331515508763, -0.027677673297514374, -2.444607041276003,
        -1.6150024285043403, -4.122758914406767, -1.7068861549694658,
        2.2919486155920237, 12.185386506158462, 9.103962312567619,
        7.15976047067928, -5.408715124986016, 0.9697416211757905,
        -11.947201833901593, 6.633062025249099, 2.115208521813355,
        3.546929348907518, 0.6228361674031171, -1.3522725353705505,
        -2.4444202103018355, -1.5690941230144015, -0.006985877860368016,
        -2.2282653754616524, 3.828430830887377, 3.1912913728027457,
        -5.5805618725494135, 0.13049495818795365, -3.5197176720292105,
        1.8802124921714005, -2.6189977871286096, 2.1235611153433935,
        -7.146308976942236, 4.772931412347173, 2.1077672614040215,
        -0.8191012589463181, 0.7205262469271351, -3.484240274988763,
        -4.182911530688638, -4.399432534457007, 3.095356592907991,
        11.949390330752637, 23.68013662152991, 21.558658775121675,
        22.744598059672118, 24.94332876792813, 28.90135272218845,
        12.814680673201753, 13.644932734111247, 5.45768556544121,
        2.4025753394703617, -1.167335562531859, -2.4971924284976894,
        -1.8952846661475429, -1.292741941276348, 2.790273201996955,
        -4.347701083439493, 3.742325362160104, 4.395980410805589,
        -8.925799415294772, 2.882370251254919, -5.057769871464573,
        3.1829717367300585, -13.324209534416688, 6.278504535455041,
        -0.8748983428436319, -0.8526310432157135, 4.488566215307324,
        -0.5311023217265213, -1.6389132121610095, -4.394554386416681,
        -4.293634482862569, 0.4874520575309819, 15.895360345460416,
        25.16961738329208, 33.91844547329262, 23.996907911576923,
        23.2512772693596, 5.15431566471437, 18.55410282660839,
        16.359265688234956, 10.23124463361384, 1.5587865083621433,
        -1.4683911434431964, -2.958105786087343, -1.5689869488245065,
        -0.9605122563484721, 1.7578951205789273, 6.663835293882251,
        -9.490177549910648, 4.131747327103883, 10.951455398944859,
        -15.360897164532773, 5.739294741971535, -17.045217645164048,
        5.844968444410362, -3.5521886878464675, -7.3858280585812945,
        5.734734089519626, 0.4908832539545151, 0.9866663790534967,
        -1.0149409800154179, -1.6832477381822215, -2.5467748158366237,
        2.090406582384414, 13.443724261124899, 31.761133485201317,
        33.67118616661112, 40.70719160876065, -1.150982612793645,
        21.09677957250432, 10.924705320167561, 7.368877610403945,
        6.47335333926665, 1.1232923919614803, -2.443130294149275,
        -2.7804484266994756, -1.6225398299131664, 0.6478030911844409,
        2.579395187133014, 3.112405638409599, 9.383274359768524,
        -14.19595431303103, -0.5760898854676106, 19.47939047921927,
        -31.200338855208866, 14.100113777774123, -5.385666264437839,
        -10.946378631138824, 4.4142064356850845, -3.906665232225006,
        0.6684491059860498, 1.0227755630951, 0.6613753856807533,
        -0.38567118503773246, 0.24821124990411303, 3.587284123143521,
        14.053276636456639, 24.260931372233497, 33.64745909564876,
        7.652927123158831, -9.215137707870635, -38.31166585868664,
        -16.121399661234683, -5.99278681782985, -2.770136530421177,
        -3.714008894587047, -3.0788396721523017, -3.0904878618769733,
        -1.8655827999533823, 0.43690140001808947, 4.156119490868076,
        4.385895239208535, 2.7714027971729753, 9.257895969243517,
        -19.629364588289473, -14.072043519544888, 36.373196183604975,
        -13.61372365841147, -9.458342331116125, 8.528458327752043,
        -6.174465145795059, -2.2310052363098367, -1.75629520897435,
        1.153969335081464, 1.7596902661237352, 1.8196834579374304,
        2.022290334087173, 5.164682908483578, 12.770276815017757,
        24.46979490512981, 27.822785449092486, 29.82854034209125, 0,
        -3.7653763488297254, -24.75730590440647, -19.738984856989376,
        -8.266461976159446, -4.649514459183804, -3.656340919703911,
        -2.914764188547905, -2.2830188616483764, -0.10916825448095578,
        2.391697766817782, 5.941240494184604, 2.1224657474819093,
        3.9401472638367774, -2.144527732326695, -10.774805376941604, 0,
        10.774805376941531, 2.144527732326683, -3.940147263836795,
        -2.1224657474819155, -5.941240494184617, -2.3916977668177926,
        0.10916825448094437, 2.2830188616483764, 2.9147641885479065,
        3.6563409197039234, 4.649514459183814, 8.26646197615945,
        19.73898485698941, 24.75730590440644, 3.7653763488297773,
        9.215137707873652, -29.828540342087546, -27.822785449090652,
        -24.46979490512937, -12.770276815017642, -5.164682908483464,
        -2.022290334087153, -1.8196834579374237, -1.7596902661237566,
        -1.1539693350814775, 1.7562952089743382, 2.231005236309821,
        6.1744651457950415, -8.52845832775212, 9.45834233111612,
        13.613723658411436, -36.37319618360493, 14.07204351954484,
        19.629364588289484, -9.257895969243535, -2.7714027971730033,
        -4.385895239208558, -4.156119490868093, -0.4369014000181147,
        1.8655827999533605, 3.090487861876973, 3.0788396721523177,
        3.7140088945872396, 2.770136530421462, 5.992786817830616,
        16.121399661236502, 38.31166585868818, 1.1509826127964509,
        -7.652927123156882, -33.647459095647825, -24.260931372233326,
        -14.053276636456571, -3.5872841231435073, -0.2482112499041089,
        0.3856711850377551, -0.6613753856807607, -1.0227755630951023,
        -0.6684491059860727, 3.906665232224975, -4.4142064356851165,
        10.946378631138813, 5.385666264437834, -14.100113777774116,
        31.200338855208855, -19.47939047921935, 0.5760898854675786,
        14.195954313030994, -9.383274359768562, -3.112405638409594,
        -2.579395187133034, -0.6478030911844564, 1.6225398299131557,
        2.780448426699469, 2.4431302941492916, -1.1232923919613498,
        -6.473353339266396, -7.368877610403441, -10.924705320166419,
        -21.09677957250195, -23.25127726935768, -40.70719160875883,
        -33.67118616661006, -31.7611334852009, -13.443724261124748,
        -2.090406582384377, 2.5467748158366237, 1.6832477381822348,
        1.0149409800154132, -0.986666379053487, -0.49088325395452825,
        -5.734734089519665, 7.385828058581301, 3.5521886878464564,
        -5.844968444410324, 17.045217645163998, -5.7392947419715155,
        15.360897164532778, -10.951455398944907, -4.131747327103875,
        9.490177549910666, -6.66383529388227, -1.7578951205789377,
        0.960512256348448, 1.5689869488244914, 2.958105786087338,
        1.4683911434432237, -1.5587865083620118, -10.231244633613667,
        -16.359265688234554, -18.554102826607274, -5.154315664712993,
        -24.943328767927714, -23.996907911576475, -33.91844547329208,
        -25.169617383291836, -15.895360345460304, -0.487452057530983,
        4.293634482862555, 4.394554386416715, 1.6389132121610113,
        0.5311023217265384, -4.4885662153073405, 0.852631043215709,
        0.8748983428436312, -6.278504535455005, 13.324209534416719,
        -3.1829717367300314, 5.05776987146457, -2.8823702512549096,
        8.925799415294765, -4.395980410805612, -3.742325362160086,
        4.3477010834395236, -2.7902732019969543, 1.2927419412763401,
        1.8952846661475349, 2.4971924284976934, 1.1673355625318764,
        -2.4025753394703346, -5.457685565441166, -13.644932734111133,
        -12.814680673201632, -28.901352722188015, -0.9697416211750332,
        -22.744598059671098, -21.55865877512123, -23.680136621529623,
        -11.949390330752514, -3.0953565929079563, 4.399432534457,
        4.182911530688664, 3.484240274988765, -0.7205262469271163,
        0.8191012589463207, -2.1077672614040264, -4.772931412347166,
        7.146308976942229, -2.1235611153433602, 2.618997787128679,
        -1.8802124921713912, 3.5197176720292407, -0.1304949581879572,
        5.580561872549461, -3.191291372802759, -3.828430830887353,
        2.228265375461667, 0.006985877860328306, 1.5690941230143916,
        2.4444202103018267, 1.3522725353705702, -0.6228361674030838,
        -3.546929348907534, -2.1152085218133783, -6.633062025248768,
        11.947201833901675, -19.01421578051531, 5.4087151249861485,
        -7.159760470678993, -9.103962312567507, -12.18538650615837,
        -2.2919486155920032, 1.7068861549694805, 4.122758914406779,
        1.615002428504344, 2.4446070412760443, 0.027677673297527423,
        -3.981433151550863, 1.6262628596018724, -2.0131074000190696,
        2.4176769851497326, -2.638110023357861, 1.4672332071937413,
        0.8583473478041416, 4.2071746247347095, 1.331799427581099,
        0.6151974047873869, -1.6967848504036496, -2.3700280505641422,
        1.8697004151394931, 0.5733840782028331, 1.397546681499154,
        0.9950506434595889, -1.2521971880796428, -2.609067592037973,
        -7.820802696722901, 1.1221271518159068, -30.877310974743335,
        -70.1176683797825, -49.57624474623531, -1.8234355680484657,
        2.954279249777826, -1.2400980139631994, -3.7638952884372125,
        2.8433755069243154, 1.499131008976947, 3.4858876190620642,
        1.1999635798105424, -0.7819578744693196, 0.9986473214357916,
        -2.332530309434083, -0.7295055264848886, -1.3748500076734225,
        0.6403167230930256, -0.5067334930655034, 3.375425027785985,
        1.930207445952772, 2.72619854284187, -1.0649069250197167,
        -0.7707634519125544, -0.7069206586422051, -0.7245860716599976,
        1.7584707522262737, 0.443240440782505, -1.0747519793408324,
        -8.653561843268937, -12.406583490274217, -25.375797504305602,
        -47.25873947219602, -34.226649356312784, -208.58597838816522,
        -92.32188204199083, -43.731983623163735, 23.236903073401958,
        7.469682736715982, 12.462674546124104, 2.928185992788677,
        7.651364538080827, 3.3158091950668926, 0.8152878302494978,
        1.7252645996655027, -1.4761658864245817, -0.8868975797919583,
        -1.7161555169970975, -0.4804821304144749, -0.6178674780051872,
        1.7221472209588695, 1.4410603816132017, 2.8318141898836315,
        1.5552847934305372, 0.05277298563978073, -1.5313768256641445,
        -0.9921576725859278, 0.40867746076360606, -0.2062126948263101,
        1.3571647909533708, -4.627203457515691, -24.528917872852457,
        -48.48851018711318, -97.12236099202084, -177.03891975992676,
        -310.3347945923578, -461.88238037931535, -256.0013049215171,
        -34.106574161017335, -2.906678292089301, 25.868477512213314,
        12.192196214097933, 25.52336949314624, 13.12242317098773,
        5.195033590914491, 4.495334329250737, 0.13078900915048275,
        -0.7375829037978546, -2.6398410865992936, -1.3437508199980366,
        -1.9947594371394133, -0.13384423623915356, -0.08223536455833068,
        2.624028681216258, 2.7995613930164374, 3.1986596327502643,
        0.0820317236573693, -0.8587866218152375, -1.9228187006577324,
        -0.9176847348582973, 2.728534751062311, -5.50817630374071,
        -16.528423808469462, -56.862298146519464, -120.24788693418984,
        -233.9571731646403, -367.42140066372525, -400.36625478870656,
        32.23890386466014, 56.72642689069964, -26.189735785051667,
        73.74721318359408, -25.85649558980411, 68.24351076369864,
        40.85455217934509, 21.91855993383282, 17.96465868682183,
        4.720528993015179, 2.197690608598713, -1.3072901204360032,
        -2.39029379593111, -2.6652215067300165, -1.0190926814191563,
        -0.4086264929994344, 0.23490025627283342, 3.122429370817941,
        5.262260990501599, 4.105765813216099, 1.331963954168899,
        -2.0456835555590454, -2.1157075816862583, -2.504533118281568,
        -2.4803036198391473, 0.8341677081324829, -49.10970853170554,
        -122.25882006598383, -192.6210800054143, -359.76401050336045,
        -412.9673372382936, -397.42763261597815, 1066.0901100808455,
        361.29505764988636, 280.2462227959299, -113.44009243151743,
        69.04223895420859, 62.27175948611885, 60.869480400001216,
        65.59124065370337, 20.164632449396354, 9.18796716925631,
        1.7806530124300617, -1.2377659738691233, -4.750522000279865,
        -3.0896458550052697, -2.552056095922777, 0.35173698335277165,
        0.10870593803433028, 6.282815286883449, 7.555783429793403,
        6.870206159283416, 1.9290601504224327, -1.4310556478304128,
        -4.402811570224995, -4.970283957738766, -8.456955463477293,
        -28.849867481960956, -37.63062482495777, -187.57398243385583,
        -242.13940044346546, 49.09065550470147, 223.15101669036463,
        1171.270132092355, 797.4214233918746, 1105.712587716775,
        -56.883206971068894, 58.961155821254195, -85.62589910386123,
        67.59509751457145, 153.422145582329, 61.37917506300045,
        45.23213253342577, 12.736128845291734, 6.124197102203009,
        -3.4081781277481404, -8.009949196961886, -8.713320184353885,
        -0.502587811535033, -6.210045216504566, -0.05510266399853082,
        7.290456859188381, 11.383176063308918, 8.337711853484521,
        5.009304162269923, -3.7481817410605087, -5.909384131444633,
        -10.425252515086191, -13.171326963991898, -46.44659133611351,
        -153.250861167451, -61.50646507554556, -49.92317026240935,
        238.33663106152528, 1665.293249599826, 1141.9271710506428,
        -2184.1299326736644, -2621.2839732861944, 1461.5017842629866,
        622.6277593312957, -150.9067025196971, 353.39952612993454,
        133.18984159990904, 96.05176533673138, 48.31526672127185,
        26.31548665309238, 12.47210594725734, -0.11325917153558851,
        -7.316455816584236, -6.277914142029773, -6.325879336386472,
        -6.761549992870561, -5.785399335493018, 6.894841171865663,
        16.57421537000874, 12.843645059742064, 5.220057623492746,
        -3.813299856725167, -10.051165980763182, -16.420203889130285,
        -29.183435066681557, -64.5705886743102, -181.43163787734505,
        -272.3838235144402, 695.9626147441294, 397.20604751762363,
        -1430.9649107108592, -343.8161049808414, -10840.70196519443,
        3453.3010516439876, -827.616882848196, 1299.088897602802,
        867.9236374610335, 248.20433151041067, 209.92149032340356,
        104.5932404597956, 56.93976849335743, 19.20504507096003,
        9.300602996624374, -3.0671728952866175, 1.5669942788764133,
        -5.575219767602496, -4.794704065680643, -12.570054144236753,
        -3.2879617770347638, 0.4418344453860932, 16.17975893765613,
        15.672094697047777, 15.5141904955638, -6.224922690764802,
        -9.506443517257205, -24.595484776028343, -43.39472549693245,
        -113.80000983072682, -179.30887547689812, -162.42212696599955,
        210.28695062763467, 461.44982475214965, -3231.3822724351485,
        -18380.248977426934, -21415.51152670408, -11789.651384311637,
        6340.076145128395, 3254.3286688062612, -274.13539619635947,
        816.2157446632062, 214.24479740751747, 150.50951383829917,
        62.077231813228565, 28.921613512340514, -1.735374746396482,
        -0.921989296085248, -10.299898240809465, 0.679005237978899,
        -28.35267475528701, 1.4030381833925814, -4.464986157732529,
        13.739274709477487, 12.454719286950338, 19.12568021630095,
        11.158748163655963, -3.305141022990702, -16.992665274592852,
        -22.790809731221124, -60.8521790674469, -118.67047187223945,
        -253.85827683649717, -106.10534760670436, 477.3340941263651,
        -4606.7423967050645, -6140.070633862854, -9240.48168018392,
      ],
    },
  },
  nose_filter = {
    real: [
      3.0408379415611857, 0.3782226136313794, 1.1747173276627942,
      0.877915728669575, 0.2742957852453699, -0.26015038230887205,
      -0.04589694540462394, 0.18194913988848616, -0.19035992880648842,
      -0.05006447220662765, -0.016354960260506177, 0.07301390320491648,
      0.15053197342937383, -0.47378158951033317, -0.33333577915227425,
      -0.30434085338299055, 0.2637228440630788, -0.3043408533829945,
      -0.33333577915227836, -0.4737815895103303, 0.15053197342937505,
      0.07301390320491558, -0.016354960260505706, -0.05006447220662877,
      -0.19035992880648842, 0.1819491398884854, -0.04589694540462493,
      -0.2601503823088735, 0.2742957852453695, 0.8779157286695746,
      1.1747173276627942, 0.3782226136313796, 1.5638480130127614,
      -1.0502161590016221, -0.28144140655806793, 0.660078762090635,
      0.25575295594566605, -0.11471557758718753, 0.22751157962613866,
      -0.29100003355994186, 0.2924299486585318, 0.1495006131107875,
      -0.02214037256893809, 0.034503572794411914, -0.1741288940590147,
      0.060297128338254534, -0.49717312826403576, -0.10585857030501357,
      0.08278017743008333, -0.11056584899062352, -0.7249941619639279,
      -0.1561286375130836, -0.36586758725441215, -0.19718551141955715,
      -0.04343432877571885, -0.060442748560529294, 0.1383233017601592,
      -0.07171439916436274, 0.31725814504248484, 0.16801904131477274,
      0.5867500433912975, 1.515502516107282, 0.9923275265012264,
      -1.0129349058609656, -1.6725083187014358, -0.6607722409175779,
      2.2217962254133496, 0.983904929170131, -0.16319024909703178,
      0.6727165127601918, 0.16380771710007475, 0.2198937373567962,
      -0.12296413131763459, -0.18224776807046256, -0.011168077595514938,
      0.10364961453623285, 0.1359801303077682, -0.2633959372271572,
      0.039396952561874886, -0.3386669625362648, -0.00431018414096014,
      0.17740469505625342, -0.10830858623812685, -0.3318605121146624,
      0.12060535717228799, 0.0847034747306358, -0.08626242606474008,
      -0.1297477439897661, -0.28426475792188655, 0.21965961682575447,
      0.249559991006423, 0.4680408859416745, -0.46946217188769823,
      -0.31724338121882617, 1.7716903674840139, 0.5657788112446531,
      0.7151259504708923, 0.4910867492003736, 0.9231011957591465,
      -1.093993495771964, 0.18102793706565934, 0.3548459552618665,
      0.48676804973393767, -0.09792392205621177, -7820006368423637e-20,
      -0.016095705887683227, -0.08426320972768339, 0.008033164669753148,
      -0.04485316816646984, 0.006217070245597755, -0.15890945005602863,
      0.22815908460498888, 0.17110516400703918, -0.29052216822588434,
      -0.18224178792918044, -0.018421573557969844, 0.032535239746583795,
      -0.08121081614537759, -0.02917591511509403, 0.09292986204084308,
      0.16824405476099044, -0.2467922762570458, 0.00030176170486908785,
      0.023943010115746295, -0.43281940369171445, -0.5716683662381382,
      1.2482467538506352, 0.7438533137124667, 0.5478774521600256,
      0.9289894130003817, 0.5447330180533513, -0.4877077226718825,
      -0.40370312470951597, 0.3909652762329985, 0.12644205243911047,
      0.0424168022733412, 0.04921969358643031, -0.07774818656606704,
      -0.04361457599167721, -0.00416350617181571, 0.07897222152752259,
      0.05394497327097297, 0.11232623315704468, -0.07044562563150354,
      -0.07205720117764265, 0.12706805404252855, -0.13757198545862262,
      -0.316392239894439, -0.02924048624466061, 0.10973045554309782,
      0.04102655016489614, 0.01891084247324943, -0.05692236942047649,
      0.030805208457151782, -0.1512000567754726, -0.058122663069861934,
      -0.30506910575481916, -0.7903386881329538, 0.026308878650124864,
      1.7521122327973906, 0.6456622051479368, 0.40042515638418263,
      -0.334612088484084, -0.5536942957177082, -0.030140868003777126,
      0.27230784814155334, 0.008194429787378334, -0.030645866021173498,
      0.023928227792328404, 0.09070651048741973, -0.021569631345745226,
      -0.006412781536769337, -0.026343653609827326, 0.00793656086939748,
      -0.187914504113454, 0.14319521757460194, 0.17003550871316017,
      -0.24661106106331201, -0.21167593067635404, -0.09820675094642621,
      -0.04859275944736512, 0.002812925595011044, 0.04986893975541695,
      0.03902323739410261, -0.0036267311717218496, -0.12930461632538415,
      -0.06741132095183786, 0.01080120538703819, 0.07493129145102806,
      0.0657071501308885, -0.22930577035731903, -0.3489467290456117,
      0.37107135970432037, 0.49136473213042475, 0.10645611255411164,
      -0.27741376367012294, -0.015474080963115254, 0.13417678111594294,
      -0.00046677178847574514, -0.06415224549575138, 0.038292630722847554,
      0.017696001575747813, 0.005215763190194701, -0.023883294001795573,
      0.0006051884889793161, -0.08839509351423595, -0.117577580272467,
      -0.019555697374511325, 0.025650630137194243, -0.043746931993730094,
      -0.08846438922222799, -0.07444223373636531, -0.009910405282542814,
      0.06487167324863496, 0.03524540038796406, -0.006516309042701568,
      -0.0652868815022504, 0.023130909787941502, -0.028452880392855154,
      -0.09863825695148282, -0.23382813425811513, -0.07793324996210348,
      0.06957578883921661, 0.8663549110069351, 0.3366879287386472,
      0.342535292159714, -0.019122146869457048, -0.0165213645474579,
      0.09816142594631652, -0.011130337821465129, -0.09254353938682904,
      -0.004697312064988421, -0.008688517253163962, 0.04191586562399075,
      0.004043623749362439, -0.037907101781325205, -0.03902357631677511,
      -0.03769096399730089, -0.11419210623041842, -0.0767327261839726,
      0.12573571356763677, 0.012633232837618465, -0.09894200529309495,
      -0.06188860116512567, -0.009001290088071785, -0.014247675993027883,
      0.027023228844142398, -0.005028277416555645, -0.03166737161574289,
      -0.033818612421867206, -0.01148054478950835, 0.002410610826462259,
      0.08440238506225944, 0.06982454502965495, 0.043930202648898894,
      0.07887205982729704, 0.05505335977604347, 0.0133618922103162,
      0.06845383453783666, 0.08170149012888928, -0.02303497290340257,
      -0.04240668227306069, 0.03514872971871225, -0.037569795749083354,
      -0.0041828274568459145, 0.012961699649937737, -0.015475583648045266,
      -0.027857672235467607, 0.011169867646763214, -0.052725469767566695,
      -0.007014873006769892, 0.053188940442296044, -0.09528942369836853,
      0.016377276604450954, -0.015232023889946105, -0.07768220186100935,
      -0.04820769301430424, 0.014396940553395536, 0.021075876818278678,
      -0.0024069559974744716, -0.01675825964935249, 0.03186587970698775,
      0.03282462316832693, -0.07418273257242147, -0.0800368653632972,
      0.055652716802045685, 0.11130862970905192, 0.07295297283810102,
      0.03509839696826377, 0.07024247972129444, 0.040747896169172335,
      -0.022459274904977577, 0.014257984954846613, 0.019887732012022184,
      -0.04081100434571369, 0.00881916198202256, 0.012579825412037176,
      0.0010521231241174983, 0.006430724322423028, -0.0107697788586532,
      -0.0653135355342319, -0.06276957327196686, 0.11452944472315789,
      0.040092306883550234, 0.12236977033818973, 0.1362440389652974,
      0.027359429809611827, -0.0259369720098807, -0.02141908253190829,
      -0.02797214703330133, 0.00803207985016095, 0.0013100558771969473,
      -0.005256186606445598, -0.009737528949062902, 0.028455863356249757,
      0.05642570174166461, -0.0014166564531825356, -0.03252893302731624,
      -0.01961911263034095, 0.06570068946378961, -0.02757449361247655,
      -0.03281004271094684, -0.021337213333243964, 0.01959299008029563,
      -0.0197597500925572, -0.030135000999364853, 0.03169848862163001,
      0.02352205471086472, -0.021766544372719836, -0.002982743443279076,
      0.007837350887812254, -0.0028057606437618767, -0.03323255078204348,
      -0.07083081897710564, 0.05908045566984465, 0.36951320092865036,
      0.09141112866594404, 0.1640423341726465, 0.06259827020745422,
      0.04498640351980994, -0.08151089674102797, -0.04234161800714717,
      -0.019737461729971092, -0.004897400116936683, 0.01654258945512711,
      0.008801297726757945, -0.013696041496545335, -0.0020268100930256635,
      0.015845305908809133, 0.01645861261947946, 0.0005947400127468152,
      -0.07852906625699135, -0.013402803779002156, -0.003601329999506423,
      0.03757359158202504, -0.007663649465542595, -0.0021144243161753088,
      0.032140257903604356, 0.0203960516207237, -0.013294834505552555,
      0.0021732333351695376, 0.015223562704661827, -0.01560949450401263,
      0.01506060958955546, 0.09924124830572909, -0.19173261262163863,
      0.2450151004066432, 0.26383919410790774, 0.33963060937430933,
      0.34586223870135113, 0.1799263961717959, 0.13137374163691276,
      -0.03649385871696803, -0.041981936023927684, -0.06025893230575421,
      -0.009907901040571007, -0.01002457918175982, 0.016637976300589805,
      0.03162910623031014, -0.011441752446030828, -0.010113005489671789,
      -0.027490450999295705, -0.018258671855796018, 0.06129626392127453,
      0.10180457538537498, 0.0976474425888894, 0.0632464597546009,
      0.0018146068702083835, -0.012539173975430248, -0.008345642545901014,
      0.020763503842579332, 0.03599616230766787, -0.01567557540926648,
      -0.02966274712552258, 0.0213127701286804, 0.08274253615935892,
      -0.10682054954404013, -0.033729052458342255, -0.12662108035586636,
      0.18053751384272299, 0.7094059953008747, -0.21337246968950196,
      0.09763637724258438, 0.1534595963462679, -0.1169011010733575,
      0.030098075283007168, 0.03418607642912205, -0.021402902917041923,
      0.004634909602610389, 0.011776544425663813, -0.008967393462662933,
      0.025701507905379287, -0.0293335209574718, 0.0051215906448292756,
      -9620791778747625e-20, -0.027988212781709806, 0.09369529674769571,
      0.10174972110658871, 0.1657472048824174, 0.09791737794265405,
      0.007579036411405063, 0.031051039914505564, 0.0156926018464825,
      -0.015197940538429407, 0.02615442788343286, 0.03817892786043429,
      0.07391023019778703, 0.0062621769249755375, 0.14786394857966245,
      -0.24133125024592791, 0.3194460948677117, 0.5071563706514025,
      0.3628700351691248, 1.3060302403517683, -0.5146783421531846,
      -0.23826829822593068, -0.009346884510492325, 0.16015106243072727,
      0.02805086056222977, -0.0035899004350242064, -0.005543580364317014,
      -0.02673292092466164, -0.010772744125100176, -0.024390993371714485,
      0.012627431507206405, -0.008720378793527347, 0.017390054254405412,
      0.12375300108425245, 0.24623032442851775, 0.3222060858193874,
      0.14931322115435106, -0.030460558403777184, 0.017160725214558258,
      -0.009483975390035431, -0.04093798312300821, 0.021461267056132466,
      0.05260524273481167, 0.08258391915651302, 0.060994911510484674,
      0.19212485777257118, 0.030490864773295545, 0.1759282405498893,
      0.2988664581273196, -0.3440942993173739, 1.3210609586317499,
      0.059297195869563314, 0.664508151802211, -0.1883702247397409,
      0.3431030805221454, 0.41335445680081984, 0.18880277280085617,
      -0.0025387166530481263, -0.027056960212979365, -0.014992917126512385,
      -0.06582507050815357, 0.005992440061786605, 0.01605849168664445,
      0.09631821867793273, 0.11648035795043635, 0.08310567318064768,
      0.3267135114890813, 0.21720864831216413, 0.29412476851730657,
      0.14853499339159934, 0.01897098102580162, -0.006319176952692685,
      -0.01818046447321878, -0.03325569084071112, 0.04208810691484625,
      0.1159854409909094, 0.13859711550376397, -0.01128947190338442,
      0.08665386837365273, 0.5559656926196751, 0.3768055607681325,
      0.8848889918243579, -1.1019114795534606, 1.0072326177374842,
      -0.25696609936231163, 0.2259560500510676, 0.20124367647634336,
      0.25020565573121023, 0.15194580903531119, 0.054188690404279045,
      -0.03158847298103453, -0.07246900626544177, -0.025752917138555535,
      -0.0471489088024604, 0.07929355690286198, 0.16429646904639772,
      0.19502382977708654, 0.21468548823411557, 0.26510515339808566,
      0.4121092848683291, 0.2413785630078775, 0.03924506370665969,
      0.01328784964664576, 0.0639384949592911, -0.05680891882903846,
      -0.03915972562302279, 0.028736615885883075, 0.07567485585281981,
      0.10715382591497533, 0.2994107520295937, 0.24751816611443234,
      -0.14971685838339424, 0.9272502035304818, -0.5803073077758771,
      1.4965419400087898, -0.5803073077758782, 0.9272502035304832,
      -0.1497168583833956, 0.24751816611443228, 0.29941075202959394,
      0.10715382591497527, 0.07567485585281959, 0.028736615885883075,
      -0.039159725623022994, -0.05680891882903847, 0.06393849495929133,
      0.013287849646645755, 0.03924506370665942, 0.24137856300787733,
      0.41210928486832976, 0.326713511489085, 0.21468548823411696,
      0.1950238297770854, 0.1642964690463976, 0.07929355690286159,
      -0.04714890880246026, -0.025752917138555938, -0.07246900626544235,
      -0.03158847298103462, 0.0541886904042793, 0.15194580903531177,
      0.25020565573121106, 0.2012436764763436, 0.2259560500510681,
      -0.25696609936231096, 1.007232617737484, -1.1019114795534584,
      0.884888991824356, 0.3768055607681309, 0.555965692619678,
      0.08665386837365335, -0.011289471903383815, 0.13859711550376486,
      0.11598544099090989, 0.042088106914846005, -0.033255690840710936,
      -0.018180464473218153, -0.0063191769526928735, 0.018970981025801085,
      0.1485349933915988, 0.2941247685173069, 0.21720864831216452,
      0.24623032442851894, 0.08310567318064788, 0.11648035795043606,
      0.09631821867793225, 0.01605849168664411, 0.00599244006178636,
      -0.06582507050815366, -0.014992917126512623, -0.027056960212979545,
      -0.002538716653047571, 0.18880277280085703, 0.41335445680082034,
      0.3431030805221454, -0.18837022473973905, 0.6645081518022098,
      0.05929719586956184, 1.3210609586317497, -0.34409429931737384,
      0.2988664581273206, 0.1759282405498891, 0.030490864773296485,
      0.19212485777257224, 0.06099491151048541, 0.08258391915651307,
      0.05260524273481172, 0.021461267056132546, -0.04093798312300816,
      -0.0094839753900352, 0.017160725214558203, -0.030460558403777944,
      0.14931322115435064, 0.3222060858193871, 0.09369529674769708,
      0.1237530010842532, 0.017390054254405134, -0.008720378793527876,
      0.012627431507206037, -0.024390993371714388, -0.010772744125100247,
      -0.026732920924662094, -0.005543580364316986, -0.0035899004350241582,
      0.02805086056223034, 0.16015106243072863, -0.009346884510491546,
      -0.23826829822592965, -0.514678342153184, 1.3060302403517683,
      0.3628700351691248, 0.5071563706514024, 0.3194460948677121,
      -0.24133125024592691, 0.1478639485796626, 0.006262176924976706,
      0.0739102301977875, 0.03817892786043468, 0.026154427883432977,
      -0.015197940538429256, 0.015692601846482655, 0.03105103991450549,
      0.007579036411404823, 0.09791737794265432, 0.16574720488241704,
      0.10174972110658852, 0.10180457538537414, -0.027988212781709362,
      -9620791778727375e-20, 0.0051215906448293215, -0.02933352095747186,
      0.025701507905379183, -0.008967393462662796, 0.01177654442566399,
      0.004634909602610413, -0.021402902917041607, 0.03418607642912222,
      0.030098075283007585, -0.1169011010733573, 0.15345959634626896,
      0.09763637724258231, -0.21337246968950468, 0.7094059953008736,
      0.18053751384272154, -0.12662108035586525, -0.033729052458342325,
      -0.1068205495440398, 0.0827425361593592, 0.021312770128680637,
      -0.02966274712552271, -0.015675575409266458, 0.03599616230766798,
      0.0207635038425793, -0.008345642545901005, -0.012539173975430275,
      0.001814606870208027, 0.06324645975460065, 0.09764744258888952,
      -0.013402803779000846, 0.06129626392127332, -0.018258671855796015,
      -0.02749045099929539, -0.010113005489671634, -0.01144175244603072,
      0.03162910623031008, 0.016637976300589583, -0.010024579181759814,
      -0.009907901040570755, -0.06025893230575406, -0.041981936023927795,
      -0.03649385871696789, 0.13137374163691345, 0.17992639617179582,
      0.345862238701351, 0.3396306093743105, 0.2638391941079055,
      0.24501510040664315, -0.19173261262163757, 0.09924124830572889,
      0.01506060958955588, -0.015609494504012908, 0.015223562704661735,
      0.002173233335169546, -0.013294834505552418, 0.02039605162072387,
      0.03214025790360414, -0.002114424316175266, -0.00766364946554255,
      0.037573591582025015, -0.0036013299995066783, -0.027574493612477238,
      -0.0785290662569907, 0.0005947400127465092, 0.016458612619479316,
      0.015845305908809258, -0.002026810093025809, -0.013696041496545191,
      0.008801297726758145, 0.016542589455127047, -0.00489740011693653,
      -0.019737461729970797, -0.042341618007146614, -0.08151089674102786,
      0.044986403519810654, 0.06259827020745319, 0.16404233417264671,
      0.09141112866594406, 0.36951320092864953, 0.05908045566984523,
      -0.07083081897710557, -0.033232550782043346, -0.0028057606437617323,
      0.007837350887812152, -0.0029827434432791976, -0.02176654437271973,
      0.02352205471086483, 0.03169848862162995, -0.030135000999364715,
      -0.0197597500925572, 0.019592990080295483, -0.021337213333244086,
      -0.03281004271094604, 0.03509839696826556, 0.06570068946378826,
      -0.019619112630341284, -0.03252893302731594, -0.001416656453182401,
      0.056425701741664544, 0.028455863356249663, -0.00973752894906295,
      -0.005256186606445511, 0.00131005587719705, 0.008032079850161055,
      -0.02797214703330162, -0.021419082531907708, -0.025936972009880058,
      0.02735942980961241, 0.13624403896529816, 0.12236977033819048,
      0.04009230688355046, 0.11452944472315811, -0.062769573271967,
      -0.065313535534232, -0.010769778858653123, 0.006430724322423077,
      0.0010521231241173155, 0.012579825412037126, 0.008819161982022697,
      -0.040811004345713484, 0.019887732012021993, 0.014257984954846677,
      -0.022459274904977573, 0.04074789616917183, 0.0702424797212939,
      0.05505335977604347, 0.07295297283810104, 0.11130862970905199,
      0.05565271680204555, -0.08003686536329738, -0.07418273257242172,
      0.03282462316832692, 0.03186587970698777, -0.01675825964935249,
      -0.002406955997474462, 0.021075876818278654, 0.014396940553395566,
      -0.048207693014304456, -0.0776822018610092, -0.015232023889946197,
      0.01637727660445112, -0.09528942369836853, 0.05318894044229575,
      -0.007014873006770006, -0.052725469767566646, 0.011169867646763318,
      -0.027857672235467666, -0.015475583648045285, 0.012961699649937817,
      -0.0041828274568459145, -0.03756979574908331, 0.03514872971871221,
      -0.04240668227306084, -0.023034972903402475, 0.08170149012888943,
      0.06845383453783664, 0.013361892210316275, 0.33668792873864783,
      0.07887205982729592, 0.043930202648898596, 0.06982454502965493,
      0.08440238506225957, 0.0024106108264623457, -0.011480544789508253,
      -0.033818612421867275, -0.03166737161574274, -0.00502827741655568,
      0.027023228844142416, -0.014247675993027993, -0.009001290088071238,
      -0.0618886011651253, -0.09894200529309476, 0.01263323283761883,
      0.12573571356763666, -0.07673272618397192, -0.11419210623041808,
      -0.037690963997301666, -0.03902357631677525, -0.03790710178132505,
      0.004043623749362313, 0.04191586562399077, -0.008688517253163995,
      -0.004697312064988438, -0.09254353938682865, -0.011130337821465186,
      0.09816142594631627, -0.016521364547457937, -0.01912214686945752,
      0.3425352921597138, 0.3710713597043204, 0.8663549110069338,
      0.06957578883921638, -0.07793324996210346, -0.23382813425811527,
      -0.09863825695148333, -0.02845288039285465, 0.02313090978794155,
      -0.06528688150225045, -0.006516309042701882, 0.03524540038796402,
      0.06487167324863516, -0.009910405282542379, -0.07444223373636433,
      -0.0884643892222283, -0.043746931993730226, 0.025650630137194336,
      -0.019555697374510583, -0.11757758027246727, -0.08839509351423645,
      0.0006051884889788229, -0.023883294001795972, 0.005215763190194649,
      0.017696001575747886, 0.03829263072284757, -0.06415224549575124,
      -0.00046677178847581285, 0.1341767811159426, -0.015474080963115183,
      -0.2774137636701229, 0.10645611255411111, 0.491364732130425,
      0.645662205147937, -0.34894672904561197, -0.22930577035731828,
      0.06570715013088865, 0.07493129145102859, 0.010801205387038527,
      -0.06741132095183788, -0.1293046163253841, -0.0036267311717218076,
      0.0390232373941025, 0.04986893975541658, 0.002812925595011048,
      -0.04859275944736474, -0.09820675094642502, -0.21167593067635238,
      -0.24661106106331246, 0.17003550871316073, 0.14319521757460188,
      -0.18791450411345456, 0.007936560869396415, -0.02634365360982748,
      -0.00641278153676982, -0.021569631345745438, 0.09070651048741984,
      0.023928227792328456, -0.030645866021173446, 0.008194429787378174,
      0.2723078481415532, -0.030140868003777244, -0.5536942957177085,
      -0.3346120884840844, 0.40042515638418175, 0.547877452160026,
      1.7521122327973908, 0.02630887865012415, -0.7903386881329546,
      -0.305069105754819, -0.05812266306986232, -0.1512000567754718,
      0.03080520845715192, -0.05692236942047645, 0.018910842473248434,
      0.04102655016489636, 0.10973045554309671, -0.029240486244660805,
      -0.3163922398944391, -0.13757198545862218, 0.1270680540425267,
      -0.07205720117764353, -0.07044562563150432, 0.11232623315704422,
      0.05394497327097227, 0.07897222152752154, -0.00416350617181658,
      -0.04361457599167779, -0.07774818656606759, 0.04921969358643038,
      0.04241680227334132, 0.12644205243911066, 0.39096527623299887,
      -0.4037031247095156, -0.48770772267188234, 0.5447330180533501,
      0.9289894130003811, 0.7151259504708923, 0.7438533137124658,
      1.2482467538506357, -0.5716683662381389, -0.432819403691714,
      0.023943010115746077, 0.00030176170486927514, -0.2467922762570443,
      0.16824405476099039, 0.0929298620408442, -0.029175915115095267,
      -0.0812108161453773, 0.03253523974658334, -0.018421573557966798,
      -0.18224178792918325, -0.2905221682258862, 0.1711051640070395,
      0.22815908460498383, -0.15890945005602886, 0.0062170702455973175,
      -0.04485316816647018, 0.0080331646697509, -0.0842632097276826,
      -0.016095705887684088, -7820006368420517e-20, -0.09792392205621189,
      0.48676804973393806, 0.35484595526186524, 0.18102793706565945,
      -1.0939934957719641, 0.9231011957591454, 0.4910867492003743,
      -1.6725083187014362, 0.5657788112446521, 1.7716903674840145,
      -0.3172433812188264, -0.46946217188769945, 0.468040885941674,
      0.2495599910064237, 0.2196596168257534, -0.28426475792188616,
      -0.12974774398976752, -0.0862624260647399, 0.08470347473063304,
      0.12060535717228706, -0.33186051211466344, -0.10830858623812538,
      0.1774046950562415, -0.004310184140959981, -0.3386669625362712,
      0.0393969525618715, -0.26339593722715154, 0.1359801303077666,
      0.1036496145362314, -0.01116807759551522, -0.18224776807046214,
      -0.12296413131763473, 0.21989373735679868, 0.16380771710007386,
      0.6727165127601912, -0.16319024909703136, 0.9839049291701306,
      2.2217962254133496, -0.660772240917578, 1.5638480130127614,
      -1.0129349058609651, 0.9923275265012277, 1.515502516107282,
      0.5867500433912969, 0.16801904131477496, 0.31725814504248523,
      -0.07171439916435922, 0.13832330176015895, -0.06044274856052339,
      -0.04343432877572056, -0.19718551141955432, -0.36586758725441343,
      -0.15612863751307984, -0.7249941619639332, -0.11056584899062098,
      0.08278017743008294, -0.10585857030502534, -0.49717312826403764,
      0.06029712833825185, -0.1741288940590143, 0.034503572794408806,
      -0.022140372568936324, 0.14950061311078439, 0.2924299486585319,
      -0.2910000335599442, 0.2275115796261395, -0.11471557758718894,
      0.255752955945665, 0.6600787620906332, -0.2814414065580684,
      -1.050216159001623,
    ],
    bottom: {
      real: [
        5837.242024063461, 16421.19056905325, 8527.227518211732,
        3938.41845467232, 969.2100004376409, 269.87346390668256,
        193.53992011404216, 135.14631901451781, 58.523829955616236,
        29.311524302602624, 20.863281166035843, 14.808244655557742,
        11.401757474781434, 9.638649393665329, 8.053859109417678,
        7.471439806212464, 7.271177617526248, 7.471439806212424,
        8.053859109417665, 9.638649393665327, 11.401757474781416,
        14.808244655557761, 20.863281166035858, 29.311524302602734,
        58.523829955616236, 135.1463190145178, 193.53992011404216,
        269.87346390668273, 969.2100004376406, 3938.4184546723186,
        8527.22751821173, 16421.19056905326, 14982.474506443205,
        4755.19857866802, 3083.864201169168, 1502.8058566448747,
        596.268512932032, 262.3552053688135, 201.52671733896852,
        108.13603201941604, 57.999252895466505, 28.992297197792773,
        19.233600066307524, 13.871180161098291, 10.761421361485239,
        8.850682851250665, 7.812558492626262, 7.123450122935638,
        6.6618841738486525, 7.176288470960696, 8.141688980401993,
        8.866363260774406, 11.328672883224474, 14.773155762512141,
        20.0580565285724, 28.68834409907191, 57.995376649220766,
        126.94075502116374, 211.30702516808583, 262.5444859553627,
        752.9602476197267, 2141.536802332785, 3891.366197365788,
        5583.546099008517, 9500.652808667768, 4225.384857328793,
        1708.1934289355966, 562.9450489663958, 526.4142021082113,
        290.26438540271903, 151.3473221830423, 89.3045970775778,
        50.1610416734142, 27.913649363990057, 19.253723232543383,
        14.310501425792925, 10.62253810462022, 8.652074761601527,
        7.679643289534405, 6.9311889072641995, 6.5442165971044535,
        6.83524729637813, 7.253158781826729, 8.812570019717482,
        10.256278085266516, 13.962876672312342, 18.680978544191657,
        27.64161128084435, 51.70590284164593, 92.38303510862865,
        175.23999552329536, 238.6238705323166, 446.2130896894364,
        589.8495064414341, 1459.800700420838, 2983.642166781685,
        6639.698067031166, 3615.9230624353354, 1045.9683029029898,
        541.9569824673339, 551.2292078912385, 269.0174810237252,
        121.81702466062521, 78.61930436899455, 46.26647526114716,
        26.895860643920866, 18.966790938143397, 14.141216689343503,
        10.624588727031869, 8.51206745844691, 7.508407817845805,
        7.127942028564302, 6.550522644160282, 6.597661457074558,
        7.5671769464103935, 8.42937533661321, 10.446992271959362,
        13.755112829750516, 18.515159362788847, 25.868606557166544,
        43.59302593302384, 76.84786004620612, 125.0365119439001,
        241.77755195523335, 523.0849929966005, 633.3655585428983,
        855.6947679023069, 2473.0066947172836, 2803.949655269216,
        1850.6397468329815, 645.7731463695902, 447.0056397685769,
        381.6372474267435, 196.7755433249871, 93.58681681613771,
        72.61236574074685, 43.711482900929944, 27.782222145016455,
        18.647268962291367, 13.844325818813939, 10.350953817244738,
        8.7140342291789, 7.351664195270592, 6.886474159529909,
        6.1226840838853605, 6.718650713141449, 7.014879626817314,
        7.902004601266044, 9.653604858655545, 13.744699851401226,
        17.87227996094296, 25.02588903079783, 38.77546859762585,
        68.22861611587423, 97.80666785184185, 178.52012140604563,
        362.80035213144055, 506.96305099601244, 508.39785887877764,
        1271.7627571663681, 1970.0713813014595, 1211.9708052435174,
        448.82610946730466, 388.9148370038566, 294.26646682781944,
        147.68595350614527, 76.56381892160427, 57.53338100926053,
        37.094893522892434, 25.168957624787666, 17.405368368923924,
        12.931100650610183, 10.211256703797424, 8.378308200770265,
        6.884564767216135, 6.295463031189576, 6.1711525716900475,
        6.285263765474588, 7.131800245728804, 7.812646461498566,
        9.356258005810218, 12.456351018938477, 17.12365920646733,
        22.851195586808732, 34.22708028584924, 57.27396559547706,
        82.12680179596266, 114.0182287640494, 248.69630423497404,
        396.25330408596494, 382.77662480077174, 646.8612706088028,
        1066.195953557621, 770.7452163454607, 344.77171326148743,
        328.2115248838793, 223.6732358532505, 124.39997807543456,
        66.04212498002366, 49.833499278727395, 36.08081235450254,
        24.010000461569632, 16.241873057458708, 11.94801819096188,
        9.663620823552634, 8.173481426927411, 6.8263151892657215,
        6.109400553448764, 5.556036412886669, 6.08951612256523,
        6.737155385092935, 7.561498049402431, 9.303546039908396,
        11.904089289656403, 15.753116847312391, 22.11618678180766,
        33.401673308199264, 45.775772578430164, 60.54280760491739,
        91.41224059968123, 164.58197575163385, 289.9799614501007,
        367.09809735899603, 433.5172945888932, 538.9971467870731,
        436.9735160339028, 214.4570000321332, 226.27353228768246,
        190.72528880002966, 104.24105887361294, 63.0962910283184,
        44.89569211557344, 34.378771692376986, 22.743616534455565,
        14.943130070579064, 11.306154107321404, 9.490726177732828,
        8.057539867813432, 6.624991765631065, 5.80530835366394,
        5.67275940871921, 5.680399455258072, 6.45122342172424,
        7.309182096903841, 8.905316851708879, 11.147020821533502,
        13.978280110937801, 19.308076160210224, 27.380246565144393,
        39.45337202937899, 53.82390657707432, 70.344986096435,
        125.18491111128095, 220.27402210338624, 239.0209596497513,
        253.5280561179115, 337.90351459641266, 301.96557555412664,
        163.1486266603976, 176.1964602722083, 155.2640157056349,
        91.40217063585646, 57.9223709952281, 44.13290601551937,
        31.477476121951593, 19.994026988386896, 14.669539930994308,
        10.52228821405147, 8.949924507684104, 7.416085875937713,
        6.0652235290917815, 5.533683634797245, 5.345334549972072,
        5.525199888029565, 6.049359333226362, 7.498954463790416,
        8.644145711066678, 10.17217183387787, 12.922358897606493,
        16.497840703497662, 24.47352534302224, 36.89322569574956,
        46.488420049270196, 60.00894968185993, 101.55324863109907,
        172.57213254679178, 186.99209153386954, 177.69050334329205,
        224.71115213821386, 219.35401697656656, 131.98987419085088,
        139.58612051732652, 133.97255559613592, 83.71766714607698,
        52.48988401855501, 39.948149447326976, 29.992243301791387,
        19.792293237610107, 13.550533437330548, 10.191515700191694,
        8.725128556525828, 7.013096609958828, 6.041290502053927,
        5.169560945388304, 5.23354642177383, 5.274893760174123,
        5.915118914176224, 6.64049249933847, 8.252563319435486,
        9.86505065394757, 11.857247340871206, 15.821441128307118,
        21.809722446513074, 33.20484260444123, 45.292100524348356,
        53.58823709974399, 86.04657086533335, 138.34470513151498,
        144.28338780744133, 137.47961624149846, 184.36194031651988,
        195.75342807998493, 111.69248606852764, 108.22432115257934,
        110.31477193613289, 70.73795275871473, 45.31608419986612,
        35.221165127538775, 25.132656234698317, 17.80870832888929,
        13.205138111505544, 9.831975695829131, 8.385186971565917,
        6.697914777469541, 5.557794982618686, 5.064013606215784,
        4.915924071395172, 5.174737523892124, 5.621849200313962,
        6.392652273833619, 7.8838556827841355, 9.58804953889033,
        11.2702077240605, 14.675031755421674, 19.961485602094882,
        28.340133288775018, 38.07180730248544, 46.21180594207289,
        70.89628817363239, 115.46517347822648, 119.73189294718243,
        110.21299532100423, 137.4907868217927, 145.21239507063157,
        90.73647550020203, 84.82013466298467, 87.02888773526917,
        58.59278092655856, 39.14047570270828, 30.030590426700837,
        23.561748558876776, 17.07171690133644, 12.059539847971436,
        9.13034699170641, 7.8824915696444915, 6.557457716388455,
        5.450832747202711, 4.631948788952135, 4.85569366970317,
        5.095213989565805, 5.36260614825461, 6.023150477726759,
        7.392912454090475, 8.869713914539098, 10.839689611405708,
        13.484775054138881, 18.12552087046162, 25.51326521840107,
        33.81482175872351, 43.00066071296376, 59.28906756969899,
        89.52310048000626, 96.00283450164133, 88.24840395150595,
        114.22377327036351, 136.39754784126862, 85.13393713749406,
        70.75761358115078, 72.94113644504662, 50.41713140464106,
        35.29732697897046, 27.270836476117434, 20.337170678571646,
        15.328073102208975, 11.22762600822461, 8.889470339904383,
        7.306673249055975, 6.111757001079701, 5.224039680082537,
        4.692794475404797, 4.446269195676172, 4.8997943453914665,
        5.030120352863074, 5.850405985335514, 6.902103078533902,
        8.693648104841767, 10.014300550884089, 12.783989981758968,
        16.915182814597465, 23.037925870268026, 29.781501040175886,
        36.13778662893932, 46.659613314406016, 72.54209688440005,
        80.09830912470618, 76.77256948716943, 87.96931966600367,
        100.35528192635977, 66.39074370667048, 56.29722089299507,
        57.44977691289374, 42.311817158751616, 30.3950154293208,
        24.633397231162515, 18.800000277532757, 13.90634472463726,
        10.685561612392762, 8.772663355326253, 7.37657782226477,
        6.023800684787688, 5.208207432749892, 4.58867196645594,
        4.61664103539597, 4.611514826957056, 4.992077230917985,
        5.644512472351516, 6.798068303404396, 7.497596200534023,
        9.606658686908084, 12.06652313244911, 16.25166382630045,
        21.003823940677318, 27.62293357307126, 33.836788273738165,
        41.87785442344717, 58.53283536970373, 68.23932029676797,
        62.32614973900864, 71.58383095513956, 81.61139186167428,
        61.29060695836405, 49.963935495056425, 49.74402774735454,
        38.555965139546075, 28.313241453630848, 22.404376161451804,
        17.69007471646092, 13.348861556136391, 10.46674681432143,
        8.150736425345137, 6.780493336316558, 5.7303247473649055,
        4.973796153764103, 4.6591603640435, 4.369127354240186,
        4.587644085680502, 4.877527941931284, 5.564315782428927,
        6.510642451461139, 7.651725877469773, 9.397827067443549,
        12.208065227131403, 15.316902707006163, 20.982661610009878,
        26.31786929803148, 32.313264556083666, 38.06286011366607,
        50.10516748474813, 58.219661124046276, 59.8611576800925,
        61.01902036645045, 69.64280516822298, 57.634563900118565,
        46.96752310990223, 43.85887184820529, 34.95764055706675,
        26.50503998364094, 21.71545909517323, 16.236775633007202,
        12.875777825381771, 9.983473961099762, 7.8930497070448,
        6.682971556980369, 5.667219370450012, 5.079424691551845,
        4.681264046528276, 4.618663229753943, 4.621109290436842,
        5.08978657739574, 5.56918107107971, 6.503518731799128, 7.20143269985937,
        9.170362043794405, 12.475838151915292, 15.6623920524898,
        19.528853843427893, 25.07702804540938, 30.833489267211636,
        39.11329640738612, 46.77099142791858, 55.937485646720255,
        57.570245344451905, 57.63781758903021, 59.86039156661088,
        52.77619568232774, 43.83929696702742, 39.83301283219751,
        33.59821343802381, 26.072700016436322, 20.27697550152119,
        16.195672497297036, 12.239826665071417, 9.687521348716507,
        7.737954389393363, 6.378678225480716, 5.595025932784059,
        5.123290382827299, 4.578659230973724, 4.5178908466513406,
        4.578659230973722, 5.123290382827298, 5.5950259327840595,
        6.378678225480715, 7.737954389393368, 9.687521348716508,
        12.239826665071421, 16.195672497297036, 20.276975501521182,
        26.072700016436304, 33.598213438023805, 39.83301283219751,
        43.839296967027416, 52.77619568232774, 59.860391566610836,
        61.01902036645044, 57.57024534445192, 55.937485646720255,
        46.77099142791852, 39.113296407386116, 30.833489267211636,
        25.07702804540937, 19.528853843427893, 15.662392052489803,
        12.475838151915296, 9.1703620437944, 7.201432699859367,
        6.503518731799129, 5.569181071079711, 5.0897865773957385,
        4.6211092904368405, 4.618663229753942, 4.681264046528273,
        5.079424691551845, 5.667219370450009, 6.68297155698037,
        7.893049707044798, 9.983473961099765, 12.875777825381764,
        16.23677563300721, 21.71545909517325, 26.50503998364096,
        34.957640557066775, 43.85887184820525, 46.96752310990224,
        57.63456390011859, 69.64280516822295, 71.58383095513962,
        59.86115768009248, 58.21966112404624, 50.10516748474814,
        38.06286011366608, 32.313264556083666, 26.317869298031482,
        20.982661610009867, 15.316902707006161, 12.2080652271314,
        9.397827067443544, 7.651725877469773, 6.510642451461139,
        5.564315782428928, 4.877527941931286, 4.587644085680501,
        4.369127354240187, 4.659160364043497, 4.973796153764102,
        5.730324747364904, 6.780493336316559, 8.150736425345137,
        10.466746814321423, 13.348861556136386, 17.69007471646092,
        22.40437616145178, 28.31324145363085, 38.55596513954604,
        49.74402774735451, 49.96393549505642, 61.29060695836407,
        81.61139186167424, 87.96931966600363, 62.32614973900866,
        68.23932029676796, 58.53283536970371, 41.87785442344717,
        33.83678827373816, 27.622933573071283, 21.00382394067731,
        16.251663826300444, 12.066523132449106, 9.606658686908084,
        7.49759620053402, 6.798068303404393, 5.644512472351519,
        4.992077230917984, 4.61151482695706, 4.616641035395972,
        4.588671966455937, 5.208207432749891, 6.023800684787687,
        7.376577822264771, 8.772663355326259, 10.685561612392764,
        13.906344724637258, 18.80000027753276, 24.633397231162533,
        30.395015429320793, 42.31181715875161, 57.44977691289373,
        56.29722089299503, 66.3907437066705, 100.35528192635975,
        114.2237732703635, 76.77256948716945, 80.09830912470622,
        72.54209688440005, 46.659613314406, 36.13778662893932,
        29.781501040175893, 23.037925870268033, 16.91518281459747,
        12.783989981758975, 10.014300550884082, 8.693648104841765,
        6.902103078533901, 5.850405985335523, 5.030120352863068,
        4.899794345391461, 4.446269195676173, 4.692794475404802,
        5.224039680082533, 6.111757001079703, 7.306673249055973,
        8.889470339904381, 11.22762600822461, 15.32807310220897,
        20.33717067857165, 27.270836476117438, 35.29732697897047,
        50.41713140464108, 72.94113644504664, 70.75761358115082,
        85.13393713749407, 136.39754784126856, 137.49078682179265,
        88.248403951506, 96.00283450164132, 89.52310048000622,
        59.28906756969897, 43.00066071296374, 33.814821758723504,
        25.51326521840107, 18.125520870461624, 13.484775054138884,
        10.839689611405714, 8.869713914539101, 7.3929124540904745,
        6.023150477726761, 5.362606148254609, 5.095213989565807,
        4.855693669703173, 4.6319487889521325, 5.45083274720271,
        6.55745771638845, 7.882491569644493, 9.130346991706412,
        12.059539847971436, 17.071716901336433, 23.561748558876776,
        30.030590426700826, 39.14047570270828, 58.592780926558504,
        87.02888773526915, 84.82013466298463, 90.73647550020199,
        145.21239507063157, 184.36194031652002, 110.2129953210042,
        119.73189294718252, 115.4651734782265, 70.8962881736324,
        46.21180594207288, 38.07180730248544, 28.340133288775018,
        19.961485602094882, 14.675031755421674, 11.270207724060505,
        9.588049538890328, 7.883855682784136, 6.392652273833623,
        5.621849200313961, 5.174737523892125, 4.915924071395175,
        5.064013606215786, 5.557794982618686, 6.697914777469534,
        8.385186971565918, 9.831975695829147, 13.205138111505548,
        17.808708328889303, 25.13265623469832, 35.221165127538775,
        45.3160841998661, 70.73795275871471, 110.3147719361329,
        108.2243211525794, 111.69248606852767, 195.75342807998487,
        224.71115213821398, 137.47961624149852, 144.2833878074414,
        138.3447051315149, 86.04657086533334, 53.58823709974399,
        45.29210052434834, 33.20484260444123, 21.80972244651307,
        15.82144112830712, 11.857247340871208, 9.86505065394757,
        8.252563319435486, 6.640492499338464, 5.915118914176224,
        5.274893760174123, 5.23354642177383, 5.16956094538831,
        6.041290502053925, 7.013096609958833, 8.725128556525835,
        10.191515700191694, 13.550533437330545, 19.792293237610103,
        29.992243301791408, 39.94814944732701, 52.489884018555,
        83.71766714607696, 133.97255559613592, 139.5861205173265,
        131.9898741908509, 219.35401697656653, 337.90351459641266,
        177.69050334329216, 186.99209153386957, 172.57213254679186,
        101.55324863109904, 60.00894968185994, 46.48842004927018,
        36.89322569574956, 24.47352534302224, 16.497840703497666,
        12.922358897606497, 10.172171833877869, 8.644145711066678,
        7.498954463790413, 6.04935933322636, 5.525199888029563,
        5.345334549972072, 5.533683634797246, 6.065223529091781,
        7.416085875937713, 8.949924507684111, 10.522288214051471,
        14.669539930994311, 19.99402698838689, 31.477476121951593,
        44.13290601551936, 57.92237099522811, 91.40217063585641,
        155.2640157056349, 176.1964602722083, 163.14862666039767,
        301.96557555412653, 538.9971467870728, 253.5280561179116,
        239.02095964975135, 220.2740221033861, 125.18491111128091,
        70.34498609643492, 53.82390657707433, 39.45337202937895,
        27.380246565144397, 19.308076160210238, 13.978280110937792,
        11.147020821533506, 8.905316851708882, 7.309182096903844,
        6.451223421724239, 5.680399455258068, 5.672759408719208,
        5.805308353663939, 6.624991765631067, 8.05753986781343,
        9.49072617773283, 11.306154107321403, 14.943130070579077,
        22.74361653445556, 34.378771692377, 44.895692115573446,
        63.09629102831839, 104.241058873613, 190.72528880002952,
        226.27353228768243, 214.45700003213315, 436.97351603390234,
        1066.195953557621, 433.5172945888933, 367.098097358996,
        289.97996145010086, 164.58197575163376, 91.4122405996812,
        60.542807604917364, 45.77577257843016, 33.401673308199264,
        22.11618678180764, 15.753116847312398, 11.904089289656401,
        9.303546039908392, 7.561498049402436, 6.737155385092932,
        6.08951612256523, 5.556036412886668, 6.1094005534487605,
        6.826315189265727, 8.17348142692741, 9.663620823552627,
        11.948018190961893, 16.241873057458722, 24.01000046156964,
        36.080812354502534, 49.833499278727416, 66.04212498002366,
        124.39997807543459, 223.67323585325056, 328.21152488387946,
        344.7717132614875, 770.7452163454602, 1970.0713813014588,
        646.861270608803, 382.7766248007717, 396.2533040859646,
        248.69630423497387, 114.01822876404945, 82.12680179596269,
        57.273965595476994, 34.22708028584923, 22.85119558680874,
        17.12365920646733, 12.456351018938475, 9.356258005810217,
        7.812646461498566, 7.131800245728804, 6.285263765474588,
        6.1711525716900475, 6.295463031189579, 6.884564767216139,
        8.378308200770256, 10.211256703797417, 12.931100650610194,
        17.405368368923916, 25.168957624787648, 37.094893522892434,
        57.53338100926052, 76.56381892160427, 147.68595350614524,
        294.26646682781944, 388.9148370038566, 448.8261094673048,
        1211.9708052435162, 2803.949655269216, 1271.7627571663686,
        508.3978588787775, 506.96305099601244, 362.8003521314405,
        178.52012140604566, 97.80666785184182, 68.22861611587415,
        38.77546859762585, 25.02588903079784, 17.872279960942965,
        13.74469985140124, 9.653604858655543, 7.902004601266046,
        7.014879626817316, 6.718650713141439, 6.122684083885363,
        6.8864741595299055, 7.351664195270594, 8.714034229178903,
        10.350953817244736, 13.844325818813926, 18.64726896229136,
        27.782222145016434, 43.71148290092994, 72.61236574074687,
        93.58681681613766, 196.7755433249871, 381.6372474267434,
        447.0056397685771, 645.7731463695901, 1850.6397468329806,
        6639.698067031165, 2473.006694717284, 855.694767902307,
        633.3655585428982, 523.0849929966007, 241.7775519552335,
        125.03651194390012, 76.8478600462061, 43.59302593302385,
        25.868606557166554, 18.515159362788847, 13.755112829750496,
        10.44699227195936, 8.429375336613218, 7.567176946410392,
        6.597661457074561, 6.55052264416028, 7.127942028564301,
        7.508407817845802, 8.512067458446909, 10.624588727031863,
        14.141216689343507, 18.966790938143404, 26.89586064392087,
        46.26647526114716, 78.61930436899458, 121.81702466062518,
        269.01748102372505, 551.2292078912383, 541.9569824673345,
        1045.9683029029893, 3615.9230624353345, 9500.652808667768,
        2983.6421667816867, 1459.8007004208382, 589.8495064414337,
        446.2130896894364, 238.62387053231652, 175.23999552329542,
        92.38303510862855, 51.705902841645944, 27.641611280844312,
        18.680978544191667, 13.962876672312348, 10.25627808526652,
        8.812570019717501, 7.25315878182674, 6.8352472963781254,
        6.544216597104452, 6.931188907264199, 7.679643289534406,
        8.652074761601519, 10.622538104620222, 14.310501425792921,
        19.253723232543386, 27.913649363990046, 50.161041673414196,
        89.30459707757784, 151.3473221830423, 290.2643854027191,
        526.4142021082113, 562.945048966396, 1708.193428935596,
        4225.384857328791, 14982.4745064432, 5583.546099008519,
        3891.3661973657854, 2141.536802332784, 752.9602476197266,
        262.54448595536314, 211.3070251680859, 126.94075502116375,
        57.99537664922077, 28.688344099071898, 20.0580565285724,
        14.773155762512143, 11.328672883224492, 8.866363260774417,
        8.141688980402005, 7.176288470960711, 6.661884173848655,
        7.123450122935626, 7.812558492626261, 8.850682851250665,
        10.76142136148522, 13.871180161098282, 19.233600066307527,
        28.99229719779277, 57.999252895466505, 108.13603201941609,
        201.52671733896852, 262.35520536881353, 596.2685129320319,
        1502.8058566448742, 3083.8642011691672, 4755.198578668018,
      ],
      imag: [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ],
    },
    imag: [
      0, -0.13871927675086548, -0.5582757149609217, -0.8538326372408309,
      -0.4670119338361595, 0.047809537946767316, -0.3426920474802197,
      0.1583158937413706, 0.20589774809377467, -0.21944378817656213,
      -0.12654666933988368, -0.19544466487854822, -0.09644626945019073,
      -0.2265628704083768, 0.10840537931386109, -0.055457499657790024, 0,
      0.055457499657784036, -0.10840537931384955, 0.22656287040837902,
      0.09644626945018958, 0.19544466487854698, 0.1265466693398799,
      0.21944378817656165, -0.20589774809377467, -0.15831589374137045,
      0.34269204748022014, -0.04780953794676766, 0.4670119338361596,
      0.8538326372408298, 0.5582757149609219, 0.1387192767508655,
      -1.279550584464304, -0.8069590311966991, -0.5066002982483182,
      -1.4561178571661, -0.13414323846201096, -0.2505529731115498,
      -0.640274048196847, -0.19951473048424853, 0.3313791296331769,
      -0.04749824375932937, -0.24064979253244873, 0.1395435157196932,
      0.17789090203786645, -0.044374683774468404, -0.36806933922228663,
      0.19528135326361654, 0.3299964626914292, -0.13015393203002068,
      0.1959681784626765, 0.28571835588367483, 0.2270580105241475,
      -0.14508578389537852, 0.23457709892354506, 0.21163882649779878,
      -0.20150153854805303, 0.060946718066345364, 0.3100404128586439,
      -0.2625838718707748, 0.13955938857309563, -0.2449447076348287,
      0.06851005109099272, -1.1758121586434307, -1.368201172600149,
      -1.6899938281650106, -0.7501926868865519, 0.6891128285175293,
      0.44086751164178845, -0.2315595903433902, -0.545103158770842,
      0.26585764990704713, 0.2624959582084973, -0.04514609184617117,
      0.011517786678353055, -0.05790784432037342, 0.07685412425301096,
      0.0035092112107953564, -0.23588030048916386, -0.04827784038071106,
      -0.21489820671404902, 0.2681728717818591, -0.027468417557455105,
      0.2987317445654509, 0.07289920747928859, 0.023829771073631354,
      0.006649117012129198, 0.004829873646791909, -0.13057930804766787,
      -0.2694620959312879, 0.39240115086507854, 0.8531772106141665,
      -0.11752989424299426, 0.9999870738966831, 0.5578743616729666,
      -1.0314907737559058, -1.5043263157657751, -1.3830149751777026,
      -0.20446853801739454, -0.2836403310191183, 0.6830314716152905,
      0.03902721990981517, -0.18273076418691683, -0.013466871818696777,
      0.028891896132398606, -0.06862124221450072, -0.02679286952467542,
      0.18842973810535804, 0.06839228253508749, -0.17097210848547728,
      -0.23288712244734344, -0.3141661235870828, 0.2728416921191384,
      -0.07243899022541153, 0.1202436118466384, 0.06744326225711779,
      -0.004045232640019184, -0.15231382612170316, 0.020438609938141238,
      0.10773227995476008, -0.1646961578394999, -0.034526357222664054,
      0.3404569968631755, 0.3582562672018631, 0.5020328221472785,
      -0.9005057884056485, 1.1141651843864948, -1.0547694551235964,
      0.15113295529591572, -0.4201199738298069, -1.1306687523196075,
      0.5990489956312235, 0.1278247611955642, -0.26469201284371935,
      -0.0028564673365734715, 0.2587885502662681, 0.0007864520134104085,
      -0.17181320075266995, 0.013143422355015144, 0.05023839674084175,
      0.07215692285898792, 0.04160467398259256, -0.0112715468909201,
      -0.016101389694688766, -0.3126936366227507, 0.0949743341513004,
      -0.06786938796696873, 0.14811752790953986, 0.010724993842567176,
      -0.07149566160435743, -0.037154193600070516, 0.05779163337935353,
      0.09493793106291729, -0.1272883333159909, -0.01740846979628495,
      0.6200376238621287, 0.07441700456397177, -0.12904495334293709,
      -1.4636084587609224, -0.0367437300827803, -0.77470195486186,
      -0.60686918965332, 0.6287263620045662, -0.46894237369717673,
      -0.18368617361305525, 0.26816260026693856, 0.13447215443394772,
      0.04100815493405749, -0.017107991149299187, -0.0680369475996533,
      -0.01240601732954733, 0.05935692746192456, 0.12615835751185028,
      0.053672308552617974, 0.03774974359224236, -0.10597138547480481,
      0.022172258797336697, -0.058681894939636686, 0.12792055300624736,
      -0.06015432347010594, 0.03229830899926915, -0.015701976416949814,
      0.0007367446231764113, 0.07712597645572114, 0.05564408487662822,
      -0.06598174001891982, -0.14567847379973994, 0.039540586335773356,
      0.2491706386704154, -0.6432675339043068, 0.3675466403998282,
      -0.0696498769749482, 0.2952063874323651, -0.011417685121456805,
      -1.0450941798657123, -0.17374602795438093, 0.19930768818407893,
      -0.1556206112582631, 0.05581712853807612, 0.1790093649902748,
      0.005237402448426343, -0.04259609882328368, -0.02083426192853383,
      0.03668659345054796, 0.0007688026095817875, 0.06171969247781091,
      0.027700064466885506, 0.10661165850403151, -0.13945785164947772,
      -0.05054425815546071, -0.11937846922953205, 0.03439955883717337,
      0.02521789889898339, -0.004746861819041827, -0.02825685744844651,
      0.029239764799856467, 0.046539635523190424, -0.03331642390248576,
      -0.15842957449053302, 0.1474114560630888, 0.1752194519195491,
      -0.07562928201952297, -0.9196871674688946, -0.4550470204476488,
      -0.12177128356890227, -0.10462001130261206, 0.1804016527269576,
      -0.047005347129142915, -0.19200701617075638, 0.1133507155810588,
      0.14315736053243958, -0.06754552046591941, -0.0022066601859379556,
      0.008400134072988386, 0.00493380069781825, 0.016196236751475263,
      0.0664195740691833, -0.012240235365542763, 0.01443312883853778,
      0.023674926554515096, -0.017114978073907605, -0.1437989861779111,
      0.08430372577238564, 0.005677992326511777, 0.048321020114327755,
      0.022849248448590556, 0.012395399307186424, 0.023865191872962568,
      -0.006037515267849562, -0.021897165586045375, -0.09217332722109582,
      -0.17587869380621102, 0.09199292532210088, 0.014980171338571357,
      0.0086063527817299, 0.098130362913165, 0.130338354535672,
      0.09420330567759944, -0.19730813245926024, -0.10041080102702246,
      0.07593204274580358, 0.02113428762188104, -0.05957553232524452,
      0.008299212542201392, 0.015272751179096435, 0.009024853611406095,
      -0.019251438395354602, -0.015788972597383853, 0.003250945662643008,
      0.03296897547944033, -0.015058032290062954, 0.017643635220692015,
      -0.06885700316953144, 0.030070570566209365, -0.12793975070954616,
      -0.04353483487601328, 0.0017423598025251587, 0.028592812647173952,
      0.0036967486190428137, 0.009045316783825322, -0.016259252101333162,
      -0.005207681729782719, 0.018046490267575967, -0.026168992315517926,
      -0.08307703486887791, 0.032798990212655046, -0.027546636940189637,
      -0.12409557570816734, -0.008835607182220642, -0.034333260533212014,
      0.05617729507532258, 0.05799439311344064, -0.032566171451921935,
      -0.010465798382464413, 0.020079425427313443, -0.017396471253638312,
      -0.017870360905994483, 0.010919865739753416, 0.012363627500514531,
      -0.01431321541581572, 0.03420155792081711, 0.10796975372596095,
      0.21064351401911494, -0.04601640195702946, -0.0838033070266082,
      -0.15128619138644472, -0.07074541532788599, -0.06951503451164355,
      0.07063841806481566, -0.008001903562601612, 0.02654845111893607,
      0.019862790828204354, -0.00386983557629617, -0.020866890117519677,
      -0.004808443274984591, -0.00364516409639753, -0.0026341276434262537,
      -0.0023099396961399252, 0.04390810066375783, 0.09677203374284404,
      0.04918905117971889, 0.07060077152873424, -0.02677362863360314,
      -0.05973226936448265, 0.013552286601009756, 0.0032289712715403013,
      -0.023046337829044056, -0.0104051517231316, 0.01942709625934166,
      0.018256051683800133, -0.05675987022201821, -0.03296056009139303,
      -0.0173990042730968, 0.12185282737260948, 0.03798423433754776,
      -0.12270039394272629, -0.055947445070994896, 0.04621845892784341,
      -0.1857137618225036, -0.06381089208694728, 0.07053672326645595,
      0.03906718120738633, 0.01577517031413787, -0.004745657011912422,
      -0.01980141197527725, 0.02463719909248731, 0.019457415538283646,
      -0.0067710516924983765, -0.02834601701232055, -0.006509832922919529,
      -0.0013352981567293612, -0.023151697315085987, -0.06519950655383687,
      -0.1042256990435297, -0.023224778901070588, 0.00729635443120975,
      -0.03470838640090929, -0.0023809918522597964, 0.01616754166381201,
      -0.005434023698746317, 0.002720810988399538, 0.006684196401156055,
      -0.023932611476630623, -0.03900580321070505, 0.016396390506166533,
      0.05806798387241651, 0.15112210885707694, 0.0919535398253341,
      -0.308789816469042, 0.23773808023122034, -0.11496619447060334,
      -0.15410637679425881, 0.16398523681965352, -0.04216012313160585,
      -0.005783889905293601, 0.021159112170606904, -0.0008919402495326755,
      -0.043632529695206895, 0.025594278576058532, 0.04827977682701759,
      0.008656372871138766, -0.025123508323013247, -0.021222695138498154,
      0.012727342518660707, 0.002732727307553498, 0.01672722282524492,
      -0.062351999721191126, -0.0950864851349935, 0.009789315676701096,
      0.020526538310240195, -0.0017729650965628652, 0.004236734242614828,
      0.00969181616596509, -0.014518052118829046, -0.004581035374341906,
      -0.06945150463938297, -0.03628959076218118, 0.22708969966074724,
      0.3665342673930222, -0.5962576209185034, 0.3677477205864991,
      0.2627894192943519, -0.10703484463450727, -0.13950623949894417,
      -0.08080613749345363, -0.018761372187400087, -0.1480711283584217,
      0.015533054933596769, -0.01315617033162085, 0.03305379581498845,
      0.012901798319361097, 0.00377273404398293, -0.008705072547776149,
      -0.026200884444946355, -0.0699831200027948, -0.04585110256530889,
      -0.008021591507498945, -0.04806311981862181, -0.05590918830230712,
      0.015567334119352533, -0.06911372306398904, -0.007247424342862186,
      0.04252656204416145, 0.039806904605142766, -0.027582495505149615,
      0.004926143375425349, -0.04754279011762625, -0.07412235121492936,
      0.22223052073714245, -0.007741727367060801, -0.08082528642091588,
      0.6239051855537013, -0.1898873716577621, -0.013310214088767865,
      -0.13538196037364333, -0.38370084094404533, -0.32853605615928166,
      -0.2309534981672577, 0.002457368089255563, -0.060148519255615616,
      0.030360401196840837, -0.008421474591235168, 0.033027304906486414,
      0.0307398640217227, 0.009703992699996455, -0.06069855739203631,
      -0.04746519227839175, -0.053530300822357386, -0.04617423408269824,
      0.005211204463466864, 0.020596160958060543, -0.15878906772803425,
      -0.02193329327109424, 0.007934242380394899, 0.027919450264392773,
      0.007043080701302528, 0.020085011074200358, -0.07593504311206385,
      -0.04165227277395796, 0.16889959178925665, 0.18647295463827135,
      0.014154913289577202, 0.06052110757646851, -0.6363731233683723,
      0.9019195738157793, 0.27922666018549325, -0.48673882008850766,
      -0.3337003135725931, -0.3513559741645329, -0.2622745616761345,
      -0.1719749232535629, -0.005731502793172811, -0.04469091820910031,
      0.053283308768024513, 0.03946559994643804, -0.014174493080162808,
      -0.04946368453866596, -0.022857667990750397, -0.1688130409012578,
      -0.08081252690949967, 0.0005823444604532637, 0.08433842597437612,
      -0.1251823168088108, -0.04050640633805026, -0.08374410530080309,
      -0.001350704062862842, 0.030200114248426838, 0.04229988913026935,
      0.011310849850443803, 0.08175917844592068, 0.03528956306363411,
      -0.12268118169149339, 0.0581572497684168, 0.1945303065955717,
      -0.3201969513996092, 1.2621857571853639, 0.24947885513851267,
      -0.8682713800974683, -0.26346017480935824, -0.4031200027249898,
      -0.22820944406317872, 0.0813299683314989, 0.00388713671617719,
      -0.10891614598123801, 0.00043800911235750134, -0.04328929752692221,
      0.012593343881888895, -0.004268663667086969, -0.008833188472774969,
      -0.02414166683120631, -0.03923653338217388, -0.25435751708422283, 0,
      0.1310658190076192, 0.22441332039311174, -0.09476844701896146,
      0.0024812204443016074, 0.03628626839204586, 0.0056698536823630895,
      -0.010705526315732189, 0.08204491851289233, 0.0010532751265284197,
      0.015101105715477795, 0.09065350545022463, 0.27613653682211553,
      0.17494988738073455, 0.3095682126985193, 0.0345404763627059, 0,
      -0.034540476362701966, -0.3095682126985185, -0.1749498873807341,
      -0.27613653682211575, -0.09065350545022713, -0.015101105715478274,
      -0.0010532751265287738, -0.08204491851289233, 0.010705526315732109,
      -0.0056698536823632534, -0.03628626839204598, -0.002481220444301584,
      0.09476844701896192, -0.224413320393112, -0.13106581900761924,
      -0.00058234446045053, 0.254357517084223, 0.03923653338217307,
      0.024141666831206714, 0.008833188472774717, 0.004268663667086584,
      -0.012593343881888968, 0.04328929752692242, -0.00043800911235742604,
      0.1089161459812379, -0.0038871367161778295, -0.08132996833150016,
      0.22820944406317803, 0.4031200027249902, 0.26346017480936107,
      0.8682713800974723, -0.24947885513851314, -1.2621857571853632,
      0.3201969513996075, -0.194530306595574, -0.05815724976841667,
      0.1226811816914933, -0.0352895630636345, -0.08175917844592065,
      -0.011310849850443772, -0.04229988913026883, -0.030200114248426623,
      0.0013507040628626303, 0.08374410530080267, 0.040506406338050895,
      0.12518231680881103, -0.08433842597437564, 0.04617423408269629,
      0.08081252690949875, 0.16881304090125832, 0.02285766799075026,
      0.04946368453866589, 0.014174493080162815, -0.039465599946438334,
      -0.053283308768024965, 0.04469091820910013, 0.005731502793172531,
      0.1719749232535624, 0.26227456167613394, 0.3513559741645329,
      0.3337003135725934, 0.48673882008850966, -0.2792266601854941,
      -0.9019195738157806, 0.6363731233683764, -0.060521107576467635,
      -0.014154913289577215, -0.18647295463827063, -0.16889959178925743,
      0.041652272773958374, 0.07593504311206452, -0.020085011074200423,
      -0.007043080701302525, -0.02791945026439252, -0.00793424238039499,
      0.021933293271094115, 0.1587890677280339, -0.02059616095805995,
      -0.005211204463467397, 0.008021591507499164, 0.05353030082235833,
      0.0474651922783904, 0.060698557392036064, -0.00970399269999631,
      -0.030739864021722747, -0.03302730490648645, 0.008421474591235165,
      -0.03036040119684083, 0.060148519255615165, -0.0024573680892551967,
      0.23095349816725866, 0.3285360561592826, 0.38370084094404566,
      0.13538196037364647, 0.01331021408876858, 0.1898873716577617,
      -0.6239051855536973, 0.08082528642091671, 0.00774172736706095,
      -0.22223052073714233, 0.07412235121492945, 0.047542790117626306,
      -0.004926143375424972, 0.027582495505149737, -0.039806904605142586,
      -0.04252656204416143, 0.0072474243428623, 0.0691137230639886,
      -0.015567334119352927, 0.055909188302305984, 0.04806311981862192,
      -0.0027327273075535455, 0.04585110256530835, 0.0699831200027951,
      0.026200884444945973, 0.008705072547775906, -0.0037727340439829347,
      -0.012901798319361227, -0.033053795814988754, 0.01315617033162081,
      -0.01553305493359669, 0.14807112835842184, 0.018761372187400604,
      0.08080613749345414, 0.13950623949894433, 0.10703484463450816,
      -0.26278941929435246, -0.36774772058649907, 0.5962576209185069,
      -0.3665342673930213, -0.2270896996607477, 0.03628959076218108,
      0.06945150463938327, 0.0045810353743422905, 0.014518052118829408,
      -0.009691816165965116, -0.004236734242614894, 0.0017729650965627938,
      -0.020526538310240098, -0.00978931567670096, 0.09508648513499297,
      0.06235199972119075, -0.01672722282524514, 0.06519950655383722,
      -0.012727342518659639, 0.021222695138497675, 0.02512350832301345,
      -0.008656372871138747, -0.048279776827017555, -0.025594278576058595,
      0.04363252969520693, 0.0008919402495326742, -0.02115911217060702,
      0.005783889905293781, 0.042160123131606046, -0.16398523681965352,
      0.15410637679425865, 0.1149661944706041, -0.23773808023122042,
      0.30878981646904247, -0.09195353982533305, -0.1511221088570756,
      -0.05806798387241584, -0.016396390506166002, 0.03900580321070508,
      0.023932611476630637, -0.006684196401155907, -0.0027208109883995707,
      0.005434023698746266, -0.016167541663812044, 0.002380991852259873,
      0.03470838640090904, -0.007296354431210057, 0.023224778901069786,
      0.10422569904352962, -0.04918905117971928, 0.023151697315084544,
      0.0013352981567299367, 0.006509832922919474, 0.02834601701232067,
      0.006771051692498271, -0.019457415538283694, -0.024637199092487305,
      0.019801411975277225, 0.004745657011912749, -0.015775170314137797,
      -0.03906718120738624, -0.07053672326645621, 0.06381089208694683,
      0.18571376182250354, -0.04621845892784342, 0.05594744507099499,
      0.1227003939427266, -0.03798423433754704, -0.12185282737260873,
      0.01739900427309727, 0.03296056009139282, 0.05675987022201823,
      -0.01825605168379989, -0.019427096259341584, 0.010405151723131587,
      0.02304633782904404, -0.00322897127154033, -0.013552286601009622,
      0.05973226936448246, 0.02677362863360303, -0.07060077152873463,
      0.008835607182220432, -0.09677203374284288, -0.043908100663758234,
      0.0023099396961402566, 0.0026341276434262424, 0.00364516409639781,
      0.004808443274984581, 0.020866890117519587, 0.0038698355762962896,
      -0.01986279082820429, -0.026548451118935872, 0.008001903562601734,
      -0.0706384180648158, 0.06951503451164305, 0.07074541532788536,
      0.15128619138644453, 0.08380330702660829, 0.04601640195702959,
      -0.21064351401911435, -0.10796975372596025, -0.03420155792081658,
      0.01431321541581594, -0.012363627500514576, -0.010919865739753575,
      0.017870360905994497, 0.017396471253638378, -0.02007942542731345,
      0.01046579838246435, 0.03256617145192176, -0.05799439311344054,
      -0.05617729507532285, 0.03433326053321245, -0.130338354535672,
      0.12409557570816747, 0.02754663694018964, -0.03279899021265514,
      0.08307703486887798, 0.026168992315518, -0.018046490267575984,
      0.005207681729782772, 0.016259252101333162, -0.009045316783825131,
      -0.0036967486190426836, -0.02859281264717387, -0.0017423598025251908,
      0.04353483487601341, 0.12793975070954686, -0.030070570566209584,
      0.06885700316953144, -0.017643635220692303, 0.015058032290063167,
      -0.03296897547944007, -0.0032509456626426633, 0.015788972597383943,
      0.019251438395354474, -0.009024853611406113, -0.015272751179096435,
      -0.008299212542201484, 0.05957553232524453, -0.02113428762188115,
      -0.07593204274580363, 0.10041080102702246, 0.19730813245926007,
      -0.09420330567759928, 0.12177128356890216, -0.09813036291316408,
      -0.008606352781730114, -0.014980171338571052, -0.09199292532210057,
      0.17587869380621152, 0.09217332722109572, 0.02189716558604548,
      0.006037515267849643, -0.02386519187296254, -0.012395399307185896,
      -0.022849248448590303, -0.04832102011432769, -0.005677992326511827,
      -0.08430372577238573, 0.1437989861779114, 0.017114978073907855,
      -0.02367492655451382, -0.014433128838537597, 0.01224023536554338,
      -0.06641957406918292, -0.016196236751474646, -0.0049338006978182185,
      -0.008400134072988485, 0.0022066601859378697, 0.06754552046591947,
      -0.1431573605324398, -0.11335071558105927, 0.19200701617075636,
      0.04700534712914311, -0.1804016527269583, 0.10462001130261284,
      -0.2952063874323646, 0.4550470204476488, 0.9196871674688951,
      0.07562928201952356, -0.17521945191954877, -0.14741145606308895,
      0.15842957449053352, 0.03331642390248584, -0.04653963552319055,
      -0.029239764799856394, 0.02825685744844656, 0.00474686181904234,
      -0.02521789889898306, -0.03439955883717374, 0.11937846922953181,
      0.050544258155460854, 0.1394578516494776, -0.10661165850403005,
      -0.027700064466883865, -0.06171969247781083, -0.0007688026095812998,
      -0.036686593450547596, 0.02083426192853413, 0.04259609882328336,
      -0.005237402448426355, -0.17900936499027453, -0.05581712853807628,
      0.1556206112582631, -0.19930768818407885, 0.17374602795438115,
      1.0450941798657116, 0.011417685121456564, 0.7747019548618601,
      0.06964987697494884, -0.3675466403998272, 0.6432675339043074,
      -0.24917063867041553, -0.03954058633577317, 0.14567847379973992,
      0.0659817400189202, -0.05564408487662822, -0.07712597645572139,
      -0.0007367446231761105, 0.015701976416950342, -0.032298308999268784,
      0.0601543234701064, -0.12792055300624763, 0.05868189493963719,
      -0.022172258797336572, 0.105971385474807, -0.03774974359224228,
      -0.053672308552617946, -0.12615835751184992, -0.05935692746192366,
      0.012406017329547145, 0.0680369475996537, 0.017107991149299284,
      -0.04100815493405788, -0.13447215443394772, -0.2681626002669388,
      0.18368617361305564, 0.4689423736971773, -0.6287263620045653,
      0.6068691896533199, -0.15113295529591578, 0.036743730082780514,
      1.463608458760923, 0.1290449533429373, -0.07441700456397135,
      -0.6200376238621289, 0.017408469796284774, 0.1272883333159911,
      -0.09493793106291715, -0.05779163337935424, 0.03715419360007,
      0.07149566160435859, -0.010724993842566222, -0.1481175279095394,
      0.06786938796697012, -0.09497433415130044, 0.31269363662275046,
      0.01610138969469304, 0.011271546890921311, -0.0416046739825933,
      -0.07215692285898725, -0.05023839674084114, -0.013143422355014638,
      0.1718132007526696, -0.0007864520134103385, -0.2587885502662679,
      0.0028564673365731054, 0.26469201284371935, -0.12782476119556443,
      -0.5990489956312219, 1.130668752319608, 0.4201199738298067,
      1.5043263157657745, 1.0547694551235969, -1.114165184386494,
      0.9005057884056495, -0.5020328221472783, -0.35825626720186354,
      -0.34045699686317654, 0.03452635722266466, 0.16469615783949973,
      -0.10773227995476188, -0.02043860993814084, 0.15231382612170388,
      0.00404523264002093, -0.0674432622571157, -0.120243611846639,
      0.0724389902254128, -0.2728416921191381, 0.31416612358708496,
      0.23288712244734694, 0.17097210848547523, -0.0683922825350877,
      -0.1884297381053561, 0.026792869524674363, 0.068621242214501,
      -0.028891896132398506, 0.01346687181869554, 0.18273076418691644,
      -0.03902721990981482, -0.6830314716152913, 0.28364033101911773,
      0.20446853801739462, 1.3830149751777017, 1.3682011726001495,
      1.0314907737559074, -0.5578743616729661, -0.9999870738966836,
      0.11752989424299397, -0.8531772106141676, -0.392401150865078,
      0.2694620959312899, 0.13057930804766765, -0.004829873646791958,
      -0.006649117012130222, -0.023829771073630532, -0.07289920747928642,
      -0.29873174456544577, 0.027468417557455698, -0.26817287178186705,
      0.21489820671404794, 0.048277840380711166, 0.23588030048916517,
      -0.0035092112107956196, -0.07685412425301093, 0.05790784432037204,
      -0.011517786678353752, 0.04514609184617035, -0.2624959582084973,
      -0.2658576499070465, 0.5451031587708403, 0.2315595903433905,
      -0.4408675116417886, -0.689112828517529, 0.750192686886552,
      1.6899938281650098, 1.2795505844643045, 1.1758121586434311,
      -0.0685100510909925, 0.24494470763482898, -0.13955938857309558,
      0.2625838718707741, -0.31004041285864437, -0.06094671806634362,
      0.20150153854805294, -0.21163882649779717, -0.23457709892354675,
      0.14508578389537688, -0.22705801052414679, -0.2857183558836735,
      -0.19596817846267664, 0.13015393203001066, -0.32999646269142935,
      -0.19528135326362211, 0.3680693392222917, 0.044374683774465004,
      -0.17789090203786717, -0.13954351571969323, 0.24064979253244634,
      0.04749824375933088, -0.33137912963317673, 0.1995147304842484,
      0.640274048196846, 0.2505529731115497, 0.13414323846201037,
      1.4561178571660989, 0.506600298248318, 0.8069590311966988,
    ],
    height: 32,
    width: 32,
    top: {
      real: [
        17750.107020847583, 6210.865615966279, 10017.081922566327,
        3457.5995074393513, 265.850218137708, -70.20768481034305,
        -8.882891147089472, 24.58975650378648, -11.140592103834141,
        -1.46746599378154, -0.34121813437428317, 1.0812077419156148,
        1.7163290532419633, -4.566614630463569, -2.684639401420383,
        -2.273864366622347, 1.917575640981823, -2.273864366622364,
        -2.6846394014204122, -4.5666146304635395, 1.7163290532419744,
        1.0812077419156028, -0.34121813437427356, -1.4674659937815784,
        -11.140592103834141, 24.589756503786372, -8.882891147089664,
        -70.20768481034348, 265.8502181377076, 3457.5995074393486,
        10017.081922566325, 6210.865615966285, 23430.31298691556,
        -4993.986386578701, -867.9270784111233, 991.9702295167051,
        152.49743471969379, -30.09622891688864, 45.84966179865908,
        -31.46758894668901, 16.96071854645447, 4.334366206560186,
        -0.4258390713100009, 0.4786052744328573, -1.8738744001784808,
        0.5336707597630499, -3.884194145524758, -0.7540782456530397,
        0.5514719539298555, -0.7934524273933928, -5.902676979317489,
        -1.384293215600769, -4.144794214579823, -2.913052274311734,
        -0.8712082218639676, -1.7340023689981476, 8.022111984944255,
        -9.103479975813322, 67.03887483927257, 44.11247283269986,
        441.79945796279685, 3245.5044122716786, 3861.5097933424754,
        -5655.768742169554, -15889.920855591003, -2792.017020916347,
        3795.2577126849956, 553.8844085299576, -85.90566477025423,
        195.26564512659746, 24.791859336013662, 19.6375216145314,
        -6.168008915359045, -5.087200295288675, -0.21502707506361318,
        1.4832779566036471, 1.4444541156654906, -2.278921340791467,
        0.30255454236990775, -2.3473646939882187, -0.02820677859184775,
        1.2126049622480428, -0.7855793734203073, -2.9245439997897638,
        1.236962081731878, 1.1827041713801927, -1.6114665304853286,
        -3.5864367039316236, -14.698165954413065, 20.29282209316159,
        43.7328917067592, 111.68572777077691, -209.48016621032312,
        -187.12585183373633, 2586.314839382015, 1688.0815183011628,
        4748.220391025409, 1775.7319020900284, 965.534591135915,
        -592.8974138074635, 99.78788635488837, 95.45976503600482,
        59.29663551844352, -7.698710633143011, -0.003618041311866854,
        -0.4329078625206647, -1.598202682681902, 0.1135987222961578,
        -0.47654646487314006, 0.05292012132443119, -1.193156957130263,
        1.6263047283546588, 1.120828251360869, -1.916766911729648,
        -1.3790558562903064, -0.15528235781115707, 0.339895398198906,
        -1.1170639390757935, -0.5401967179111659, 2.403966038546336,
        7.33426744227294, -18.965458306286095, 0.03773123101507536,
        5.788882372224528, -226.40133474887324, -362.0750540837246,
        1068.1182163210274, 1839.5542246985658, 1536.22079311388,
        1719.2247320855465, 351.77395499971544, -218.0081025930205,
        -154.06814929171503, 76.93240465195194, 11.83330919947551,
        3.0799843602247936, 2.1514657945922595, -2.1600173905506583,
        -0.8132927291931007, -0.05764093599125942, 0.8174378178766071,
        0.4700783435753993, 0.8257847464902618, -0.485121980563267,
        -0.4411834787796781, 0.8537258719103306, -0.9650509180144995,
        -2.500132935450727, -0.2822761000809063, 1.5082121759974054,
        0.7332379903786944, 0.47326064521443867, -2.2071915479661444,
        2.1017967421924912, -14.788373732218277, -10.376064867674437,
        -110.67917899227207, -400.67251265606825, 13.375377575225066,
        2228.271084047331, 1272.0006323499422, 485.3035992226992,
        -150.18264185504094, -215.33992676901764, -8.869446734595165,
        40.21604419999191, 0.627396838406635, -1.763160286154926,
        0.8876150621479377, 2.2829883187502253, -0.37542737915458396,
        -0.08292432350233894, -0.2690018095258665, 0.06649495301798529,
        -1.293709574268377, 0.9014801984840545, 1.049315066873844,
        -1.550015566266476, -1.5096304544124948, -0.7672546252768676,
        -0.45464639460382006, 0.03503878860161394, 0.8539387293596101,
        0.891727630123107, -0.12413241898971583, -7.405788146756412,
        -5.5362761946156125, 1.231534306746803, 18.635135255424384,
        26.03667534143711, -87.77288882471544, -225.72012452523,
        395.63478219787083, 378.7170167703935, 36.70305631243881,
        -91.05039439794716, -3.4611377608751717, 16.691588629055683,
        -0.030826600791664327, -3.196930879641269, 1.3816292236713215,
        0.42488100600164197, 0.0847137636329082, -0.28535803119354425,
        0.005848312084274873, -0.7224956550701193, -0.802621622131051,
        -0.11947358836291604, 0.1425158350557394, -0.2663976476885841,
        -0.5959983362374907, -0.5628948051906861, -0.09220191182028845,
        0.7722381907211653, 0.5552249106419074, -0.14411590791637013,
        -2.1806910872492855, 1.0588352659849944, -1.722617263430356,
        -9.016744076782127, -38.48389632251889, -22.599080819691828,
        25.54113970512769, 375.57983717352784, 181.47383294778024,
        149.67885098073037, -4.100878251797606, -3.738347514365787,
        18.721866312633942, -1.1602382001305473, -5.839154093942011,
        -0.21088907624048864, -0.29870055099180226, 0.9533183744618138,
        0.06042439564320553, -0.42858353450158043, -0.37036207729837234,
        -0.3036964450645726, -0.7565217634765898, -0.4454571363152239,
        0.7132684521528351, 0.07176180892895631, -0.6382969819391779,
        -0.4523550556385587, -0.08015934030842575, -0.15881914095274483,
        0.37773826228539636, -0.0970863633135215, -0.8670604429090952,
        -1.3342582973973045, -0.6179277702044148, 0.16957438507140327,
        10.565905071599056, 15.380533375221102, 10.50023919474786,
        19.996280010030237, 18.60272375866586, 4.034831471780333,
        11.168149094486143, 14.395513359675057, -3.576502394652771,
        -3.876062809222843, 2.0358977627782506, -1.6580642648165547,
        -0.13166485139511078, 0.2591565726162201, -0.22701969228044258,
        -0.29312645623416966, 0.09996947219935386, -0.3910166116454323,
        -0.042546772814251566, 0.29433076927773894, -0.5093538487418168,
        0.09048772686114162, -0.09214398588257239, -0.5825352944026844,
        -0.416714322810017, 0.14644815319126417, 0.2723500443275419,
        -0.039709576626662156, -0.41013369223337515, 1.1756350920235048,
        1.5259648698081887, -4.451627866201312, -8.128003687892722,
        9.604108020551694, 20.813833475064627, 12.963050463991683,
        7.8870012209429445, 15.407970089260955, 5.378309688910911,
        -3.135003053617967, 1.9101786820520572, 1.6649545288728531,
        -2.142164884787256, 0.3523092008580216, 0.37729718445187704,
        0.02082392939460398, 0.08713974495724808, -0.10976037032555666,
        -0.5698689940173911, -0.4402090815221931, 0.6919056466115241,
        0.20725962387572397, 0.6404278736867182, 0.7186728309989674,
        0.16183428074791173, -0.17223426808716463, -0.17676233483878773,
        -0.27594664738318686, 0.0952383574449861, 0.02072697193586424,
        -0.11463597101365795, -0.3233331161098237, 1.2888258236383847,
        3.023753883451761, -0.12189842989060286, -4.500205647906865,
        -2.8307120360813536, 9.032505574283658, -5.083687145641661,
        -6.422678336118566, -2.383206402964554, 2.120438050789215,
        -2.1797923249754283, -2.131688277076892, 1.4364513793862836,
        0.8284741731103675, -0.5470510771368747, -0.053118808001264,
        0.1034933009018914, -0.027586170457780668, -0.2786611518494937,
        -0.4744187891270259, 0.32835706009268834, 1.8712198771790323,
        0.4493701678023156, 0.8488760221500451, 0.3519180353068138,
        0.2875824347525097, -0.6426201464805843, -0.4059735310092979,
        -0.2224452936424687, -0.07186950223505165, 0.3302146612298864,
        0.24942995069051274, -0.5214330526633183, -0.09366255470033667,
        1.1233733739102922, 1.9003965613191238, 0.07120934753760759,
        -8.654923611944618, -1.842762037193103, -0.5229577546680441,
        3.409295272037012, -0.6500317796772334, -0.1840159964371442,
        1.8831870902689825, 0.7983111628921199, -0.3992517298270185,
        0.05120517740303382, 0.2598923527237304, -0.18824332097783142,
        0.13750859145926242, 0.7822683031309051, -1.2572785001190825,
        1.335536332855691, 1.2220896356262305, 1.6491421999762639,
        1.7622421170936717, 0.9648743983441674, 0.7912838147011229,
        -0.26979590260649117, -0.37236776211072153, -0.6531881225090838,
        -0.13360581679076858, -0.1817007191765827, 0.4244891020544192,
        1.0695325895656689, -0.49200291489349485, -0.5995906658098875,
        -2.461030407050638, -1.7528842523917616, 5.409297459242755,
        11.628502736704702, 13.318871722095572, 5.384420128917242,
        0.12839725172390623, -0.9146215998500353, -0.4207633568928546,
        0.7328961843606323, 0.9816454560601925, -0.31879685258307294,
        -0.45467275635234927, 0.23929181220408463, 0.735537321037087,
        -0.7805028518028965, -0.2061437725020578, -0.6614735481139654,
        0.8472254475644475, 3.1542100241342745, -1.0454812204468338,
        0.4911227283477408, 0.8978009409713777, -0.8068634496024236,
        0.2616620751435001, 0.3423496440167225, -0.27361449647202374,
        0.07840034325728802, 0.2713071574863611, -0.26706243773596255,
        0.9287956087265937, -1.3686907450256593, 0.37153092475944227,
        -0.00770609153918559, -2.1487270106054996, 8.242311510799118,
        10.211121947580189, 11.004080199445575, 5.512476255300478,
        0.43541395104991965, 1.3138259234516578, 0.4769768752500237,
        -0.3743769063787195, 0.4917032514672482, 0.5309293320442569,
        0.7897723185645854, 0.05493597003430254, 1.0907299238052364,
        -1.4537313504920895, 1.663741525652943, 2.3271742206176285,
        1.6752406948773604, 6.0227778178364675, -2.569314033109529,
        -1.3449083811022362, -0.06354075932635939, 1.2007479971921078,
        0.26947504329539196, -0.043317616642408706, -0.0900924044749603,
        -0.5614935645216418, -0.29757479536733583, -0.825312878504854,
        0.5288097384008399, -0.5104284962829919, 1.1866854822445434,
        7.713048076228817, 17.626109919920186, 26.29568713002228,
        9.15149795145862, -1.521929375229722, 0.8536435912377126,
        -0.365663824522519, -1.1590870007863963, 0.4808263000269652,
        0.9305906744563816, 1.1024013035834523, 0.638418295742183,
        1.5659590764611497, 0.20674310541385973, 1.0081259505833966,
        1.4865008399227626, -1.6031905208728288, 5.771883570976741,
        0.2720344299284404, 3.2411570780563994, -1.0481514144590243,
        2.2338214812745694, 3.1628749936702945, 1.7743358086362808,
        -0.03099281849361625, -0.4144288271295417, -0.31459130661253104,
        -1.7323756021672925, 0.19363530105298493, 0.6112321227052172,
        4.826040478690415, 6.7814469674820135, 4.974801806376985,
        19.935738411546794, 15.127019575257112, 16.951752765718286,
        6.976320734749117, 0.8320458256453673, -0.22090351652873133,
        -0.48187393778382737, -0.7221625941331894, 0.6833751487943774,
        1.493402769177877, 1.3836806937153638, -0.0891083628996989,
        0.5791053376434419, 3.1507795425198797, 1.9139554692796912,
        4.14239902259602, -5.089358033057332, 4.654532007457709,
        -1.3079026033800338, 1.258390156840345, 1.3087920196200225,
        1.8018391908724931, 1.3933980798910508, 0.6760493311480307,
        -0.49475104816844406, -1.4152366315362725, -0.645806625334661,
        -1.4537653735214031, 3.1014323943375786, 7.6843087454063586,
        10.909142678924193, 12.359496229531475, 15.280082473470735,
        24.669023160454167, 12.739042274822818, 1.7204760023261643,
        0.5292950854871518, 2.1482192005482723, -1.481161898887601,
        -0.7940407971043247, 0.46540881956838565, 0.9262471185427797,
        1.0380549761479756, 2.3168267428989626, 1.5788387366050483,
        -0.8376697052300492, 4.750572050222373, -2.6570294115495297,
        6.761213132395551, -2.6570294115495336, 4.750572050222378,
        -0.837669705230057, 1.5788387366050476, 2.3168267428989657,
        1.0380549761479752, 0.9262471185427773, 0.46540881956838565,
        -0.7940407971043286, -1.4811618988876, 2.148219200548279,
        0.5292950854871515, 1.7204760023261518, 12.73904227482281,
        24.669023160454188, 19.935738411547018, 12.35949622953156,
        10.909142678924129, 7.684308745406342, 3.101432394337563,
        -1.4537653735213987, -0.6458066253346709, -1.4152366315362839,
        -0.4947510481684456, 0.676049331148034, 1.3933980798910552,
        1.8018391908724987, 1.3087920196200247, 1.2583901568403484,
        -1.30790260338003, 4.654532007457706, -5.08935803305732,
        4.142399022596009, 1.913955469279683, 3.1507795425198943,
        0.5791053376434462, -0.0891083628996941, 1.383680693715373,
        1.4934027691778826, 0.6833751487943738, -0.7221625941331862,
        -0.4818739377838111, -0.22090351652873805, 0.832045825645343,
        6.976320734749093, 16.951752765718314, 15.127019575257133,
        17.626109919920285, 4.974801806376996, 6.781446967481992,
        4.826040478690392, 0.6112321227052044, 0.193635301052977,
        -1.7323756021672947, -0.31459130661253587, -0.4144288271295444,
        -0.030992818493609464, 1.7743358086362877, 3.162874993670298,
        2.2338214812745694, -1.0481514144590143, 3.241157078056395,
        0.27203442992843363, 5.771883570976741, -1.6031905208728274,
        1.4865008399227673, 1.0081259505833953, 0.20674310541386615,
        1.5659590764611582, 0.6384182957421902, 1.1024013035834526,
        0.9305906744563824, 0.48082630002696636, -1.159087000786395,
        -0.3656638245225098, 0.8536435912377094, -1.5219293752297598,
        9.151497951458596, 26.295687130022237, 8.242311510799235,
        7.713048076228867, 1.1866854822445243, -0.5104284962830227,
        0.5288097384008245, -0.8253128785048506, -0.297574795367338,
        -0.5614935645216511, -0.0900924044749598, -0.043317616642408116,
        0.26947504329539745, 1.2007479971921178, -0.06354075932635406,
        -1.3449083811022313, -2.5693140331095257, 6.022777817836472,
        1.675240694877361, 2.327174220617627, 1.6637415256529449,
        -1.4537313504920832, 1.0907299238052377, 0.05493597003431282,
        0.7897723185645906, 0.5309293320442623, 0.4917032514672505,
        -0.37437690637871607, 0.4769768752500283, 1.3138259234516545,
        0.43541395104990577, 5.512476255300489, 11.004080199445557,
        10.211121947580168, 11.628502736704604, -2.1487270106054663,
        -0.007706091539169374, 0.37153092475944555, -1.3686907450256616,
        0.9287956087265901, -0.26706243773595856, 0.27130715748636525,
        0.07840034325728844, -0.27361449647201985, 0.34234964401672396,
        0.26166207514350365, -0.8068634496024222, 0.8978009409713853,
        0.49112272834772974, -1.045481220446846, 3.15421002413427,
        0.8472254475644415, -0.661473548113959, -0.2061437725020583,
        -0.7805028518028938, 0.7355373210370894, 0.23929181220408727,
        -0.45467275635235105, -0.31879685258307255, 0.9816454560601955,
        0.7328961843606313, -0.4207633568928543, -0.9146215998500377,
        0.12839725172388108, 5.38442012891722, 13.318871722095585,
        -1.8427620371929223, 5.4092974592426515, -1.752884252391761,
        -2.461030407050609, -0.5995906658098782, -0.49200291489348996,
        1.0695325895656664, 0.42448910205441354, -0.18170071917658262,
        -0.13360581679076522, -0.6531881225090824, -0.3723677621107227,
        -0.26979590260649017, 0.7912838147011273, 0.9648743983441668,
        1.7622421170936722, 1.6491421999762705, 1.2220896356262196,
        1.3355363328556904, -1.257278500119075, 0.7822683031309038,
        0.13750859145926628, -0.18824332097783478, 0.25989235272372874,
        0.05120517740303401, -0.39925172982701423, 0.7983111628921264,
        1.8831870902689678, -0.18401599643714045, -0.6500317796772292,
        3.409295272037008, -0.5229577546680811, -5.083687145641791,
        -8.654923611944545, 0.07120934753757101, 1.9003965613191072,
        1.1233733739103013, -0.09366255470034336, -0.5214330526633129,
        0.24942995069051838, 0.33021466122988513, -0.0718695022350494,
        -0.22244529364246549, -0.40597353100929245, -0.6426201464805834,
        0.2875824347525145, 0.351918035306808, 0.8488760221500463,
        0.44937016780231587, 1.871219877179029, 0.32835706009269156,
        -0.47441878912702484, -0.27866115184949264, -0.027586170457779294,
        0.1034933009018901, -0.053118808001266206, -0.5470510771368722,
        0.8284741731103715, 1.4364513793862805, -2.131688277076882,
        -2.1797923249754287, 2.120438050789201, -2.383206402964568,
        -6.422678336118408, 7.88700122094335, 9.032505574283476,
        -2.830712036081403, -4.500205647906819, -0.12189842989059124,
        3.023753883451757, 1.28882582363838, -0.3233331161098253,
        -0.11463597101365604, 0.02072697193586587, 0.09523835744498739,
        -0.27594664738318975, -0.17676233483878293, -0.1722342680871602,
        0.16183428074791517, 0.7186728309989714, 0.640427873686722,
        0.20725962387572536, 0.6919056466115251, -0.44020908152219435,
        -0.5698689940173924, -0.10976037032555588, 0.08713974495724872,
        0.02082392939460036, 0.3772971844518759, 0.35230920085802736,
        -2.142164884787245, 1.6649545288728365, 1.9101786820520659,
        -3.135003053617966, 5.3783096889108455, 15.40797008926083,
        18.60272375866586, 12.963050463991696, 20.813833475064644,
        9.604108020551676, -8.128003687892736, -4.451627866201328,
        1.5259648698081876, 1.1756350920235052, -0.41013369223337515,
        -0.039709576626662, 0.2723500443275417, 0.14644815319126442,
        -0.41671432281001886, -0.5825352944026828, -0.09214398588257292,
        0.09048772686114251, -0.5093538487418168, 0.2943307692777374,
        -0.042546772814252246, -0.3910166116454319, 0.09996947219935487,
        -0.29312645623417033, -0.22701969228044291, 0.2591565726162216,
        -0.13166485139511078, -1.6580642648165524, 2.0358977627782484,
        -3.8760628092228537, -3.5765023946527563, 14.395513359675084,
        11.168149094486147, 4.034831471780354, 181.47383294778047,
        19.996280010029963, 10.50023919474779, 15.38053337522109,
        10.565905071599067, 0.1695743850714092, -0.6179277702044097,
        -1.3342582973973056, -0.8670604429090915, -0.09708636331352224,
        0.37773826228539636, -0.1588191409527461, -0.08015934030842092,
        -0.45235505563855616, -0.6382969819391766, 0.07176180892895834,
        0.7132684521528342, -0.4454571363152199, -0.7565217634765878,
        -0.3036964450645788, -0.3703620772983737, -0.42858353450157866,
        0.0604243956432037, 0.953318374461814, -0.29870055099180354,
        -0.21088907624048941, -5.839154093941986, -1.1602382001305538,
        18.721866312633882, -3.7383475143657954, -4.100878251797706,
        149.67885098073012, 395.6347821978709, 375.57983717352744,
        25.5411397051276, -22.599080819691835, -38.48389632251889,
        -9.016744076782171, -1.7226172634303247, 1.0588352659849967,
        -2.1806910872492873, -0.14411590791637696, 0.5552249106419069,
        0.7722381907211674, -0.09220191182028437, -0.5628948051906791,
        -0.5959983362374925, -0.26639764768858487, 0.1425158350557399,
        -0.11947358836291141, -0.8026216221310536, -0.7224956550701233,
        0.005848312084270103, -0.28535803119354936, 0.08471376363290742,
        0.42488100600164375, 1.381629223671322, -3.1969308796412634,
        -0.030826600791668796, 16.691588629055648, -3.4611377608751566,
        -91.05039439794719, 36.70305631243863, 378.7170167703935,
        1272.0006323499422, -225.72012452523026, -87.77288882471514,
        26.03667534143715, 18.6351352554245, 1.231534306746842,
        -5.536276194615616, -7.405788146756401, -0.12413241898971436,
        0.891727630123105, 0.8539387293596038, 0.03503878860161398,
        -0.4546463946038164, -0.7672546252768583, -1.509630454412483,
        -1.550015566266479, 1.0493150668738473, 0.9014801984840544,
        -1.2937095742683813, 0.0664949530179763, -0.2690018095258679,
        -0.08292432350234526, -0.37542737915458746, 2.2829883187502267,
        0.8876150621479396, -1.7631602861549227, 0.6273968384066227,
        40.21604419999188, -8.8694467345952, -215.33992676901772,
        -150.18264185504114, 485.3035992226977, 1536.2207931138814,
        2228.271084047332, 13.3753775752247, -400.67251265606865,
        -110.679178992272, -10.376064867674508, -14.788373732218197,
        2.1017967421924983, -2.207191547966143, 0.47326064521441386,
        0.7332379903786985, 1.5082121759973919, -0.2822761000809081,
        -2.5001329354507282, -0.9650509180144967, 0.8537258719103169,
        -0.4411834787796837, -0.48512198056327205, 0.8257847464902586,
        0.4700783435753934, 0.817437817876596, -0.05764093599127141,
        -0.8132927291931111, -2.160017390550672, 2.151465794592262,
        3.0799843602248034, 11.833309199475522, 76.93240465195203,
        -154.06814929171483, -218.00810259302057, 351.7739549997146,
        1719.2247320855445, 4748.220391025408, 1839.554224698564,
        1068.1182163210278, -362.07505408372486, -226.40133474887313,
        5.788882372224479, 0.03773123101509879, -18.96545830628597,
        7.334267442272939, 2.4039660385463657, -0.5401967179111887,
        -1.117063939075788, 0.3398953981989011, -0.15528235781113153,
        -1.3790558562903272, -1.9167669117296613, 1.1208282513608707,
        1.6263047283546224, -1.193156957130264, 0.05292012132442746,
        -0.4765464648731435, 0.11359872229612604, -1.5982026826818876,
        -0.4329078625206879, -0.003618041311865411, -7.698710633143024,
        59.29663551844356, 95.45976503600443, 99.78788635488839,
        -592.8974138074643, 965.5345911359134, 1775.7319020900306,
        -15889.920855591006, 1688.0815183011607, 2586.3148393820165,
        -187.12585183373636, -209.48016621032366, 111.68572777077674,
        43.73289170675933, 20.292822093161472, -14.69816595441305,
        -3.5864367039316574, -1.611466530485326, 1.1827041713801545,
        1.236962081731869, -2.9245439997897797, -0.7855793734202979,
        1.2126049622479607, -0.028206778591846705, -2.347364693988263,
        0.3025545423698818, -2.278921340791416, 1.4444541156654738,
        1.483277956603626, -0.2150270750636187, -5.08720029528866,
        -6.168008915359052, 19.637521614531632, 24.791859336013527,
        195.26564512659732, -85.905664770254, 553.8844085299576,
        3795.257712684994, -2792.017020916346, 23430.312986915553,
        -5655.768742169554, 3861.509793342478, 3245.504412271677,
        441.7994579627963, 44.11247283270051, 67.03887483927267,
        -9.103479975812874, 8.02211198494424, -1.7340023689979776,
        -0.8712082218640018, -2.913052274311693, -4.144794214579845,
        -1.3842932156007377, -5.902676979317541, -0.7934524273933764,
        0.5514719539298532, -0.7540782456531224, -3.8841941455247726,
        0.5336707597630261, -1.8738744001784735, 0.4786052744328138,
        -0.42583907130996707, 4.334366206560095, 16.960718546454476,
        -31.46758894668928, 45.84966179865925, -30.096228916889014,
        152.4974347196931, 991.9702295167021, -867.9270784111243,
        -4993.986386578703,
      ],
      imag: [
        0, -2277.9356791272003, -4760.5440393641, -3362.7502157108247,
        -452.6326365977277, 12.902525613472081, -66.32459149303926,
        21.395810280639775, 12.049924797684376, -6.432231930192483,
        -2.6401787430633603, -2.8941924141450355, -1.0996569736184965,
        -2.1837600734887777, 0.8730816516968187, -0.4143473704962265, 0,
        0.41434737049617953, -0.8730816516967246, 2.1837600734887985,
        1.0996569736184816, 2.8941924141450213, 2.640178743063284,
        6.432231930192494, -12.049924797684376, -21.39581028063975,
        66.32459149303935, -12.902525613472182, 452.63263659772764,
        3362.7502157108197, 4760.544039364101, 2277.9356791272016,
        -19170.834011440937, -3837.2504381898657, -1562.2865240696121,
        -2188.2624437144, -79.98538931763022, -65.73387671644744,
        -129.0323271304431, -21.57473128398986, 19.219741943874205,
        -1.3770831994436832, -4.628561865608997, 1.935633246860916,
        1.914358953204174, -0.39274625271235863, -2.8755632420164114,
        1.391076979912747, 2.198398212230069, -0.9340221618772395,
        1.5955119590990243, 2.5332827335358816, 2.5722659267438073,
        -2.1433748844126024, 4.705160710516987, 6.0715674792926295,
        -11.686157623491814, 7.736622407403881, 65.5137173230452,
        -68.9399476604814, 105.08267177765576, -524.55810593663,
        266.59769699529215, -6565.201391560311, -12998.804313286138,
        -7140.874330507554, -1281.4742181751476, 387.93265499317204,
        232.0789193763446, -67.21350217512955, -82.49990339348469,
        23.74231030494058, 13.167070698799225, -1.2601921779485123,
        0.22176027695648487, -0.8286902887112986, 0.8163858633748259,
        0.03036195775005164, -1.8114765667849664, -0.33462283171345614,
        -1.4063404110660631, 1.8330278968089115, -0.19923279402973898,
        2.6325944160953934, 0.7476745441031245, 0.33273215463055067,
        0.1242120122414053, 0.13350548988021607, -6.751721015042069,
        -24.893726268864828, 68.76437592093231, 203.5884482467179,
        -52.44337724103917, 589.8418819857724, 814.3853839170243,
        -3077.5993672243876, -9988.272530974133, -5000.875744438487,
        -213.8676097071096, -153.72085790515706, 376.50689706328353,
        10.499004391497454, -22.259718007212538, -1.058756094412357,
        1.3367261976572533, -1.845627367813951, -0.5081747549074722,
        2.6646257572641145, 0.726639874038269, -1.4553261209412862,
        -1.748611490859247, -2.2393579162674944, 1.787255682497424,
        -0.4779279337995983, 0.9099046875190019, 0.5685045714908853,
        -0.042260514128558184, -2.0950938638350283, 0.3784241201585649,
        2.7868839636562086, -7.179603879766707, -2.653276667752605,
        42.569555354666804, 86.61832325668642, 262.60583525697274,
        -570.3493516446566, 953.3853188584327, -2608.4519239039555,
        423.7691979018007, -777.4907220078727, -730.1555176872118,
        267.7782795448585, 48.782690015655945, -52.08491464110734,
        -0.2673276853691823, 18.791248861451912, 0.034376983736590996,
        -4.773352510756985, 0.2450889317389604, 0.6955167330950534,
        0.7468929761078751, 0.3625445531781404, -0.08286462770329087,
        -0.11088180406499534, -1.914524352082348, 0.6380993778757686,
        -0.4760955869340491, 1.1704253870693357, 0.1035348526676573,
        -0.9826864094292438, -0.6640301497435355, 1.4462870038602533,
        3.6812627646537175, -8.684706829846188, -1.702664423174063,
        110.68919188818327, 26.998515460375977, -65.42102326237345,
        -744.0954066709206, -46.729307478653496, -1526.2181503116453,
        -735.5077404616152, 282.18880697804167, -182.37864683063907,
        -54.0526813142352, 39.603849315110104, 10.295701682078779,
        2.359337802307917, -0.6346191100738395, -1.7124190510555728,
        -0.21593130161202514, 0.7675504033211141, 1.2882353738829533,
        0.4496831429006712, 0.25989055470659483, -0.6671389396205737,
        0.13682839189736165, -0.3688311879534851, 0.9123038313637193,
        -0.4699644624025633, 0.3021913121485442, -0.19558932994062075,
        0.01261576384947006, 1.762420772813289, 1.9045345605049635,
        -3.7790359077733253, -11.964107143689581, 4.5083476182968525,
        61.96781696120042, -254.89688572081204, 140.68826246910922,
        -45.053807917761794, 314.747855744751, -8.800126189101572,
        -360.31891091191073, -57.02544877742448, 44.579795546563595,
        -19.359200628613657, 3.6862817789376683, 8.920663061128309,
        0.18896973496668307, -1.022732352408107, -0.33838743748909134,
        0.4383320859115699, 0.007429416907156167, 0.504464760143059,
        0.1890893708139402, 0.6513333254686208, -0.7748329018274454,
        -0.3077900749407771, -0.8042712968338931, 0.2601121970475906,
        0.2346158834364472, -0.05650706693953473, -0.4451335771232274,
        0.6466720997697505, 1.554501701628272, -1.5250850436867627,
        -9.59177124730927, 13.475211488788412, 28.8379635870378,
        -21.930976284520067, -337.61540934331555, -197.27075321520147,
        -65.63437440423792, -45.71617418640904, 38.68839724466203,
        -10.636065931319841, -36.620593610799475, 11.815798616251305,
        9.03269848300071, -3.0325028906240825, -0.07586226673501913,
        0.19104942819406223, 0.07372642556981186, 0.18311714867084192,
        0.6303699903322625, -0.09862618444928073, 0.09561935970760504,
        0.13744024889930673, -0.09708915289878234, -0.8168356827516692,
        0.5438621702414317, 0.041501479859297266, 0.4303139947158866,
        0.254701048212831, 0.17326636360277617, 0.46079094226119127,
        -0.1653086566745448, -0.8639170202551628, -4.961128553246363,
        -12.372184270457062, 11.516126179313906, 3.2997425925449804,
        2.057098700973387, 24.878800155519915, 44.04178808431685,
        28.44615541803764, -32.190550839656126, -17.692027714058376,
        11.789513877445387, 1.9317197634824401, -3.450756085581017,
        0.36626836712779354, 0.480747660556516, 0.18044316667269442,
        -0.2824097442697313, -0.16613612027343372, 0.029095718259237995,
        0.24450075339721422, -0.09133033174751364, 0.09763429547907566,
        -0.36806371804963284, 0.1661459131254051, -0.7739535250454471,
        -0.3264657443238585, 0.015061212014132833, 0.29085100346092985,
        0.04777071240950242, 0.14922819541222396, -0.39792121836056477,
        -0.1921281774085053, 0.8389528199741381, -1.5703737430868945,
        -8.436742777573645, 5.660191686379234, -5.151003256170212,
        -22.05060531025986, -1.985459469757478, -7.531138613863072,
        7.414834109374134, 8.095212346461937, -4.362973215395906,
        -0.8761722254011065, 1.0539667118389069, -0.6949568334964709,
        -0.5359722121834076, 0.21612918483653182, 0.16753374785242167,
        -0.14587335963051168, 0.2984129896925935, 0.7572023138336264,
        1.2725586605629424, -0.23788459440434945, -0.4385884976219189,
        -0.7980185869448654, -0.418467544297231, -0.4616140652658238,
        0.5829480178646468, -0.07893918397306843, 0.3147915514342539,
        0.3142579757323138, -0.08440003983266144, -0.692881801996411,
        -0.2177844961762289, -0.19533791786522492, -0.22665765093841067,
        -0.3195679261340593, 6.3352095159571435, 13.304182061875538,
        9.068588917821575, 13.820343051841526, -2.9904131431626517,
        -6.464484302874146, 1.4950174056035006, 0.22841081726546483,
        -1.0443697855595202, -0.36648156701751267, 0.4882545319244275,
        0.32511669967392476, -0.7495219254728813, -0.3240674257394919,
        -0.14589390394899102, 0.816159853135446, 0.21110858701983537,
        -0.6213564644140027, -0.275033391957563, 0.23916839371037824,
        -1.0440547633891395, -0.40792084439497517, 0.5561013465692207,
        0.37457806876122546, 0.17778944632276653, -0.06964266735015433,
        -0.395265600045646, 0.6982215061431774, 0.740778974977921,
        -0.3129025268374792, -2.009627390680164, -0.7516589877591736,
        -0.15987777595408992, -2.551617907860878, -8.96433145647966,
        -15.134863386021781, -2.1073345817546003, 0.6188777654040759,
        -3.020632263557078, -0.13950893398737912, 0.6328052716649578,
        -0.16318694006603662, 0.06410706438489891, 0.11411070867346804,
        -0.2886162817684455, -0.35613651800395313, 0.12924440993745664,
        0.38077834891929796, 0.8237413397844878, 0.42592408743381815,
        -1.499388757097531, 1.2113263922466315, -0.6165184213094926,
        -0.9282058970090798, 1.2123284995709924, -0.37394823077908607,
        -0.0626955713199254, 0.28532586796592635, -0.016166881608109255,
        -1.113208302263574, 0.8654659680925351, 2.0760623026361933,
        0.5132282760654556, -2.249134360011389, -2.0374388890600263,
        1.1231676638159473, 0.3121424243877217, 2.2815521755579042,
        -5.308271224660933, -6.728092771971708, 0.7140438104778886,
        1.0348891792697787, -0.06258092873568138, 0.11553928672311624,
        0.19710411955257187, -0.22253376417909151, -0.05143415191355815,
        -0.6173870905535266, -0.26515618204121805, 1.3879170617746586,
        1.914789556971131, -2.7981144693643607, 1.635105361823879,
        1.2876141106871726, -0.538398150461572, -0.8161681385562726,
        -0.5577322903580001, -0.1631047677612218, -1.4828287822897712,
        0.1985744186572128, -0.22253902629935005, 0.7614908977166794,
        0.38423492006819204, 0.1363382578891905, -0.40617531895308634,
        -1.9006670978622686, -5.605529579495267, -3.520106957758509,
        -0.705653947553275, -4.823387939658201, -3.7118525914264513,
        0.8763976476322485, -3.9705679716456896, -0.3066516936670704,
        1.2925955094882555, 0.9805792936814742, -0.5185509231518588,
        0.06850464794165309, -0.508021413026953, -0.6502504343138331,
        1.639300730699956, -0.04663462261514044, -0.42095485749155304,
        2.862896234676761, -0.8766418320987102, -0.06138024962032572,
        -0.6758372018583059, -2.165804182360429, -2.233410549901899,
        -1.7315960703588726, 0.023607096501577673, -0.7257834989804465,
        0.49340703388266716, -0.17688316963519096, 0.9123110495294448,
        1.0401382704665323, 0.4063823936166456, -3.5528586670065754,
        -3.2389924588328527, -3.336337544628424, -3.3053285670589143,
        0.4252936495393003, 1.2623512061316915, -7.933726737283649,
        -1.0910503490681764, 0.3059123726272148, 0.7904901365883903,
        0.15779582936744363, 0.35530534658354934, -1.0136463777621887,
        -0.4359637933660717, 1.3766560550226186, 1.2643786263280588,
        0.08111224992006862, 0.30101965208538256, -2.9649644331404845,
        3.940601481283172, 1.2809925361642973, -2.3740821954043603,
        -1.8568139214134618, -2.2875531209700912, -2.0068530505793203,
        -1.6161905886738603, -0.0699705599485395, -0.6845264460955596,
        1.1180256373411306, 1.0386505011587546, -0.45802414484767806,
        -1.8827293053017495, -1.1452872829873149, -9.828238034590992,
        -4.837531415856278, 0.03553408849268729, 5.873564568328072,
        -7.214828237282292, -1.9024855757814658, -3.672921982430532,
        -0.04721742712852893, 0.8004552356650778, 0.9185615121387268,
        0.1836517312402891, 1.0527130168554166, 0.35231243394437906,
        -0.9683286652099518, 0.38866324603453256, 1.1024459216780036,
        -1.6264163010988006, 5.908624805151913, 1.1522588148293589,
        -4.01237694118883, -1.340956061423007, -2.245048288549614,
        -1.484164394238348, 0.5856922934209832, 0.03564645100107093,
        -1.3588202093923047, 0.006860270440306241, -0.8453903643879284,
        0.31580363771161246, -0.13161779536446233, -0.3454951189579537,
        -1.1291296924180168, -2.1947930228924113, -14.643424663744323, 0,
        7.845651246794636, 11.843681310787776, -4.154582091968257,
        0.09883448579737673, 1.2191537903053737, 0.14782839419733967,
        -0.21707569483499198, 1.328772630302227, 0.012891904979339022,
        0.146292284007916, 0.7014726904124609, 1.7613861146868823,
        0.9788491568328603, 1.5860078469473597, 0.1581490709403331, 0,
        -0.158149070940315, -1.586007846947355, -0.978849156832858,
        -1.7613861146868832, -0.7014726904124806, -0.14629228400792066,
        -0.012891904979343359, -1.328772630302227, 0.21707569483499028,
        -0.14782839419734384, -1.2191537903053777, -0.0988344857973758,
        4.154582091968275, -11.843681310787789, -7.845651246794633,
        -0.03553408849252048, 14.643424663744339, 2.194793022892366,
        1.1291296924180338, 0.3454951189579438, 0.13161779536445045,
        -0.3158036377116142, 0.8453903643879325, -0.006860270440305063,
        1.3588202093923036, -0.03564645100107677, -0.5856922934209922,
        1.484164394238344, 2.2450482885496172, 1.3409560614230207,
        4.012376941188847, -1.1522588148293609, -5.908624805151906,
        1.6264163010987922, -1.102445921678016, -0.3886632460345318,
        0.9683286652099508, -0.3523124339443831, -1.0527130168554157,
        -0.18365173124028866, -0.9185615121387165, -0.8004552356650727,
        0.04721742712852156, 3.67292198243051, 1.9024855757814958,
        7.21482823728231, -5.873564568328037, 3.3053285670587775,
        4.837531415856222, 9.828238034591017, 1.1452872829873084,
        1.8827293053017478, 0.4580241448476783, -1.0386505011587623,
        -1.1180256373411397, 0.6845264460955567, 0.06997055994853607,
        1.6161905886738546, 2.006853050579316, 2.2875531209700912,
        1.856813921413464, 2.374082195404371, -1.280992536164301,
        -3.9406014812831787, 2.9649644331405014, -0.3010196520853782,
        -0.08111224992006867, -1.264378626328054, -1.3766560550226248,
        0.4359637933660757, 1.0136463777621971, -0.3553053465835505,
        -0.15779582936744335, -0.7904901365883831, -0.305912372627218,
        1.0910503490681696, 7.93372673728363, -1.2623512061316555,
        -0.42529364953934357, 0.7056539475532939, 3.336337544628484,
        3.2389924588327594, 3.552858667006559, -0.4063823936166395,
        -1.0401382704665338, -0.9123110495294464, 0.17688316963519082,
        -0.4934070338826668, 0.7257834989804409, -0.02360709650157415,
        1.7315960703588795, 2.2334105499019046, 2.165804182360432,
        0.6758372018583214, 0.061380249620329064, 0.8766418320987087,
        -2.862896234676741, 0.4209548574915572, 0.04663462261514133,
        -1.6393007306999556, 0.6502504343138344, 0.5080214130269537,
        -0.06850464794164784, 0.5185509231518611, -0.9805792936814706,
        -1.2925955094882546, 0.3066516936670752, 3.9705679716456634,
        -0.8763976476322699, 3.7118525914263776, 4.823387939658211,
        -0.31214242438772705, 3.520106957758469, 5.605529579495292,
        1.900667097862241, 0.40617531895307485, -0.13633825788919066,
        -0.384234920068196, -0.7614908977166867, 0.2225390262993494,
        -0.1985744186572119, 1.4828287822897714, 0.16310476776122626,
        0.5577322903580035, 0.8161681385562749, 0.5383981504615758,
        -1.287614110687174, -1.6351053618238793, 2.7981144693643794,
        -1.9147895569711246, -1.387917061774662, 0.26515618204121727,
        0.617387090553529, 0.05143415191356246, 0.22253376417909698,
        -0.19710411955257243, -0.11553928672311804, 0.06258092873567889,
        -1.0348891792697743, -0.7140438104778788, 6.728092771971674,
        5.308271224660902, -2.2815521755579335, 8.964331456479705,
        -1.1231676638158536, 2.03743888905998, 2.2491343600114058,
        -0.5132282760654543, -2.076062302636191, -0.865465968092537,
        1.1132083022635748, 0.016166881608109234, -0.285325867965928,
        0.06269557131992738, 0.373948230779088, -1.2123284995709924,
        0.9282058970090792, 0.6165184213094966, -1.2113263922466326,
        1.4993887570975342, -0.42592408743381316, -0.8237413397844804,
        -0.38077834891929335, -0.1292444099374525, 0.3561365180039534,
        0.28861628176844567, -0.11411070867346547, -0.06410706438489967,
        0.163186940066035, -0.6328052716649591, 0.13950893398738348,
        3.0206322635570557, -0.6188777654041017, 2.1073345817545266,
        15.134863386021769, -9.068588917821655, 2.5516179078607184,
        0.15987777595415892, 0.7516589877591673, 2.0096273906801727,
        0.3129025268374742, -0.7407789749779229, -0.6982215061431771,
        0.3952656000456455, 0.06964266735015913, -0.1777894463227658,
        -0.3745780687612245, -0.5561013465692228, 0.40792084439497267,
        1.044054763389139, -0.23916839371037832, 0.2750333919575636,
        0.6213564644140045, -0.21110858701983135, -0.8161598531354401,
        0.14589390394899499, 0.3240674257394903, 0.7495219254728818,
        -0.3251166996739207, -0.4882545319244257, 0.3664815670175123,
        1.0443697855595189, -0.22841081726546683, -1.4950174056034862,
        6.464484302874131, 2.9904131431626397, -13.820343051841599,
        1.9854594697574315, -13.304182061875386, -6.335209515957204,
        0.3195679261341049, 0.22665765093840967, 0.19533791786523994,
        0.2177844961762284, 0.692881801996408, 0.08440003983266403,
        -0.31425797573231284, -0.3147915514342516, 0.07893918397306962,
        -0.5829480178646479, 0.46161406526582016, 0.41846754429722727,
        0.7980185869448644, 0.4385884976219195, 0.23788459440435036,
        -1.2725586605629382, -0.7572023138336219, -0.29841298969258917,
        0.14587335963051393, -0.16753374785242225, -0.21612918483653495,
        0.5359722121834085, 0.6949568334964742, -1.0539667118389073,
        0.8761722254011011, 4.362973215395883, -8.09521234646192,
        -7.414834109374171, 7.531138613863165, -44.04178808431685,
        22.050605310259897, 5.151003256170214, -5.660191686379251,
        8.436742777573649, 1.5703737430868991, -0.8389528199741386,
        0.19212817740850727, 0.39792121836056477, -0.14922819541222082,
        -0.04777071240950075, -0.2908510034609289, -0.01506121201413311,
        0.3264657443238593, 0.7739535250454511, -0.16614591312540627,
        0.36806371804963284, -0.09763429547907729, 0.09133033174751491,
        -0.2445007533972123, -0.02909571825923493, 0.16613612027343472,
        0.2824097442697295, -0.1804431666726947, -0.480747660556516,
        -0.36626836712779753, 3.450756085581019, -1.9317197634824488,
        -11.789513877445398, 17.692027714058376, 32.19055083965611,
        -28.446155418037584, 65.63437440423782, -24.8788001555197,
        -2.0570987009734387, -3.2997425925449106, -11.516126179313863,
        12.372184270457085, 4.9611285532463585, 0.8639170202551659,
        0.16530865667454706, -0.46079094226119116, -0.1732663636027687,
        -0.25470104821282824, -0.4303139947158862, -0.04150147985929765,
        -0.5438621702414322, 0.8168356827516703, 0.09708915289878373,
        -0.1374402488992993, -0.09561935970760387, 0.09862618444928568,
        -0.6303699903322589, -0.18311714867083492, -0.07372642556981146,
        -0.19104942819406445, 0.0758622667350162, 3.0325028906240856,
        -9.032698483000724, -11.815798616251362, 36.620593610799446,
        10.636065931319884, -38.68839724466217, 45.71617418640933,
        -314.74785574475044, 197.27075321520152, 337.61540934331566,
        21.930976284520245, -28.83796358703773, -13.475211488788421,
        9.591771247309294, 1.5250850436867665, -1.554501701628276,
        -0.6466720997697484, 0.4451335771232284, 0.056507066939540815,
        -0.23461588343644407, -0.2601121970475936, 0.8042712968338912,
        0.307790074940778, 0.7748329018274447, -0.6513333254686114,
        -0.18908937081392915, -0.5044647601430582, -0.007429416907151449,
        -0.43833208591156614, 0.3383874374890965, 1.0227323524080993,
        -0.18896973496668346, -8.920663061128298, -3.6862817789376785,
        19.35920062861366, -44.57979554656358, 57.025448777424586,
        360.31891091191056, 8.800126189101382, 1526.2181503116453,
        45.05380791776222, -140.68826246910882, 254.89688572081207,
        -61.9678169612004, -4.508347618296833, 11.964107143689583,
        3.779035907773343, -1.904534560504963, -1.7624207728132955,
        -0.01261576384946491, 0.19558932994062728, -0.3021913121485407,
        0.4699644624025669, -0.9123038313637213, 0.36883118795348824,
        -0.13682839189736087, 0.6671389396205878, -0.2598905547065944,
        -0.4496831429006705, -1.2882353738829488, -0.7675504033211031,
        0.21593130161202181, 1.7124190510555817, 0.6346191100738432,
        -2.3593378023079388, -10.295701682078779, -39.60384931511013,
        54.052681314235315, 182.3786468306393, -282.1888069780413,
        735.5077404616143, -423.7691979018009, 46.72930747865378,
        744.0954066709207, 65.42102326237357, -26.998515460375824,
        -110.68919188818332, 1.7026644231740455, 8.68470682984619,
        -3.681262764653712, -1.4462870038602713, 0.6640301497435265,
        0.9826864094292609, -0.10353485266764806, -1.1704253870693322,
        0.47609558693405896, -0.638099377875768, 1.9145243520823476,
        0.11088180406502474, 0.08286462770329978, -0.362544553178147,
        -0.7468929761078681, -0.6955167330950445, -0.24508893173895085,
        4.773352510756971, -0.03437698373658793, -18.7912488614519,
        0.26732768536914786, 52.08491464110734, -48.78269001565601,
        -267.7782795448579, 730.1555176872121, 777.4907220078719,
        9988.272530974127, 2608.451923903957, -953.385318858432,
        570.3493516446571, -262.60583525697274, -86.61832325668658,
        -42.569555354666946, 2.6532766677526505, 7.1796038797667014,
        -2.786883963656256, -0.37842412015855753, 2.0950938638350354,
        0.042260514128576405, -0.5685045714908681, -0.9099046875190062,
        0.4779279337996068, -1.7872556824974217, 2.239357916267509,
        1.748611490859272, 1.4553261209412682, -0.726639874038271,
        -2.664625757264088, 0.5081747549074523, 1.8456273678139588,
        -1.3367261976572486, 1.0587560944122603, 22.259718007212488,
        -10.499004391497355, -376.5068970632838, 153.72085790515695,
        213.8676097071096, 5000.875744438484, 12998.804313286144,
        3077.5993672243935, -814.3853839170239, -589.8418819857724,
        52.443377241039045, -203.5884482467181, -68.76437592093224,
        24.89372626886499, 6.75172101504206, -0.13350548988021724,
        -0.12421201224142447, -0.33273215463053935, -0.7476745441031024,
        -2.632594416095354, 0.19923279402974362, -1.8330278968089646,
        1.4063404110660558, 0.33462283171345686, 1.8114765667849764,
        -0.03036195775005389, -0.8163858633748258, 0.8286902887112786,
        -0.22176027695649836, 1.260192177948489, -13.167070698799225,
        -23.74231030494054, 82.49990339348442, 67.21350217512965,
        -232.0789193763447, -387.93265499317204, 1281.4742181751474,
        7140.874330507548, 19170.83401144094, 6565.201391560317,
        -266.59769699529113, 524.5581059366303, -105.08267177765569,
        68.93994766048132, -65.5137173230453, -7.73662240740366,
        11.686157623491809, -6.071567479292581, -4.705160710517021,
        2.1433748844125784, -2.5722659267438033, -2.5332827335358727,
        -1.5955119590990279, 0.9340221618771696, -2.1983982122300714,
        -1.3910769799127845, 2.875563242016451, 0.39274625271232855,
        -1.9143589532041787, -1.9356332468609148, 4.628561865608953,
        1.3770831994437265, -19.219741943874194, 21.574731283989856,
        129.0323271304429, 65.73387671644744, 79.98538931762987,
        2188.2624437143977, 1562.286524069611, 3837.2504381898625,
      ],
    },
  },
  numeric = "undefined" == typeof exports ? function () {} : exports;
"undefined" != typeof global && (global.numeric = numeric),
  (numeric.version = "1.2.6"),
  (numeric.bench = function (a, b) {
    var c, d, e, f;
    for ("undefined" == typeof b && (b = 15), e = 0.5, c = new Date(); ; ) {
      for (e *= 2, f = e; f > 3; f -= 4) a(), a(), a(), a();
      for (; f > 0; ) a(), f--;
      if (((d = new Date()), d - c > b)) break;
    }
    for (f = e; f > 3; f -= 4) a(), a(), a(), a();
    for (; f > 0; ) a(), f--;
    return (d = new Date()), (1e3 * (3 * e - 1)) / (d - c);
  }),
  (numeric._myIndexOf = function (a) {
    var b,
      c = this.length;
    for (b = 0; c > b; ++b) if (this[b] === a) return b;
    return -1;
  }),
  (numeric.myIndexOf = Array.prototype.indexOf
    ? Array.prototype.indexOf
    : numeric._myIndexOf),
  (numeric.Function = Function),
  (numeric.precision = 4),
  (numeric.largeArray = 50),
  (numeric.prettyPrint = function (a) {
    function b(a) {
      if (0 === a) return "0";
      if (isNaN(a)) return "NaN";
      if (0 > a) return "-" + b(-a);
      if (isFinite(a)) {
        var c = Math.floor(Math.log(a) / Math.log(10)),
          d = a / Math.pow(10, c),
          e = d.toPrecision(numeric.precision);
        return (
          10 === parseFloat(e) &&
            (c++, (d = 1), (e = d.toPrecision(numeric.precision))),
          parseFloat(e).toString() + "e" + c.toString()
        );
      }
      return "Infinity";
    }
    function c(a) {
      var e;
      if ("undefined" == typeof a)
        return d.push(Array(numeric.precision + 8).join(" ")), !1;
      if ("string" == typeof a) return d.push('"' + a + '"'), !1;
      if ("boolean" == typeof a) return d.push(a.toString()), !1;
      if ("number" == typeof a) {
        var f = b(a),
          g = a.toPrecision(numeric.precision),
          h = parseFloat(a.toString()).toString(),
          i = [f, g, h, parseFloat(g).toString(), parseFloat(h).toString()];
        for (e = 1; e < i.length; e++) i[e].length < f.length && (f = i[e]);
        return (
          d.push(Array(numeric.precision + 8 - f.length).join(" ") + f), !1
        );
      }
      if (null === a) return d.push("null"), !1;
      if ("function" == typeof a) {
        d.push(a.toString());
        var j = !1;
        for (e in a)
          a.hasOwnProperty(e) &&
            (d.push(j ? ",\n" : "\n{"),
            (j = !0),
            d.push(e),
            d.push(": \n"),
            c(a[e]));
        return j && d.push("}\n"), !0;
      }
      if (a instanceof Array) {
        if (a.length > numeric.largeArray)
          return d.push("...Large Array..."), !0;
        var j = !1;
        for (d.push("["), e = 0; e < a.length; e++)
          e > 0 && (d.push(","), j && d.push("\n ")), (j = c(a[e]));
        return d.push("]"), !0;
      }
      d.push("{");
      var j = !1;
      for (e in a)
        a.hasOwnProperty(e) &&
          (j && d.push(",\n"), (j = !0), d.push(e), d.push(": \n"), c(a[e]));
      return d.push("}"), !0;
    }
    var d = [];
    return c(a), d.join("");
  }),
  (numeric.parseDate = function (a) {
    function b(a) {
      if ("string" == typeof a) return Date.parse(a.replace(/-/g, "/"));
      if (!(a instanceof Array))
        throw new Error("parseDate: parameter must be arrays of strings");
      var c,
        d = [];
      for (c = 0; c < a.length; c++) d[c] = b(a[c]);
      return d;
    }
    return b(a);
  }),
  (numeric.parseFloat = function (a) {
    function b(a) {
      if ("string" == typeof a) return parseFloat(a);
      if (!(a instanceof Array))
        throw new Error("parseFloat: parameter must be arrays of strings");
      var c,
        d = [];
      for (c = 0; c < a.length; c++) d[c] = b(a[c]);
      return d;
    }
    return b(a);
  }),
  (numeric.parseCSV = function (a) {
    var b,
      c,
      d = a.split("\n"),
      e = [],
      f = /(([^'",]*)|('[^']*')|("[^"]*")),/g,
      g =
        /^\s*(([+-]?[0-9]+(\.[0-9]*)?(e[+-]?[0-9]+)?)|([+-]?[0-9]*(\.[0-9]+)?(e[+-]?[0-9]+)?))\s*$/,
      h = function (a) {
        return a.substr(0, a.length - 1);
      },
      i = 0;
    for (c = 0; c < d.length; c++) {
      var j,
        k = (d[c] + ",").match(f);
      if (k.length > 0) {
        for (e[i] = [], b = 0; b < k.length; b++)
          (j = h(k[b])), (e[i][b] = g.test(j) ? parseFloat(j) : j);
        i++;
      }
    }
    return e;
  }),
  (numeric.toCSV = function (a) {
    var b,
      c,
      d,
      e,
      f,
      g,
      h = numeric.dim(a);
    for (d = h[0], e = h[1], g = [], b = 0; d > b; b++) {
      for (f = [], c = 0; d > c; c++) f[c] = a[b][c].toString();
      g[b] = f.join(", ");
    }
    return g.join("\n") + "\n";
  }),
  (numeric.getURL = function (a) {
    var b = new XMLHttpRequest();
    return b.open("GET", a, !1), b.send(), b;
  }),
  (numeric.imageURL = function (a) {
    function b(a) {
      var b,
        c,
        d,
        e,
        f,
        g,
        h,
        i,
        j = a.length,
        k = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
        l = "";
      for (b = 0; j > b; b += 3)
        (c = a[b]),
          (d = a[b + 1]),
          (e = a[b + 2]),
          (f = c >> 2),
          (g = ((3 & c) << 4) + (d >> 4)),
          (h = ((15 & d) << 2) + (e >> 6)),
          (i = 63 & e),
          b + 1 >= j ? (h = i = 64) : b + 2 >= j && (i = 64),
          (l += k.charAt(f) + k.charAt(g) + k.charAt(h) + k.charAt(i));
      return l;
    }
    function c(a, b, c) {
      "undefined" == typeof b && (b = 0),
        "undefined" == typeof c && (c = a.length);
      {
        var d,
          e = [
            0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615,
            3915621685, 2657392035, 249268274, 2044508324, 3772115230,
            2547177864, 162941995, 2125561021, 3887607047, 2428444049,
            498536548, 1789927666, 4089016648, 2227061214, 450548861,
            1843258603, 4107580753, 2211677639, 325883990, 1684777152,
            4251122042, 2321926636, 335633487, 1661365465, 4195302755,
            2366115317, 997073096, 1281953886, 3579855332, 2724688242,
            1006888145, 1258607687, 3524101629, 2768942443, 901097722,
            1119000684, 3686517206, 2898065728, 853044451, 1172266101,
            3705015759, 2882616665, 651767980, 1373503546, 3369554304,
            3218104598, 565507253, 1454621731, 3485111705, 3099436303,
            671266974, 1594198024, 3322730930, 2970347812, 795835527,
            1483230225, 3244367275, 3060149565, 1994146192, 31158534,
            2563907772, 4023717930, 1907459465, 112637215, 2680153253,
            3904427059, 2013776290, 251722036, 2517215374, 3775830040,
            2137656763, 141376813, 2439277719, 3865271297, 1802195444,
            476864866, 2238001368, 4066508878, 1812370925, 453092731,
            2181625025, 4111451223, 1706088902, 314042704, 2344532202,
            4240017532, 1658658271, 366619977, 2362670323, 4224994405,
            1303535960, 984961486, 2747007092, 3569037538, 1256170817,
            1037604311, 2765210733, 3554079995, 1131014506, 879679996,
            2909243462, 3663771856, 1141124467, 855842277, 2852801631,
            3708648649, 1342533948, 654459306, 3188396048, 3373015174,
            1466479909, 544179635, 3110523913, 3462522015, 1591671054,
            702138776, 2966460450, 3352799412, 1504918807, 783551873,
            3082640443, 3233442989, 3988292384, 2596254646, 62317068,
            1957810842, 3939845945, 2647816111, 81470997, 1943803523,
            3814918930, 2489596804, 225274430, 2053790376, 3826175755,
            2466906013, 167816743, 2097651377, 4027552580, 2265490386,
            503444072, 1762050814, 4150417245, 2154129355, 426522225,
            1852507879, 4275313526, 2312317920, 282753626, 1742555852,
            4189708143, 2394877945, 397917763, 1622183637, 3604390888,
            2714866558, 953729732, 1340076626, 3518719985, 2797360999,
            1068828381, 1219638859, 3624741850, 2936675148, 906185462,
            1090812512, 3747672003, 2825379669, 829329135, 1181335161,
            3412177804, 3160834842, 628085408, 1382605366, 3423369109,
            3138078467, 570562233, 1426400815, 3317316542, 2998733608,
            733239954, 1555261956, 3268935591, 3050360625, 752459403,
            1541320221, 2607071920, 3965973030, 1969922972, 40735498,
            2617837225, 3943577151, 1913087877, 83908371, 2512341634,
            3803740692, 2075208622, 213261112, 2463272603, 3855990285,
            2094854071, 198958881, 2262029012, 4057260610, 1759359992,
            534414190, 2176718541, 4139329115, 1873836001, 414664567,
            2282248934, 4279200368, 1711684554, 285281116, 2405801727,
            4167216745, 1634467795, 376229701, 2685067896, 3608007406,
            1308918612, 956543938, 2808555105, 3495958263, 1231636301,
            1047427035, 2932959818, 3654703836, 1088359270, 936918e3,
            2847714899, 3736837829, 1202900863, 817233897, 3183342108,
            3401237130, 1404277552, 615818150, 3134207493, 3453421203,
            1423857449, 601450431, 3009837614, 3294710456, 1567103746,
            711928724, 3020668471, 3272380065, 1510334235, 755167117,
          ],
          f = -1,
          g = 0;
        a.length;
      }
      for (d = b; c > d; d++) (g = 255 & (f ^ a[d])), (f = (f >>> 8) ^ e[g]);
      return -1 ^ f;
    }
    var d,
      e,
      f,
      g,
      h,
      i,
      j,
      k,
      l,
      m,
      n = a[0].length,
      o = a[0][0].length,
      p = [
        137,
        80,
        78,
        71,
        13,
        10,
        26,
        10,
        0,
        0,
        0,
        13,
        73,
        72,
        68,
        82,
        (o >> 24) & 255,
        (o >> 16) & 255,
        (o >> 8) & 255,
        255 & o,
        (n >> 24) & 255,
        (n >> 16) & 255,
        (n >> 8) & 255,
        255 & n,
        8,
        2,
        0,
        0,
        0,
        -1,
        -2,
        -3,
        -4,
        -5,
        -6,
        -7,
        -8,
        73,
        68,
        65,
        84,
        8,
        29,
      ];
    for (
      m = c(p, 12, 29),
        p[29] = (m >> 24) & 255,
        p[30] = (m >> 16) & 255,
        p[31] = (m >> 8) & 255,
        p[32] = 255 & m,
        d = 1,
        e = 0,
        j = 0;
      n > j;
      j++
    ) {
      for (
        p.push(n - 1 > j ? 0 : 1),
          h = (3 * o + 1 + (0 === j)) & 255,
          i = ((3 * o + 1 + (0 === j)) >> 8) & 255,
          p.push(h),
          p.push(i),
          p.push(255 & ~h),
          p.push(255 & ~i),
          0 === j && p.push(0),
          k = 0;
        o > k;
        k++
      )
        for (f = 0; 3 > f; f++)
          (h = a[f][j][k]),
            (h = h > 255 ? 255 : 0 > h ? 0 : Math.round(h)),
            (d = (d + h) % 65521),
            (e = (e + d) % 65521),
            p.push(h);
      p.push(0);
    }
    return (
      (l = (e << 16) + d),
      p.push((l >> 24) & 255),
      p.push((l >> 16) & 255),
      p.push((l >> 8) & 255),
      p.push(255 & l),
      (g = p.length - 41),
      (p[33] = (g >> 24) & 255),
      (p[34] = (g >> 16) & 255),
      (p[35] = (g >> 8) & 255),
      (p[36] = 255 & g),
      (m = c(p, 37)),
      p.push((m >> 24) & 255),
      p.push((m >> 16) & 255),
      p.push((m >> 8) & 255),
      p.push(255 & m),
      p.push(0),
      p.push(0),
      p.push(0),
      p.push(0),
      p.push(73),
      p.push(69),
      p.push(78),
      p.push(68),
      p.push(174),
      p.push(66),
      p.push(96),
      p.push(130),
      "data:image/png;base64," + b(p)
    );
  }),
  (numeric._dim = function (a) {
    for (var b = []; "object" == typeof a; ) b.push(a.length), (a = a[0]);
    return b;
  }),
  (numeric.dim = function (a) {
    var b, c;
    return "object" == typeof a
      ? ((b = a[0]),
        "object" == typeof b
          ? ((c = b[0]),
            "object" == typeof c ? numeric._dim(a) : [a.length, b.length])
          : [a.length])
      : [];
  }),
  (numeric.mapreduce = function (a, b) {
    return Function(
      "x",
      "accum",
      "_s",
      "_k",
      'if(typeof accum === "undefined") accum = ' +
        b +
        ';\nif(typeof x === "number") { var xi = x; ' +
        a +
        '; return accum; }\nif(typeof _s === "undefined") _s = numeric.dim(x);\nif(typeof _k === "undefined") _k = 0;\nvar _n = _s[_k];\nvar i,xi;\nif(_k < _s.length-1) {\n    for(i=_n-1;i>=0;i--) {\n        accum = arguments.callee(x[i],accum,_s,_k+1);\n    }    return accum;\n}\nfor(i=_n-1;i>=1;i-=2) { \n    xi = x[i];\n    ' +
        a +
        ";\n    xi = x[i-1];\n    " +
        a +
        ";\n}\nif(i === 0) {\n    xi = x[i];\n    " +
        a +
        "\n}\nreturn accum;"
    );
  }),
  (numeric.mapreduce2 = function (a, b) {
    return Function(
      "x",
      "var n = x.length;\nvar i,xi;\n" +
        b +
        ";\nfor(i=n-1;i!==-1;--i) { \n    xi = x[i];\n    " +
        a +
        ";\n}\nreturn accum;"
    );
  }),
  (numeric.same = function a(b, c) {
    var d, e;
    if (!(b instanceof Array && c instanceof Array)) return !1;
    if (((e = b.length), e !== c.length)) return !1;
    for (d = 0; e > d; d++)
      if (b[d] !== c[d]) {
        if ("object" != typeof b[d]) return !1;
        if (!a(b[d], c[d])) return !1;
      }
    return !0;
  }),
  (numeric.rep = function (a, b, c) {
    "undefined" == typeof c && (c = 0);
    var d,
      e = a[c],
      f = Array(e);
    if (c === a.length - 1) {
      for (d = e - 2; d >= 0; d -= 2) (f[d + 1] = b), (f[d] = b);
      return -1 === d && (f[0] = b), f;
    }
    for (d = e - 1; d >= 0; d--) f[d] = numeric.rep(a, b, c + 1);
    return f;
  }),
  (numeric.dotMMsmall = function (a, b) {
    var c, d, e, f, g, h, i, j, k, l, m;
    for (
      f = a.length, g = b.length, h = b[0].length, i = Array(f), c = f - 1;
      c >= 0;
      c--
    ) {
      for (j = Array(h), k = a[c], e = h - 1; e >= 0; e--) {
        for (l = k[g - 1] * b[g - 1][e], d = g - 2; d >= 1; d -= 2)
          (m = d - 1), (l += k[d] * b[d][e] + k[m] * b[m][e]);
        0 === d && (l += k[0] * b[0][e]), (j[e] = l);
      }
      i[c] = j;
    }
    return i;
  }),
  (numeric._getCol = function (a, b, c) {
    var d,
      e = a.length;
    for (d = e - 1; d > 0; --d) (c[d] = a[d][b]), --d, (c[d] = a[d][b]);
    0 === d && (c[0] = a[0][b]);
  }),
  (numeric.dotMMbig = function (a, b) {
    var c,
      d,
      e,
      f,
      g = numeric._getCol,
      h = b.length,
      i = Array(h),
      j = a.length,
      k = b[0].length,
      l = new Array(j),
      m = numeric.dotVV;
    for (--h, --j, d = j; -1 !== d; --d) l[d] = Array(k);
    for (--k, d = k; -1 !== d; --d)
      for (g(b, d, i), e = j; -1 !== e; --e)
        (f = 0), (c = a[e]), (l[e][d] = m(c, i));
    return l;
  }),
  (numeric.dotMV = function (a, b) {
    var c,
      d = a.length,
      e = (b.length, Array(d)),
      f = numeric.dotVV;
    for (c = d - 1; c >= 0; c--) e[c] = f(a[c], b);
    return e;
  }),
  (numeric.dotVM = function (a, b) {
    var c, d, e, f, g, h, i;
    for (e = a.length, f = b[0].length, g = Array(f), d = f - 1; d >= 0; d--) {
      for (h = a[e - 1] * b[e - 1][d], c = e - 2; c >= 1; c -= 2)
        (i = c - 1), (h += a[c] * b[c][d] + a[i] * b[i][d]);
      0 === c && (h += a[0] * b[0][d]), (g[d] = h);
    }
    return g;
  }),
  (numeric.dotVV = function (a, b) {
    var c,
      d,
      e = a.length,
      f = a[e - 1] * b[e - 1];
    for (c = e - 2; c >= 1; c -= 2)
      (d = c - 1), (f += a[c] * b[c] + a[d] * b[d]);
    return 0 === c && (f += a[0] * b[0]), f;
  }),
  (numeric.dot = function (a, b) {
    var c = numeric.dim;
    switch (1e3 * c(a).length + c(b).length) {
      case 2002:
        return b.length < 10
          ? numeric.dotMMsmall(a, b)
          : numeric.dotMMbig(a, b);
      case 2001:
        return numeric.dotMV(a, b);
      case 1002:
        return numeric.dotVM(a, b);
      case 1001:
        return numeric.dotVV(a, b);
      case 1e3:
        return numeric.mulVS(a, b);
      case 1:
        return numeric.mulSV(a, b);
      case 0:
        return a * b;
      default:
        throw new Error("numeric.dot only works on vectors and matrices");
    }
  }),
  (numeric.diag = function (a) {
    var b,
      c,
      d,
      e,
      f = a.length,
      g = Array(f);
    for (b = f - 1; b >= 0; b--) {
      for (e = Array(f), c = b + 2, d = f - 1; d >= c; d -= 2)
        (e[d] = 0), (e[d - 1] = 0);
      for (d > b && (e[d] = 0), e[b] = a[b], d = b - 1; d >= 1; d -= 2)
        (e[d] = 0), (e[d - 1] = 0);
      0 === d && (e[0] = 0), (g[b] = e);
    }
    return g;
  }),
  (numeric.getDiag = function (a) {
    var b,
      c = Math.min(a.length, a[0].length),
      d = Array(c);
    for (b = c - 1; b >= 1; --b) (d[b] = a[b][b]), --b, (d[b] = a[b][b]);
    return 0 === b && (d[0] = a[0][0]), d;
  }),
  (numeric.identity = function (a) {
    return numeric.diag(numeric.rep([a], 1));
  }),
  (numeric.pointwise = function (a, b, c) {
    "undefined" == typeof c && (c = "");
    var d,
      e,
      f = [],
      g = /\[i\]$/,
      h = "",
      i = !1;
    for (d = 0; d < a.length; d++)
      g.test(a[d])
        ? ((e = a[d].substring(0, a[d].length - 3)), (h = e))
        : (e = a[d]),
        "ret" === e && (i = !0),
        f.push(e);
    return (
      (f[a.length] = "_s"),
      (f[a.length + 1] = "_k"),
      (f[a.length + 2] =
        'if(typeof _s === "undefined") _s = numeric.dim(' +
        h +
        ');\nif(typeof _k === "undefined") _k = 0;\nvar _n = _s[_k];\nvar i' +
        (i ? "" : ", ret = Array(_n)") +
        ";\nif(_k < _s.length-1) {\n    for(i=_n-1;i>=0;i--) ret[i] = arguments.callee(" +
        a.join(",") +
        ",_s,_k+1);\n    return ret;\n}\n" +
        c +
        "\nfor(i=_n-1;i!==-1;--i) {\n    " +
        b +
        "\n}\nreturn ret;"),
      Function.apply(null, f)
    );
  }),
  (numeric.pointwise2 = function (a, b, c) {
    "undefined" == typeof c && (c = "");
    var d,
      e,
      f = [],
      g = /\[i\]$/,
      h = "",
      i = !1;
    for (d = 0; d < a.length; d++)
      g.test(a[d])
        ? ((e = a[d].substring(0, a[d].length - 3)), (h = e))
        : (e = a[d]),
        "ret" === e && (i = !0),
        f.push(e);
    return (
      (f[a.length] =
        "var _n = " +
        h +
        ".length;\nvar i" +
        (i ? "" : ", ret = Array(_n)") +
        ";\n" +
        c +
        "\nfor(i=_n-1;i!==-1;--i) {\n" +
        b +
        "\n}\nreturn ret;"),
      Function.apply(null, f)
    );
  }),
  (numeric._biforeach = function b(a, c, d, e, f) {
    if (e === d.length - 1) return void f(a, c);
    var g,
      h = d[e];
    for (g = h - 1; g >= 0; g--)
      b(
        "object" == typeof a ? a[g] : a,
        "object" == typeof c ? c[g] : c,
        d,
        e + 1,
        f
      );
  }),
  (numeric._biforeach2 = function c(a, b, d, e, f) {
    if (e === d.length - 1) return f(a, b);
    var g,
      h = d[e],
      i = Array(h);
    for (g = h - 1; g >= 0; --g)
      i[g] = c(
        "object" == typeof a ? a[g] : a,
        "object" == typeof b ? b[g] : b,
        d,
        e + 1,
        f
      );
    return i;
  }),
  (numeric._foreach = function d(a, b, c, e) {
    if (c === b.length - 1) return void e(a);
    var f,
      g = b[c];
    for (f = g - 1; f >= 0; f--) d(a[f], b, c + 1, e);
  }),
  (numeric._foreach2 = function e(a, b, c, d) {
    if (c === b.length - 1) return d(a);
    var f,
      g = b[c],
      h = Array(g);
    for (f = g - 1; f >= 0; f--) h[f] = e(a[f], b, c + 1, d);
    return h;
  }),
  (numeric.ops2 = {
    add: "+",
    sub: "-",
    mul: "*",
    div: "/",
    mod: "%",
    and: "&&",
    or: "||",
    eq: "===",
    neq: "!==",
    lt: "<",
    gt: ">",
    leq: "<=",
    geq: ">=",
    band: "&",
    bor: "|",
    bxor: "^",
    lshift: "<<",
    rshift: ">>",
    rrshift: ">>>",
  }),
  (numeric.opseq = {
    addeq: "+=",
    subeq: "-=",
    muleq: "*=",
    diveq: "/=",
    modeq: "%=",
    lshifteq: "<<=",
    rshifteq: ">>=",
    rrshifteq: ">>>=",
    bandeq: "&=",
    boreq: "|=",
    bxoreq: "^=",
  }),
  (numeric.mathfuns = [
    "abs",
    "acos",
    "asin",
    "atan",
    "ceil",
    "cos",
    "exp",
    "floor",
    "log",
    "round",
    "sin",
    "sqrt",
    "tan",
    "isNaN",
    "isFinite",
  ]),
  (numeric.mathfuns2 = ["atan2", "pow", "max", "min"]),
  (numeric.ops1 = { neg: "-", not: "!", bnot: "~", clone: "" }),
  (numeric.mapreducers = {
    any: ["if(xi) return true;", "var accum = false;"],
    all: ["if(!xi) return false;", "var accum = true;"],
    sum: ["accum += xi;", "var accum = 0;"],
    prod: ["accum *= xi;", "var accum = 1;"],
    norm2Squared: ["accum += xi*xi;", "var accum = 0;"],
    norminf: [
      "accum = max(accum,abs(xi));",
      "var accum = 0, max = Math.max, abs = Math.abs;",
    ],
    norm1: ["accum += abs(xi)", "var accum = 0, abs = Math.abs;"],
    sup: ["accum = max(accum,xi);", "var accum = -Infinity, max = Math.max;"],
    inf: ["accum = min(accum,xi);", "var accum = Infinity, min = Math.min;"],
  }),
  (function () {
    var a, b;
    for (a = 0; a < numeric.mathfuns2.length; ++a)
      (b = numeric.mathfuns2[a]), (numeric.ops2[b] = b);
    for (a in numeric.ops2)
      if (numeric.ops2.hasOwnProperty(a)) {
        b = numeric.ops2[a];
        var c,
          d,
          e = "";
        -1 !== numeric.myIndexOf.call(numeric.mathfuns2, a)
          ? ((e = "var " + b + " = Math." + b + ";\n"),
            (c = function (a, c, d) {
              return a + " = " + b + "(" + c + "," + d + ")";
            }),
            (d = function (a, c) {
              return a + " = " + b + "(" + a + "," + c + ")";
            }))
          : ((c = function (a, c, d) {
              return a + " = " + c + " " + b + " " + d;
            }),
            (d = numeric.opseq.hasOwnProperty(a + "eq")
              ? function (a, c) {
                  return a + " " + b + "= " + c;
                }
              : function (a, c) {
                  return a + " = " + a + " " + b + " " + c;
                })),
          (numeric[a + "VV"] = numeric.pointwise2(
            ["x[i]", "y[i]"],
            c("ret[i]", "x[i]", "y[i]"),
            e
          )),
          (numeric[a + "SV"] = numeric.pointwise2(
            ["x", "y[i]"],
            c("ret[i]", "x", "y[i]"),
            e
          )),
          (numeric[a + "VS"] = numeric.pointwise2(
            ["x[i]", "y"],
            c("ret[i]", "x[i]", "y"),
            e
          )),
          (numeric[a] = Function(
            "var n = arguments.length, i, x = arguments[0], y;\nvar VV = numeric." +
              a +
              "VV, VS = numeric." +
              a +
              "VS, SV = numeric." +
              a +
              'SV;\nvar dim = numeric.dim;\nfor(i=1;i!==n;++i) { \n  y = arguments[i];\n  if(typeof x === "object") {\n      if(typeof y === "object") x = numeric._biforeach2(x,y,dim(x),0,VV);\n      else x = numeric._biforeach2(x,y,dim(x),0,VS);\n  } else if(typeof y === "object") x = numeric._biforeach2(x,y,dim(y),0,SV);\n  else ' +
              d("x", "y") +
              "\n}\nreturn x;\n"
          )),
          (numeric[b] = numeric[a]),
          (numeric[a + "eqV"] = numeric.pointwise2(
            ["ret[i]", "x[i]"],
            d("ret[i]", "x[i]"),
            e
          )),
          (numeric[a + "eqS"] = numeric.pointwise2(
            ["ret[i]", "x"],
            d("ret[i]", "x"),
            e
          )),
          (numeric[a + "eq"] = Function(
            "var n = arguments.length, i, x = arguments[0], y;\nvar V = numeric." +
              a +
              "eqV, S = numeric." +
              a +
              'eqS\nvar s = numeric.dim(x);\nfor(i=1;i!==n;++i) { \n  y = arguments[i];\n  if(typeof y === "object") numeric._biforeach(x,y,s,0,V);\n  else numeric._biforeach(x,y,s,0,S);\n}\nreturn x;\n'
          ));
      }
    for (a = 0; a < numeric.mathfuns2.length; ++a)
      (b = numeric.mathfuns2[a]), delete numeric.ops2[b];
    for (a = 0; a < numeric.mathfuns.length; ++a)
      (b = numeric.mathfuns[a]), (numeric.ops1[b] = b);
    for (a in numeric.ops1)
      numeric.ops1.hasOwnProperty(a) &&
        ((e = ""),
        (b = numeric.ops1[a]),
        -1 !== numeric.myIndexOf.call(numeric.mathfuns, a) &&
          Math.hasOwnProperty(b) &&
          (e = "var " + b + " = Math." + b + ";\n"),
        (numeric[a + "eqV"] = numeric.pointwise2(
          ["ret[i]"],
          "ret[i] = " + b + "(ret[i]);",
          e
        )),
        (numeric[a + "eq"] = Function(
          "x",
          'if(typeof x !== "object") return ' +
            b +
            "x\nvar i;\nvar V = numeric." +
            a +
            "eqV;\nvar s = numeric.dim(x);\nnumeric._foreach(x,s,0,V);\nreturn x;\n"
        )),
        (numeric[a + "V"] = numeric.pointwise2(
          ["x[i]"],
          "ret[i] = " + b + "(x[i]);",
          e
        )),
        (numeric[a] = Function(
          "x",
          'if(typeof x !== "object") return ' +
            b +
            "(x)\nvar i;\nvar V = numeric." +
            a +
            "V;\nvar s = numeric.dim(x);\nreturn numeric._foreach2(x,s,0,V);\n"
        )));
    for (a = 0; a < numeric.mathfuns.length; ++a)
      (b = numeric.mathfuns[a]), delete numeric.ops1[b];
    for (a in numeric.mapreducers)
      numeric.mapreducers.hasOwnProperty(a) &&
        ((b = numeric.mapreducers[a]),
        (numeric[a + "V"] = numeric.mapreduce2(b[0], b[1])),
        (numeric[a] = Function(
          "x",
          "s",
          "k",
          b[1] +
            'if(typeof x !== "object") {    xi = x;\n' +
            b[0] +
            ';\n    return accum;\n}if(typeof s === "undefined") s = numeric.dim(x);\nif(typeof k === "undefined") k = 0;\nif(k === s.length-1) return numeric.' +
            a +
            "V(x);\nvar xi;\nvar n = x.length, i;\nfor(i=n-1;i!==-1;--i) {\n   xi = arguments.callee(x[i]);\n" +
            b[0] +
            ";\n}\nreturn accum;\n"
        )));
  })(),
  (numeric.truncVV = numeric.pointwise(
    ["x[i]", "y[i]"],
    "ret[i] = round(x[i]/y[i])*y[i];",
    "var round = Math.round;"
  )),
  (numeric.truncVS = numeric.pointwise(
    ["x[i]", "y"],
    "ret[i] = round(x[i]/y)*y;",
    "var round = Math.round;"
  )),
  (numeric.truncSV = numeric.pointwise(
    ["x", "y[i]"],
    "ret[i] = round(x/y[i])*y[i];",
    "var round = Math.round;"
  )),
  (numeric.trunc = function (a, b) {
    return "object" == typeof a
      ? "object" == typeof b
        ? numeric.truncVV(a, b)
        : numeric.truncVS(a, b)
      : "object" == typeof b
      ? numeric.truncSV(a, b)
      : Math.round(a / b) * b;
  }),
  (numeric.inv = function (a) {
    var b,
      c,
      d,
      e,
      f,
      g,
      h,
      a,
      i = numeric.dim(a),
      j = Math.abs,
      k = i[0],
      l = i[1],
      m = numeric.clone(a),
      n = numeric.identity(k);
    for (g = 0; l > g; ++g) {
      var o = -1,
        p = -1;
      for (f = g; f !== k; ++f) (h = j(m[f][g])), h > p && ((o = f), (p = h));
      for (
        c = m[o],
          m[o] = m[g],
          m[g] = c,
          e = n[o],
          n[o] = n[g],
          n[g] = e,
          a = c[g],
          h = g;
        h !== l;
        ++h
      )
        c[h] /= a;
      for (h = l - 1; -1 !== h; --h) e[h] /= a;
      for (f = k - 1; -1 !== f; --f)
        if (f !== g) {
          for (b = m[f], d = n[f], a = b[g], h = g + 1; h !== l; ++h)
            b[h] -= c[h] * a;
          for (h = l - 1; h > 0; --h)
            (d[h] -= e[h] * a), --h, (d[h] -= e[h] * a);
          0 === h && (d[0] -= e[0] * a);
        }
    }
    return n;
  }),
  (numeric.det = function (a) {
    var b = numeric.dim(a);
    if (2 !== b.length || b[0] !== b[1])
      throw new Error("numeric: det() only works on square matrices");
    var c,
      d,
      e,
      f,
      g,
      h,
      i,
      j,
      k = b[0],
      l = 1,
      m = numeric.clone(a);
    for (d = 0; k - 1 > d; d++) {
      for (e = d, c = d + 1; k > c; c++)
        Math.abs(m[c][d]) > Math.abs(m[e][d]) && (e = c);
      for (
        e !== d && ((i = m[e]), (m[e] = m[d]), (m[d] = i), (l *= -1)),
          f = m[d],
          c = d + 1;
        k > c;
        c++
      ) {
        for (g = m[c], h = g[d] / f[d], e = d + 1; k - 1 > e; e += 2)
          (j = e + 1), (g[e] -= f[e] * h), (g[j] -= f[j] * h);
        e !== k && (g[e] -= f[e] * h);
      }
      if (0 === f[d]) return 0;
      l *= f[d];
    }
    return l * m[d][d];
  }),
  (numeric.transpose = function (a) {
    var b,
      c,
      d,
      e,
      f,
      g = a.length,
      h = a[0].length,
      i = Array(h);
    for (c = 0; h > c; c++) i[c] = Array(g);
    for (b = g - 1; b >= 1; b -= 2) {
      for (e = a[b], d = a[b - 1], c = h - 1; c >= 1; --c)
        (f = i[c]),
          (f[b] = e[c]),
          (f[b - 1] = d[c]),
          --c,
          (f = i[c]),
          (f[b] = e[c]),
          (f[b - 1] = d[c]);
      0 === c && ((f = i[0]), (f[b] = e[0]), (f[b - 1] = d[0]));
    }
    if (0 === b) {
      for (d = a[0], c = h - 1; c >= 1; --c)
        (i[c][0] = d[c]), --c, (i[c][0] = d[c]);
      0 === c && (i[0][0] = d[0]);
    }
    return i;
  }),
  (numeric.negtranspose = function (a) {
    var b,
      c,
      d,
      e,
      f,
      g = a.length,
      h = a[0].length,
      i = Array(h);
    for (c = 0; h > c; c++) i[c] = Array(g);
    for (b = g - 1; b >= 1; b -= 2) {
      for (e = a[b], d = a[b - 1], c = h - 1; c >= 1; --c)
        (f = i[c]),
          (f[b] = -e[c]),
          (f[b - 1] = -d[c]),
          --c,
          (f = i[c]),
          (f[b] = -e[c]),
          (f[b - 1] = -d[c]);
      0 === c && ((f = i[0]), (f[b] = -e[0]), (f[b - 1] = -d[0]));
    }
    if (0 === b) {
      for (d = a[0], c = h - 1; c >= 1; --c)
        (i[c][0] = -d[c]), --c, (i[c][0] = -d[c]);
      0 === c && (i[0][0] = -d[0]);
    }
    return i;
  }),
  (numeric._random = function f(a, b) {
    var c,
      d,
      e = a[b],
      g = Array(e);
    if (b === a.length - 1) {
      for (d = Math.random, c = e - 1; c >= 1; c -= 2)
        (g[c] = d()), (g[c - 1] = d());
      return 0 === c && (g[0] = d()), g;
    }
    for (c = e - 1; c >= 0; c--) g[c] = f(a, b + 1);
    return g;
  }),
  (numeric.random = function (a) {
    return numeric._random(a, 0);
  }),
  (numeric.norm2 = function (a) {
    return Math.sqrt(numeric.norm2Squared(a));
  }),
  (numeric.linspace = function (a, b, c) {
    if (
      ("undefined" == typeof c && (c = Math.max(Math.round(b - a) + 1, 1)),
      2 > c)
    )
      return 1 === c ? [a] : [];
    var d,
      e = Array(c);
    for (c--, d = c; d >= 0; d--) e[d] = (d * b + (c - d) * a) / c;
    return e;
  }),
  (numeric.getBlock = function (a, b, c) {
    function d(a, f) {
      var g,
        h = b[f],
        i = c[f] - h,
        j = Array(i);
      if (f === e.length - 1) {
        for (g = i; g >= 0; g--) j[g] = a[g + h];
        return j;
      }
      for (g = i; g >= 0; g--) j[g] = d(a[g + h], f + 1);
      return j;
    }
    var e = numeric.dim(a);
    return d(a, 0);
  }),
  (numeric.setBlock = function (a, b, c, d) {
    function e(a, d, g) {
      var h,
        i = b[g],
        j = c[g] - i;
      if (g === f.length - 1) for (h = j; h >= 0; h--) a[h + i] = d[h];
      for (h = j; h >= 0; h--) e(a[h + i], d[h], g + 1);
    }
    var f = numeric.dim(a);
    return e(a, d, 0), a;
  }),
  (numeric.getRange = function (a, b, c) {
    var d,
      e,
      f,
      g,
      h = b.length,
      i = c.length,
      j = Array(h);
    for (d = h - 1; -1 !== d; --d)
      for (j[d] = Array(i), f = j[d], g = a[b[d]], e = i - 1; -1 !== e; --e)
        f[e] = g[c[e]];
    return j;
  }),
  (numeric.blockMatrix = function (a) {
    var b = numeric.dim(a);
    if (b.length < 4) return numeric.blockMatrix([a]);
    var c,
      d,
      e,
      f,
      g,
      h = b[0],
      i = b[1];
    for (c = 0, d = 0, e = 0; h > e; ++e) c += a[e][0].length;
    for (f = 0; i > f; ++f) d += a[0][f][0].length;
    var j = Array(c);
    for (e = 0; c > e; ++e) j[e] = Array(d);
    var k,
      l,
      m,
      n,
      o,
      p = 0;
    for (e = 0; h > e; ++e) {
      for (k = d, f = i - 1; -1 !== f; --f)
        for (g = a[e][f], k -= g[0].length, m = g.length - 1; -1 !== m; --m)
          for (o = g[m], l = j[p + m], n = o.length - 1; -1 !== n; --n)
            l[k + n] = o[n];
      p += a[e][0].length;
    }
    return j;
  }),
  (numeric.tensor = function (a, b) {
    if ("number" == typeof a || "number" == typeof b) return numeric.mul(a, b);
    var c = numeric.dim(a),
      d = numeric.dim(b);
    if (1 !== c.length || 1 !== d.length)
      throw new Error("numeric: tensor product is only defined for vectors");
    var e,
      f,
      g,
      h,
      i = c[0],
      j = d[0],
      k = Array(i);
    for (f = i - 1; f >= 0; f--) {
      for (e = Array(j), h = a[f], g = j - 1; g >= 3; --g)
        (e[g] = h * b[g]),
          --g,
          (e[g] = h * b[g]),
          --g,
          (e[g] = h * b[g]),
          --g,
          (e[g] = h * b[g]);
      for (; g >= 0; ) (e[g] = h * b[g]), --g;
      k[f] = e;
    }
    return k;
  }),
  (numeric.T = function (a, b) {
    (this.x = a), (this.y = b);
  }),
  (numeric.t = function (a, b) {
    return new numeric.T(a, b);
  }),
  (numeric.Tbinop = function (a, b, c, d, e) {
    numeric.indexOf;
    if ("string" != typeof e) {
      var f;
      e = "";
      for (f in numeric)
        numeric.hasOwnProperty(f) &&
          (a.indexOf(f) >= 0 ||
            b.indexOf(f) >= 0 ||
            c.indexOf(f) >= 0 ||
            d.indexOf(f) >= 0) &&
          f.length > 1 &&
          (e += "var " + f + " = numeric." + f + ";\n");
    }
    return Function(
      ["y"],
      "var x = this;\nif(!(y instanceof numeric.T)) { y = new numeric.T(y); }\n" +
        e +
        "\nif(x.y) {  if(y.y) {    return new numeric.T(" +
        d +
        ");\n  }\n  return new numeric.T(" +
        c +
        ");\n}\nif(y.y) {\n  return new numeric.T(" +
        b +
        ");\n}\nreturn new numeric.T(" +
        a +
        ");\n"
    );
  }),
  (numeric.T.prototype.add = numeric.Tbinop(
    "add(x.x,y.x)",
    "add(x.x,y.x),y.y",
    "add(x.x,y.x),x.y",
    "add(x.x,y.x),add(x.y,y.y)"
  )),
  (numeric.T.prototype.sub = numeric.Tbinop(
    "sub(x.x,y.x)",
    "sub(x.x,y.x),neg(y.y)",
    "sub(x.x,y.x),x.y",
    "sub(x.x,y.x),sub(x.y,y.y)"
  )),
  (numeric.T.prototype.mul = numeric.Tbinop(
    "mul(x.x,y.x)",
    "mul(x.x,y.x),mul(x.x,y.y)",
    "mul(x.x,y.x),mul(x.y,y.x)",
    "sub(mul(x.x,y.x),mul(x.y,y.y)),add(mul(x.x,y.y),mul(x.y,y.x))"
  )),
  (numeric.T.prototype.reciprocal = function () {
    var a = numeric.mul,
      b = numeric.div;
    if (this.y) {
      var c = numeric.add(a(this.x, this.x), a(this.y, this.y));
      return new numeric.T(b(this.x, c), b(numeric.neg(this.y), c));
    }
    return new T(b(1, this.x));
  }),
  (numeric.T.prototype.div = function g(a) {
    if ((a instanceof numeric.T || (a = new numeric.T(a)), a.y))
      return this.mul(a.reciprocal());
    var g = numeric.div;
    return this.y
      ? new numeric.T(g(this.x, a.x), g(this.y, a.x))
      : new numeric.T(g(this.x, a.x));
  }),
  (numeric.T.prototype.dot = numeric.Tbinop(
    "dot(x.x,y.x)",
    "dot(x.x,y.x),dot(x.x,y.y)",
    "dot(x.x,y.x),dot(x.y,y.x)",
    "sub(dot(x.x,y.x),dot(x.y,y.y)),add(dot(x.x,y.y),dot(x.y,y.x))"
  )),
  (numeric.T.prototype.transpose = function () {
    var a = numeric.transpose,
      b = this.x,
      c = this.y;
    return c ? new numeric.T(a(b), a(c)) : new numeric.T(a(b));
  }),
  (numeric.T.prototype.transjugate = function () {
    var a = numeric.transpose,
      b = this.x,
      c = this.y;
    return c
      ? new numeric.T(a(b), numeric.negtranspose(c))
      : new numeric.T(a(b));
  }),
  (numeric.Tunop = function (a, b, c) {
    return (
      "string" != typeof c && (c = ""),
      Function(
        "var x = this;\n" + c + "\nif(x.y) {  " + b + ";\n}\n" + a + ";\n"
      )
    );
  }),
  (numeric.T.prototype.exp = numeric.Tunop(
    "return new numeric.T(ex)",
    "return new numeric.T(mul(cos(x.y),ex),mul(sin(x.y),ex))",
    "var ex = numeric.exp(x.x), cos = numeric.cos, sin = numeric.sin, mul = numeric.mul;"
  )),
  (numeric.T.prototype.conj = numeric.Tunop(
    "return new numeric.T(x.x);",
    "return new numeric.T(x.x,numeric.neg(x.y));"
  )),
  (numeric.T.prototype.neg = numeric.Tunop(
    "return new numeric.T(neg(x.x));",
    "return new numeric.T(neg(x.x),neg(x.y));",
    "var neg = numeric.neg;"
  )),
  (numeric.T.prototype.sin = numeric.Tunop(
    "return new numeric.T(numeric.sin(x.x))",
    "return x.exp().sub(x.neg().exp()).div(new numeric.T(0,2));"
  )),
  (numeric.T.prototype.cos = numeric.Tunop(
    "return new numeric.T(numeric.cos(x.x))",
    "return x.exp().add(x.neg().exp()).div(2);"
  )),
  (numeric.T.prototype.abs = numeric.Tunop(
    "return new numeric.T(numeric.abs(x.x));",
    "return new numeric.T(numeric.sqrt(numeric.add(mul(x.x,x.x),mul(x.y,x.y))));",
    "var mul = numeric.mul;"
  )),
  (numeric.T.prototype.log = numeric.Tunop(
    "return new numeric.T(numeric.log(x.x));",
    "var theta = new numeric.T(numeric.atan2(x.y,x.x)), r = x.abs();\nreturn new numeric.T(numeric.log(r.x),theta.x);"
  )),
  (numeric.T.prototype.norm2 = numeric.Tunop(
    "return numeric.norm2(x.x);",
    "var f = numeric.norm2Squared;\nreturn Math.sqrt(f(x.x)+f(x.y));"
  )),
  (numeric.T.prototype.inv = function () {
    var a = this;
    if ("undefined" == typeof a.y) return new numeric.T(numeric.inv(a.x));
    var b,
      c,
      d,
      e,
      f,
      g,
      h,
      i,
      j,
      k,
      l,
      b,
      c,
      d,
      m,
      n,
      o,
      p,
      q,
      r,
      s,
      t = a.x.length,
      u = numeric.identity(t),
      v = numeric.rep([t, t], 0),
      w = numeric.clone(a.x),
      x = numeric.clone(a.y);
    for (b = 0; t > b; b++) {
      for (
        o = w[b][b], p = x[b][b], m = o * o + p * p, d = b, c = b + 1;
        t > c;
        c++
      )
        (o = w[c][b]),
          (p = x[c][b]),
          (n = o * o + p * p),
          n > m && ((d = c), (m = n));
      for (
        d !== b &&
          ((s = w[b]),
          (w[b] = w[d]),
          (w[d] = s),
          (s = x[b]),
          (x[b] = x[d]),
          (x[d] = s),
          (s = u[b]),
          (u[b] = u[d]),
          (u[d] = s),
          (s = v[b]),
          (v[b] = v[d]),
          (v[d] = s)),
          e = w[b],
          f = x[b],
          i = u[b],
          j = v[b],
          o = e[b],
          p = f[b],
          c = b + 1;
        t > c;
        c++
      )
        (q = e[c]),
          (r = f[c]),
          (e[c] = (q * o + r * p) / m),
          (f[c] = (r * o - q * p) / m);
      for (c = 0; t > c; c++)
        (q = i[c]),
          (r = j[c]),
          (i[c] = (q * o + r * p) / m),
          (j[c] = (r * o - q * p) / m);
      for (c = b + 1; t > c; c++) {
        for (
          g = w[c], h = x[c], k = u[c], l = v[c], o = g[b], p = h[b], d = b + 1;
          t > d;
          d++
        )
          (q = e[d]),
            (r = f[d]),
            (g[d] -= q * o - r * p),
            (h[d] -= r * o + q * p);
        for (d = 0; t > d; d++)
          (q = i[d]),
            (r = j[d]),
            (k[d] -= q * o - r * p),
            (l[d] -= r * o + q * p);
      }
    }
    for (b = t - 1; b > 0; b--)
      for (i = u[b], j = v[b], c = b - 1; c >= 0; c--)
        for (
          k = u[c], l = v[c], o = w[c][b], p = x[c][b], d = t - 1;
          d >= 0;
          d--
        )
          (q = i[d]),
            (r = j[d]),
            (k[d] -= o * q - p * r),
            (l[d] -= o * r + p * q);
    return new numeric.T(u, v);
  }),
  (numeric.T.prototype.get = function (a) {
    var b,
      c = this.x,
      d = this.y,
      e = 0,
      f = a.length;
    if (d) {
      for (; f > e; ) (b = a[e]), (c = c[b]), (d = d[b]), e++;
      return new numeric.T(c, d);
    }
    for (; f > e; ) (b = a[e]), (c = c[b]), e++;
    return new numeric.T(c);
  }),
  (numeric.T.prototype.set = function (a, b) {
    var c,
      d = this.x,
      e = this.y,
      f = 0,
      g = a.length,
      h = b.x,
      i = b.y;
    if (0 === g)
      return i ? (this.y = i) : e && (this.y = void 0), (this.x = d), this;
    if (i) {
      for (
        e || ((e = numeric.rep(numeric.dim(d), 0)), (this.y = e));
        g - 1 > f;

      )
        (c = a[f]), (d = d[c]), (e = e[c]), f++;
      return (c = a[f]), (d[c] = h), (e[c] = i), this;
    }
    if (e) {
      for (; g - 1 > f; ) (c = a[f]), (d = d[c]), (e = e[c]), f++;
      return (
        (c = a[f]),
        (d[c] = h),
        (e[c] = h instanceof Array ? numeric.rep(numeric.dim(h), 0) : 0),
        this
      );
    }
    for (; g - 1 > f; ) (c = a[f]), (d = d[c]), f++;
    return (c = a[f]), (d[c] = h), this;
  }),
  (numeric.T.prototype.getRows = function (a, b) {
    var c,
      d,
      e = b - a + 1,
      f = Array(e),
      g = this.x,
      h = this.y;
    for (c = a; b >= c; c++) f[c - a] = g[c];
    if (h) {
      for (d = Array(e), c = a; b >= c; c++) d[c - a] = h[c];
      return new numeric.T(f, d);
    }
    return new numeric.T(f);
  }),
  (numeric.T.prototype.setRows = function (a, b, c) {
    var d,
      e = this.x,
      f = this.y,
      g = c.x,
      h = c.y;
    for (d = a; b >= d; d++) e[d] = g[d - a];
    if (h)
      for (
        f || ((f = numeric.rep(numeric.dim(e), 0)), (this.y = f)), d = a;
        b >= d;
        d++
      )
        f[d] = h[d - a];
    else if (f)
      for (d = a; b >= d; d++) f[d] = numeric.rep([g[d - a].length], 0);
    return this;
  }),
  (numeric.T.prototype.getRow = function (a) {
    var b = this.x,
      c = this.y;
    return c ? new numeric.T(b[a], c[a]) : new numeric.T(b[a]);
  }),
  (numeric.T.prototype.setRow = function (a, b) {
    var c = this.x,
      d = this.y,
      e = b.x,
      f = b.y;
    return (
      (c[a] = e),
      f
        ? (d || ((d = numeric.rep(numeric.dim(c), 0)), (this.y = d)),
          (d[a] = f))
        : d && (d = numeric.rep([e.length], 0)),
      this
    );
  }),
  (numeric.T.prototype.getBlock = function (a, b) {
    var c = this.x,
      d = this.y,
      e = numeric.getBlock;
    return d
      ? new numeric.T(e(c, a, b), e(d, a, b))
      : new numeric.T(e(c, a, b));
  }),
  (numeric.T.prototype.setBlock = function (a, b, c) {
    c instanceof numeric.T || (c = new numeric.T(c));
    var d = this.x,
      e = this.y,
      f = numeric.setBlock,
      g = c.x,
      h = c.y;
    return h
      ? (e || ((this.y = numeric.rep(numeric.dim(this), 0)), (e = this.y)),
        f(d, a, b, g),
        f(e, a, b, h),
        this)
      : (f(d, a, b, g), void (e && f(e, a, b, numeric.rep(numeric.dim(g), 0))));
  }),
  (numeric.T.rep = function (a, b) {
    var c = numeric.T;
    b instanceof c || (b = new c(b));
    var d = b.x,
      e = b.y,
      f = numeric.rep;
    return e ? new c(f(a, d), f(a, e)) : new c(f(a, d));
  }),
  (numeric.T.diag = function h(a) {
    a instanceof numeric.T || (a = new numeric.T(a));
    var b = a.x,
      c = a.y,
      h = numeric.diag;
    return c ? new numeric.T(h(b), h(c)) : new numeric.T(h(b));
  }),
  (numeric.T.eig = function () {
    if (this.y) throw new Error("eig: not implemented for complex matrices.");
    return numeric.eig(this.x);
  }),
  (numeric.T.identity = function (a) {
    return new numeric.T(numeric.identity(a));
  }),
  (numeric.T.prototype.getDiag = function () {
    var a = numeric,
      b = this.x,
      c = this.y;
    return c ? new a.T(a.getDiag(b), a.getDiag(c)) : new a.T(a.getDiag(b));
  }),
  (numeric.house = function (a) {
    var b = numeric.clone(a),
      c = a[0] >= 0 ? 1 : -1,
      d = c * numeric.norm2(a);
    b[0] += d;
    var e = numeric.norm2(b);
    if (0 === e) throw new Error("eig: internal error");
    return numeric.div(b, e);
  }),
  (numeric.toUpperHessenberg = function (a) {
    var b = numeric.dim(a);
    if (2 !== b.length || b[0] !== b[1])
      throw new Error(
        "numeric: toUpperHessenberg() only works on square matrices"
      );
    var c,
      d,
      e,
      f,
      g,
      h,
      i,
      j,
      k,
      l,
      m = b[0],
      n = numeric.clone(a),
      o = numeric.identity(m);
    for (d = 0; m - 2 > d; d++) {
      for (f = Array(m - d - 1), c = d + 1; m > c; c++) f[c - d - 1] = n[c][d];
      if (numeric.norm2(f) > 0) {
        for (
          g = numeric.house(f),
            h = numeric.getBlock(n, [d + 1, d], [m - 1, m - 1]),
            i = numeric.tensor(g, numeric.dot(g, h)),
            c = d + 1;
          m > c;
          c++
        )
          for (j = n[c], k = i[c - d - 1], e = d; m > e; e++)
            j[e] -= 2 * k[e - d];
        for (
          h = numeric.getBlock(n, [0, d + 1], [m - 1, m - 1]),
            i = numeric.tensor(numeric.dot(h, g), g),
            c = 0;
          m > c;
          c++
        )
          for (j = n[c], k = i[c], e = d + 1; m > e; e++)
            j[e] -= 2 * k[e - d - 1];
        for (h = Array(m - d - 1), c = d + 1; m > c; c++) h[c - d - 1] = o[c];
        for (i = numeric.tensor(g, numeric.dot(g, h)), c = d + 1; m > c; c++)
          for (l = o[c], k = i[c - d - 1], e = 0; m > e; e++) l[e] -= 2 * k[e];
      }
    }
    return { H: n, Q: o };
  }),
  (numeric.epsilon = 2.220446049250313e-16),
  (numeric.QRFrancis = function (a, b) {
    "undefined" == typeof b && (b = 1e4), (a = numeric.clone(a));
    var c,
      d,
      e,
      f,
      g,
      h,
      i,
      j,
      k,
      l,
      m,
      n,
      o,
      p,
      q,
      r,
      s,
      t,
      u = (numeric.clone(a), numeric.dim(a)),
      v = u[0],
      w = numeric.identity(v);
    if (3 > v) return { Q: w, B: [[0, v - 1]] };
    var x = numeric.epsilon;
    for (t = 0; b > t; t++) {
      for (r = 0; v - 1 > r; r++)
        if (
          Math.abs(a[r + 1][r]) <
          x * (Math.abs(a[r][r]) + Math.abs(a[r + 1][r + 1]))
        ) {
          var y = numeric.QRFrancis(numeric.getBlock(a, [0, 0], [r, r]), b),
            z = numeric.QRFrancis(
              numeric.getBlock(a, [r + 1, r + 1], [v - 1, v - 1]),
              b
            );
          for (n = Array(r + 1), q = 0; r >= q; q++) n[q] = w[q];
          for (o = numeric.dot(y.Q, n), q = 0; r >= q; q++) w[q] = o[q];
          for (n = Array(v - r - 1), q = r + 1; v > q; q++) n[q - r - 1] = w[q];
          for (o = numeric.dot(z.Q, n), q = r + 1; v > q; q++)
            w[q] = o[q - r - 1];
          return { Q: w, B: y.B.concat(numeric.add(z.B, r + 1)) };
        }
      if (
        ((e = a[v - 2][v - 2]),
        (f = a[v - 2][v - 1]),
        (g = a[v - 1][v - 2]),
        (h = a[v - 1][v - 1]),
        (j = e + h),
        (i = e * h - f * g),
        (k = numeric.getBlock(a, [0, 0], [2, 2])),
        j * j >= 4 * i)
      ) {
        var A, B;
        (A = 0.5 * (j + Math.sqrt(j * j - 4 * i))),
          (B = 0.5 * (j - Math.sqrt(j * j - 4 * i))),
          (k = numeric.add(
            numeric.sub(numeric.dot(k, k), numeric.mul(k, A + B)),
            numeric.diag(numeric.rep([3], A * B))
          ));
      } else
        k = numeric.add(
          numeric.sub(numeric.dot(k, k), numeric.mul(k, j)),
          numeric.diag(numeric.rep([3], i))
        );
      for (
        c = [k[0][0], k[1][0], k[2][0]],
          d = numeric.house(c),
          n = [a[0], a[1], a[2]],
          o = numeric.tensor(d, numeric.dot(d, n)),
          q = 0;
        3 > q;
        q++
      )
        for (m = a[q], p = o[q], s = 0; v > s; s++) m[s] -= 2 * p[s];
      for (
        n = numeric.getBlock(a, [0, 0], [v - 1, 2]),
          o = numeric.tensor(numeric.dot(n, d), d),
          q = 0;
        v > q;
        q++
      )
        for (m = a[q], p = o[q], s = 0; 3 > s; s++) m[s] -= 2 * p[s];
      for (
        n = [w[0], w[1], w[2]], o = numeric.tensor(d, numeric.dot(d, n)), q = 0;
        3 > q;
        q++
      )
        for (l = w[q], p = o[q], s = 0; v > s; s++) l[s] -= 2 * p[s];
      var C;
      for (r = 0; v - 2 > r; r++) {
        for (s = r; r + 1 >= s; s++)
          if (
            Math.abs(a[s + 1][s]) <
            x * (Math.abs(a[s][s]) + Math.abs(a[s + 1][s + 1]))
          ) {
            var y = numeric.QRFrancis(numeric.getBlock(a, [0, 0], [s, s]), b),
              z = numeric.QRFrancis(
                numeric.getBlock(a, [s + 1, s + 1], [v - 1, v - 1]),
                b
              );
            for (n = Array(s + 1), q = 0; s >= q; q++) n[q] = w[q];
            for (o = numeric.dot(y.Q, n), q = 0; s >= q; q++) w[q] = o[q];
            for (n = Array(v - s - 1), q = s + 1; v > q; q++)
              n[q - s - 1] = w[q];
            for (o = numeric.dot(z.Q, n), q = s + 1; v > q; q++)
              w[q] = o[q - s - 1];
            return { Q: w, B: y.B.concat(numeric.add(z.B, s + 1)) };
          }
        for (
          C = Math.min(v - 1, r + 3), c = Array(C - r), q = r + 1;
          C >= q;
          q++
        )
          c[q - r - 1] = a[q][r];
        for (
          d = numeric.house(c),
            n = numeric.getBlock(a, [r + 1, r], [C, v - 1]),
            o = numeric.tensor(d, numeric.dot(d, n)),
            q = r + 1;
          C >= q;
          q++
        )
          for (m = a[q], p = o[q - r - 1], s = r; v > s; s++)
            m[s] -= 2 * p[s - r];
        for (
          n = numeric.getBlock(a, [0, r + 1], [v - 1, C]),
            o = numeric.tensor(numeric.dot(n, d), d),
            q = 0;
          v > q;
          q++
        )
          for (m = a[q], p = o[q], s = r + 1; C >= s; s++)
            m[s] -= 2 * p[s - r - 1];
        for (n = Array(C - r), q = r + 1; C >= q; q++) n[q - r - 1] = w[q];
        for (o = numeric.tensor(d, numeric.dot(d, n)), q = r + 1; C >= q; q++)
          for (l = w[q], p = o[q - r - 1], s = 0; v > s; s++) l[s] -= 2 * p[s];
      }
    }
    throw new Error(
      "numeric: eigenvalue iteration does not converge -- increase maxiter?"
    );
  }),
  (numeric.eig = function (a, b) {
    var c,
      d,
      e,
      f,
      g,
      h,
      i,
      j,
      k,
      l,
      m,
      n,
      o,
      p,
      q,
      r,
      s,
      t = numeric.toUpperHessenberg(a),
      u = numeric.QRFrancis(t.H, b),
      v = numeric.T,
      w = a.length,
      x = u.B,
      y = numeric.dot(u.Q, numeric.dot(t.H, numeric.transpose(u.Q))),
      z = new v(numeric.dot(u.Q, t.Q)),
      A = x.length,
      B = Math.sqrt;
    for (d = 0; A > d; d++)
      if (((c = x[d][0]), c === x[d][1]));
      else {
        if (
          ((f = c + 1),
          (g = y[c][c]),
          (h = y[c][f]),
          (i = y[f][c]),
          (j = y[f][f]),
          0 === h && 0 === i)
        )
          continue;
        (k = -g - j),
          (l = g * j - h * i),
          (m = k * k - 4 * l),
          m >= 0
            ? ((n = 0 > k ? -0.5 * (k - B(m)) : -0.5 * (k + B(m))),
              (r = (g - n) * (g - n) + h * h),
              (s = i * i + (j - n) * (j - n)),
              r > s
                ? ((r = B(r)), (p = (g - n) / r), (q = h / r))
                : ((s = B(s)), (p = i / s), (q = (j - n) / s)),
              (e = new v([
                [q, -p],
                [p, q],
              ])),
              z.setRows(c, f, e.dot(z.getRows(c, f))))
            : ((n = -0.5 * k),
              (o = 0.5 * B(-m)),
              (r = (g - n) * (g - n) + h * h),
              (s = i * i + (j - n) * (j - n)),
              r > s
                ? ((r = B(r + o * o)),
                  (p = (g - n) / r),
                  (q = h / r),
                  (n = 0),
                  (o /= r))
                : ((s = B(s + o * o)),
                  (p = i / s),
                  (q = (j - n) / s),
                  (n = o / s),
                  (o = 0)),
              (e = new v(
                [
                  [q, -p],
                  [p, q],
                ],
                [
                  [n, o],
                  [o, -n],
                ]
              )),
              z.setRows(c, f, e.dot(z.getRows(c, f))));
      }
    var C = z.dot(a).dot(z.transjugate()),
      w = a.length,
      D = numeric.T.identity(w);
    for (f = 0; w > f; f++)
      if (f > 0)
        for (d = f - 1; d >= 0; d--) {
          var E = C.get([d, d]),
            F = C.get([f, f]);
          numeric.neq(E.x, F.x) || numeric.neq(E.y, F.y)
            ? ((n = C.getRow(d).getBlock([d], [f - 1])),
              (o = D.getRow(f).getBlock([d], [f - 1])),
              D.set([f, d], C.get([d, f]).neg().sub(n.dot(o)).div(E.sub(F))))
            : D.setRow(f, D.getRow(d));
        }
    for (f = 0; w > f; f++) (n = D.getRow(f)), D.setRow(f, n.div(n.norm2()));
    return (
      (D = D.transpose()),
      (D = z.transjugate().dot(D)),
      { lambda: C.getDiag(), E: D }
    );
  }),
  (numeric.ccsSparse = function (a) {
    var b,
      c,
      d,
      e,
      f = a.length,
      g = [];
    for (d = f - 1; -1 !== d; --d) {
      c = a[d];
      for (e in c) {
        for (e = parseInt(e); e >= g.length; ) g[g.length] = 0;
        0 !== c[e] && g[e]++;
      }
    }
    var b = g.length,
      h = Array(b + 1);
    for (h[0] = 0, d = 0; b > d; ++d) h[d + 1] = h[d] + g[d];
    var i = Array(h[b]),
      j = Array(h[b]);
    for (d = f - 1; -1 !== d; --d) {
      c = a[d];
      for (e in c)
        0 !== c[e] && (g[e]--, (i[h[e] + g[e]] = d), (j[h[e] + g[e]] = c[e]));
    }
    return [h, i, j];
  }),
  (numeric.ccsFull = function (a) {
    var b,
      c,
      d,
      e,
      f = a[0],
      g = a[1],
      h = a[2],
      i = numeric.ccsDim(a),
      j = i[0],
      k = i[1],
      l = numeric.rep([j, k], 0);
    for (b = 0; k > b; b++)
      for (d = f[b], e = f[b + 1], c = d; e > c; ++c) l[g[c]][b] = h[c];
    return l;
  }),
  (numeric.ccsTSolve = function (a, b, c, d, e) {
    function f(a) {
      var b;
      if (0 === c[a]) {
        for (c[a] = 1, b = g[a]; b < g[a + 1]; ++b) f(h[b]);
        (e[l] = a), ++l;
      }
    }
    var g = a[0],
      h = a[1],
      i = a[2],
      j = g.length - 1,
      k = Math.max,
      l = 0;
    "undefined" == typeof d && (c = numeric.rep([j], 0)),
      "undefined" == typeof d && (d = numeric.linspace(0, c.length - 1)),
      "undefined" == typeof e && (e = []);
    var m, n, o, p, q, r, s;
    for (m = d.length - 1; -1 !== m; --m) f(d[m]);
    for (e.length = l, m = e.length - 1; -1 !== m; --m) c[e[m]] = 0;
    for (m = d.length - 1; -1 !== m; --m) (n = d[m]), (c[n] = b[n]);
    for (m = e.length - 1; -1 !== m; --m) {
      for (n = e[m], o = g[n], p = k(g[n + 1], o), q = o; q !== p; ++q)
        if (h[q] === n) {
          c[n] /= i[q];
          break;
        }
      for (s = c[n], q = o; q !== p; ++q)
        (r = h[q]), r !== n && (c[r] -= s * i[q]);
    }
    return c;
  }),
  (numeric.ccsDFS = function (a) {
    (this.k = Array(a)), (this.k1 = Array(a)), (this.j = Array(a));
  }),
  (numeric.ccsDFS.prototype.dfs = function (a, b, c, d, e, f) {
    var g,
      h,
      i,
      j = 0,
      k = e.length,
      l = this.k,
      m = this.k1,
      n = this.j;
    if (0 === d[a])
      for (d[a] = 1, n[0] = a, l[0] = h = b[a], m[0] = i = b[a + 1]; ; )
        if (h >= i) {
          if (((e[k] = n[j]), 0 === j)) return;
          ++k, --j, (h = l[j]), (i = m[j]);
        } else
          (g = f[c[h]]),
            0 === d[g]
              ? ((d[g] = 1),
                (l[j] = h),
                ++j,
                (n[j] = g),
                (h = b[g]),
                (m[j] = i = b[g + 1]))
              : ++h;
  }),
  (numeric.ccsLPSolve = function (a, b, c, d, e, f, g) {
    var h,
      i,
      j,
      k,
      l,
      m,
      n,
      o,
      p,
      q = a[0],
      r = a[1],
      s = a[2],
      t = (q.length - 1, b[0]),
      u = b[1],
      v = b[2];
    for (i = t[e], j = t[e + 1], d.length = 0, h = i; j > h; ++h)
      g.dfs(f[u[h]], q, r, c, d, f);
    for (h = d.length - 1; -1 !== h; --h) c[d[h]] = 0;
    for (h = i; h !== j; ++h) (k = f[u[h]]), (c[k] = v[h]);
    for (h = d.length - 1; -1 !== h; --h) {
      for (k = d[h], l = q[k], m = q[k + 1], n = l; m > n; ++n)
        if (f[r[n]] === k) {
          c[k] /= s[n];
          break;
        }
      for (p = c[k], n = l; m > n; ++n)
        (o = f[r[n]]), o !== k && (c[o] -= p * s[n]);
    }
    return c;
  }),
  (numeric.ccsLUP1 = function (a, b) {
    var c,
      d,
      e,
      f,
      g,
      h,
      i,
      j = a[0].length - 1,
      k = [numeric.rep([j + 1], 0), [], []],
      l = [numeric.rep([j + 1], 0), [], []],
      m = k[0],
      n = k[1],
      o = k[2],
      p = l[0],
      q = l[1],
      r = l[2],
      s = numeric.rep([j], 0),
      t = numeric.rep([j], 0),
      u = numeric.ccsLPSolve,
      v = (Math.max, Math.abs),
      w = numeric.linspace(0, j - 1),
      x = numeric.linspace(0, j - 1),
      y = new numeric.ccsDFS(j);
    for ("undefined" == typeof b && (b = 1), c = 0; j > c; ++c) {
      for (
        u(k, a, s, t, c, x, y), f = -1, g = -1, d = t.length - 1;
        -1 !== d;
        --d
      )
        (e = t[d]), c >= e || ((h = v(s[e])), h > f && ((g = e), (f = h)));
      for (
        v(s[c]) < b * f &&
          ((d = w[c]),
          (f = w[g]),
          (w[c] = f),
          (x[f] = c),
          (w[g] = d),
          (x[d] = g),
          (f = s[c]),
          (s[c] = s[g]),
          (s[g] = f)),
          f = m[c],
          g = p[c],
          i = s[c],
          n[f] = w[c],
          o[f] = 1,
          ++f,
          d = t.length - 1;
        -1 !== d;
        --d
      )
        (e = t[d]),
          (h = s[e]),
          (t[d] = 0),
          (s[e] = 0),
          c >= e
            ? ((q[g] = e), (r[g] = h), ++g)
            : ((n[f] = w[e]), (o[f] = h / i), ++f);
      (m[c + 1] = f), (p[c + 1] = g);
    }
    for (d = n.length - 1; -1 !== d; --d) n[d] = x[n[d]];
    return { L: k, U: l, P: w, Pinv: x };
  }),
  (numeric.ccsDFS0 = function (a) {
    (this.k = Array(a)), (this.k1 = Array(a)), (this.j = Array(a));
  }),
  (numeric.ccsDFS0.prototype.dfs = function (a, b, c, d, e, f) {
    var g,
      h,
      i,
      j = 0,
      k = e.length,
      l = this.k,
      m = this.k1,
      n = this.j;
    if (0 === d[a])
      for (d[a] = 1, n[0] = a, l[0] = h = b[f[a]], m[0] = i = b[f[a] + 1]; ; ) {
        if (isNaN(h)) throw new Error("Ow!");
        if (h >= i) {
          if (((e[k] = f[n[j]]), 0 === j)) return;
          ++k, --j, (h = l[j]), (i = m[j]);
        } else
          (g = c[h]),
            0 === d[g]
              ? ((d[g] = 1),
                (l[j] = h),
                ++j,
                (n[j] = g),
                (g = f[g]),
                (h = b[g]),
                (m[j] = i = b[g + 1]))
              : ++h;
      }
  }),
  (numeric.ccsLPSolve0 = function (a, b, c, d, e, f, g, h) {
    var i,
      j,
      k,
      l,
      m,
      n,
      o,
      p,
      q,
      r = a[0],
      s = a[1],
      t = a[2],
      u = (r.length - 1, b[0]),
      v = b[1],
      w = b[2];
    for (j = u[e], k = u[e + 1], d.length = 0, i = j; k > i; ++i)
      h.dfs(v[i], r, s, c, d, f, g);
    for (i = d.length - 1; -1 !== i; --i) (l = d[i]), (c[g[l]] = 0);
    for (i = j; i !== k; ++i) (l = v[i]), (c[l] = w[i]);
    for (i = d.length - 1; -1 !== i; --i) {
      for (l = d[i], p = g[l], m = r[l], n = r[l + 1], o = m; n > o; ++o)
        if (s[o] === p) {
          c[p] /= t[o];
          break;
        }
      for (q = c[p], o = m; n > o; ++o) c[s[o]] -= q * t[o];
      c[p] = q;
    }
  }),
  (numeric.ccsLUP0 = function (a, b) {
    var c,
      d,
      e,
      f,
      g,
      h,
      i,
      j = a[0].length - 1,
      k = [numeric.rep([j + 1], 0), [], []],
      l = [numeric.rep([j + 1], 0), [], []],
      m = k[0],
      n = k[1],
      o = k[2],
      p = l[0],
      q = l[1],
      r = l[2],
      s = numeric.rep([j], 0),
      t = numeric.rep([j], 0),
      u = numeric.ccsLPSolve0,
      v = (Math.max, Math.abs),
      w = numeric.linspace(0, j - 1),
      x = numeric.linspace(0, j - 1),
      y = new numeric.ccsDFS0(j);
    for ("undefined" == typeof b && (b = 1), c = 0; j > c; ++c) {
      for (
        u(k, a, s, t, c, x, w, y), f = -1, g = -1, d = t.length - 1;
        -1 !== d;
        --d
      )
        (e = t[d]), c >= e || ((h = v(s[w[e]])), h > f && ((g = e), (f = h)));
      for (
        v(s[w[c]]) < b * f &&
          ((d = w[c]),
          (f = w[g]),
          (w[c] = f),
          (x[f] = c),
          (w[g] = d),
          (x[d] = g)),
          f = m[c],
          g = p[c],
          i = s[w[c]],
          n[f] = w[c],
          o[f] = 1,
          ++f,
          d = t.length - 1;
        -1 !== d;
        --d
      )
        (e = t[d]),
          (h = s[w[e]]),
          (t[d] = 0),
          (s[w[e]] = 0),
          c >= e
            ? ((q[g] = e), (r[g] = h), ++g)
            : ((n[f] = w[e]), (o[f] = h / i), ++f);
      (m[c + 1] = f), (p[c + 1] = g);
    }
    for (d = n.length - 1; -1 !== d; --d) n[d] = x[n[d]];
    return { L: k, U: l, P: w, Pinv: x };
  }),
  (numeric.ccsLUP = numeric.ccsLUP0),
  (numeric.ccsDim = function (a) {
    return [numeric.sup(a[1]) + 1, a[0].length - 1];
  }),
  (numeric.ccsGetBlock = function (a, b, c) {
    var d = numeric.ccsDim(a),
      e = d[0],
      f = d[1];
    "undefined" == typeof b
      ? (b = numeric.linspace(0, e - 1))
      : "number" == typeof b && (b = [b]),
      "undefined" == typeof c
        ? (c = numeric.linspace(0, f - 1))
        : "number" == typeof c && (c = [c]);
    var g,
      h,
      i,
      j,
      k,
      l = b.length,
      m = c.length,
      n = numeric.rep([f], 0),
      o = [],
      p = [],
      q = [n, o, p],
      r = a[0],
      s = a[1],
      t = a[2],
      u = numeric.rep([e], 0),
      v = 0,
      w = numeric.rep([e], 0);
    for (h = 0; m > h; ++h) {
      j = c[h];
      var x = r[j],
        y = r[j + 1];
      for (g = x; y > g; ++g) (i = s[g]), (w[i] = 1), (u[i] = t[g]);
      for (g = 0; l > g; ++g)
        (k = b[g]), w[k] && ((o[v] = g), (p[v] = u[b[g]]), ++v);
      for (g = x; y > g; ++g) (i = s[g]), (w[i] = 0);
      n[h + 1] = v;
    }
    return q;
  }),
  (numeric.ccsDot = function (a, b) {
    var c,
      d,
      e,
      f,
      g,
      h,
      i,
      j,
      k,
      l,
      m,
      n = a[0],
      o = a[1],
      p = a[2],
      q = b[0],
      r = b[1],
      s = b[2],
      t = numeric.ccsDim(a),
      u = numeric.ccsDim(b),
      v = t[0],
      w = (t[1], u[1]),
      x = numeric.rep([v], 0),
      y = numeric.rep([v], 0),
      z = Array(v),
      A = numeric.rep([w], 0),
      B = [],
      C = [],
      D = [A, B, C];
    for (e = 0; e !== w; ++e) {
      for (f = q[e], g = q[e + 1], k = 0, d = f; g > d; ++d)
        for (l = r[d], m = s[d], h = n[l], i = n[l + 1], c = h; i > c; ++c)
          (j = o[c]),
            0 === y[j] && ((z[k] = j), (y[j] = 1), (k += 1)),
            (x[j] = x[j] + p[c] * m);
      for (f = A[e], g = f + k, A[e + 1] = g, d = k - 1; -1 !== d; --d)
        (m = f + d),
          (c = z[d]),
          (B[m] = c),
          (C[m] = x[c]),
          (y[c] = 0),
          (x[c] = 0);
      A[e + 1] = A[e] + k;
    }
    return D;
  }),
  (numeric.ccsLUPSolve = function (a, b) {
    var c = a.L,
      d = a.U,
      e = (a.P, b[0]),
      f = !1;
    "object" != typeof e &&
      ((b = [[0, b.length], numeric.linspace(0, b.length - 1), b]),
      (e = b[0]),
      (f = !0));
    var g,
      h,
      i,
      j,
      k,
      l,
      m = b[1],
      n = b[2],
      o = c[0].length - 1,
      p = e.length - 1,
      q = numeric.rep([o], 0),
      r = Array(o),
      s = numeric.rep([o], 0),
      t = Array(o),
      u = numeric.rep([p + 1], 0),
      v = [],
      w = [],
      x = numeric.ccsTSolve,
      y = 0;
    for (g = 0; p > g; ++g) {
      for (k = 0, i = e[g], j = e[g + 1], h = i; j > h; ++h)
        (l = a.Pinv[m[h]]), (t[k] = l), (s[l] = n[h]), ++k;
      for (t.length = k, x(c, s, q, t, r), h = t.length - 1; -1 !== h; --h)
        s[t[h]] = 0;
      if ((x(d, q, s, r, t), f)) return s;
      for (h = r.length - 1; -1 !== h; --h) q[r[h]] = 0;
      for (h = t.length - 1; -1 !== h; --h)
        (l = t[h]), (v[y] = l), (w[y] = s[l]), (s[l] = 0), ++y;
      u[g + 1] = y;
    }
    return [u, v, w];
  }),
  (numeric.ccsbinop = function (a, b) {
    return (
      "undefined" == typeof b && (b = ""),
      Function(
        "X",
        "Y",
        "var Xi = X[0], Xj = X[1], Xv = X[2];\nvar Yi = Y[0], Yj = Y[1], Yv = Y[2];\nvar n = Xi.length-1,m = Math.max(numeric.sup(Xj),numeric.sup(Yj))+1;\nvar Zi = numeric.rep([n+1],0), Zj = [], Zv = [];\nvar x = numeric.rep([m],0),y = numeric.rep([m],0);\nvar xk,yk,zk;\nvar i,j,j0,j1,k,p=0;\n" +
          b +
          "for(i=0;i<n;++i) {\n  j0 = Xi[i]; j1 = Xi[i+1];\n  for(j=j0;j!==j1;++j) {\n    k = Xj[j];\n    x[k] = 1;\n    Zj[p] = k;\n    ++p;\n  }\n  j0 = Yi[i]; j1 = Yi[i+1];\n  for(j=j0;j!==j1;++j) {\n    k = Yj[j];\n    y[k] = Yv[j];\n    if(x[k] === 0) {\n      Zj[p] = k;\n      ++p;\n    }\n  }\n  Zi[i+1] = p;\n  j0 = Xi[i]; j1 = Xi[i+1];\n  for(j=j0;j!==j1;++j) x[Xj[j]] = Xv[j];\n  j0 = Zi[i]; j1 = Zi[i+1];\n  for(j=j0;j!==j1;++j) {\n    k = Zj[j];\n    xk = x[k];\n    yk = y[k];\n" +
          a +
          "\n    Zv[j] = zk;\n  }\n  j0 = Xi[i]; j1 = Xi[i+1];\n  for(j=j0;j!==j1;++j) x[Xj[j]] = 0;\n  j0 = Yi[i]; j1 = Yi[i+1];\n  for(j=j0;j!==j1;++j) y[Yj[j]] = 0;\n}\nreturn [Zi,Zj,Zv];"
      )
    );
  }),
  (function () {
    var k, A, B, C;
    for (k in numeric.ops2)
      (A = isFinite(eval("1" + numeric.ops2[k] + "0"))
        ? "[Y[0],Y[1],numeric." + k + "(X,Y[2])]"
        : "NaN"),
        (B = isFinite(eval("0" + numeric.ops2[k] + "1"))
          ? "[X[0],X[1],numeric." + k + "(X[2],Y)]"
          : "NaN"),
        (C =
          isFinite(eval("1" + numeric.ops2[k] + "0")) &&
          isFinite(eval("0" + numeric.ops2[k] + "1"))
            ? "numeric.ccs" + k + "MM(X,Y)"
            : "NaN"),
        (numeric["ccs" + k + "MM"] = numeric.ccsbinop(
          "zk = xk " + numeric.ops2[k] + "yk;"
        )),
        (numeric["ccs" + k] = Function(
          "X",
          "Y",
          'if(typeof X === "number") return ' +
            A +
            ';\nif(typeof Y === "number") return ' +
            B +
            ";\nreturn " +
            C +
            ";\n"
        ));
  })(),
  (numeric.ccsScatter = function (a) {
    var b,
      c = a[0],
      d = a[1],
      e = a[2],
      f = numeric.sup(d) + 1,
      g = c.length,
      h = numeric.rep([f], 0),
      i = Array(g),
      j = Array(g),
      k = numeric.rep([f], 0);
    for (b = 0; g > b; ++b) k[d[b]]++;
    for (b = 0; f > b; ++b) h[b + 1] = h[b] + k[b];
    var l,
      m,
      n = h.slice(0);
    for (b = 0; g > b; ++b)
      (m = d[b]), (l = n[m]), (i[l] = c[b]), (j[l] = e[b]), (n[m] = n[m] + 1);
    return [h, i, j];
  }),
  (numeric.ccsGather = function (a) {
    var b,
      c,
      d,
      e,
      f,
      g = a[0],
      h = a[1],
      i = a[2],
      j = g.length - 1,
      k = h.length,
      l = Array(k),
      m = Array(k),
      n = Array(k);
    for (f = 0, b = 0; j > b; ++b)
      for (d = g[b], e = g[b + 1], c = d; c !== e; ++c)
        (m[f] = b), (l[f] = h[c]), (n[f] = i[c]), ++f;
    return [l, m, n];
  }),
  (numeric.sdim = function i(a, b, c) {
    if (("undefined" == typeof b && (b = []), "object" != typeof a)) return b;
    "undefined" == typeof c && (c = 0),
      c in b || (b[c] = 0),
      a.length > b[c] && (b[c] = a.length);
    var d;
    for (d in a) a.hasOwnProperty(d) && i(a[d], b, c + 1);
    return b;
  }),
  (numeric.sclone = function j(a, b, c) {
    "undefined" == typeof b && (b = 0),
      "undefined" == typeof c && (c = numeric.sdim(a).length);
    var d,
      e = Array(a.length);
    if (b === c - 1) {
      for (d in a) a.hasOwnProperty(d) && (e[d] = a[d]);
      return e;
    }
    for (d in a) a.hasOwnProperty(d) && (e[d] = j(a[d], b + 1, c));
    return e;
  }),
  (numeric.sdiag = function (a) {
    var b,
      c,
      d = a.length,
      e = Array(d);
    for (b = d - 1; b >= 1; b -= 2)
      (c = b - 1), (e[b] = []), (e[b][b] = a[b]), (e[c] = []), (e[c][c] = a[c]);
    return 0 === b && ((e[0] = []), (e[0][0] = a[b])), e;
  }),
  (numeric.sidentity = function (a) {
    return numeric.sdiag(numeric.rep([a], 1));
  }),
  (numeric.stranspose = function (a) {
    {
      var b,
        c,
        d,
        e = [];
      a.length;
    }
    for (b in a)
      if (a.hasOwnProperty(b)) {
        d = a[b];
        for (c in d)
          d.hasOwnProperty(c) &&
            ("object" != typeof e[c] && (e[c] = []), (e[c][b] = d[c]));
      }
    return e;
  }),
  (numeric.sLUP = function () {
    throw new Error(
      "The function numeric.sLUP had a bug in it and has been removed. Please use the new numeric.ccsLUP function instead."
    );
  }),
  (numeric.sdotMM = function (a, b) {
    var c,
      d,
      e,
      f,
      g,
      h,
      i,
      j = a.length,
      k = (b.length, numeric.stranspose(b)),
      l = k.length,
      m = Array(j);
    for (e = j - 1; e >= 0; e--) {
      for (i = [], c = a[e], g = l - 1; g >= 0; g--) {
        (h = 0), (d = k[g]);
        for (f in c) c.hasOwnProperty(f) && f in d && (h += c[f] * d[f]);
        h && (i[g] = h);
      }
      m[e] = i;
    }
    return m;
  }),
  (numeric.sdotMV = function (a, b) {
    var c,
      d,
      e,
      f,
      g = a.length,
      h = Array(g);
    for (d = g - 1; d >= 0; d--) {
      (c = a[d]), (f = 0);
      for (e in c) c.hasOwnProperty(e) && b[e] && (f += c[e] * b[e]);
      f && (h[d] = f);
    }
    return h;
  }),
  (numeric.sdotVM = function (a, b) {
    var c,
      d,
      e,
      f,
      g = [];
    for (c in a)
      if (a.hasOwnProperty(c)) {
        (e = b[c]), (f = a[c]);
        for (d in e)
          e.hasOwnProperty(d) && (g[d] || (g[d] = 0), (g[d] += f * e[d]));
      }
    return g;
  }),
  (numeric.sdotVV = function (a, b) {
    var c,
      d = 0;
    for (c in a) a[c] && b[c] && (d += a[c] * b[c]);
    return d;
  }),
  (numeric.sdot = function (a, b) {
    var c = numeric.sdim(a).length,
      d = numeric.sdim(b).length,
      e = 1e3 * c + d;
    switch (e) {
      case 0:
        return a * b;
      case 1001:
        return numeric.sdotVV(a, b);
      case 2001:
        return numeric.sdotMV(a, b);
      case 1002:
        return numeric.sdotVM(a, b);
      case 2002:
        return numeric.sdotMM(a, b);
      default:
        throw new Error(
          "numeric.sdot not implemented for tensors of order " + c + " and " + d
        );
    }
  }),
  (numeric.sscatter = function (a) {
    var b,
      c,
      d,
      e,
      f = a[0].length,
      g = a.length,
      h = [];
    for (c = f - 1; c >= 0; --c)
      if (a[g - 1][c]) {
        for (e = h, d = 0; g - 2 > d; d++)
          (b = a[d][c]), e[b] || (e[b] = []), (e = e[b]);
        e[a[d][c]] = a[d + 1][c];
      }
    return h;
  }),
  (numeric.sgather = function k(a, b, c) {
    "undefined" == typeof b && (b = []), "undefined" == typeof c && (c = []);
    var d, e, f;
    d = c.length;
    for (e in a)
      if (a.hasOwnProperty(e))
        if (((c[d] = parseInt(e)), (f = a[e]), "number" == typeof f)) {
          if (f) {
            if (0 === b.length) for (e = d + 1; e >= 0; --e) b[e] = [];
            for (e = d; e >= 0; --e) b[e].push(c[e]);
            b[d + 1].push(f);
          }
        } else k(f, b, c);
    return c.length > d && c.pop(), b;
  }),
  (numeric.cLU = function (a) {
    var b,
      c,
      d,
      e,
      f,
      g,
      h = a[0],
      i = a[1],
      j = a[2],
      k = h.length,
      l = 0;
    for (b = 0; k > b; b++) h[b] > l && (l = h[b]);
    l++;
    var m,
      n,
      o,
      p = Array(l),
      q = Array(l),
      r = numeric.rep([l], 1 / 0),
      s = numeric.rep([l], -1 / 0);
    for (d = 0; k > d; d++)
      (b = h[d]), (c = i[d]), c < r[b] && (r[b] = c), c > s[b] && (s[b] = c);
    for (b = 0; l - 1 > b; b++) s[b] > s[b + 1] && (s[b + 1] = s[b]);
    for (b = l - 1; b >= 1; b--) r[b] < r[b - 1] && (r[b - 1] = r[b]);
    var t = 0,
      u = 0;
    for (b = 0; l > b; b++)
      (q[b] = numeric.rep([s[b] - r[b] + 1], 0)),
        (p[b] = numeric.rep([b - r[b]], 0)),
        (t += b - r[b] + 1),
        (u += s[b] - b + 1);
    for (d = 0; k > d; d++) (b = h[d]), (q[b][i[d] - r[b]] = j[d]);
    for (b = 0; l - 1 > b; b++)
      for (e = b - r[b], m = q[b], c = b + 1; r[c] <= b && l > c; c++)
        if (((f = b - r[c]), (g = s[b] - b), (n = q[c]), (o = n[f] / m[e]))) {
          for (d = 1; g >= d; d++) n[d + f] -= o * m[d + e];
          p[c][b - r[c]] = o;
        }
    var k,
      v,
      w,
      m = [],
      n = [],
      x = [],
      y = [],
      z = [],
      A = [];
    for (k = 0, v = 0, b = 0; l > b; b++) {
      for (e = r[b], f = s[b], w = q[b], c = b; f >= c; c++)
        w[c - e] && ((m[k] = b), (n[k] = c), (x[k] = w[c - e]), k++);
      for (w = p[b], c = e; b > c; c++)
        w[c - e] && ((y[v] = b), (z[v] = c), (A[v] = w[c - e]), v++);
      (y[v] = b), (z[v] = b), (A[v] = 1), v++;
    }
    return { U: [m, n, x], L: [y, z, A] };
  }),
  (numeric.cLUsolve = function (a, b) {
    var c,
      d,
      e = a.L,
      f = a.U,
      g = numeric.clone(b),
      h = e[0],
      i = e[1],
      j = e[2],
      k = f[0],
      l = f[1],
      m = f[2],
      n = k.length,
      o = (h.length, g.length);
    for (d = 0, c = 0; o > c; c++) {
      for (; i[d] < c; ) (g[c] -= j[d] * g[i[d]]), d++;
      d++;
    }
    for (d = n - 1, c = o - 1; c >= 0; c--) {
      for (; l[d] > c; ) (g[c] -= m[d] * g[l[d]]), d--;
      (g[c] /= m[d]), d--;
    }
    return g;
  }),
  (numeric.cgrid = function (a, b) {
    "number" == typeof a && (a = [a, a]);
    var c,
      d,
      e,
      f = numeric.rep(a, -1);
    if ("function" != typeof b)
      switch (b) {
        case "L":
          b = function (b, c) {
            return b >= a[0] / 2 || c < a[1] / 2;
          };
          break;
        default:
          b = function () {
            return !0;
          };
      }
    for (e = 0, c = 1; c < a[0] - 1; c++)
      for (d = 1; d < a[1] - 1; d++) b(c, d) && ((f[c][d] = e), e++);
    return f;
  }),
  (numeric.cdelsq = function (a) {
    var b,
      c,
      d,
      e,
      f,
      g = [
        [-1, 0],
        [0, -1],
        [0, 1],
        [1, 0],
      ],
      h = numeric.dim(a),
      i = h[0],
      j = h[1],
      k = [],
      l = [],
      m = [];
    for (b = 1; i - 1 > b; b++)
      for (c = 1; j - 1 > c; c++)
        if (!(a[b][c] < 0)) {
          for (d = 0; 4 > d; d++)
            (e = b + g[d][0]),
              (f = c + g[d][1]),
              a[e][f] < 0 || (k.push(a[b][c]), l.push(a[e][f]), m.push(-1));
          k.push(a[b][c]), l.push(a[b][c]), m.push(4);
        }
    return [k, l, m];
  }),
  (numeric.cdotMV = function (a, b) {
    var c,
      d,
      e,
      f = a[0],
      g = a[1],
      h = a[2],
      i = f.length;
    for (e = 0, d = 0; i > d; d++) f[d] > e && (e = f[d]);
    for (e++, c = numeric.rep([e], 0), d = 0; i > d; d++)
      c[f[d]] += h[d] * b[g[d]];
    return c;
  }),
  (numeric.Spline = function (a, b, c, d, e) {
    (this.x = a), (this.yl = b), (this.yr = c), (this.kl = d), (this.kr = e);
  }),
  (numeric.Spline.prototype._at = function (a, b) {
    var a,
      c,
      d,
      e,
      f = this.x,
      g = this.yl,
      h = this.yr,
      i = this.kl,
      j = this.kr,
      k = numeric.add,
      l = numeric.sub,
      m = numeric.mul;
    (c = l(m(i[b], f[b + 1] - f[b]), l(h[b + 1], g[b]))),
      (d = k(m(j[b + 1], f[b] - f[b + 1]), l(h[b + 1], g[b]))),
      (e = (a - f[b]) / (f[b + 1] - f[b]));
    var n = e * (1 - e);
    return k(
      k(k(m(1 - e, g[b]), m(e, h[b + 1])), m(c, n * (1 - e))),
      m(d, n * e)
    );
  }),
  (numeric.Spline.prototype.at = function (a) {
    if ("number" == typeof a) {
      var b,
        c,
        d,
        e = this.x,
        f = e.length,
        g = Math.floor;
      for (b = 0, c = f - 1; c - b > 1; )
        (d = g((b + c) / 2)), e[d] <= a ? (b = d) : (c = d);
      return this._at(a, b);
    }
    var h,
      f = a.length,
      i = Array(f);
    for (h = f - 1; -1 !== h; --h) i[h] = this.at(a[h]);
    return i;
  }),
  (numeric.Spline.prototype.diff = function () {
    var a,
      b,
      c,
      d = this.x,
      e = this.yl,
      f = this.yr,
      g = this.kl,
      h = this.kr,
      i = e.length,
      j = g,
      k = h,
      l = Array(i),
      m = Array(i),
      n = numeric.add,
      o = numeric.mul,
      p = numeric.div,
      q = numeric.sub;
    for (a = i - 1; -1 !== a; --a)
      (b = d[a + 1] - d[a]),
        (c = q(f[a + 1], e[a])),
        (l[a] = p(n(o(c, 6), o(g[a], -4 * b), o(h[a + 1], -2 * b)), b * b)),
        (m[a + 1] = p(n(o(c, -6), o(g[a], 2 * b), o(h[a + 1], 4 * b)), b * b));
    return new numeric.Spline(d, j, k, l, m);
  }),
  (numeric.Spline.prototype.roots = function () {
    function a(a) {
      return a * a;
    }
    var b = [],
      c = this.x,
      d = this.yl,
      e = this.yr,
      f = this.kl,
      g = this.kr;
    "number" == typeof d[0] && ((d = [d]), (e = [e]), (f = [f]), (g = [g]));
    var h,
      i,
      j,
      k,
      l,
      m,
      n,
      o,
      p,
      q,
      r,
      s,
      t,
      u,
      v,
      w,
      x,
      y,
      z,
      A,
      B,
      C,
      D,
      E,
      F = d.length,
      G = c.length - 1,
      b = Array(F),
      H = Math.sqrt;
    for (h = 0; h !== F; ++h) {
      for (
        k = d[h], l = e[h], m = f[h], n = g[h], o = [], i = 0;
        i !== G;
        i++
      ) {
        for (
          i > 0 && l[i] * k[i] < 0 && o.push(c[i]),
            w = c[i + 1] - c[i],
            x = c[i],
            r = k[i],
            s = l[i + 1],
            p = m[i] / w,
            q = n[i + 1] / w,
            v = a(p - q + 3 * (r - s)) + 12 * q * r,
            t = q + 3 * r + 2 * p - 3 * s,
            u = 3 * (q + p + 2 * (r - s)),
            0 >= v
              ? ((z = t / u),
                (y =
                  z > c[i] && z < c[i + 1]
                    ? [c[i], z, c[i + 1]]
                    : [c[i], c[i + 1]]))
              : ((z = (t - H(v)) / u),
                (A = (t + H(v)) / u),
                (y = [c[i]]),
                z > c[i] && z < c[i + 1] && y.push(z),
                A > c[i] && A < c[i + 1] && y.push(A),
                y.push(c[i + 1])),
            C = y[0],
            z = this._at(C, i),
            j = 0;
          j < y.length - 1;
          j++
        )
          if (((D = y[j + 1]), (A = this._at(D, i)), 0 !== z))
            if (0 === A || z * A > 0) (C = D), (z = A);
            else {
              for (var I = 0; ; ) {
                if (((E = (z * D - A * C) / (z - A)), C >= E || E >= D)) break;
                if (((B = this._at(E, i)), B * A > 0))
                  (D = E), (A = B), -1 === I && (z *= 0.5), (I = -1);
                else {
                  if (!(B * z > 0)) break;
                  (C = E), (z = B), 1 === I && (A *= 0.5), (I = 1);
                }
              }
              o.push(E), (C = y[j + 1]), (z = this._at(C, i));
            }
          else o.push(C), (C = D), (z = A);
        0 === A && o.push(D);
      }
      b[h] = o;
    }
    return "number" == typeof this.yl[0] ? b[0] : b;
  }),
  (numeric.spline = function (a, b, c, d) {
    var e,
      f = a.length,
      g = [],
      h = [],
      i = [],
      j = numeric.sub,
      k = numeric.mul,
      l = numeric.add;
    for (e = f - 2; e >= 0; e--)
      (h[e] = a[e + 1] - a[e]), (i[e] = j(b[e + 1], b[e]));
    ("string" == typeof c || "string" == typeof d) && (c = d = "periodic");
    var m = [[], [], []];
    switch (typeof c) {
      case "undefined":
        (g[0] = k(3 / (h[0] * h[0]), i[0])),
          m[0].push(0, 0),
          m[1].push(0, 1),
          m[2].push(2 / h[0], 1 / h[0]);
        break;
      case "string":
        (g[0] = l(
          k(3 / (h[f - 2] * h[f - 2]), i[f - 2]),
          k(3 / (h[0] * h[0]), i[0])
        )),
          m[0].push(0, 0, 0),
          m[1].push(f - 2, 0, 1),
          m[2].push(1 / h[f - 2], 2 / h[f - 2] + 2 / h[0], 1 / h[0]);
        break;
      default:
        (g[0] = c), m[0].push(0), m[1].push(0), m[2].push(1);
    }
    for (e = 1; f - 1 > e; e++)
      (g[e] = l(
        k(3 / (h[e - 1] * h[e - 1]), i[e - 1]),
        k(3 / (h[e] * h[e]), i[e])
      )),
        m[0].push(e, e, e),
        m[1].push(e - 1, e, e + 1),
        m[2].push(1 / h[e - 1], 2 / h[e - 1] + 2 / h[e], 1 / h[e]);
    switch (typeof d) {
      case "undefined":
        (g[f - 1] = k(3 / (h[f - 2] * h[f - 2]), i[f - 2])),
          m[0].push(f - 1, f - 1),
          m[1].push(f - 2, f - 1),
          m[2].push(1 / h[f - 2], 2 / h[f - 2]);
        break;
      case "string":
        m[1][m[1].length - 1] = 0;
        break;
      default:
        (g[f - 1] = d), m[0].push(f - 1), m[1].push(f - 1), m[2].push(1);
    }
    g = "number" != typeof g[0] ? numeric.transpose(g) : [g];
    var n = Array(g.length);
    if ("string" == typeof c)
      for (e = n.length - 1; -1 !== e; --e)
        (n[e] = numeric.ccsLUPSolve(
          numeric.ccsLUP(numeric.ccsScatter(m)),
          g[e]
        )),
          (n[e][f - 1] = n[e][0]);
    else
      for (e = n.length - 1; -1 !== e; --e)
        n[e] = numeric.cLUsolve(numeric.cLU(m), g[e]);
    return (
      (n = "number" == typeof b[0] ? n[0] : numeric.transpose(n)),
      new numeric.Spline(a, b, b, n, n)
    );
  }),
  (numeric.fftpow2 = function l(a, b) {
    var c = a.length;
    if (1 !== c) {
      var d,
        e,
        f = Math.cos,
        g = Math.sin,
        h = Array(c / 2),
        i = Array(c / 2),
        j = Array(c / 2),
        k = Array(c / 2);
      for (e = c / 2, d = c - 1; -1 !== d; --d)
        --e, (j[e] = a[d]), (k[e] = b[d]), --d, (h[e] = a[d]), (i[e] = b[d]);
      l(h, i), l(j, k), (e = c / 2);
      var m,
        n,
        o,
        p = -6.283185307179586 / c;
      for (d = c - 1; -1 !== d; --d)
        --e,
          -1 === e && (e = c / 2 - 1),
          (m = p * d),
          (n = f(m)),
          (o = g(m)),
          (a[d] = h[e] + n * j[e] - o * k[e]),
          (b[d] = i[e] + n * k[e] + o * j[e]);
    }
  }),
  (numeric._ifftpow2 = function m(a, b) {
    var c = a.length;
    if (1 !== c) {
      var d,
        e,
        f = Math.cos,
        g = Math.sin,
        h = Array(c / 2),
        i = Array(c / 2),
        j = Array(c / 2),
        k = Array(c / 2);
      for (e = c / 2, d = c - 1; -1 !== d; --d)
        --e, (j[e] = a[d]), (k[e] = b[d]), --d, (h[e] = a[d]), (i[e] = b[d]);
      m(h, i), m(j, k), (e = c / 2);
      var l,
        n,
        o,
        p = 6.283185307179586 / c;
      for (d = c - 1; -1 !== d; --d)
        --e,
          -1 === e && (e = c / 2 - 1),
          (l = p * d),
          (n = f(l)),
          (o = g(l)),
          (a[d] = h[e] + n * j[e] - o * k[e]),
          (b[d] = i[e] + n * k[e] + o * j[e]);
    }
  }),
  (numeric.ifftpow2 = function (a, b) {
    numeric._ifftpow2(a, b),
      numeric.diveq(a, a.length),
      numeric.diveq(b, b.length);
  }),
  (numeric.convpow2 = function (a, b, c, d) {
    numeric.fftpow2(a, b), numeric.fftpow2(c, d);
    var e,
      f,
      g,
      h,
      i,
      j = a.length;
    for (e = j - 1; -1 !== e; --e)
      (f = a[e]),
        (h = b[e]),
        (g = c[e]),
        (i = d[e]),
        (a[e] = f * g - h * i),
        (b[e] = f * i + h * g);
    numeric.ifftpow2(a, b);
  }),
  (numeric.T.prototype.fft = function () {
    {
      var a,
        b,
        c = this.x,
        d = this.y,
        e = c.length,
        f = Math.log,
        g = f(2),
        h = Math.ceil(f(2 * e - 1) / g),
        i = Math.pow(2, h),
        j = numeric.rep([i], 0),
        k = numeric.rep([i], 0),
        l = Math.cos,
        m = Math.sin,
        n = -3.141592653589793 / e,
        o = numeric.rep([i], 0),
        p = numeric.rep([i], 0);
      Math.floor(e / 2);
    }
    for (a = 0; e > a; a++) o[a] = c[a];
    if ("undefined" != typeof d) for (a = 0; e > a; a++) p[a] = d[a];
    for (j[0] = 1, a = 1; i / 2 >= a; a++)
      (b = n * a * a),
        (j[a] = l(b)),
        (k[a] = m(b)),
        (j[i - a] = l(b)),
        (k[i - a] = m(b));
    var q = new numeric.T(o, p),
      r = new numeric.T(j, k);
    return (
      (q = q.mul(r)),
      numeric.convpow2(q.x, q.y, numeric.clone(r.x), numeric.neg(r.y)),
      (q = q.mul(r)),
      (q.x.length = e),
      (q.y.length = e),
      q
    );
  }),
  (numeric.T.prototype.ifft = function () {
    {
      var a,
        b,
        c = this.x,
        d = this.y,
        e = c.length,
        f = Math.log,
        g = f(2),
        h = Math.ceil(f(2 * e - 1) / g),
        i = Math.pow(2, h),
        j = numeric.rep([i], 0),
        k = numeric.rep([i], 0),
        l = Math.cos,
        m = Math.sin,
        n = 3.141592653589793 / e,
        o = numeric.rep([i], 0),
        p = numeric.rep([i], 0);
      Math.floor(e / 2);
    }
    for (a = 0; e > a; a++) o[a] = c[a];
    if ("undefined" != typeof d) for (a = 0; e > a; a++) p[a] = d[a];
    for (j[0] = 1, a = 1; i / 2 >= a; a++)
      (b = n * a * a),
        (j[a] = l(b)),
        (k[a] = m(b)),
        (j[i - a] = l(b)),
        (k[i - a] = m(b));
    var q = new numeric.T(o, p),
      r = new numeric.T(j, k);
    return (
      (q = q.mul(r)),
      numeric.convpow2(q.x, q.y, numeric.clone(r.x), numeric.neg(r.y)),
      (q = q.mul(r)),
      (q.x.length = e),
      (q.y.length = e),
      q.div(e)
    );
  }),
  (numeric.gradient = function (a, b) {
    var c = b.length,
      d = a(b);
    if (isNaN(d)) throw new Error("gradient: f(x) is a NaN!");
    var e,
      f,
      g,
      h,
      i,
      j,
      k,
      l,
      m,
      n,
      o = Math.max,
      p = numeric.clone(b),
      q = Array(c),
      o = (numeric.div, numeric.sub, Math.max),
      r = 0.001,
      s = Math.abs,
      t = Math.min,
      u = 0;
    for (e = 0; c > e; e++)
      for (var v = o(1e-6 * d, 1e-8); ; ) {
        if ((++u, u > 20)) throw new Error("Numerical gradient fails");
        if (
          ((p[e] = b[e] + v),
          (f = a(p)),
          (p[e] = b[e] - v),
          (g = a(p)),
          (p[e] = b[e]),
          isNaN(f) || isNaN(g))
        )
          v /= 16;
        else {
          if (
            ((q[e] = (f - g) / (2 * v)),
            (i = b[e] - v),
            (j = b[e]),
            (k = b[e] + v),
            (l = (f - d) / v),
            (m = (d - g) / v),
            (n = o(s(q[e]), s(d), s(f), s(g), s(i), s(j), s(k), 1e-8)),
            (h = t(o(s(l - q[e]), s(m - q[e]), s(l - m)) / n, v / n)),
            !(h > r))
          )
            break;
          v /= 16;
        }
      }
    return q;
  }),
  (numeric.uncmin = function (a, b, c, d, e, f, g) {
    var h = numeric.gradient;
    "undefined" == typeof g && (g = {}),
      "undefined" == typeof c && (c = 1e-8),
      "undefined" == typeof d &&
        (d = function (b) {
          return h(a, b);
        }),
      "undefined" == typeof e && (e = 1e3),
      (b = numeric.clone(b));
    var i,
      j,
      k = b.length,
      l = a(b);
    if (isNaN(l)) throw new Error("uncmin: f(x0) is a NaN!");
    var m = Math.max,
      n = numeric.norm2;
    c = m(c, numeric.epsilon);
    var o,
      p,
      q,
      r,
      s,
      t,
      u,
      v,
      w,
      x,
      y = g.Hinv || numeric.identity(k),
      z = numeric.dot,
      A = (numeric.inv, numeric.sub),
      B = numeric.add,
      C = numeric.tensor,
      D = numeric.div,
      E = numeric.mul,
      F = numeric.all,
      G = numeric.isFinite,
      H = numeric.neg,
      I = 0,
      J = "";
    for (p = d(b); e > I; ) {
      if ("function" == typeof f && f(I, b, l, p, y)) {
        J = "Callback returned true";
        break;
      }
      if (!F(G(p))) {
        J = "Gradient has Infinity or NaN";
        break;
      }
      if (((o = H(z(y, p))), !F(G(o)))) {
        J = "Search direction has Infinity or NaN";
        break;
      }
      if (((x = n(o)), c > x)) {
        J = "Newton step smaller than tol";
        break;
      }
      for (
        w = 1, j = z(p, o), s = b;
        e > I &&
        !(c > w * x) &&
        ((r = E(o, w)),
        (s = B(b, r)),
        (i = a(s)),
        i - l >= 0.1 * w * j || isNaN(i));

      )
        (w *= 0.5), ++I;
      if (c > w * x) {
        J = "Line search step size smaller than tol";
        break;
      }
      if (I === e) {
        J = "maxit reached during line search";
        break;
      }
      (q = d(s)),
        (t = A(q, p)),
        (v = z(t, r)),
        (u = z(y, t)),
        (y = A(
          B(y, E((v + z(t, u)) / (v * v), C(r, r))),
          D(B(C(u, r), C(r, u)), v)
        )),
        (b = s),
        (l = i),
        (p = q),
        ++I;
    }
    return {
      solution: b,
      f: l,
      gradient: p,
      invHessian: y,
      iterations: I,
      message: J,
    };
  }),
  (numeric.Dopri = function (a, b, c, d, e, f, g) {
    (this.x = a),
      (this.y = b),
      (this.f = c),
      (this.ymid = d),
      (this.iterations = e),
      (this.events = g),
      (this.message = f);
  }),
  (numeric.Dopri.prototype._at = function (a, b) {
    function c(a) {
      return a * a;
    }
    var d,
      e,
      f,
      g,
      h,
      i,
      a,
      j,
      k,
      l,
      m,
      n = this,
      o = n.x,
      p = n.y,
      q = n.f,
      r = n.ymid,
      s = (o.length, Math.floor, 0.5),
      t = numeric.add,
      u = numeric.mul,
      v = numeric.sub;
    return (
      (d = o[b]),
      (e = o[b + 1]),
      (g = p[b]),
      (h = p[b + 1]),
      (j = e - d),
      (f = d + s * j),
      (i = r[b]),
      (k = v(q[b], u(g, 1 / (d - f) + 2 / (d - e)))),
      (l = v(q[b + 1], u(h, 1 / (e - f) + 2 / (e - d)))),
      (m = [
        (c(a - e) * (a - f)) / c(d - e) / (d - f),
        (c(a - d) * c(a - e)) / c(d - f) / c(e - f),
        (c(a - d) * (a - f)) / c(e - d) / (e - f),
        ((a - d) * c(a - e) * (a - f)) / c(d - e) / (d - f),
        ((a - e) * c(a - d) * (a - f)) / c(d - e) / (e - f),
      ]),
      t(t(t(t(u(g, m[0]), u(i, m[1])), u(h, m[2])), u(k, m[3])), u(l, m[4]))
    );
  }),
  (numeric.Dopri.prototype.at = function (a) {
    var b,
      c,
      d,
      e = Math.floor;
    if ("number" != typeof a) {
      var f = a.length,
        g = Array(f);
      for (b = f - 1; -1 !== b; --b) g[b] = this.at(a[b]);
      return g;
    }
    var h = this.x;
    for (b = 0, c = h.length - 1; c - b > 1; )
      (d = e(0.5 * (b + c))), h[d] <= a ? (b = d) : (c = d);
    return this._at(a, b);
  }),
  (numeric.dopri = function (a, b, c, d, e, f, g) {
    "undefined" == typeof e && (e = 1e-6), "undefined" == typeof f && (f = 1e3);
    var h,
      i,
      j,
      k,
      l,
      m,
      n,
      o,
      p,
      q,
      r,
      s,
      t,
      u = [a],
      v = [c],
      w = [d(a, c)],
      x = [],
      y = 0.2,
      z = [0.075, 0.225],
      A = [44 / 45, -56 / 15, 32 / 9],
      B = [19372 / 6561, -25360 / 2187, 64448 / 6561, -212 / 729],
      C = [9017 / 3168, -355 / 33, 46732 / 5247, 49 / 176, -5103 / 18656],
      D = [35 / 384, 0, 500 / 1113, 125 / 192, -2187 / 6784, 11 / 84],
      E = [
        0.10013431883002395, 0, 0.3918321794184259, -0.02982460176594817,
        0.05893268337240795, -0.04497888809104361, 0.023904308236133973,
      ],
      F = [0.2, 0.3, 0.8, 8 / 9, 1, 1],
      G = [
        -71 / 57600,
        0,
        71 / 16695,
        -71 / 1920,
        17253 / 339200,
        -22 / 525,
        0.025,
      ],
      H = 0,
      I = (b - a) / 10,
      J = 0,
      K = numeric.add,
      L = numeric.mul,
      M = (Math.max, Math.min),
      N = Math.abs,
      O = numeric.norminf,
      P = Math.pow,
      Q = numeric.any,
      R = numeric.lt,
      S = numeric.and,
      T = (numeric.sub, new numeric.Dopri(u, v, w, x, -1, ""));
    for ("function" == typeof g && (r = g(a, c)); b > a && f > J; )
      if (
        (++J,
        a + I > b && (I = b - a),
        (h = d(a + F[0] * I, K(c, L(y * I, w[H])))),
        (i = d(a + F[1] * I, K(K(c, L(z[0] * I, w[H])), L(z[1] * I, h)))),
        (j = d(
          a + F[2] * I,
          K(K(K(c, L(A[0] * I, w[H])), L(A[1] * I, h)), L(A[2] * I, i))
        )),
        (k = d(
          a + F[3] * I,
          K(
            K(K(K(c, L(B[0] * I, w[H])), L(B[1] * I, h)), L(B[2] * I, i)),
            L(B[3] * I, j)
          )
        )),
        (l = d(
          a + F[4] * I,
          K(
            K(
              K(K(K(c, L(C[0] * I, w[H])), L(C[1] * I, h)), L(C[2] * I, i)),
              L(C[3] * I, j)
            ),
            L(C[4] * I, k)
          )
        )),
        (p = K(
          K(
            K(K(K(c, L(w[H], I * D[0])), L(i, I * D[2])), L(j, I * D[3])),
            L(k, I * D[4])
          ),
          L(l, I * D[5])
        )),
        (m = d(a + I, p)),
        (n = K(
          K(
            K(
              K(K(L(w[H], I * G[0]), L(i, I * G[2])), L(j, I * G[3])),
              L(k, I * G[4])
            ),
            L(l, I * G[5])
          ),
          L(m, I * G[6])
        )),
        (q = "number" == typeof n ? N(n) : O(n)),
        q > e)
      ) {
        if (((I = 0.2 * I * P(e / q, 0.25)), a + I === a)) {
          T.msg = "Step size became too small";
          break;
        }
      } else {
        if (
          ((x[H] = K(
            K(
              K(
                K(K(K(c, L(w[H], I * E[0])), L(i, I * E[2])), L(j, I * E[3])),
                L(k, I * E[4])
              ),
              L(l, I * E[5])
            ),
            L(m, I * E[6])
          )),
          ++H,
          (u[H] = a + I),
          (v[H] = p),
          (w[H] = m),
          "function" == typeof g)
        ) {
          var U,
            V,
            W = a,
            X = a + 0.5 * I;
          if (
            ((s = g(X, x[H - 1])),
            (t = S(R(r, 0), R(0, s))),
            Q(t) ||
              ((W = X),
              (X = a + I),
              (r = s),
              (s = g(X, p)),
              (t = S(R(r, 0), R(0, s)))),
            Q(t))
          ) {
            for (var Y, Z, $ = 0, _ = 1, ab = 1; ; ) {
              if ("number" == typeof r)
                V = (ab * s * W - _ * r * X) / (ab * s - _ * r);
              else
                for (V = X, o = r.length - 1; -1 !== o; --o)
                  r[o] < 0 &&
                    s[o] > 0 &&
                    (V = M(
                      V,
                      (ab * s[o] * W - _ * r[o] * X) / (ab * s[o] - _ * r[o])
                    ));
              if (W >= V || V >= X) break;
              (U = T._at(V, H - 1)),
                (Z = g(V, U)),
                (Y = S(R(r, 0), R(0, Z))),
                Q(Y)
                  ? ((X = V),
                    (s = Z),
                    (t = Y),
                    (ab = 1),
                    -1 === $ ? (_ *= 0.5) : (_ = 1),
                    ($ = -1))
                  : ((W = V),
                    (r = Z),
                    (_ = 1),
                    1 === $ ? (ab *= 0.5) : (ab = 1),
                    ($ = 1));
            }
            return (
              (p = T._at(0.5 * (a + V), H - 1)),
              (T.f[H] = d(V, U)),
              (T.x[H] = V),
              (T.y[H] = U),
              (T.ymid[H - 1] = p),
              (T.events = t),
              (T.iterations = J),
              T
            );
          }
        }
        (a += I), (c = p), (r = s), (I = M(0.8 * I * P(e / q, 0.25), 4 * I));
      }
    return (T.iterations = J), T;
  }),
  (numeric.LU = function (a, b) {
    b = b || !1;
    var c,
      d,
      e,
      f,
      g,
      h,
      i,
      j,
      k,
      l = Math.abs,
      m = a.length,
      n = m - 1,
      o = new Array(m);
    for (b || (a = numeric.clone(a)), e = 0; m > e; ++e) {
      for (i = e, h = a[e], k = l(h[e]), d = e + 1; m > d; ++d)
        (f = l(a[d][e])), f > k && ((k = f), (i = d));
      for (
        o[e] = i,
          i != e && ((a[e] = a[i]), (a[i] = h), (h = a[e])),
          g = h[e],
          c = e + 1;
        m > c;
        ++c
      )
        a[c][e] /= g;
      for (c = e + 1; m > c; ++c) {
        for (j = a[c], d = e + 1; n > d; ++d)
          (j[d] -= j[e] * h[d]), ++d, (j[d] -= j[e] * h[d]);
        d === n && (j[d] -= j[e] * h[d]);
      }
    }
    return { LU: a, P: o };
  }),
  (numeric.LUsolve = function (a, b) {
    var c,
      d,
      e,
      f,
      g,
      h = a.LU,
      i = h.length,
      j = numeric.clone(b),
      k = a.P;
    for (c = i - 1; -1 !== c; --c) j[c] = b[c];
    for (c = 0; i > c; ++c)
      for (
        e = k[c],
          k[c] !== c && ((g = j[c]), (j[c] = j[e]), (j[e] = g)),
          f = h[c],
          d = 0;
        c > d;
        ++d
      )
        j[c] -= j[d] * f[d];
    for (c = i - 1; c >= 0; --c) {
      for (f = h[c], d = c + 1; i > d; ++d) j[c] -= j[d] * f[d];
      j[c] /= f[c];
    }
    return j;
  }),
  (numeric.solve = function (a, b, c) {
    return numeric.LUsolve(numeric.LU(a, c), b);
  }),
  (numeric.echelonize = function (a) {
    var b,
      c,
      d,
      e,
      f,
      g,
      h,
      i,
      j = numeric.dim(a),
      k = j[0],
      l = j[1],
      m = numeric.identity(k),
      n = Array(k),
      o = Math.abs,
      p = numeric.diveq;
    for (a = numeric.clone(a), b = 0; k > b; ++b) {
      for (d = 0, f = a[b], g = m[b], c = 1; l > c; ++c)
        o(f[d]) < o(f[c]) && (d = c);
      for (n[b] = d, p(g, f[d]), p(f, f[d]), c = 0; k > c; ++c)
        if (c !== b) {
          for (h = a[c], i = h[d], e = l - 1; -1 !== e; --e) h[e] -= f[e] * i;
          for (h = m[c], e = k - 1; -1 !== e; --e) h[e] -= g[e] * i;
        }
    }
    return { I: m, A: a, P: n };
  }),
  (numeric.__solveLP = function (a, b, c, d, e, f, g) {
    var h,
      i,
      j,
      k,
      l = numeric.sum,
      m = (numeric.log, numeric.mul),
      n = numeric.sub,
      o = numeric.dot,
      p = numeric.div,
      q = numeric.add,
      r = a.length,
      s = c.length,
      t = !1,
      u = 0,
      v = 1,
      w = (numeric.transpose(b), numeric.svd, numeric.transpose),
      x = (numeric.leq, Math.sqrt),
      y = Math.abs,
      z = (numeric.muleq, numeric.norminf, numeric.any, Math.min),
      A = numeric.all,
      B = numeric.gt,
      C = Array(r),
      D = Array(s),
      E = (numeric.rep([s], 1), numeric.solve),
      F = n(c, o(b, f)),
      G = o(a, a);
    for (j = u; e > j; ++j) {
      var H, I;
      for (H = s - 1; -1 !== H; --H) D[H] = p(b[H], F[H]);
      var J = w(D);
      for (H = r - 1; -1 !== H; --H) C[H] = l(J[H]);
      v = 0.25 * y(G / o(a, C));
      var K = 100 * x(G / o(C, C));
      for (
        (!isFinite(v) || v > K) && (v = K),
          k = q(a, m(v, C)),
          i = o(J, D),
          H = r - 1;
        -1 !== H;
        --H
      )
        i[H][H] += 1;
      I = E(i, p(k, v), !0);
      var L = p(F, o(b, I)),
        M = 1;
      for (H = s - 1; -1 !== H; --H) L[H] < 0 && (M = z(M, -0.999 * L[H]));
      if (((h = n(f, m(I, M))), (F = n(c, o(b, h))), !A(B(F, 0))))
        return { solution: f, message: "", iterations: j };
      if (((f = h), d > v)) return { solution: h, message: "", iterations: j };
      if (g) {
        var N = o(a, k),
          O = o(b, k);
        for (t = !0, H = s - 1; -1 !== H; --H)
          if (N * O[H] < 0) {
            t = !1;
            break;
          }
      } else t = f[r - 1] >= 0 ? !1 : !0;
      if (t) return { solution: h, message: "Unbounded", iterations: j };
    }
    return {
      solution: f,
      message: "maximum iteration count exceeded",
      iterations: j,
    };
  }),
  (numeric._solveLP = function (a, b, c, d, e) {
    var f,
      g = a.length,
      h = c.length,
      i = (numeric.sum, numeric.log, numeric.mul, numeric.sub),
      j = numeric.dot,
      k = (numeric.div, numeric.add, numeric.rep([g], 0).concat([1])),
      l = numeric.rep([h, 1], -1),
      m = numeric.blockMatrix([[b, l]]),
      n = c,
      f = numeric
        .rep([g], 0)
        .concat(Math.max(0, numeric.sup(numeric.neg(c))) + 1),
      o = numeric.__solveLP(k, m, n, d, e, f, !1),
      p = numeric.clone(o.solution);
    p.length = g;
    var q = numeric.inf(i(c, j(b, p)));
    if (0 > q)
      return {
        solution: 0 / 0,
        message: "Infeasible",
        iterations: o.iterations,
      };
    var r = numeric.__solveLP(a, b, c, d, e - o.iterations, p, !0);
    return (r.iterations += o.iterations), r;
  }),
  (numeric.solveLP = function (a, b, c, d, e, f, g) {
    if (
      ("undefined" == typeof g && (g = 1e3),
      "undefined" == typeof f && (f = numeric.epsilon),
      "undefined" == typeof d)
    )
      return numeric._solveLP(a, b, c, f, g);
    var h,
      i = d.length,
      j = d[0].length,
      k = b.length,
      l = numeric.echelonize(d),
      m = numeric.rep([j], 0),
      n = l.P,
      o = [];
    for (h = n.length - 1; -1 !== h; --h) m[n[h]] = 1;
    for (h = j - 1; -1 !== h; --h) 0 === m[h] && o.push(h);
    var p = numeric.getRange,
      q = numeric.linspace(0, i - 1),
      r = numeric.linspace(0, k - 1),
      s = p(d, q, o),
      t = p(b, r, n),
      u = p(b, r, o),
      v = numeric.dot,
      w = numeric.sub,
      x = v(t, l.I),
      y = w(u, v(x, s)),
      z = w(c, v(x, e)),
      A = Array(n.length),
      B = Array(o.length);
    for (h = n.length - 1; -1 !== h; --h) A[h] = a[n[h]];
    for (h = o.length - 1; -1 !== h; --h) B[h] = a[o[h]];
    var C = w(B, v(A, v(l.I, s))),
      D = numeric._solveLP(C, y, z, f, g),
      E = D.solution;
    if (E !== E) return D;
    var F = v(l.I, w(e, v(s, E))),
      G = Array(a.length);
    for (h = n.length - 1; -1 !== h; --h) G[n[h]] = F[h];
    for (h = o.length - 1; -1 !== h; --h) G[o[h]] = E[h];
    return { solution: G, message: D.message, iterations: D.iterations };
  }),
  (numeric.MPStoLP = function (a) {
    function b(b) {
      throw new Error(
        "MPStoLP: " +
          b +
          "\nLine " +
          c +
          ": " +
          a[c] +
          "\nCurrent state: " +
          h[g] +
          "\n"
      );
    }
    a instanceof String && a.split("\n");
    var c,
      d,
      e,
      f,
      g = 0,
      h = [
        "Initial state",
        "NAME",
        "ROWS",
        "COLUMNS",
        "RHS",
        "BOUNDS",
        "ENDATA",
      ],
      i = a.length,
      j = 0,
      k = {},
      l = [],
      m = 0,
      n = {},
      o = 0,
      p = [],
      q = [],
      r = [];
    for (c = 0; i > c; ++c) {
      e = a[c];
      var s = e.match(/\S*/g),
        t = [];
      for (d = 0; d < s.length; ++d) "" !== s[d] && t.push(s[d]);
      if (0 !== t.length) {
        for (d = 0; d < h.length && e.substr(0, h[d].length) !== h[d]; ++d);
        if (d < h.length) {
          if (((g = d), 1 === d && (f = t[1]), 6 === d))
            return {
              name: f,
              c: p,
              A: numeric.transpose(q),
              b: r,
              rows: k,
              vars: n,
            };
        } else
          switch (g) {
            case 0:
            case 1:
              b("Unexpected line");
            case 2:
              switch (t[0]) {
                case "N":
                  0 === j ? (j = t[1]) : b("Two or more N rows");
                  break;
                case "L":
                  (k[t[1]] = m), (l[m] = 1), (r[m] = 0), ++m;
                  break;
                case "G":
                  (k[t[1]] = m), (l[m] = -1), (r[m] = 0), ++m;
                  break;
                case "E":
                  (k[t[1]] = m), (l[m] = 0), (r[m] = 0), ++m;
                  break;
                default:
                  b("Parse error " + numeric.prettyPrint(t));
              }
              break;
            case 3:
              n.hasOwnProperty(t[0]) ||
                ((n[t[0]] = o), (p[o] = 0), (q[o] = numeric.rep([m], 0)), ++o);
              var u = n[t[0]];
              for (d = 1; d < t.length; d += 2)
                if (t[d] !== j) {
                  var v = k[t[d]];
                  q[u][v] = (l[v] < 0 ? -1 : 1) * parseFloat(t[d + 1]);
                } else p[u] = parseFloat(t[d + 1]);
              break;
            case 4:
              for (d = 1; d < t.length; d += 2)
                r[k[t[d]]] = (l[k[t[d]]] < 0 ? -1 : 1) * parseFloat(t[d + 1]);
              break;
            case 5:
              break;
            case 6:
              b("Internal error");
          }
      }
    }
    b("Reached end of file without ENDATA");
  }),
  (numeric.seedrandom = { pow: Math.pow, random: Math.random }),
  (function (a, b, c, d, e, f, g) {
    function h(a) {
      var b,
        d,
        e = this,
        f = a.length,
        g = 0,
        h = (e.i = e.j = e.m = 0);
      for (e.S = [], e.c = [], f || (a = [f++]); c > g; ) e.S[g] = g++;
      for (g = 0; c > g; g++)
        (b = e.S[g]),
          (h = k(h + b + a[g % f])),
          (d = e.S[h]),
          (e.S[g] = d),
          (e.S[h] = b);
      (e.g = function (a) {
        var b = e.S,
          d = k(e.i + 1),
          f = b[d],
          g = k(e.j + f),
          h = b[g];
        (b[d] = h), (b[g] = f);
        for (var i = b[k(f + h)]; --a; )
          (d = k(d + 1)),
            (f = b[d]),
            (g = k(g + f)),
            (h = b[g]),
            (b[d] = h),
            (b[g] = f),
            (i = i * c + b[k(f + h)]);
        return (e.i = d), (e.j = g), i;
      }),
        e.g(c);
    }
    function i(a, b, c, d, e) {
      if (((c = []), (e = typeof a), b && "object" == e))
        for (d in a)
          if (d.indexOf("S") < 5)
            try {
              c.push(i(a[d], b - 1));
            } catch (f) {}
      return c.length ? c : a + ("string" != e ? "\x00" : "");
    }
    function j(a, b, c, d) {
      for (a += "", c = 0, d = 0; d < a.length; d++)
        b[k(d)] = k((c ^= 19 * b[k(d)]) + a.charCodeAt(d));
      a = "";
      for (d in b) a += String.fromCharCode(b[d]);
      return a;
    }
    function k(a) {
      return a & (c - 1);
    }
    (b.seedrandom = function (k, l) {
      var m,
        n = [];
      return (
        (k = j(
          i(
            l
              ? [k, a]
              : arguments.length
              ? k
              : [new Date().getTime(), a, window],
            3
          ),
          n
        )),
        (m = new h(n)),
        j(m.S, a),
        (b.random = function () {
          for (var a = m.g(d), b = g, h = 0; e > a; )
            (a = (a + h) * c), (b *= c), (h = m.g(1));
          for (; a >= f; ) (a /= 2), (b /= 2), (h >>>= 1);
          return (a + h) / b;
        }),
        k
      );
    }),
      (g = b.pow(c, d)),
      (e = b.pow(2, e)),
      (f = 2 * e),
      j(b.random(), a);
  })([], numeric.seedrandom, 256, 6, 52),
  (function (a) {
    function b(a) {
      if ("object" != typeof a) return a;
      var c,
        d = [],
        e = a.length;
      for (c = 0; e > c; c++) d[c + 1] = b(a[c]);
      return d;
    }
    function c(a) {
      if ("object" != typeof a) return a;
      var b,
        d = [],
        e = a.length;
      for (b = 1; e > b; b++) d[b - 1] = c(a[b]);
      return d;
    }
    function d(a, b, c) {
      var d, e, f, g, h;
      for (f = 1; c >= f; f += 1) {
        for (a[f][f] = 1 / a[f][f], h = -a[f][f], d = 1; f > d; d += 1)
          a[d][f] = h * a[d][f];
        if (((g = f + 1), g > c)) break;
        for (e = g; c >= e; e += 1)
          for (h = a[f][e], a[f][e] = 0, d = 1; f >= d; d += 1)
            a[d][e] = a[d][e] + h * a[d][f];
      }
    }
    function e(a, b, c, d) {
      var e, f, g, h;
      for (f = 1; c >= f; f += 1) {
        for (h = 0, e = 1; f > e; e += 1) h += a[e][f] * d[e];
        d[f] = (d[f] - h) / a[f][f];
      }
      for (g = 1; c >= g; g += 1)
        for (
          f = c + 1 - g, d[f] = d[f] / a[f][f], h = -d[f], e = 1;
          f > e;
          e += 1
        )
          d[e] = d[e] + h * a[e][f];
    }
    function f(a, b, c, d) {
      var e, f, g, h, i, j;
      for (f = 1; c >= f; f += 1) {
        if (((d[1] = f), (j = 0), (g = f - 1), 1 > g)) {
          if (((j = a[f][f] - j), 0 >= j)) break;
          a[f][f] = Math.sqrt(j);
        } else {
          for (h = 1; g >= h; h += 1) {
            for (i = a[h][f], e = 1; h > e; e += 1) i -= a[e][f] * a[e][h];
            (i /= a[h][h]), (a[h][f] = i), (j += i * i);
          }
          if (((j = a[f][f] - j), 0 >= j)) break;
          a[f][f] = Math.sqrt(j);
        }
        d[1] = 0;
      }
    }
    function g(a, b, c, g, h, i, j, k, l, m, n, o, p, q, r, s) {
      function t() {
        for (q[1] = q[1] + 1, A = H, y = 1; m >= y; y += 1) {
          for (A += 1, N = -k[y], z = 1; g >= z; z += 1) N += j[z][y] * h[z];
          if ((Math.abs(N) < V && (N = 0), y > n)) r[A] = N;
          else if (((r[A] = -Math.abs(N)), N > 0)) {
            for (z = 1; g >= z; z += 1) j[z][y] = -j[z][y];
            k[y] = -k[y];
          }
        }
        for (y = 1; p >= y; y += 1) r[H + o[y]] = 0;
        for (J = 0, M = 0, y = 1; m >= y; y += 1)
          r[H + y] < M * r[L + y] && ((J = y), (M = r[H + y] / r[L + y]));
        return 0 === J ? 999 : 0;
      }
      function u() {
        for (y = 1; g >= y; y += 1) {
          for (N = 0, z = 1; g >= z; z += 1) N += a[z][y] * j[z][J];
          r[y] = N;
        }
        for (B = E, y = 1; g >= y; y += 1) r[B + y] = 0;
        for (z = p + 1; g >= z; z += 1)
          for (y = 1; g >= y; y += 1) r[B + y] = r[B + y] + a[y][z] * r[z];
        for (T = !0, y = p; y >= 1; y -= 1) {
          for (
            N = r[y], A = G + (y * (y + 3)) / 2, B = A - y, z = y + 1;
            p >= z;
            z += 1
          )
            (N -= r[A] * r[F + z]), (A += z);
          if (((N /= r[B]), (r[F + y] = N), o[y] < n)) break;
          if (0 > N) break;
          (T = !1), (D = y);
        }
        if (!T)
          for (
            O = r[I + D] / r[F + D], y = 1;
            p >= y && !(o[y] < n) && !(r[F + y] < 0);
            y += 1
          )
            (M = r[I + y] / r[F + y]), O > M && ((O = M), (D = y));
        for (N = 0, y = E + 1; E + g >= y; y += 1) N += r[y] * r[y];
        if (Math.abs(N) <= V) {
          if (T) return (s[1] = 1), 999;
          for (y = 1; p >= y; y += 1) r[I + y] = r[I + y] - O * r[F + y];
          return (r[I + p + 1] = r[I + p + 1] + O), 700;
        }
        for (N = 0, y = 1; g >= y; y += 1) N += r[E + y] * j[y][J];
        for (
          P = -r[H + J] / N, U = !0, T || (P > O && ((P = O), (U = !1))), y = 1;
          g >= y;
          y += 1
        )
          (h[y] = h[y] + P * r[E + y]), Math.abs(h[y]) < V && (h[y] = 0);
        for (
          i[1] = i[1] + P * N * (P / 2 + r[I + p + 1]), y = 1;
          p >= y;
          y += 1
        )
          r[I + y] = r[I + y] - P * r[F + y];
        if (((r[I + p + 1] = r[I + p + 1] + P), !U)) {
          for (N = -k[J], z = 1; g >= z; z += 1) N += h[z] * j[z][J];
          if (J > n) r[H + J] = N;
          else if (((r[H + J] = -Math.abs(N)), N > 0)) {
            for (z = 1; g >= z; z += 1) j[z][J] = -j[z][J];
            k[J] = -k[J];
          }
          return 700;
        }
        for (
          p += 1, o[p] = J, A = G + ((p - 1) * p) / 2 + 1, y = 1;
          p - 1 >= y;
          y += 1
        )
          (r[A] = r[y]), (A += 1);
        if (p === g) r[A] = r[g];
        else {
          for (
            y = g;
            y >= p + 1 &&
            0 !== r[y] &&
            ((Q = Math.max(Math.abs(r[y - 1]), Math.abs(r[y]))),
            (R = Math.min(Math.abs(r[y - 1]), Math.abs(r[y]))),
            (M =
              r[y - 1] >= 0
                ? Math.abs(Q * Math.sqrt(1 + (R * R) / (Q * Q)))
                : -Math.abs(Q * Math.sqrt(1 + (R * R) / (Q * Q)))),
            (Q = r[y - 1] / M),
            (R = r[y] / M),
            1 !== Q);
            y -= 1
          )
            if (0 === Q)
              for (r[y - 1] = R * M, z = 1; g >= z; z += 1)
                (M = a[z][y - 1]), (a[z][y - 1] = a[z][y]), (a[z][y] = M);
            else
              for (r[y - 1] = M, S = R / (1 + Q), z = 1; g >= z; z += 1)
                (M = Q * a[z][y - 1] + R * a[z][y]),
                  (a[z][y] = S * (a[z][y - 1] + M) - a[z][y]),
                  (a[z][y - 1] = M);
          r[A] = r[p];
        }
        return 0;
      }
      function v() {
        if (((A = G + (D * (D + 1)) / 2 + 1), (B = A + D), 0 === r[B]))
          return 798;
        if (
          ((Q = Math.max(Math.abs(r[B - 1]), Math.abs(r[B]))),
          (R = Math.min(Math.abs(r[B - 1]), Math.abs(r[B]))),
          (M =
            r[B - 1] >= 0
              ? Math.abs(Q * Math.sqrt(1 + (R * R) / (Q * Q)))
              : -Math.abs(Q * Math.sqrt(1 + (R * R) / (Q * Q)))),
          (Q = r[B - 1] / M),
          (R = r[B] / M),
          1 === Q)
        )
          return 798;
        if (0 === Q) {
          for (y = D + 1; p >= y; y += 1)
            (M = r[B - 1]), (r[B - 1] = r[B]), (r[B] = M), (B += y);
          for (y = 1; g >= y; y += 1)
            (M = a[y][D]), (a[y][D] = a[y][D + 1]), (a[y][D + 1] = M);
        } else {
          for (S = R / (1 + Q), y = D + 1; p >= y; y += 1)
            (M = Q * r[B - 1] + R * r[B]),
              (r[B] = S * (r[B - 1] + M) - r[B]),
              (r[B - 1] = M),
              (B += y);
          for (y = 1; g >= y; y += 1)
            (M = Q * a[y][D] + R * a[y][D + 1]),
              (a[y][D + 1] = S * (a[y][D] + M) - a[y][D + 1]),
              (a[y][D] = M);
        }
        return 0;
      }
      function w() {
        for (B = A - D, y = 1; D >= y; y += 1)
          (r[B] = r[A]), (A += 1), (B += 1);
        return (
          (r[I + D] = r[I + D + 1]),
          (o[D] = o[D + 1]),
          (D += 1),
          p > D ? 797 : 0
        );
      }
      function x() {
        return (
          (r[I + p] = r[I + p + 1]),
          (r[I + p + 1] = 0),
          (o[p] = 0),
          (p -= 1),
          (q[2] = q[2] + 1),
          0
        );
      }
      var y,
        z,
        A,
        B,
        C,
        D,
        E,
        F,
        G,
        H,
        I,
        J,
        K,
        L,
        M,
        N,
        O,
        P,
        Q,
        R,
        S,
        T,
        U,
        V,
        W,
        X,
        Y;
      (K = Math.min(g, m)),
        (A = 2 * g + (K * (K + 5)) / 2 + 2 * m + 1),
        (V = 1e-60);
      do (V += V), (W = 1 + 0.1 * V), (X = 1 + 0.2 * V);
      while (1 >= W || 1 >= X);
      for (y = 1; g >= y; y += 1) r[y] = b[y];
      for (y = g + 1; A >= y; y += 1) r[y] = 0;
      for (y = 1; m >= y; y += 1) o[y] = 0;
      if (((C = []), 0 === s[1])) {
        if ((f(a, c, g, C), 0 !== C[1])) return void (s[1] = 2);
        e(a, c, g, b), d(a, c, g);
      } else {
        for (z = 1; g >= z; z += 1)
          for (h[z] = 0, y = 1; z >= y; y += 1) h[z] = h[z] + a[y][z] * b[y];
        for (z = 1; g >= z; z += 1)
          for (b[z] = 0, y = z; g >= y; y += 1) b[z] = b[z] + a[z][y] * h[y];
      }
      for (i[1] = 0, z = 1; g >= z; z += 1)
        for (
          h[z] = b[z], i[1] = i[1] + r[z] * h[z], r[z] = 0, y = z + 1;
          g >= y;
          y += 1
        )
          a[y][z] = 0;
      for (
        i[1] = -i[1] / 2,
          s[1] = 0,
          E = g,
          F = E + g,
          I = F + K,
          G = I + K + 1,
          H = G + (K * (K + 1)) / 2,
          L = H + m,
          y = 1;
        m >= y;
        y += 1
      ) {
        for (N = 0, z = 1; g >= z; z += 1) N += j[z][y] * j[z][y];
        r[L + y] = Math.sqrt(N);
      }
      for (p = 0, q[1] = 0, q[2] = 0, Y = 0; ; ) {
        if (((Y = t()), 999 === Y)) return;
        for (;;) {
          if (((Y = u()), 0 === Y)) break;
          if (999 === Y) return;
          if (700 === Y)
            if (D === p) x();
            else {
              for (;;) if ((v(), (Y = w()), 797 !== Y)) break;
              x();
            }
        }
      }
    }
    function h(a, d, e, f, h, i) {
      (a = b(a)), (d = b(d)), (e = b(e));
      var j,
        k,
        l,
        m,
        n,
        o,
        p = [],
        q = [],
        r = [],
        s = [],
        t = [];
      if (
        ((h = h || 0),
        (i = i ? b(i) : [void 0, 0]),
        (f = f ? b(f) : []),
        (k = a.length - 1),
        (l = e[1].length - 1),
        !f)
      )
        for (j = 1; l >= j; j += 1) f[j] = 0;
      for (j = 1; l >= j; j += 1) q[j] = 0;
      for (m = 0, n = Math.min(k, l), j = 1; k >= j; j += 1) r[j] = 0;
      for (p[1] = 0, j = 1; 2 * k + (n * (n + 5)) / 2 + 2 * l + 1 >= j; j += 1)
        s[j] = 0;
      for (j = 1; 2 >= j; j += 1) t[j] = 0;
      return (
        g(a, d, k, k, r, p, e, f, k, l, h, q, m, t, s, i),
        (o = ""),
        1 === i[1] && (o = "constraints are inconsistent, no solution!"),
        2 === i[1] &&
          (o = "matrix D in quadratic function is not positive definite!"),
        {
          solution: c(r),
          value: c(p),
          unconstrained_solution: c(d),
          iterations: c(t),
          iact: c(q),
          message: o,
        }
      );
    }
    a.solveQP = h;
  })(numeric),
  (numeric.svd = function (a) {
    function b(a, b) {
      return (
        (a = Math.abs(a)),
        (b = Math.abs(b)),
        a > b
          ? a * Math.sqrt(1 + (b * b) / a / a)
          : 0 == b
          ? a
          : b * Math.sqrt(1 + (a * a) / b / b)
      );
    }
    var c,
      d = numeric.epsilon,
      e = 1e-64 / d,
      f = 50,
      g = 0,
      h = 0,
      i = 0,
      j = 0,
      k = 0,
      l = numeric.clone(a),
      m = l.length,
      n = l[0].length;
    if (n > m) throw "Need more rows than columns";
    var o = new Array(n),
      p = new Array(n);
    for (h = 0; n > h; h++) o[h] = p[h] = 0;
    var q = numeric.rep([n, n], 0),
      r = 0,
      s = 0,
      t = 0,
      u = 0,
      v = 0,
      w = 0,
      x = 0;
    for (h = 0; n > h; h++) {
      for (o[h] = s, x = 0, k = h + 1, i = h; m > i; i++)
        x += l[i][h] * l[i][h];
      if (e >= x) s = 0;
      else
        for (
          r = l[h][h],
            s = Math.sqrt(x),
            r >= 0 && (s = -s),
            t = r * s - x,
            l[h][h] = r - s,
            i = k;
          n > i;
          i++
        ) {
          for (x = 0, j = h; m > j; j++) x += l[j][h] * l[j][i];
          for (r = x / t, j = h; m > j; j++) l[j][i] += r * l[j][h];
        }
      for (p[h] = s, x = 0, i = k; n > i; i++) x += l[h][i] * l[h][i];
      if (e >= x) s = 0;
      else {
        for (
          r = l[h][h + 1],
            s = Math.sqrt(x),
            r >= 0 && (s = -s),
            t = r * s - x,
            l[h][h + 1] = r - s,
            i = k;
          n > i;
          i++
        )
          o[i] = l[h][i] / t;
        for (i = k; m > i; i++) {
          for (x = 0, j = k; n > j; j++) x += l[i][j] * l[h][j];
          for (j = k; n > j; j++) l[i][j] += x * o[j];
        }
      }
      (v = Math.abs(p[h]) + Math.abs(o[h])), v > u && (u = v);
    }
    for (h = n - 1; -1 != h; h += -1) {
      if (0 != s) {
        for (t = s * l[h][h + 1], i = k; n > i; i++) q[i][h] = l[h][i] / t;
        for (i = k; n > i; i++) {
          for (x = 0, j = k; n > j; j++) x += l[h][j] * q[j][i];
          for (j = k; n > j; j++) q[j][i] += x * q[j][h];
        }
      }
      for (i = k; n > i; i++) (q[h][i] = 0), (q[i][h] = 0);
      (q[h][h] = 1), (s = o[h]), (k = h);
    }
    for (h = n - 1; -1 != h; h += -1) {
      for (k = h + 1, s = p[h], i = k; n > i; i++) l[h][i] = 0;
      if (0 != s) {
        for (t = l[h][h] * s, i = k; n > i; i++) {
          for (x = 0, j = k; m > j; j++) x += l[j][h] * l[j][i];
          for (r = x / t, j = h; m > j; j++) l[j][i] += r * l[j][h];
        }
        for (i = h; m > i; i++) l[i][h] = l[i][h] / s;
      } else for (i = h; m > i; i++) l[i][h] = 0;
      l[h][h] += 1;
    }
    for (d *= u, j = n - 1; -1 != j; j += -1)
      for (var y = 0; f > y; y++) {
        var z = !1;
        for (k = j; -1 != k; k += -1) {
          if (Math.abs(o[k]) <= d) {
            z = !0;
            break;
          }
          if (Math.abs(p[k - 1]) <= d) break;
        }
        if (!z) {
          (g = 0), (x = 1);
          var A = k - 1;
          for (
            h = k;
            j + 1 > h &&
            ((r = x * o[h]), (o[h] = g * o[h]), !(Math.abs(r) <= d));
            h++
          )
            for (
              s = p[h], t = b(r, s), p[h] = t, g = s / t, x = -r / t, i = 0;
              m > i;
              i++
            )
              (v = l[i][A]),
                (w = l[i][h]),
                (l[i][A] = v * g + w * x),
                (l[i][h] = -v * x + w * g);
        }
        if (((w = p[j]), k == j)) {
          if (0 > w) for (p[j] = -w, i = 0; n > i; i++) q[i][j] = -q[i][j];
          break;
        }
        if (y >= f - 1) throw "Error: no convergence.";
        for (
          u = p[k],
            v = p[j - 1],
            s = o[j - 1],
            t = o[j],
            r = ((v - w) * (v + w) + (s - t) * (s + t)) / (2 * t * v),
            s = b(r, 1),
            r =
              0 > r
                ? ((u - w) * (u + w) + t * (v / (r - s) - t)) / u
                : ((u - w) * (u + w) + t * (v / (r + s) - t)) / u,
            g = 1,
            x = 1,
            h = k + 1;
          j + 1 > h;
          h++
        ) {
          for (
            s = o[h],
              v = p[h],
              t = x * s,
              s = g * s,
              w = b(r, t),
              o[h - 1] = w,
              g = r / w,
              x = t / w,
              r = u * g + s * x,
              s = -u * x + s * g,
              t = v * x,
              v *= g,
              i = 0;
            n > i;
            i++
          )
            (u = q[i][h - 1]),
              (w = q[i][h]),
              (q[i][h - 1] = u * g + w * x),
              (q[i][h] = -u * x + w * g);
          for (
            w = b(r, t),
              p[h - 1] = w,
              g = r / w,
              x = t / w,
              r = g * s + x * v,
              u = -x * s + g * v,
              i = 0;
            m > i;
            i++
          )
            (v = l[i][h - 1]),
              (w = l[i][h]),
              (l[i][h - 1] = v * g + w * x),
              (l[i][h] = -v * x + w * g);
        }
        (o[k] = 0), (o[j] = r), (p[j] = u);
      }
    for (h = 0; h < p.length; h++) p[h] < d && (p[h] = 0);
    for (h = 0; n > h; h++)
      for (i = h - 1; i >= 0; i--)
        if (p[i] < p[h]) {
          for (g = p[i], p[i] = p[h], p[h] = g, j = 0; j < l.length; j++)
            (c = l[j][h]), (l[j][h] = l[j][i]), (l[j][i] = c);
          for (j = 0; j < q.length; j++)
            (c = q[j][h]), (q[j][h] = q[j][i]), (q[j][i] = c);
          h = i;
        }
    return { U: l, S: p, V: q };
  });
var jsfeat = jsfeat || { REVISION: "ALPHA" };
(self.Int32Array = self.Int32Array || Array),
  (self.Uint32Array = self.Uint32Array || Array),
  (self.Uint8Array = self.Uint8Array || Array),
  (self.Float32Array = self.Float32Array || Array),
  (self.Float64Array = self.Float64Array || Array),
  (function (a) {
    var b = 1.192092896e-7,
      c = 1e-37,
      d = 256,
      e = 512,
      f = 1024,
      g = 2048,
      h = 4096,
      i = 1,
      j = 2,
      k = 3,
      l = 4,
      m = new Int32Array([
        -1, 1, 4, -1, 4, -1, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, 8,
      ]),
      n = (function () {
        return function (a) {
          return 65280 & a;
        };
      })(),
      o = (function () {
        return function (a) {
          return 255 & a;
        };
      })(),
      p = (function () {
        return function (a) {
          return m[(65280 & a) >> 8];
        };
      })(),
      q = 1,
      r = 1,
      s = 2,
      t = (function () {
        function a(a, b) {
          (this.size = -8 & ((a + 7) | 0)),
            "undefined" == typeof b
              ? (this.buffer = new ArrayBuffer(this.size))
              : ((this.buffer = b), (this.size = b.length)),
            (this.u8 = new Uint8Array(this.buffer)),
            (this.i32 = new Int32Array(this.buffer)),
            (this.f32 = new Float32Array(this.buffer)),
            (this.f64 = new Float64Array(this.buffer));
        }
        return a;
      })(),
      u = (function () {
        function a(a, b, c, g) {
          (this.type = 0 | n(c)),
            (this.channel = 0 | o(c)),
            (this.cols = 0 | a),
            (this.rows = 0 | b),
            (this.buffer =
              "undefined" == typeof g ? new t(a * p(c) * o(c) * b) : g),
            (this.data =
              this.type & d
                ? this.buffer.u8
                : this.type & e
                ? this.buffer.i32
                : this.type & f
                ? this.buffer.f32
                : this.buffer.f64);
        }
        return (
          (a.prototype.set_data_type = function (a) {
            (this.type = 0 | n(a)),
              (this.channel = 0 | o(a)),
              delete this.data,
              delete this.buffer,
              (this.buffer = new t(this.cols * p(a) * o(a) * this.rows)),
              (this.data =
                this.type & d
                  ? this.buffer.u8
                  : this.type & e
                  ? this.buffer.i32
                  : this.type & f
                  ? this.buffer.f32
                  : this.buffer.f64);
          }),
          (a.prototype.set_data = function (a) {
            for (var b = a.length; --b >= 0; ) this.data[b] = a[b];
          }),
          a
        );
      })(),
      v = (function () {
        function a(a) {
          (this.levels = 0 | a),
            (this.data = new Array(a)),
            (this.pyrdown = jsfeat.imgproc.pyrdown);
        }
        return (
          (a.prototype.allocate = function (a, b, c) {
            for (var d = this.levels; --d >= 0; )
              this.data[d] = new u(a >> d, b >> d, c);
          }),
          (a.prototype.build = function (a, b) {
            "undefined" == typeof b && (b = !0);
            var c = 2,
              d = a,
              e = this.data[0];
            if (!b)
              for (var f = a.cols * a.rows; --f >= 0; ) e.data[f] = a.data[f];
            for (e = this.data[1], this.pyrdown(d, e); c < this.levels; ++c)
              (d = e), (e = this.data[c]), this.pyrdown(d, e);
          }),
          a
        );
      })(),
      w = (function () {
        function a(a, b, c, d) {
          "undefined" == typeof a && (a = 0),
            "undefined" == typeof b && (b = 0),
            "undefined" == typeof c && (c = 0),
            "undefined" == typeof d && (d = 0),
            (this.x = a),
            (this.y = b),
            (this.score = c),
            (this.level = d);
        }
        return a;
      })();
    (a.U8_t = d),
      (a.S32_t = e),
      (a.F32_t = f),
      (a.S64_t = g),
      (a.F64_t = h),
      (a.C1_t = i),
      (a.C2_t = j),
      (a.C3_t = k),
      (a.C4_t = l),
      (a.EPSILON = b),
      (a.FLT_MIN = c),
      (a.BOX_BLUR_NOSCALE = q),
      (a.SVD_U_T = r),
      (a.SVD_V_T = s),
      (a.get_data_type = n),
      (a.get_channel = o),
      (a.get_data_type_size = p),
      (a.data_t = t),
      (a.matrix_t = u),
      (a.pyramid_t = v),
      (a.point2d_t = w);
  })(jsfeat),
  (function (a) {
    var b = (function () {
      var a,
        b,
        c = (function () {
          function a(a) {
            (this.next = null),
              (this.data = new jsfeat.data_t(a)),
              (this.size = this.data.size),
              (this.buffer = this.data.buffer),
              (this.u8 = this.data.u8),
              (this.i32 = this.data.i32),
              (this.f32 = this.data.f32),
              (this.f64 = this.data.f64);
          }
          return (
            (a.prototype.resize = function (a) {
              delete this.data,
                (this.data = new jsfeat.data_t(a)),
                (this.size = this.data.size),
                (this.buffer = this.data.buffer),
                (this.u8 = this.data.u8),
                (this.i32 = this.data.i32),
                (this.f32 = this.data.f32),
                (this.f64 = this.data.f64);
            }),
            a
          );
        })(),
        d = 0;
      return {
        allocate: function (e, f) {
          a = b = new c(f);
          for (var g = 0; e > g; ++g) {
            var h = new c(f);
            (b = b.next = h), d++;
          }
        },
        get_buffer: function (b) {
          var c = a;
          return (a = a.next), d--, b > c.size && c.resize(b), c;
        },
        put_buffer: function (a) {
          (b = b.next = a), d++;
        },
      };
    })();
    (a.cache = b), b.allocate(30, 2560);
  })(jsfeat),
  (function (a) {
    var b = (function () {
      var a = new Int32Array(96);
      return {
        get_gaussian_kernel: function (a, b, c, d) {
          var e = 0,
            f = 0,
            g = 0,
            h = 0,
            i = 0,
            j = 0,
            k = jsfeat.cache.get_buffer(a << 2),
            l = k.f32;
          if (1 == (1 & a) && 7 >= a && 0 >= b)
            switch (a >> 1) {
              case 0:
                (l[0] = 1), (j = 1);
                break;
              case 1:
                (l[0] = 0.25), (l[1] = 0.5), (l[2] = 0.25), (j = 1);
                break;
              case 2:
                (l[0] = 0.0625),
                  (l[1] = 0.25),
                  (l[2] = 0.375),
                  (l[3] = 0.25),
                  (l[4] = 0.0625),
                  (j = 1);
                break;
              case 3:
                (l[0] = 0.03125),
                  (l[1] = 0.109375),
                  (l[2] = 0.21875),
                  (l[3] = 0.28125),
                  (l[4] = 0.21875),
                  (l[5] = 0.109375),
                  (l[6] = 0.03125),
                  (j = 1);
            }
          else
            for (
              h = b > 0 ? b : 0.3 * (0.5 * (a - 1) - 1) + 0.8,
                i = -0.5 / (h * h);
              a > e;
              ++e
            )
              (f = e - 0.5 * (a - 1)),
                (g = Math.exp(i * f * f)),
                (l[e] = g),
                (j += g);
          if (d & jsfeat.U8_t)
            for (j = 256 / j, e = 0; a > e; ++e) c[e] = (l[e] * j + 0.5) | 0;
          else for (j = 1 / j, e = 0; a > e; ++e) c[e] = l[e] * j;
          jsfeat.cache.put_buffer(k);
        },
        qsort: function (b, c, d, e) {
          var f,
            g,
            h,
            i,
            j = 7,
            k = 0,
            l = 0,
            m = 0,
            n = 0,
            o = 0,
            p = 0,
            q = 0,
            r = 0,
            s = 0,
            t = 0,
            u = 0,
            v = 0,
            w = 0,
            x = 0,
            y = 0,
            z = 0,
            A = 0,
            B = 0,
            C = a;
          if (!(1 >= d - c + 1))
            for (C[0] = c, C[1] = d; k >= 0; )
              for (l = C[k << 1], m = C[(k << 1) + 1], k--; ; ) {
                if (((o = m - l + 1), j >= o)) {
                  for (q = l + 1; m >= q; q++)
                    for (r = q; r > l && e(b[r], b[r - 1]); r--)
                      (f = b[r]), (b[r] = b[r - 1]), (b[r - 1] = f);
                  break;
                }
                for (
                  B = 0,
                    t = l,
                    v = m,
                    x = l + (o >> 1),
                    o > 40 &&
                      ((s = o >> 3),
                      (y = l),
                      (z = l + s),
                      (A = l + (s << 1)),
                      (g = b[y]),
                      (h = b[z]),
                      (i = b[A]),
                      (l = e(g, h)
                        ? e(h, i)
                          ? z
                          : e(g, i)
                          ? A
                          : y
                        : e(i, h)
                        ? z
                        : e(g, i)
                        ? y
                        : A),
                      (y = x - s),
                      (z = x),
                      (A = x + s),
                      (g = b[y]),
                      (h = b[z]),
                      (i = b[A]),
                      (x = e(g, h)
                        ? e(h, i)
                          ? z
                          : e(g, i)
                          ? A
                          : y
                        : e(i, h)
                        ? z
                        : e(g, i)
                        ? y
                        : A),
                      (y = m - (s << 1)),
                      (z = m - s),
                      (A = m),
                      (g = b[y]),
                      (h = b[z]),
                      (i = b[A]),
                      (m = e(g, h)
                        ? e(h, i)
                          ? z
                          : e(g, i)
                          ? A
                          : y
                        : e(i, h)
                        ? z
                        : e(g, i)
                        ? y
                        : A)),
                    y = l,
                    z = x,
                    A = m,
                    g = b[y],
                    h = b[z],
                    i = b[A],
                    x = e(g, h)
                      ? e(h, i)
                        ? z
                        : e(g, i)
                        ? A
                        : y
                      : e(i, h)
                      ? z
                      : e(g, i)
                      ? y
                      : A,
                    x != t && ((f = b[x]), (b[x] = b[t]), (b[t] = f), (x = t)),
                    l = u = t + 1,
                    m = w = v,
                    g = b[x];
                  ;

                ) {
                  for (; m >= l && !e(g, b[l]); )
                    e(b[l], g) ||
                      (l > u && ((f = b[u]), (b[u] = b[l]), (b[l] = f)),
                      (B = 1),
                      u++),
                      l++;
                  for (; m >= l && !e(b[m], g); )
                    e(g, b[m]) ||
                      (w > m && ((f = b[w]), (b[w] = b[m]), (b[m] = f)),
                      (B = 1),
                      w--),
                      m--;
                  if (l > m) break;
                  (f = b[l]), (b[l] = b[m]), (b[m] = f), (B = 1), l++, m--;
                }
                if (0 == B) {
                  for (l = t, m = v, q = l + 1; m >= q; q++)
                    for (r = q; r > l && e(b[r], b[r - 1]); r--)
                      (f = b[r]), (b[r] = b[r - 1]), (b[r - 1] = f);
                  break;
                }
                for (
                  o = Math.min(u - t, l - u), p = (l - o) | 0, n = 0;
                  o > n;
                  ++n, ++p
                )
                  (f = b[t + n]), (b[t + n] = b[p]), (b[p] = f);
                for (
                  o = Math.min(v - w, w - m), p = (v - o + 1) | 0, n = 0;
                  o > n;
                  ++n, ++p
                )
                  (f = b[l + n]), (b[l + n] = b[p]), (b[p] = f);
                if (((o = l - u), (p = w - m), o > 1))
                  p > 1
                    ? o > p
                      ? (++k,
                        (C[k << 1] = t),
                        (C[(k << 1) + 1] = t + o - 1),
                        (l = v - p + 1),
                        (m = v))
                      : (++k,
                        (C[k << 1] = v - p + 1),
                        (C[(k << 1) + 1] = v),
                        (l = t),
                        (m = t + o - 1))
                    : ((l = t), (m = t + o - 1));
                else {
                  if (!(p > 1)) break;
                  (l = v - p + 1), (m = v);
                }
              }
        },
        median: function (a, b, c) {
          for (var d, e = 0, f = 0, g = 0, h = (b + c) >> 1; ; ) {
            if (b >= c) return a[h];
            if (c == b + 1)
              return (
                a[b] > a[c] && ((d = a[b]), (a[b] = a[c]), (a[c] = d)), a[h]
              );
            for (
              e = (b + c) >> 1,
                a[e] > a[c] && ((d = a[e]), (a[e] = a[c]), (a[c] = d)),
                a[b] > a[c] && ((d = a[b]), (a[b] = a[c]), (a[c] = d)),
                a[e] > a[b] && ((d = a[e]), (a[e] = a[b]), (a[b] = d)),
                f = b + 1,
                d = a[e],
                a[e] = a[f],
                a[f] = d,
                g = c;
              ;

            ) {
              do ++f;
              while (a[b] > a[f]);
              do --g;
              while (a[g] > a[b]);
              if (f > g) break;
              (d = a[f]), (a[f] = a[g]), (a[g] = d);
            }
            (d = a[b]),
              (a[b] = a[g]),
              (a[g] = d),
              h >= g ? (b = f) : g >= h && (c = g - 1);
          }
          return 0;
        },
      };
    })();
    a.math = b;
  })(jsfeat),
  (function (a) {
    var b = (function () {
      return {
        transpose: function (a, b) {
          for (
            var c = 0,
              d = 0,
              e = b.rows,
              f = b.cols,
              g = 0,
              h = 0,
              i = 0,
              j = b.data,
              k = a.data;
            e > c;
            h += 1, g += f, c++
          )
            for (i = h, d = 0; f > d; i += e, d++) k[i] = j[g + d];
        },
        multiply: function (a, b, c) {
          for (
            var d = 0,
              e = 0,
              f = 0,
              g = 0,
              h = 0,
              i = 0,
              j = 0,
              k = 0,
              l = b.cols,
              m = b.rows,
              n = c.cols,
              o = b.data,
              p = c.data,
              q = a.data,
              r = 0;
            m > d;
            g += l, d++
          )
            for (j = 0, e = 0; n > e; k++, j++, e++) {
              for (i = j, h = g, r = 0, f = 0; l > f; h++, i += n, f++)
                r += o[h] * p[i];
              q[k] = r;
            }
        },
        multiply_ABt: function (a, b, c) {
          for (
            var d = 0,
              e = 0,
              f = 0,
              g = 0,
              h = 0,
              i = 0,
              j = 0,
              k = b.cols,
              l = b.rows,
              m = c.rows,
              n = b.data,
              o = c.data,
              p = a.data,
              q = 0;
            l > d;
            g += k, d++
          )
            for (i = 0, e = 0; m > e; j++, e++) {
              for (h = g, q = 0, f = 0; k > f; h++, i++, f++) q += n[h] * o[i];
              p[j] = q;
            }
        },
        multiply_AtB: function (a, b, c) {
          for (
            var d = 0,
              e = 0,
              f = 0,
              g = 0,
              h = 0,
              i = 0,
              j = 0,
              k = 0,
              l = b.cols,
              m = b.rows,
              n = c.cols,
              o = b.data,
              p = c.data,
              q = a.data,
              r = 0;
            l > d;
            g++, d++
          )
            for (j = 0, e = 0; n > e; k++, j++, e++) {
              for (i = j, h = g, r = 0, f = 0; m > f; h += l, i += n, f++)
                r += o[h] * p[i];
              q[k] = r;
            }
        },
        multiply_AAt: function (a, b) {
          for (
            var c = 0,
              d = 0,
              e = 0,
              f = 0,
              g = 0,
              h = 0,
              i = 0,
              j = 0,
              k = 0,
              l = b.cols,
              m = b.rows,
              n = b.data,
              o = a.data,
              p = 0;
            m > c;
            f += m + 1, g = h, c++
          )
            for (j = f, k = f, i = g, d = c; m > d; j++, k += m, d++) {
              for (h = g, p = 0, e = 0; l > e; e++) p += n[h++] * n[i++];
              (o[j] = p), (o[k] = p);
            }
        },
        multiply_AtA: function (a, b) {
          for (
            var c = 0,
              d = 0,
              e = 0,
              f = 0,
              g = 0,
              h = 0,
              i = 0,
              j = 0,
              k = 0,
              l = b.cols,
              m = b.rows,
              n = b.data,
              o = a.data,
              p = 0;
            l > c;
            i += l, c++
          )
            for (f = c, k = i + c, j = k, d = c; l > d; j++, k += l, d++) {
              for (g = f, h = d, p = 0, e = 0; m > e; g += l, h += l, e++)
                p += n[g] * n[h];
              (o[j] = p), (o[k] = p);
            }
        },
      };
    })();
    a.matmath = b;
  })(jsfeat),
  (function (a) {
    var b = (function () {
      var a = function (a, b, c, d) {
          (d = a[b]), (a[b] = a[c]), (a[c] = d);
        },
        b = function (a, b) {
          return (
            (a = Math.abs(a)),
            (b = Math.abs(b)),
            a > b
              ? ((b /= a), a * Math.sqrt(1 + b * b))
              : b > 0
              ? ((a /= b), b * Math.sqrt(1 + a * a))
              : 0
          );
        },
        c = function (c, d, e, f, g, h) {
          var i = jsfeat.EPSILON,
            j = 0,
            k = 0,
            l = 0,
            m = 0,
            n = 0,
            o = 0,
            p = 0,
            q = 0,
            r = 0,
            s = h * h * 30,
            t = 0,
            u = 0,
            v = 0,
            w = 0,
            x = 0,
            y = 0,
            z = 0,
            A = 0,
            B = 0,
            C = jsfeat.cache.get_buffer(h << 2),
            D = jsfeat.cache.get_buffer(h << 2),
            E = C.i32,
            F = D.i32;
          if (f)
            for (; h > j; j++) {
              for (l = j * g, k = 0; h > k; k++) f[l + k] = 0;
              f[l + j] = 1;
            }
          for (l = 0; h > l; l++) {
            if (((e[l] = c[(d + 1) * l]), h - 1 > l)) {
              for (m = l + 1, t = Math.abs(c[d * l + m]), j = l + 2; h > j; j++)
                (u = Math.abs(c[d * l + j])), u > t && ((t = u), (m = j));
              E[l] = m;
            }
            if (l > 0) {
              for (m = 0, t = Math.abs(c[l]), j = 1; l > j; j++)
                (u = Math.abs(c[d * j + l])), u > t && ((t = u), (m = j));
              F[l] = m;
            }
          }
          if (h > 1)
            for (; s > r; r++) {
              for (l = 0, t = Math.abs(c[E[0]]), j = 1; h - 1 > j; j++)
                (u = Math.abs(c[d * j + E[j]])), u > t && ((t = u), (l = j));
              for (n = E[l], j = 1; h > j; j++)
                (u = Math.abs(c[d * F[j] + j])),
                  u > t && ((t = u), (l = F[j]), (n = j));
              if (((v = c[d * l + n]), Math.abs(v) <= i)) break;
              for (
                w = 0.5 * (e[n] - e[l]),
                  x = Math.abs(w) + b(v, w),
                  y = b(v, x),
                  z = x / y,
                  y = v / y,
                  x = (v / x) * v,
                  0 > w && ((y = -y), (x = -x)),
                  c[d * l + n] = 0,
                  e[l] -= x,
                  e[n] += x,
                  j = 0;
                l > j;
                j++
              )
                (p = d * j + l),
                  (q = d * j + n),
                  (A = c[p]),
                  (B = c[q]),
                  (c[p] = A * z - B * y),
                  (c[q] = A * y + B * z);
              for (j = l + 1; n > j; j++)
                (p = d * l + j),
                  (q = d * j + n),
                  (A = c[p]),
                  (B = c[q]),
                  (c[p] = A * z - B * y),
                  (c[q] = A * y + B * z);
              for (
                j = n + 1, p = d * l + j, q = d * n + j;
                h > j;
                j++, p++, q++
              )
                (A = c[p]),
                  (B = c[q]),
                  (c[p] = A * z - B * y),
                  (c[q] = A * y + B * z);
              if (f)
                for (p = g * l, q = g * n, j = 0; h > j; j++, p++, q++)
                  (A = f[p]),
                    (B = f[q]),
                    (f[p] = A * z - B * y),
                    (f[q] = A * y + B * z);
              for (k = 0; 2 > k; k++) {
                if (((o = 0 == k ? l : n), h - 1 > o)) {
                  for (
                    m = o + 1, t = Math.abs(c[d * o + m]), j = o + 2;
                    h > j;
                    j++
                  )
                    (u = Math.abs(c[d * o + j])), u > t && ((t = u), (m = j));
                  E[o] = m;
                }
                if (o > 0) {
                  for (m = 0, t = Math.abs(c[o]), j = 1; o > j; j++)
                    (u = Math.abs(c[d * j + o])), u > t && ((t = u), (m = j));
                  F[o] = m;
                }
              }
            }
          for (l = 0; h - 1 > l; l++) {
            for (m = l, j = l + 1; h > j; j++) e[m] < e[j] && (m = j);
            if (l != m && (a(e, m, l, t), f))
              for (j = 0; h > j; j++) a(f, g * m + j, g * l + j, t);
          }
          jsfeat.cache.put_buffer(C), jsfeat.cache.put_buffer(D);
        },
        d = function (c, d, e, f, g, h, i, j) {
          for (
            var k = 10 * jsfeat.EPSILON,
              l = jsfeat.FLT_MIN,
              m = 0,
              n = 0,
              o = 0,
              p = 0,
              q = Math.max(h, 30),
              r = 0,
              s = 0,
              t = 0,
              u = 0,
              v = 0,
              w = 0,
              x = 0,
              y = 0,
              z = 0,
              A = 0,
              B = 0,
              C = 0,
              D = 0,
              E = 0,
              F = 0,
              G = 0,
              H = 0,
              I = 4660,
              J = 0,
              K = 0,
              L = 0,
              M = jsfeat.cache.get_buffer(i << 3),
              N = M.f64;
            i > m;
            m++
          ) {
            for (o = 0, B = 0; h > o; o++) (y = c[m * d + o]), (B += y * y);
            if (((N[m] = B), f)) {
              for (o = 0; i > o; o++) f[m * g + o] = 0;
              f[m * g + m] = 1;
            }
          }
          for (; q > p; p++) {
            for (v = 0, m = 0; i - 1 > m; m++)
              for (n = m + 1; i > n; n++) {
                for (
                  r = (m * d) | 0,
                    s = (n * d) | 0,
                    F = N[m],
                    G = 0,
                    H = N[n],
                    o = 3,
                    G += c[r] * c[s],
                    G += c[r + 1] * c[s + 1],
                    G += c[r + 2] * c[s + 2];
                  h > o;
                  o++
                )
                  G += c[r + o] * c[s + o];
                if (!(Math.abs(G) <= k * Math.sqrt(F * H))) {
                  if (
                    ((G *= 2),
                    (C = F - H),
                    (D = b(G, C)),
                    0 > C
                      ? ((E = 0.5 * (D - C)),
                        (x = Math.sqrt(E / D)),
                        (w = G / (D * x * 2)))
                      : ((w = Math.sqrt((D + C) / (2 * D))),
                        (x = G / (D * w * 2)),
                        (E = (G * G * 0.5) / (D + C))),
                    (N[m] += E),
                    (N[n] -= E),
                    1 & p && N[m] > 0 && N[n] > 0)
                  )
                    for (
                      o = 3,
                        z = w * c[r] + x * c[s],
                        A = -x * c[r] + w * c[s],
                        c[r] = z,
                        c[s] = A,
                        z = w * c[r + 1] + x * c[s + 1],
                        A = -x * c[r + 1] + w * c[s + 1],
                        c[r + 1] = z,
                        c[s + 1] = A,
                        z = w * c[r + 2] + x * c[s + 2],
                        A = -x * c[r + 2] + w * c[s + 2],
                        c[r + 2] = z,
                        c[s + 2] = A;
                      h > o;
                      o++
                    )
                      (z = w * c[r + o] + x * c[s + o]),
                        (A = -x * c[r + o] + w * c[s + o]),
                        (c[r + o] = z),
                        (c[s + o] = A);
                  else {
                    for (
                      F = H = 0,
                        o = 3,
                        z = w * c[r] + x * c[s],
                        A = -x * c[r] + w * c[s],
                        c[r] = z,
                        c[s] = A,
                        F += z * z,
                        H += A * A,
                        z = w * c[r + 1] + x * c[s + 1],
                        A = -x * c[r + 1] + w * c[s + 1],
                        c[r + 1] = z,
                        c[s + 1] = A,
                        F += z * z,
                        H += A * A,
                        z = w * c[r + 2] + x * c[s + 2],
                        A = -x * c[r + 2] + w * c[s + 2],
                        c[r + 2] = z,
                        c[s + 2] = A,
                        F += z * z,
                        H += A * A;
                      h > o;
                      o++
                    )
                      (z = w * c[r + o] + x * c[s + o]),
                        (A = -x * c[r + o] + w * c[s + o]),
                        (c[r + o] = z),
                        (c[s + o] = A),
                        (F += z * z),
                        (H += A * A);
                    (N[m] = F), (N[n] = H);
                  }
                  if (((v = 1), f))
                    for (
                      t = (m * g) | 0,
                        u = (n * g) | 0,
                        o = 3,
                        z = w * f[t] + x * f[u],
                        A = -x * f[t] + w * f[u],
                        f[t] = z,
                        f[u] = A,
                        z = w * f[t + 1] + x * f[u + 1],
                        A = -x * f[t + 1] + w * f[u + 1],
                        f[t + 1] = z,
                        f[u + 1] = A,
                        z = w * f[t + 2] + x * f[u + 2],
                        A = -x * f[t + 2] + w * f[u + 2],
                        f[t + 2] = z,
                        f[u + 2] = A;
                      i > o;
                      o++
                    )
                      (z = w * f[t + o] + x * f[u + o]),
                        (A = -x * f[t + o] + w * f[u + o]),
                        (f[t + o] = z),
                        (f[u + o] = A);
                }
              }
            if (0 == v) break;
          }
          for (m = 0; i > m; m++) {
            for (o = 0, B = 0; h > o; o++) (y = c[m * d + o]), (B += y * y);
            N[m] = Math.sqrt(B);
          }
          for (m = 0; i - 1 > m; m++) {
            for (n = m, o = m + 1; i > o; o++) N[n] < N[o] && (n = o);
            if (m != n && (a(N, m, n, B), f)) {
              for (o = 0; h > o; o++) a(c, m * d + o, n * d + o, y);
              for (o = 0; i > o; o++) a(f, m * g + o, n * g + o, y);
            }
          }
          for (m = 0; i > m; m++) e[m] = N[m];
          if (!f) return void jsfeat.cache.put_buffer(M);
          for (m = 0; j > m; m++) {
            for (B = i > m ? N[m] : 0; l >= B; ) {
              for (K = 1 / h, o = 0; h > o; o++)
                (I = 214013 * I + 2531011),
                  (J = 0 != ((I >> 16) & 32767 & 256) ? K : -K),
                  (c[m * d + o] = J);
              for (p = 0; 2 > p; p++)
                for (n = 0; m > n; n++) {
                  for (B = 0, o = 0; h > o; o++)
                    B += c[m * d + o] * c[n * d + o];
                  for (L = 0, o = 0; h > o; o++)
                    (y = c[m * d + o] - B * c[n * d + o]),
                      (c[m * d + o] = y),
                      (L += Math.abs(y));
                  for (L = L ? 1 / L : 0, o = 0; h > o; o++) c[m * d + o] *= L;
                }
              for (B = 0, o = 0; h > o; o++) (y = c[m * d + o]), (B += y * y);
              B = Math.sqrt(B);
            }
            for (x = 1 / B, o = 0; h > o; o++) c[m * d + o] *= x;
          }
          jsfeat.cache.put_buffer(M);
        };
      return {
        lu_solve: function (b, c) {
          var d,
            e,
            f,
            g,
            h = 0,
            i = 0,
            j = 0,
            k = 1,
            l = b.cols,
            m = b.data,
            n = c.data;
          for (h = 0; l > h; h++) {
            for (j = h, i = h + 1; l > i; i++)
              Math.abs(m[i * l + h]) > Math.abs(m[j * l + h]) && (j = i);
            if (Math.abs(m[j * l + h]) < jsfeat.EPSILON) return 0;
            if (j != h) {
              for (i = h; l > i; i++) a(m, h * l + i, j * l + i, d);
              a(n, h, j, d), (k = -k);
            }
            for (f = -1 / m[h * l + h], i = h + 1; l > i; i++) {
              for (e = m[i * l + h] * f, j = h + 1; l > j; j++)
                m[i * l + j] += e * m[h * l + j];
              n[i] += e * n[h];
            }
            m[h * l + h] = -f;
          }
          for (h = l - 1; h >= 0; h--) {
            for (g = n[h], j = h + 1; l > j; j++) g -= m[h * l + j] * n[j];
            n[h] = g * m[h * l + h];
          }
          return 1;
        },
        cholesky_solve: function (a, b) {
          var c,
            d,
            e = 0,
            f = 0,
            g = 0,
            h = 0,
            i = 0,
            j = 0,
            k = 0,
            l = a.cols,
            m = a.data,
            n = b.data;
          for (e = 0; l > e; e++)
            for (d = 1, h = e * l, i = h, f = e; l > f; f++) {
              for (c = m[i + e], g = 0; e > g; g++)
                c -= m[g * l + e] * m[i + g];
              if (f == e) {
                if (((m[i + e] = c), 0 == c)) return 0;
                d = 1 / c;
              } else (m[h + f] = c), (m[i + e] = c * d);
              i += l;
            }
          for (h = 0, j = 0; l > j; j++) {
            for (c = n[j], k = 0; j > k; k++) c -= m[h + k] * n[k];
            (n[j] = c), (h += l);
          }
          for (h = 0, j = 0; l > j; j++) (n[j] /= m[h + j]), (h += l);
          for (j = l - 1; j >= 0; j--) {
            for (c = n[j], k = j + 1, h = k * l; l > k; k++)
              (c -= m[h + j] * n[k]), (h += l);
            n[j] = c;
          }
          return 1;
        },
        svd_decompose: function (a, b, c, e, f) {
          "undefined" == typeof f && (f = 0);
          var g = 0,
            h = 0,
            i = a.rows,
            j = a.cols,
            k = i,
            l = j,
            m = a.type | jsfeat.C1_t;
          l > k && ((g = 1), (h = k), (k = l), (l = h));
          var n = jsfeat.cache.get_buffer((k * k) << 3),
            o = jsfeat.cache.get_buffer(l << 3),
            p = jsfeat.cache.get_buffer((l * l) << 3),
            q = new jsfeat.matrix_t(k, k, m, n.data),
            r = new jsfeat.matrix_t(1, l, m, o.data),
            s = new jsfeat.matrix_t(l, l, m, p.data);
          if (0 == g) jsfeat.matmath.transpose(q, a);
          else {
            for (h = 0; j * i > h; h++) q.data[h] = a.data[h];
            for (; l * k > h; h++) q.data[h] = 0;
          }
          if ((d(q.data, k, r.data, s.data, l, k, l, k), b)) {
            for (h = 0; l > h; h++) b.data[h] = r.data[h];
            for (; j > h; h++) b.data[h] = 0;
          }
          if (0 == g) {
            if (c && f & jsfeat.SVD_U_T)
              for (h = k * k; --h >= 0; ) c.data[h] = q.data[h];
            else c && jsfeat.matmath.transpose(c, q);
            if (e && f & jsfeat.SVD_V_T)
              for (h = l * l; --h >= 0; ) e.data[h] = s.data[h];
            else e && jsfeat.matmath.transpose(e, s);
          } else {
            if (c && f & jsfeat.SVD_U_T)
              for (h = l * l; --h >= 0; ) c.data[h] = s.data[h];
            else c && jsfeat.matmath.transpose(c, s);
            if (e && f & jsfeat.SVD_V_T)
              for (h = k * k; --h >= 0; ) e.data[h] = q.data[h];
            else e && jsfeat.matmath.transpose(e, q);
          }
          jsfeat.cache.put_buffer(n),
            jsfeat.cache.put_buffer(o),
            jsfeat.cache.put_buffer(p);
        },
        svd_solve: function (a, b, c) {
          var d = 0,
            e = 0,
            f = 0,
            g = 0,
            h = 0,
            i = a.rows,
            j = a.cols,
            k = 0,
            l = 0,
            m = 0,
            n = a.type | jsfeat.C1_t,
            o = jsfeat.cache.get_buffer((i * i) << 3),
            p = jsfeat.cache.get_buffer(j << 3),
            q = jsfeat.cache.get_buffer((j * j) << 3),
            r = new jsfeat.matrix_t(i, i, n, o.data),
            s = new jsfeat.matrix_t(1, j, n, p.data),
            t = new jsfeat.matrix_t(j, j, n, q.data),
            u = c.data,
            v = r.data,
            w = s.data,
            x = t.data;
          for (
            this.svd_decompose(a, s, r, t, 0), m = jsfeat.EPSILON * w[0] * j;
            j > d;
            d++, h += j
          ) {
            for (l = 0, e = 0; j > e; e++)
              if (w[e] > m) {
                for (f = 0, k = 0, g = 0; i > f; f++, g += j)
                  k += v[g + e] * u[f];
                l += (k * x[h + e]) / w[e];
              }
            b.data[d] = l;
          }
          jsfeat.cache.put_buffer(o),
            jsfeat.cache.put_buffer(p),
            jsfeat.cache.put_buffer(q);
        },
        svd_invert: function (a, b) {
          var c = 0,
            d = 0,
            e = 0,
            f = 0,
            g = 0,
            h = 0,
            i = b.rows,
            j = b.cols,
            k = 0,
            l = 0,
            m = b.type | jsfeat.C1_t,
            n = jsfeat.cache.get_buffer((i * i) << 3),
            o = jsfeat.cache.get_buffer(j << 3),
            p = jsfeat.cache.get_buffer((j * j) << 3),
            q = new jsfeat.matrix_t(i, i, m, n.data),
            r = new jsfeat.matrix_t(1, j, m, o.data),
            s = new jsfeat.matrix_t(j, j, m, p.data),
            t = a.data,
            u = q.data,
            v = r.data,
            w = s.data;
          for (
            this.svd_decompose(b, r, q, s, 0), l = jsfeat.EPSILON * v[0] * j;
            j > c;
            c++, g += j
          )
            for (d = 0, f = 0; i > d; d++, h++) {
              for (e = 0, k = 0; j > e; e++, f++)
                v[e] > l && (k += (w[g + e] * u[f]) / v[e]);
              t[h] = k;
            }
          jsfeat.cache.put_buffer(n),
            jsfeat.cache.put_buffer(o),
            jsfeat.cache.put_buffer(p);
        },
        eigenVV: function (a, b, d) {
          for (
            var e = a.cols,
              f = e * e,
              g = a.type | jsfeat.C1_t,
              h = jsfeat.cache.get_buffer((e * e) << 3),
              i = jsfeat.cache.get_buffer(e << 3),
              j = new jsfeat.matrix_t(e, e, g, h.data),
              k = new jsfeat.matrix_t(1, e, g, i.data);
            --f >= 0;

          )
            j.data[f] = a.data[f];
          if ((c(j.data, e, k.data, b ? b.data : null, e, e), d))
            for (; --e >= 0; ) d.data[e] = k.data[e];
          jsfeat.cache.put_buffer(h), jsfeat.cache.put_buffer(i);
        },
      };
    })();
    a.linalg = b;
  })(jsfeat),
  (function (a) {
    var b = (function () {
      return {
        affine_3point_transform: function () {},
        perspective_4point_transform: function (
          a,
          b,
          c,
          d,
          e,
          f,
          g,
          h,
          i,
          j,
          k,
          l,
          m,
          n,
          o,
          p,
          q
        ) {
          var r = b,
            s = j,
            t = g,
            u = r * s * t,
            v = o,
            w = r * v,
            x = s * w,
            y = k,
            z = r * y,
            A = f,
            B = c,
            C = n,
            D = B * C,
            E = D * A,
            F = C * A * y,
            G = C * t,
            H = C * y,
            I = s * t,
            J = v * s,
            K = v * A,
            L = y * A,
            M = 1 / (G - H - I + J - K + L),
            N = r * C,
            O = B * A,
            P = t * r,
            Q = v * P,
            R = B * s,
            S = D * y,
            T = B * y * A,
            U = t * v * s,
            V = v * B,
            W = -(x - u + z * A - A * w - D * s + E - F + G * s) * M,
            X = (u - x - N * t + N * y + E - s * O + K * s - F) * M,
            Y = r,
            Z = (-y * w + Q + R * t - D * t + S - T + K * y - U) * M,
            $ = (-Q + P * y - V * s + S - T + V * A + U - G * y) * M,
            _ = B,
            ab = (-z + P + R - O + H - G - J + K) * M,
            bb = (-w + z + D - R + K - L - G + I) * M;
          (r = d),
            (s = l),
            (t = i),
            (u = r * s * t),
            (v = q),
            (w = r * v),
            (x = s * w),
            (y = m),
            (z = r * y),
            (A = h),
            (B = e),
            (C = p),
            (D = B * C),
            (E = D * A),
            (F = C * A * y),
            (G = C * t),
            (H = C * y),
            (I = s * t),
            (J = v * s),
            (K = v * A),
            (L = y * A),
            (M = 1 / (G - H - I + J - K + L)),
            (N = r * C),
            (O = B * A),
            (P = t * r),
            (Q = v * P),
            (R = B * s),
            (S = D * y),
            (T = B * y * A),
            (U = t * v * s),
            (V = v * B);
          var cb = -(x - u + z * A - A * w - D * s + E - F + G * s) * M,
            db = (u - x - N * t + N * y + E - s * O + K * s - F) * M,
            eb = r,
            fb = (-y * w + Q + R * t - D * t + S - T + K * y - U) * M,
            gb = (-Q + P * y - V * s + S - T + V * A + U - G * y) * M,
            hb = B,
            ib = (-z + P + R - O + H - G - J + K) * M,
            jb = (-w + z + D - R + K - L - G + I) * M;
          (s = $ - bb * _),
            (t = W * $),
            (u = W * _),
            (w = Z * X),
            (x = Y * Z),
            (z = X * ab);
          var kb = Y * ab;
          (C = 1 / (t - u * bb - w + x * bb + z * _ - kb * $)),
            (E = -Z + _ * ab);
          var lb = -Z * bb + $ * ab;
          L = -X + Y * bb;
          var mb = W - kb;
          (O = W * bb - z), (P = -X * _ + Y * $);
          var nb = u - x,
            ob = t - w;
          T = s * C;
          var pb = L * C,
            qb = P * C;
          (a[0] = cb * T + db * E * C - eb * lb * C),
            (a[1] = cb * pb + db * mb * C - eb * O * C),
            (a[2] = -cb * qb - db * nb * C + eb * ob * C),
            (a[3] = fb * T + gb * E * C - hb * lb * C),
            (a[4] = fb * pb + gb * mb * C - hb * O * C),
            (a[5] = -fb * qb - gb * nb * C + hb * ob * C),
            (a[6] = ib * T + jb * E * C - lb * C),
            (a[7] = ib * pb + jb * mb * C - O * C),
            (a[8] = -ib * qb - jb * nb * C + ob * C);
        },
        invert_affine_transform: function (a, b) {
          var c = a[0],
            d = a[1],
            e = a[2],
            f = a[3],
            g = a[4],
            h = a[5],
            i = 1 / (c * g - d * f);
          (b[0] = i * g),
            (b[1] = i * -d),
            (b[2] = i * (d * h - e * g)),
            (b[3] = i * -f),
            (b[4] = i * c),
            (b[5] = i * (e * f - c * h));
        },
        invert_perspective_transform: function (a, b) {
          var c = a[0],
            d = a[1],
            e = a[2],
            f = a[3],
            g = a[4],
            h = a[5],
            i = a[6],
            j = a[7],
            k = a[8],
            l =
              1 /
              (c * (g * k - h * j) - d * (f * k - h * i) + e * (f * j - g * i));
          (b[0] = l * (g * k - h * j)),
            (b[1] = l * (e * j - d * k)),
            (b[2] = l * (d * h - e * g)),
            (b[3] = l * (h * i - f * k)),
            (b[4] = l * (c * k - e * i)),
            (b[5] = l * (e * f - c * h)),
            (b[6] = l * (f * j - g * i)),
            (b[7] = l * (d * i - c * j)),
            (b[8] = l * (c * g - d * f));
        },
      };
    })();
    a.transform = b;
  })(jsfeat),
  (function (a) {
    var b = (function () {
      var a = function (a, b, c, d) {
          for (
            var e = [],
              f = 0,
              g = a.channel,
              h = a.cols,
              i = a.rows,
              j = a.data,
              k = b.data,
              l = h / c,
              m = i / d,
              n = (l * m * 65536) | 0,
              o = 0,
              p = 0,
              q = 0,
              r = 0,
              s = 0,
              t = 0,
              u = 0,
              v = 0,
              w = 0,
              x = 0,
              y = 0,
              z = 0,
              A = 0,
              B = 0,
              C = 0,
              D = 0,
              E = jsfeat.cache.get_buffer((c * g) << 2),
              F = jsfeat.cache.get_buffer((c * g) << 2),
              G = E.i32,
              H = F.i32;
            c > o;
            o++
          ) {
            for (
              w = o * l,
                x = w + l,
                s = (w + 1 - 1e-6) | 0,
                t = 0 | x,
                s = Math.min(s, h - 1),
                t = Math.min(t, h - 1),
                s > w &&
                  (e[f++] = {
                    si: ((s - 1) * g) | 0,
                    di: (o * g) | 0,
                    alpha: (256 * (s - w)) | 0,
                  }),
                q = s;
              t > q;
              q++
            )
              e[f++] = { si: (q * g) | 0, di: (o * g) | 0, alpha: 256 };
            x - t > 0.001 &&
              (e[f++] = {
                si: (t * g) | 0,
                di: (o * g) | 0,
                alpha: (256 * (x - t)) | 0,
              });
          }
          for (o = 0; c * g > o; o++) G[o] = H[o] = 0;
          for (p = 0, r = 0; i > r; r++) {
            for (y = h * r, v = 0; f > v; v++)
              for (A = e[v].di, B = e[v].alpha, s = e[v].si, u = 0; g > u; u++)
                G[A + u] += j[y + s + u] * B;
            if (r + 1 >= (p + 1) * m || r == i - 1) {
              if (
                ((C = (256 * Math.max(r + 1 - (p + 1) * m, 0)) | 0),
                (D = 256 - C),
                (z = c * p),
                0 >= C)
              )
                for (o = 0; c * g > o; o++)
                  (k[z + o] = Math.min(
                    Math.max((H[o] + 256 * G[o]) / n, 0),
                    255
                  )),
                    (H[o] = G[o] = 0);
              else
                for (o = 0; c * g > o; o++)
                  (k[z + o] = Math.min(
                    Math.max((H[o] + G[o] * D) / n, 0),
                    255
                  )),
                    (H[o] = G[o] * C),
                    (G[o] = 0);
              p++;
            } else for (o = 0; c * g > o; o++) (H[o] += 256 * G[o]), (G[o] = 0);
          }
          jsfeat.cache.put_buffer(F), jsfeat.cache.put_buffer(E);
        },
        b = function (a, b, c, d) {
          for (
            var e = [],
              f = 0,
              g = a.channel,
              h = a.cols,
              i = a.rows,
              j = a.data,
              k = b.data,
              l = h / c,
              m = i / d,
              n = 1 / (l * m),
              o = 0,
              p = 0,
              q = 0,
              r = 0,
              s = 0,
              t = 0,
              u = 0,
              v = 0,
              w = 0,
              x = 0,
              y = 0,
              z = 0,
              A = 0,
              B = 0,
              C = 0,
              D = 0,
              E = jsfeat.cache.get_buffer((c * g) << 2),
              F = jsfeat.cache.get_buffer((c * g) << 2),
              G = E.f32,
              H = F.f32;
            c > o;
            o++
          ) {
            for (
              w = o * l,
                x = w + l,
                s = (w + 1 - 1e-6) | 0,
                t = 0 | x,
                s = Math.min(s, h - 1),
                t = Math.min(t, h - 1),
                s > w &&
                  (e[f++] = {
                    si: ((s - 1) * g) | 0,
                    di: (o * g) | 0,
                    alpha: (s - w) * n,
                  }),
                q = s;
              t > q;
              q++
            )
              e[f++] = { si: (q * g) | 0, di: (o * g) | 0, alpha: n };
            x - t > 0.001 &&
              (e[f++] = {
                si: (t * g) | 0,
                di: (o * g) | 0,
                alpha: (x - t) * n,
              });
          }
          for (o = 0; c * g > o; o++) G[o] = H[o] = 0;
          for (p = 0, r = 0; i > r; r++) {
            for (y = h * r, v = 0; f > v; v++)
              for (A = e[v].di, B = e[v].alpha, s = e[v].si, u = 0; g > u; u++)
                G[A + u] += j[y + s + u] * B;
            if (r + 1 >= (p + 1) * m || r == i - 1) {
              if (
                ((C = Math.max(r + 1 - (p + 1) * m, 0)),
                (D = 1 - C),
                (z = c * p),
                Math.abs(C) < 0.001)
              )
                for (o = 0; c * g > o; o++)
                  (k[z + o] = H[o] + G[o]), (H[o] = G[o] = 0);
              else
                for (o = 0; c * g > o; o++)
                  (k[z + o] = H[o] + G[o] * D), (H[o] = G[o] * C), (G[o] = 0);
              p++;
            } else for (o = 0; c * g > o; o++) (H[o] += G[o]), (G[o] = 0);
          }
          jsfeat.cache.put_buffer(F), jsfeat.cache.put_buffer(E);
        },
        c = function (a, b, c, d, e, f, g, h) {
          for (
            var i = 0,
              j = 0,
              k = 0,
              l = 0,
              m = 0,
              n = 0,
              o = 0,
              p = 0,
              q = 0,
              r = f[0],
              s = 0,
              t = d << 1,
              u = 3 * d,
              v = d << 2;
            e > i;
            ++i
          ) {
            for (n = b[l], j = 0; h > j; ++j) a[j] = n;
            for (j = 0; d - 2 >= j; j += 2)
              (a[j + h] = b[l + j]), (a[j + h + 1] = b[l + j + 1]);
            for (; d > j; ++j) a[j + h] = b[l + j];
            for (n = b[l + d - 1], j = d; h + d > j; ++j) a[j + h] = n;
            for (j = 0; d - 4 >= j; j += 4) {
              for (
                n = a[j] * r,
                  o = a[j + 1] * r,
                  p = a[j + 2] * r,
                  q = a[j + 3] * r,
                  k = 1;
                g > k;
                ++k
              )
                (s = f[k]),
                  (n += a[k + j] * s),
                  (o += a[k + j + 1] * s),
                  (p += a[k + j + 2] * s),
                  (q += a[k + j + 3] * s);
              (c[m + j] = n >> 8),
                (c[m + j + 1] = o >> 8),
                (c[m + j + 2] = p >> 8),
                (c[m + j + 3] = q >> 8);
            }
            for (; d > j; ++j) {
              for (n = a[j] * r, k = 1; g > k; ++k) n += a[k + j] * f[k];
              c[m + j] = n >> 8;
            }
            (l += d), (m += d);
          }
          for (i = 0; d > i; ++i) {
            for (n = c[i], j = 0; h > j; ++j) a[j] = n;
            for (k = i, j = 0; e - 2 >= j; j += 2, k += t)
              (a[j + h] = c[k]), (a[j + h + 1] = c[k + d]);
            for (; e > j; ++j, k += d) a[j + h] = c[k];
            for (n = c[(e - 1) * d + i], j = e; h + e > j; ++j) a[j + h] = n;
            for (m = i, j = 0; e - 4 >= j; j += 4, m += v) {
              for (
                n = a[j] * r,
                  o = a[j + 1] * r,
                  p = a[j + 2] * r,
                  q = a[j + 3] * r,
                  k = 1;
                g > k;
                ++k
              )
                (s = f[k]),
                  (n += a[k + j] * s),
                  (o += a[k + j + 1] * s),
                  (p += a[k + j + 2] * s),
                  (q += a[k + j + 3] * s);
              (c[m] = n >> 8),
                (c[m + d] = o >> 8),
                (c[m + t] = p >> 8),
                (c[m + u] = q >> 8);
            }
            for (; e > j; ++j, m += d) {
              for (n = a[j] * r, k = 1; g > k; ++k) n += a[k + j] * f[k];
              c[m] = n >> 8;
            }
          }
        },
        d = function (a, b, c, d, e, f, g, h) {
          for (
            var i = 0,
              j = 0,
              k = 0,
              l = 0,
              m = 0,
              n = 0,
              o = 0,
              p = 0,
              q = 0,
              r = f[0],
              s = 0,
              t = d << 1,
              u = 3 * d,
              v = d << 2;
            e > i;
            ++i
          ) {
            for (n = b[l], j = 0; h > j; ++j) a[j] = n;
            for (j = 0; d - 2 >= j; j += 2)
              (a[j + h] = b[l + j]), (a[j + h + 1] = b[l + j + 1]);
            for (; d > j; ++j) a[j + h] = b[l + j];
            for (n = b[l + d - 1], j = d; h + d > j; ++j) a[j + h] = n;
            for (j = 0; d - 4 >= j; j += 4) {
              for (
                n = a[j] * r,
                  o = a[j + 1] * r,
                  p = a[j + 2] * r,
                  q = a[j + 3] * r,
                  k = 1;
                g > k;
                ++k
              )
                (s = f[k]),
                  (n += a[k + j] * s),
                  (o += a[k + j + 1] * s),
                  (p += a[k + j + 2] * s),
                  (q += a[k + j + 3] * s);
              (c[m + j] = n),
                (c[m + j + 1] = o),
                (c[m + j + 2] = p),
                (c[m + j + 3] = q);
            }
            for (; d > j; ++j) {
              for (n = a[j] * r, k = 1; g > k; ++k) n += a[k + j] * f[k];
              c[m + j] = n;
            }
            (l += d), (m += d);
          }
          for (i = 0; d > i; ++i) {
            for (n = c[i], j = 0; h > j; ++j) a[j] = n;
            for (k = i, j = 0; e - 2 >= j; j += 2, k += t)
              (a[j + h] = c[k]), (a[j + h + 1] = c[k + d]);
            for (; e > j; ++j, k += d) a[j + h] = c[k];
            for (n = c[(e - 1) * d + i], j = e; h + e > j; ++j) a[j + h] = n;
            for (m = i, j = 0; e - 4 >= j; j += 4, m += v) {
              for (
                n = a[j] * r,
                  o = a[j + 1] * r,
                  p = a[j + 2] * r,
                  q = a[j + 3] * r,
                  k = 1;
                g > k;
                ++k
              )
                (s = f[k]),
                  (n += a[k + j] * s),
                  (o += a[k + j + 1] * s),
                  (p += a[k + j + 2] * s),
                  (q += a[k + j + 3] * s);
              (c[m] = n), (c[m + d] = o), (c[m + t] = p), (c[m + u] = q);
            }
            for (; e > j; ++j, m += d) {
              for (n = a[j] * r, k = 1; g > k; ++k) n += a[k + j] * f[k];
              c[m] = n;
            }
          }
        };
      return {
        grayscale: function (a, b) {
          for (
            var c = 0 | a.length,
              d = (c - 16) | 0,
              e = 0,
              f = 4899,
              g = 9617,
              h = 1868,
              i = 0;
            d >= i;
            i += 16, e += 4
          )
            (b[e] = (a[i] * f + a[i + 1] * g + a[i + 2] * h + 8192) >> 14),
              (b[e + 1] =
                (a[i + 4] * f + a[i + 5] * g + a[i + 6] * h + 8192) >> 14),
              (b[e + 2] =
                (a[i + 8] * f + a[i + 9] * g + a[i + 10] * h + 8192) >> 14),
              (b[e + 3] =
                (a[i + 12] * f + a[i + 13] * g + a[i + 14] * h + 8192) >> 14);
          for (; c > i; i += 4, ++e)
            b[e] = (a[i] * f + a[i + 1] * g + a[i + 2] * h + 8192) >> 14;
        },
        resample: function (c, d, e, f) {
          var g = c.rows,
            h = c.cols;
          g > f &&
            h > e &&
            (c.type & jsfeat.U8_t &&
            d.type & jsfeat.U8_t &&
            256 > (g * h) / (f * e)
              ? a(c, d, e, f)
              : b(c, d, e, f));
        },
        box_blur_gray: function (a, b, c, d) {
          "undefined" == typeof d && (d = 0);
          var e = a.cols,
            f = a.rows,
            g = f << 1,
            h = e << 1,
            i = 0,
            j = 0,
            k = 0,
            l = 0,
            m = ((c << 1) + 1) | 0,
            n = (c + 1) | 0,
            o = (n + 1) | 0,
            p = 8192,
            q = d & jsfeat.BOX_BLUR_NOSCALE ? 1 : (16384 / (m * m) + 0.5) | 0,
            r = jsfeat.cache.get_buffer((e * f) << 2),
            s = 0,
            t = 0,
            u = 0,
            v = 0,
            w = 0,
            x = r.i32,
            y = a.data,
            z = 0;
          for (k = 0; f > k; ++k) {
            for (
              t = k, s = n * y[u], i = (u + 1) | 0, l = (u + c) | 0;
              l >= i;
              ++i
            )
              s += y[i];
            for (v = (u + n) | 0, w = u, z = y[w], j = 0; c > j; ++j, t += f)
              (x[t] = s), (s += y[v] - z), v++;
            for (; e - o > j; j += 2, t += g)
              (x[t] = s),
                (s += y[v] - y[w]),
                (x[t + f] = s),
                (s += y[v + 1] - y[w + 1]),
                (v += 2),
                (w += 2);
            for (; e - n > j; ++j, t += f)
              (x[t] = s), (s += y[v] - y[w]), v++, w++;
            for (z = y[v - 1]; e > j; ++j, t += f)
              (x[t] = s), (s += z - y[w]), w++;
            u += e;
          }
          if (((u = 0), (y = b.data), 1 == q))
            for (k = 0; e > k; ++k) {
              for (
                t = k, s = n * x[u], i = (u + 1) | 0, l = (u + c) | 0;
                l >= i;
                ++i
              )
                s += x[i];
              for (v = u + n, w = u, z = x[w], j = 0; c > j; ++j, t += e)
                (y[t] = s), (s += x[v] - z), v++;
              for (; f - o > j; j += 2, t += h)
                (y[t] = s),
                  (s += x[v] - x[w]),
                  (y[t + e] = s),
                  (s += x[v + 1] - x[w + 1]),
                  (v += 2),
                  (w += 2);
              for (; f - n > j; ++j, t += e)
                (y[t] = s), (s += x[v] - x[w]), v++, w++;
              for (z = x[v - 1]; f > j; ++j, t += e)
                (y[t] = s), (s += z - x[w]), w++;
              u += f;
            }
          else
            for (k = 0; e > k; ++k) {
              for (
                t = k, s = n * x[u], i = (u + 1) | 0, l = (u + c) | 0;
                l >= i;
                ++i
              )
                s += x[i];
              for (v = u + n, w = u, z = x[w], j = 0; c > j; ++j, t += e)
                (y[t] = (s * q + p) >> 14), (s += x[v] - z), v++;
              for (; f - o > j; j += 2, t += h)
                (y[t] = (s * q + p) >> 14),
                  (s += x[v] - x[w]),
                  (y[t + e] = (s * q + p) >> 14),
                  (s += x[v + 1] - x[w + 1]),
                  (v += 2),
                  (w += 2);
              for (; f - n > j; ++j, t += e)
                (y[t] = (s * q + p) >> 14), (s += x[v] - x[w]), v++, w++;
              for (z = x[v - 1]; f > j; ++j, t += e)
                (y[t] = (s * q + p) >> 14), (s += z - x[w]), w++;
              u += f;
            }
          jsfeat.cache.put_buffer(r);
        },
        gaussian_blur: function (a, b, e, f) {
          "undefined" == typeof f && (f = 0),
            "undefined" == typeof e && (e = 0),
            (e = 0 == e ? (2 * Math.max(1, 4 * f + 1 - 1e-8) + 1) | 0 : e);
          var g,
            h,
            i = e >> 1,
            j = a.cols,
            k = a.rows,
            l = a.type,
            m = l & jsfeat.U8_t,
            n = a.data,
            o = b.data,
            p = (e + Math.max(k, j)) | 0,
            q = jsfeat.cache.get_buffer(p << 2),
            r = jsfeat.cache.get_buffer(e << 2);
          m
            ? ((g = q.u8), (h = r.i32))
            : l & jsfeat.S32_t
            ? ((g = q.i32), (h = r.f32))
            : ((g = q.f32), (h = r.f32)),
            jsfeat.math.get_gaussian_kernel(e, f, h, l),
            m ? c(g, n, o, j, k, h, e, i) : d(g, n, o, j, k, h, e, i),
            jsfeat.cache.put_buffer(q),
            jsfeat.cache.put_buffer(r);
        },
        pyrdown: function (a, b) {
          var c = a.cols,
            d = a.rows,
            e = c >> 1,
            f = d >> 1,
            g = 0,
            h = 0,
            i = 0,
            j = 0,
            k = 0,
            l = a.data,
            m = b.data;
          for (h = 0; f > h; ++h) {
            for (j = i, g = 0; e - 2 >= g; g += 2, k += 2, j += 4)
              (m[k] = (l[j] + l[j + 1] + l[j + c] + l[j + c + 1] + 2) >> 2),
                (m[k + 1] =
                  (l[j + 2] + l[j + 3] + l[j + c + 2] + l[j + c + 3] + 2) >> 2);
            for (; e > g; ++g, ++k, j += 2)
              m[k] = (l[j] + l[j + 1] + l[j + c] + l[j + c + 1] + 2) >> 2;
            i += c << 1;
          }
        },
        scharr_derivatives: function (a, b) {
          var c,
            d,
            e,
            f,
            g,
            h,
            i,
            j,
            k = a.cols,
            l = a.rows,
            m = k << 1,
            n = 0,
            o = 0,
            p = 0,
            q = 0,
            r = 0,
            s = 0,
            t = 0,
            u = a.data,
            v = jsfeat.cache.get_buffer((k + 2) << 2),
            w = jsfeat.cache.get_buffer((k + 2) << 2);
          for (
            a.type & jsfeat.U8_t || a.type & jsfeat.S32_t
              ? ((i = v.i32), (j = w.i32))
              : ((i = v.f32), (j = w.f32));
            l > o;
            ++o, r += k
          ) {
            for (
              q = ((o > 0 ? o - 1 : 1) * k) | 0,
                s = ((l - 1 > o ? o + 1 : l - 2) * k) | 0,
                t = (o * m) | 0,
                n = 0,
                p = 1;
              k - 2 >= n;
              n += 2, p += 2
            )
              (c = u[q + n]),
                (d = u[s + n]),
                (i[p] = 3 * (c + d) + 10 * u[r + n]),
                (j[p] = d - c),
                (c = u[q + n + 1]),
                (d = u[s + n + 1]),
                (i[p + 1] = 3 * (c + d) + 10 * u[r + n + 1]),
                (j[p + 1] = d - c);
            for (; k > n; ++n, ++p)
              (c = u[q + n]),
                (d = u[s + n]),
                (i[p] = 3 * (c + d) + 10 * u[r + n]),
                (j[p] = d - c);
            for (
              n = (k + 1) | 0,
                i[0] = i[1],
                i[n] = i[k],
                j[0] = j[1],
                j[n] = j[k],
                n = 0;
              k - 4 >= n;
              n += 4
            )
              (c = j[n + 2]),
                (d = j[n + 1]),
                (e = j[n + 3]),
                (f = j[n + 4]),
                (g = i[n + 2]),
                (h = i[n + 3]),
                (b[t++] = g - i[n]),
                (b[t++] = 3 * (c + j[n]) + 10 * d),
                (b[t++] = h - i[n + 1]),
                (b[t++] = 3 * (e + d) + 10 * c),
                (b[t++] = i[n + 4] - g),
                (b[t++] = 3 * (f + c) + 10 * e),
                (b[t++] = i[n + 5] - h),
                (b[t++] = 3 * (j[n + 5] + e) + 10 * f);
            for (; k > n; ++n)
              (b[t++] = i[n + 2] - i[n]),
                (b[t++] = 3 * (j[n + 2] + j[n]) + 10 * j[n + 1]);
          }
          jsfeat.cache.put_buffer(v), jsfeat.cache.put_buffer(w);
        },
        sobel_derivatives: function (a, b) {
          var c,
            d,
            e,
            f,
            g,
            h,
            i,
            j,
            k = a.cols,
            l = a.rows,
            m = k << 1,
            n = 0,
            o = 0,
            p = 0,
            q = 0,
            r = 0,
            s = 0,
            t = 0,
            u = a.data,
            v = jsfeat.cache.get_buffer((k + 2) << 2),
            w = jsfeat.cache.get_buffer((k + 2) << 2);
          for (
            a.type & jsfeat.U8_t || a.type & jsfeat.S32_t
              ? ((i = v.i32), (j = w.i32))
              : ((i = v.f32), (j = w.f32));
            l > o;
            ++o, r += k
          ) {
            for (
              q = ((o > 0 ? o - 1 : 1) * k) | 0,
                s = ((l - 1 > o ? o + 1 : l - 2) * k) | 0,
                t = (o * m) | 0,
                n = 0,
                p = 1;
              k - 2 >= n;
              n += 2, p += 2
            )
              (c = u[q + n]),
                (d = u[s + n]),
                (i[p] = c + d + 2 * u[r + n]),
                (j[p] = d - c),
                (c = u[q + n + 1]),
                (d = u[s + n + 1]),
                (i[p + 1] = c + d + 2 * u[r + n + 1]),
                (j[p + 1] = d - c);
            for (; k > n; ++n, ++p)
              (c = u[q + n]),
                (d = u[s + n]),
                (i[p] = c + d + 2 * u[r + n]),
                (j[p] = d - c);
            for (
              n = (k + 1) | 0,
                i[0] = i[1],
                i[n] = i[k],
                j[0] = j[1],
                j[n] = j[k],
                n = 0;
              k - 4 >= n;
              n += 4
            )
              (c = j[n + 2]),
                (d = j[n + 1]),
                (e = j[n + 3]),
                (f = j[n + 4]),
                (g = i[n + 2]),
                (h = i[n + 3]),
                (b[t++] = g - i[n]),
                (b[t++] = c + j[n] + 2 * d),
                (b[t++] = h - i[n + 1]),
                (b[t++] = e + d + 2 * c),
                (b[t++] = i[n + 4] - g),
                (b[t++] = f + c + 2 * e),
                (b[t++] = i[n + 5] - h),
                (b[t++] = j[n + 5] + e + 2 * f);
            for (; k > n; ++n)
              (b[t++] = i[n + 2] - i[n]),
                (b[t++] = j[n + 2] + j[n] + 2 * j[n + 1]);
          }
          jsfeat.cache.put_buffer(v), jsfeat.cache.put_buffer(w);
        },
        compute_integral_image: function (a, b, c, d) {
          var e = 0 | a.cols,
            f = 0 | a.rows,
            g = a.data,
            h = (e + 1) | 0,
            i = 0,
            j = 0,
            k = 0,
            l = 0,
            m = 0,
            n = 0,
            o = 0,
            p = 0;
          if (b && c) {
            for (; h > m; ++m) (b[m] = 0), (c[m] = 0);
            for (k = (h + 1) | 0, l = 1, m = 0, p = 0; f > m; ++m, ++k, ++l) {
              for (i = j = 0, n = 0; e - 2 >= n; n += 2, p += 2, k += 2, l += 2)
                (o = g[p]),
                  (i += o),
                  (j += o * o),
                  (b[k] = b[l] + i),
                  (c[k] = c[l] + j),
                  (o = g[p + 1]),
                  (i += o),
                  (j += o * o),
                  (b[k + 1] = b[l + 1] + i),
                  (c[k + 1] = c[l + 1] + j);
              for (; e > n; ++n, ++p, ++k, ++l)
                (o = g[p]),
                  (i += o),
                  (j += o * o),
                  (b[k] = b[l] + i),
                  (c[k] = c[l] + j);
            }
          } else if (b) {
            for (; h > m; ++m) b[m] = 0;
            for (k = (h + 1) | 0, l = 1, m = 0, p = 0; f > m; ++m, ++k, ++l) {
              for (i = 0, n = 0; e - 2 >= n; n += 2, p += 2, k += 2, l += 2)
                (i += g[p]),
                  (b[k] = b[l] + i),
                  (i += g[p + 1]),
                  (b[k + 1] = b[l + 1] + i);
              for (; e > n; ++n, ++p, ++k, ++l) (i += g[p]), (b[k] = b[l] + i);
            }
          } else if (c) {
            for (; h > m; ++m) c[m] = 0;
            for (k = (h + 1) | 0, l = 1, m = 0, p = 0; f > m; ++m, ++k, ++l) {
              for (j = 0, n = 0; e - 2 >= n; n += 2, p += 2, k += 2, l += 2)
                (o = g[p]),
                  (j += o * o),
                  (c[k] = c[l] + j),
                  (o = g[p + 1]),
                  (j += o * o),
                  (c[k + 1] = c[l + 1] + j);
              for (; e > n; ++n, ++p, ++k, ++l)
                (o = g[p]), (j += o * o), (c[k] = c[l] + j);
            }
          }
          if (d) {
            for (m = 0; h > m; ++m) d[m] = 0;
            for (k = (h + 1) | 0, l = 0, m = 0, p = 0; f > m; ++m, ++k, ++l) {
              for (n = 0; e - 2 >= n; n += 2, p += 2, k += 2, l += 2)
                (d[k] = g[p] + d[l]), (d[k + 1] = g[p + 1] + d[l + 1]);
              for (; e > n; ++n, ++p, ++k, ++l) d[k] = g[p] + d[l];
            }
            for (k = (h + e) | 0, l = e, m = 0; f > m; ++m, k += h, l += h)
              d[k] += d[l];
            for (n = e - 1; n > 0; --n)
              for (k = n + f * h, l = k - h, m = f; m > 0; --m, k -= h, l -= h)
                d[k] += d[l] + d[l + 1];
          }
        },
        equalize_histogram: function (a, b) {
          var c,
            d,
            e = a.cols,
            f = a.rows,
            g = a.data,
            h = b.data,
            i = e * f,
            j = 0,
            k = 0,
            l = jsfeat.cache.get_buffer(1024);
          for (c = l.i32; 256 > j; ++j) c[j] = 0;
          for (j = 0; i > j; ++j) ++c[g[j]];
          for (k = c[0], j = 1; 256 > j; ++j) k = c[j] += k;
          for (d = 255 / i, j = 0; i > j; ++j) h[j] = (c[g[j]] * d + 0.5) | 0;
          jsfeat.cache.put_buffer(l);
        },
        canny: function (a, b, c, d) {
          var e = a.cols,
            f = a.rows,
            g = (a.data, b.data),
            h = 0,
            i = 0,
            j = 0,
            k = e << 1,
            l = 0,
            m = 0,
            n = 0,
            o = 0,
            p = 0,
            q = 0,
            r = 0,
            s = 0,
            t = jsfeat.cache.get_buffer((f * k) << 2),
            u = jsfeat.cache.get_buffer((3 * (e + 2)) << 2),
            v = jsfeat.cache.get_buffer(((f + 2) * (e + 2)) << 2),
            w = jsfeat.cache.get_buffer((f * e) << 2),
            x = u.i32,
            y = v.i32,
            z = w.i32,
            A = t.i32,
            B = 1,
            C = (e + 2 + 1) | 0,
            D = (2 * (e + 2) + 1) | 0,
            E = (e + 2) | 0,
            F = (E + 1) | 0,
            G = 0;
          for (
            this.sobel_derivatives(a, A),
              c > d && ((h = c), (c = d), (d = h)),
              h = (3 * (e + 2)) | 0;
            --h >= 0;

          )
            x[h] = 0;
          for (h = ((f + 2) * (e + 2)) | 0; --h >= 0; ) y[h] = 0;
          for (; e > i; ++i, j += 2)
            (o = A[j]),
              (p = A[j + 1]),
              (x[C + i] =
                (o ^ (o >> 31)) - (o >> 31) + ((p ^ (p >> 31)) - (p >> 31)));
          for (h = 1; f >= h; ++h, j += k) {
            if (h == f) for (i = D + e; --i >= D; ) x[i] = 0;
            else
              for (i = 0; e > i; i++)
                (o = A[j + (i << 1)]),
                  (p = A[j + (i << 1) + 1]),
                  (x[D + i] =
                    (o ^ (o >> 31)) -
                    (o >> 31) +
                    ((p ^ (p >> 31)) - (p >> 31)));
            for (
              l = (j - k) | 0, y[F - 1] = 0, m = 0, i = 0;
              e > i;
              ++i, l += 2
            ) {
              if (((n = x[C + i]), n > c))
                if (
                  ((o = A[l]),
                  (p = A[l + 1]),
                  (q = o ^ p),
                  (o = ((o ^ (o >> 31)) - (o >> 31)) | 0),
                  (p = ((p ^ (p >> 31)) - (p >> 31)) | 0),
                  (r = 13573 * o),
                  (s = r + ((o + o) << 15)),
                  (p <<= 15),
                  r > p)
                ) {
                  if (n > x[C + i - 1] && n >= x[C + i + 1]) {
                    n > d && !m && 2 != y[F + i - E]
                      ? ((y[F + i] = 2), (m = 1), (z[G++] = F + i))
                      : (y[F + i] = 1);
                    continue;
                  }
                } else if (p > s) {
                  if (n > x[B + i] && n >= x[D + i]) {
                    n > d && !m && 2 != y[F + i - E]
                      ? ((y[F + i] = 2), (m = 1), (z[G++] = F + i))
                      : (y[F + i] = 1);
                    continue;
                  }
                } else if (
                  ((q = 0 > q ? -1 : 1), n > x[B + i - q] && n > x[D + i + q])
                ) {
                  n > d && !m && 2 != y[F + i - E]
                    ? ((y[F + i] = 2), (m = 1), (z[G++] = F + i))
                    : (y[F + i] = 1);
                  continue;
                }
              (y[F + i] = 0), (m = 0);
            }
            (y[F + e] = 0), (F += E), (i = B), (B = C), (C = D), (D = i);
          }
          for (i = F - E - 1, h = 0; E > h; ++h, ++i) y[i] = 0;
          for (; G > 0; )
            (F = z[--G]),
              (F -= E + 1),
              1 == y[F] && ((y[F] = 2), (z[G++] = F)),
              (F += 1),
              1 == y[F] && ((y[F] = 2), (z[G++] = F)),
              (F += 1),
              1 == y[F] && ((y[F] = 2), (z[G++] = F)),
              (F += E),
              1 == y[F] && ((y[F] = 2), (z[G++] = F)),
              (F -= 2),
              1 == y[F] && ((y[F] = 2), (z[G++] = F)),
              (F += E),
              1 == y[F] && ((y[F] = 2), (z[G++] = F)),
              (F += 1),
              1 == y[F] && ((y[F] = 2), (z[G++] = F)),
              (F += 1),
              1 == y[F] && ((y[F] = 2), (z[G++] = F));
          for (F = E + 1, B = 0, h = 0; f > h; ++h, F += E)
            for (i = 0; e > i; ++i) g[B++] = 255 * (2 == y[F + i]);
          jsfeat.cache.put_buffer(t),
            jsfeat.cache.put_buffer(u),
            jsfeat.cache.put_buffer(v),
            jsfeat.cache.put_buffer(w);
        },
        warp_perspective: function (a, b, c, d) {
          "undefined" == typeof d && (d = 0);
          for (
            var e = a.cols,
              f = a.rows,
              g = b.cols,
              h = b.rows,
              i = a.data,
              j = b.data,
              k = 0,
              l = 0,
              m = 0,
              n = 0,
              o = 0,
              p = 0,
              q = 0,
              r = 0,
              s = 0,
              t = 0,
              u = 0,
              v = 0,
              w = 0,
              x = 0,
              y = 0,
              z = c[0],
              A = c[1],
              B = c[2],
              C = c[3],
              D = c[4],
              E = c[5],
              F = c[6],
              G = c[7],
              H = c[8],
              I = 0;
            h > l;
            ++l
          )
            for (
              r = A * l + B, s = D * l + E, t = G * l + H, k = 0;
              g > k;
              ++k, ++I, r += z, s += C, t += F
            )
              (u = 1 / t),
                (p = r * u),
                (q = s * u),
                (n = 0 | p),
                (o = 0 | q),
                p > 0 && q > 0 && e - 1 > n && f - 1 > o
                  ? ((v = Math.max(p - n, 0)),
                    (w = Math.max(q - o, 0)),
                    (m = e * o + n),
                    (x = i[m] + v * (i[m + 1] - i[m])),
                    (y = i[m + e] + v * (i[m + e + 1] - i[m + e])),
                    (j[I] = x + w * (y - x)))
                  : (j[I] = d);
        },
        warp_affine: function (a, b, c, d) {
          "undefined" == typeof d && (d = 0);
          for (
            var e = a.cols,
              f = a.rows,
              g = b.cols,
              h = b.rows,
              i = a.data,
              j = b.data,
              k = 0,
              l = 0,
              m = 0,
              n = 0,
              o = 0,
              p = 0,
              q = 0,
              r = 0,
              s = 0,
              t = 0,
              u = 0,
              v = c[0],
              w = c[1],
              x = c[2],
              y = c[3],
              z = c[4],
              A = c[5],
              B = 0;
            h > l;
            ++l
          )
            for (
              p = w * l + x, q = z * l + A, k = 0;
              g > k;
              ++k, ++B, p += v, q += y
            )
              (n = 0 | p),
                (o = 0 | q),
                p > 0 && q > 0 && e - 1 > n && f - 1 > o
                  ? ((r = Math.max(p - n, 0)),
                    (s = Math.max(q - o, 0)),
                    (m = e * o + n),
                    (t = i[m] + r * (i[m + 1] - i[m])),
                    (u = i[m + e] + r * (i[m + e + 1] - i[m + e])),
                    (j[B] = t + s * (u - t)))
                  : (j[B] = d);
        },
      };
    })();
    a.imgproc = b;
  })(jsfeat),
  (function (a) {
    var b = (function () {
      var a = new Int32Array([
          0, 3, 1, 3, 2, 2, 3, 1, 3, 0, 3, -1, 2, -2, 1, -3, 0, -3, -1, -3, -2,
          -2, -3, -1, -3, 0, -3, 1, -2, 2, -1, 3,
        ]),
        b = new Uint8Array(512),
        c = new Int32Array(25),
        d = new Int32Array(25),
        e = function (b, c, d) {
          for (var e = 0, f = a; d > e; ++e)
            b[e] = f[e << 1] + f[(e << 1) + 1] * c;
          for (; 25 > e; ++e) b[e] = b[e - d];
        },
        f = function (a, b, c, d, e) {
          for (
            var f = 25, g = 0, h = a[b], i = e, j = 0, k = 0, l = 0;
            f > g;
            ++g
          )
            d[g] = h - a[b + c[g]];
          for (g = 0; 16 > g; g += 2)
            (j = Math.min(d[g + 1], d[g + 2])),
              (j = Math.min(j, d[g + 3])),
              i >= j ||
                ((j = Math.min(j, d[g + 4])),
                (j = Math.min(j, d[g + 5])),
                (j = Math.min(j, d[g + 6])),
                (j = Math.min(j, d[g + 7])),
                (j = Math.min(j, d[g + 8])),
                (i = Math.max(i, Math.min(j, d[g]))),
                (i = Math.max(i, Math.min(j, d[g + 9]))));
          for (k = -i, g = 0; 16 > g; g += 2)
            (l = Math.max(d[g + 1], d[g + 2])),
              (l = Math.max(l, d[g + 3])),
              (l = Math.max(l, d[g + 4])),
              (l = Math.max(l, d[g + 5])),
              l >= k ||
                ((l = Math.max(l, d[g + 6])),
                (l = Math.max(l, d[g + 7])),
                (l = Math.max(l, d[g + 8])),
                (k = Math.min(k, Math.max(l, d[g]))),
                (k = Math.min(k, Math.max(l, d[g + 9]))));
          return -k - 1;
        },
        g = 20;
      return {
        set_threshold: function (a) {
          g = Math.min(Math.max(a, 0), 255);
          for (var c = -255; 255 >= c; ++c)
            b[c + 255] = -g > c ? 1 : c > g ? 2 : 0;
          return g;
        },
        detect: function (a, h, i) {
          "undefined" == typeof i && (i = 3);
          var j,
            k = 8,
            l = 25,
            m = a.data,
            n = a.cols,
            o = a.rows,
            p = 0,
            q = 0,
            r = 0,
            s = 0,
            t = 0,
            u = 0,
            v = jsfeat.cache.get_buffer(3 * n),
            w = jsfeat.cache.get_buffer((3 * (n + 1)) << 2),
            x = v.u8,
            y = w.i32,
            z = c,
            A = d,
            B = Math.max(3, i),
            C = Math.min(o - 2, o - i),
            D = Math.max(3, i),
            E = Math.min(n - 3, n - i),
            F = 0,
            G = 0,
            H = f,
            I = b,
            J = g,
            K = 0,
            L = 0,
            M = 0,
            N = 0,
            O = 0,
            P = 0,
            Q = 0,
            R = 0,
            S = 0,
            T = 0,
            U = 0,
            V = 0;
          e(z, n, 16);
          var W = z[0],
            X = z[1],
            Y = z[2],
            Z = z[3],
            $ = z[4],
            _ = z[5],
            ab = z[6],
            bb = z[7],
            cb = z[8],
            db = z[9],
            eb = z[10],
            fb = z[11],
            gb = z[12],
            hb = z[13],
            ib = z[14],
            jb = z[15];
          for (p = 0; 3 * n > p; ++p) x[p] = 0;
          for (p = B; C > p; ++p) {
            for (
              Q = (p * n + D) | 0,
                u = (p - 3) % 3,
                P = (u * n) | 0,
                O = (u * (n + 1)) | 0,
                q = 0;
              n > q;
              ++q
            )
              x[P + q] = 0;
            if (((N = 0), C - 1 > p))
              for (q = D; E > q; ++q, ++Q)
                if (
                  ((K = m[Q]),
                  (L = -K + 255),
                  (M = I[L + m[Q + W]] | I[L + m[Q + cb]]),
                  0 != M &&
                    ((M &= I[L + m[Q + Y]] | I[L + m[Q + eb]]),
                    (M &= I[L + m[Q + $]] | I[L + m[Q + gb]]),
                    (M &= I[L + m[Q + ab]] | I[L + m[Q + ib]]),
                    0 != M))
                ) {
                  if (
                    ((M &= I[L + m[Q + X]] | I[L + m[Q + db]]),
                    (M &= I[L + m[Q + Z]] | I[L + m[Q + fb]]),
                    (M &= I[L + m[Q + _]] | I[L + m[Q + hb]]),
                    (M &= I[L + m[Q + bb]] | I[L + m[Q + jb]]),
                    1 & M)
                  )
                    for (s = K - J, F = 0, r = 0; l > r; ++r)
                      if (((t = m[Q + z[r]]), s > t)) {
                        if ((++F, F > k)) {
                          ++N, (y[O + N] = q), (x[P + q] = H(m, Q, z, A, J));
                          break;
                        }
                      } else F = 0;
                  if (2 & M)
                    for (s = K + J, F = 0, r = 0; l > r; ++r)
                      if (((t = m[Q + z[r]]), t > s)) {
                        if ((++F, F > k)) {
                          ++N, (y[O + N] = q), (x[P + q] = H(m, Q, z, A, J));
                          break;
                        }
                      } else F = 0;
                }
            if (((y[O + n] = N), p != B))
              for (
                u = (p - 4 + 3) % 3,
                  R = (u * n) | 0,
                  O = (u * (n + 1)) | 0,
                  u = (p - 5 + 3) % 3,
                  S = (u * n) | 0,
                  N = y[O + n],
                  r = 0;
                N > r;
                ++r
              )
                (q = y[O + r]),
                  (T = (q + 1) | 0),
                  (U = (q - 1) | 0),
                  (V = x[R + q]),
                  V > x[R + T] &&
                    V > x[R + U] &&
                    V > x[S + U] &&
                    V > x[S + q] &&
                    V > x[S + T] &&
                    V > x[P + U] &&
                    V > x[P + q] &&
                    V > x[P + T] &&
                    ((j = h[G]), (j.x = q), (j.y = p - 1), (j.score = V), G++);
          }
          return jsfeat.cache.put_buffer(v), jsfeat.cache.put_buffer(w), G;
        },
      };
    })();
    (a.fast_corners = b), b.set_threshold(20);
  })(jsfeat),
  (function (a) {
    var b = (function () {
      var a = function (a, b, c, d, e, f) {
          var g = 0,
            h = 0,
            i = (e * c) | 0,
            j = i;
          for (g = e; d - e > g; ++g, i += c, j = i)
            for (h = c - e; h >= e; --h)
              (b[j] = -4 * a[j] + a[j + e] + a[j - e] + a[j + f] + a[j - f]),
                ++j;
        },
        b = function (a, b, c, d, e, f, g) {
          var h = -2 * a[b] + a[b + d] + a[b - d],
            i = -2 * a[b] + a[b + e] + a[b - e],
            j = a[b + f] + a[b - f] - a[b + g] - a[b - g],
            k = 0 | Math.sqrt((h - i) * (h - i) + 4 * j * j);
          return Math.min(Math.abs(c - k), Math.abs(-(c + k)));
        };
      return {
        laplacian_threshold: 30,
        min_eigen_value_threshold: 25,
        detect: function (c, d) {
          var e,
            f = 0,
            g = 0,
            h = c.cols,
            i = c.rows,
            j = c.data,
            k = 5,
            l = (5 * h) | 0,
            m = (3 + 3 * h) | 0,
            n = (3 - 3 * h) | 0,
            o = jsfeat.cache.get_buffer((h * i) << 2),
            p = o.i32,
            q = 0,
            r = 0,
            s = 0,
            t = 0,
            u = 0,
            v = this.laplacian_threshold,
            w = this.min_eigen_value_threshold;
          for (f = h * i; --f >= 0; ) p[f] = 0;
          for (
            a(j, p, h, i, k, l), r = (h + 1) | 0, g = 1;
            i - 1 > g;
            ++g, r += h
          )
            for (f = 1, s = r; h - 1 > f; ++f, ++s)
              (q = p[s]),
                ((-v > q &&
                  q < p[s - 1] &&
                  q < p[s + 1] &&
                  q < p[s - h] &&
                  q < p[s + h] &&
                  q < p[s - h - 1] &&
                  q < p[s + h - 1] &&
                  q < p[s - h + 1] &&
                  q < p[s + h + 1]) ||
                  (q > v &&
                    q > p[s - 1] &&
                    q > p[s + 1] &&
                    q > p[s - h] &&
                    q > p[s + h] &&
                    q > p[s - h - 1] &&
                    q > p[s + h - 1] &&
                    q > p[s - h + 1] &&
                    q > p[s + h + 1])) &&
                  ((t = b(j, s, q, k, l, m, n)),
                  t > w &&
                    ((e = d[u]),
                    (e.x = f),
                    (e.y = g),
                    (e.score = t),
                    ++u,
                    ++f,
                    ++s));
          return jsfeat.cache.put_buffer(o), u;
        },
      };
    })();
    a.yape06 = b;
  })(jsfeat),
  (function (a) {
    var b = (function () {
      var a = function (a, b, c) {
          var d,
            e,
            f = 0;
          for (d = c, e = 0; d > e; e++, f++)
            (d = (Math.sqrt(c * c - e * e) + 0.5) | 0), (b[f] = d + a * e);
          for (d--; e > d && d >= 0; d--, f++)
            (e = (Math.sqrt(c * c - d * d) + 0.5) | 0), (b[f] = d + a * e);
          for (; e > -d; d--, f++)
            (e = (Math.sqrt(c * c - d * d) + 0.5) | 0), (b[f] = d + a * e);
          for (e--; e >= 0; e--, f++)
            (d = (-Math.sqrt(c * c - e * e) - 0.5) | 0), (b[f] = d + a * e);
          for (; e > d; e--, f++)
            (d = (-Math.sqrt(c * c - e * e) - 0.5) | 0), (b[f] = d + a * e);
          for (d++; 0 >= d; d++, f++)
            (e = (-Math.sqrt(c * c - d * d) - 0.5) | 0), (b[f] = d + a * e);
          for (; -e > d; d++, f++)
            (e = (-Math.sqrt(c * c - d * d) - 0.5) | 0), (b[f] = d + a * e);
          for (e++; 0 > e; e++, f++)
            (d = (Math.sqrt(c * c - e * e) + 0.5) | 0), (b[f] = d + a * e);
          return (b[f] = b[0]), (b[f + 1] = b[1]), f;
        },
        b = function (a, b, c) {
          var d = 0;
          return (
            0 != a[b + 1] && d++,
            0 != a[b - 1] && d++,
            0 != a[b + c] && d++,
            0 != a[b + c + 1] && d++,
            0 != a[b + c - 1] && d++,
            0 != a[b - c] && d++,
            0 != a[b - c + 1] && d++,
            0 != a[b - c - 1] && d++,
            d
          );
        },
        c = function (a, b, c, d, e) {
          var f, g;
          if (c > 0)
            for (b -= d * e, g = -e; e >= g; ++g) {
              for (f = -e; e >= f; ++f) if (a[b + f] > c) return !1;
              b += d;
            }
          else
            for (b -= d * e, g = -e; e >= g; ++g) {
              for (f = -e; e >= f; ++f) if (a[b + f] < c) return !1;
              b += d;
            }
          return !0;
        },
        d = function (a, b, c, d, e, f, g, h) {
          var i = 0,
            j = 0,
            k = (g - 1) | 0,
            l = 0,
            m = 0,
            n = 0,
            o = 0,
            p = 0;
          if (((l = a[b + f[j]]), e >= l))
            if (l >= d)
              if (((m = a[b + f[k]]), e >= m)) {
                if (m >= d) return void (c[b] = 0);
                if ((k++, (n = a[b + f[k]]), n > e))
                  if ((k++, (o = a[b + f[k]]), o > e)) p = 3;
                  else {
                    if (!(d > o)) return void (c[b] = 0);
                    p = 6;
                  }
                else if ((k++, (o = a[b + f[k]]), o > e)) p = 7;
                else {
                  if (!(d > o)) return void (c[b] = 0);
                  p = 2;
                }
              } else if ((k++, (n = a[b + f[k]]), n > e))
                if ((k++, (o = a[b + f[k]]), o > e)) p = 3;
                else {
                  if (!(d > o)) return void (c[b] = 0);
                  p = 6;
                }
              else {
                if (!(d > n)) return void (c[b] = 0);
                if ((k++, (o = a[b + f[k]]), o > e)) p = 7;
                else {
                  if (!(d > o)) return void (c[b] = 0);
                  p = 2;
                }
              }
            else {
              if (((m = a[b + f[k]]), m > e)) return void (c[b] = 0);
              if ((k++, (n = a[b + f[k]]), n > e)) return void (c[b] = 0);
              if ((k++, (o = a[b + f[k]]), o > e)) return void (c[b] = 0);
              p = 1;
            }
          else {
            if (((m = a[b + f[k]]), d > m)) return void (c[b] = 0);
            if ((k++, (n = a[b + f[k]]), d > n)) return void (c[b] = 0);
            if ((k++, (o = a[b + f[k]]), d > o)) return void (c[b] = 0);
            p = 0;
          }
          for (j = 1; g >= j; j++)
            switch (((l = a[b + f[j]]), p)) {
              case 0:
                if (l > e) {
                  if (((n = o), k++, (o = a[b + f[k]]), d > o))
                    return void (c[b] = 0);
                  (i -= l + n), (p = 0);
                  break;
                }
                if (d > l) {
                  if (n > e) return void (c[b] = 0);
                  if (o > e) return void (c[b] = 0);
                  if (((n = o), k++, (o = a[b + f[k]]), o > e))
                    return void (c[b] = 0);
                  (i -= l + n), (p = 8);
                  break;
                }
                if (e >= n) return void (c[b] = 0);
                if (e >= o) return void (c[b] = 0);
                if (((n = o), k++, (o = a[b + f[k]]), o > e)) {
                  (i -= l + n), (p = 3);
                  break;
                }
                if (d > o) {
                  (i -= l + n), (p = 6);
                  break;
                }
                return void (c[b] = 0);
              case 1:
                if (d > l) {
                  if (((n = o), k++, (o = a[b + f[k]]), o > e))
                    return void (c[b] = 0);
                  (i -= l + n), (p = 1);
                  break;
                }
                if (l > e) {
                  if (d > n) return void (c[b] = 0);
                  if (d > o) return void (c[b] = 0);
                  if (((n = o), k++, (o = a[b + f[k]]), d > o))
                    return void (c[b] = 0);
                  (i -= l + n), (p = 9);
                  break;
                }
                if (n >= d) return void (c[b] = 0);
                if (o >= d) return void (c[b] = 0);
                if (((n = o), k++, (o = a[b + f[k]]), d > o)) {
                  (i -= l + n), (p = 2);
                  break;
                }
                if (o > e) {
                  (i -= l + n), (p = 7);
                  break;
                }
                return void (c[b] = 0);
              case 2:
                if (l > e) return void (c[b] = 0);
                if (((n = o), k++, (o = a[b + f[k]]), d > l)) {
                  if (o > e) return void (c[b] = 0);
                  (i -= l + n), (p = 4);
                  break;
                }
                if (o > e) {
                  (i -= l + n), (p = 7);
                  break;
                }
                if (d > o) {
                  (i -= l + n), (p = 2);
                  break;
                }
                return void (c[b] = 0);
              case 3:
                if (d > l) return void (c[b] = 0);
                if (((n = o), k++, (o = a[b + f[k]]), l > e)) {
                  if (d > o) return void (c[b] = 0);
                  (i -= l + n), (p = 5);
                  break;
                }
                if (o > e) {
                  (i -= l + n), (p = 3);
                  break;
                }
                if (d > o) {
                  (i -= l + n), (p = 6);
                  break;
                }
                return void (c[b] = 0);
              case 4:
                if (l > e) return void (c[b] = 0);
                if (d > l) {
                  if (((n = o), k++, (o = a[b + f[k]]), o > e))
                    return void (c[b] = 0);
                  (i -= l + n), (p = 1);
                  break;
                }
                if (o >= d) return void (c[b] = 0);
                if (((n = o), k++, (o = a[b + f[k]]), d > o)) {
                  (i -= l + n), (p = 2);
                  break;
                }
                if (o > e) {
                  (i -= l + n), (p = 7);
                  break;
                }
                return void (c[b] = 0);
              case 5:
                if (d > l) return void (c[b] = 0);
                if (l > e) {
                  if (((n = o), k++, (o = a[b + f[k]]), d > o))
                    return void (c[b] = 0);
                  (i -= l + n), (p = 0);
                  break;
                }
                if (e >= o) return void (c[b] = 0);
                if (((n = o), k++, (o = a[b + f[k]]), o > e)) {
                  (i -= l + n), (p = 3);
                  break;
                }
                if (d > o) {
                  (i -= l + n), (p = 6);
                  break;
                }
                return void (c[b] = 0);
              case 7:
                if (l > e) return void (c[b] = 0);
                if (d > l) return void (c[b] = 0);
                if (((n = o), k++, (o = a[b + f[k]]), o > e)) {
                  (i -= l + n), (p = 3);
                  break;
                }
                if (d > o) {
                  (i -= l + n), (p = 6);
                  break;
                }
                return void (c[b] = 0);
              case 6:
                if (l > e) return void (c[b] = 0);
                if (d > l) return void (c[b] = 0);
                if (((n = o), k++, (o = a[b + f[k]]), d > o)) {
                  (i -= l + n), (p = 2);
                  break;
                }
                if (o > e) {
                  (i -= l + n), (p = 7);
                  break;
                }
                return void (c[b] = 0);
              case 8:
                if (l > e) {
                  if (d > o) return void (c[b] = 0);
                  if (((n = o), k++, (o = a[b + f[k]]), d > o))
                    return void (c[b] = 0);
                  (i -= l + n), (p = 9);
                  break;
                }
                if (d > l) {
                  if (((n = o), k++, (o = a[b + f[k]]), o > e))
                    return void (c[b] = 0);
                  (i -= l + n), (p = 1);
                  break;
                }
                return void (c[b] = 0);
              case 9:
                if (d > l) {
                  if (o > e) return void (c[b] = 0);
                  if (((n = o), k++, (o = a[b + f[k]]), o > e))
                    return void (c[b] = 0);
                  (i -= l + n), (p = 8);
                  break;
                }
                if (l > e) {
                  if (((n = o), k++, (o = a[b + f[k]]), d > o))
                    return void (c[b] = 0);
                  (i -= l + n), (p = 0);
                  break;
                }
                return void (c[b] = 0);
            }
          c[b] = i + h * a[b];
        },
        e = (function () {
          function b(b, c, d) {
            (this.dirs = new Int32Array(1024)),
              (this.dirs_count = 0 | a(b, this.dirs, d)),
              (this.scores = new Int32Array(b * c)),
              (this.radius = 0 | d);
          }
          return b;
        })();
      return {
        level_tables: [],
        tau: 7,
        init: function (a, b, c, d) {
          "undefined" == typeof d && (d = 1);
          var f;
          for (c = Math.min(c, 7), c = Math.max(c, 3), f = 0; d > f; ++f)
            this.level_tables[f] = new e(a >> f, b >> f, c);
        },
        detect: function (a, e, f) {
          "undefined" == typeof f && (f = 4);
          var g,
            h = this.level_tables[0],
            i = 0 | h.radius,
            j = (i - 1) | 0,
            k = h.dirs,
            l = 0 | h.dirs_count,
            m = l >> 1,
            n = a.data,
            o = 0 | a.cols,
            p = 0 | a.rows,
            q = o >> 1,
            r = h.scores,
            s = 0,
            t = 0,
            u = 0,
            v = 0,
            w = 0,
            x = 0,
            y = 0,
            z = 0,
            A = 0 | this.tau,
            B = 0,
            C = 0 | Math.max(i + 1, f),
            D = 0 | Math.max(i + 1, f),
            E = 0 | Math.min(o - i - 2, o - f),
            F = 0 | Math.min(p - i - 2, p - f);
          for (u = (D * o + C) | 0, t = D; F > t; ++t, u += o)
            for (s = C, v = u; E > s; ++s, ++v)
              (w = n[v] + A),
                (x = n[v] - A),
                x < n[v + i] && n[v + i] < w && x < n[v - i] && n[v - i] < w
                  ? (r[v] = 0)
                  : d(n, v, r, x, w, k, m, l);
          for (u = (D * o + C) | 0, t = D; F > t; ++t, u += o)
            for (s = C, v = u; E > s; ++s, ++v)
              (z = r[v]),
                (y = Math.abs(z)),
                5 > y
                  ? (++s, ++v)
                  : b(r, v, o) >= 3 &&
                    c(r, v, z, q, i) &&
                    ((g = e[B]),
                    (g.x = s),
                    (g.y = t),
                    (g.score = y),
                    ++B,
                    (s += j),
                    (v += j));
          return B;
        },
      };
    })();
    a.yape = b;
  })(jsfeat),
  (function (a) {
    var b = (function () {
      var a = jsfeat.imgproc.scharr_derivatives;
      return {
        track: function (b, c, d, e, f, g, h, i, j, k) {
          "undefined" == typeof h && (h = 30),
            "undefined" == typeof i && (i = new Uint8Array(f)),
            "undefined" == typeof j && (j = 0.01),
            "undefined" == typeof k && (k = 1e-4);
          var l = 0.5 * (g - 1),
            m = (g * g) | 0,
            n = m << 1,
            o = b.data,
            p = c.data,
            q = o[0].data,
            r = p[0].data,
            s = o[0].cols,
            t = o[0].rows,
            u = 0,
            v = 0,
            w = jsfeat.cache.get_buffer(m << 2),
            x = jsfeat.cache.get_buffer(n << 2),
            y = jsfeat.cache.get_buffer((t * (s << 1)) << 2),
            z = w.i32,
            A = x.i32,
            B = y.i32,
            C = 0,
            D = 0,
            E = 0,
            F = 0,
            G = 0,
            H = 0,
            I = 0,
            J = 0,
            K = 0,
            L = 0,
            M = 0,
            N = 0,
            O = 0,
            P = 0,
            Q = 0,
            R = 0,
            S = 0,
            T = 0,
            U = 0,
            V = 0,
            W = 0,
            X = 0,
            Y = 0,
            Z = 0,
            $ = 0,
            _ = 0,
            ab = 0,
            bb = 0,
            cb = 0,
            db = 0,
            eb = 0,
            fb = 0,
            gb = 0,
            hb = 14,
            ib = 14,
            jb = ib - 5,
            kb = 1 << (jb - 1),
            lb = 1 << hb,
            mb = 1 << (ib - 1),
            nb = 1 / (1 << 20),
            ob = 0,
            pb = 0,
            qb = 0,
            rb = 0,
            sb = 0,
            tb = 0,
            ub = 0,
            vb = 0,
            wb = 0,
            xb = 0,
            yb = 0,
            zb = 0,
            Ab = 1.1920929e-7;
          for (j *= j; f > V; ++V) i[V] = 1;
          var Bb = (b.levels - 1) | 0;
          for (Z = Bb; Z >= 0; --Z)
            for (
              I = 1 / (1 << Z),
                u = s >> Z,
                v = t >> Z,
                C = u << 1,
                q = o[Z].data,
                r = p[Z].data,
                bb = (u - g) | 0,
                cb = (v - g) | 0,
                a(o[Z], B),
                $ = 0;
              f > $;
              ++$
            )
              if (
                ((V = $ << 1),
                (W = V + 1),
                (J = d[V] * I),
                (K = d[W] * I),
                Z == Bb ? ((L = J), (M = K)) : ((L = 2 * e[V]), (M = 2 * e[W])),
                (e[V] = L),
                (e[W] = M),
                (J -= l),
                (K -= l),
                (R = 0 | J),
                (S = 0 | K),
                (X = (ab >= R) | (R >= bb) | (ab >= S) | (S >= cb)),
                0 == X)
              ) {
                for (
                  db = J - R,
                    eb = K - S,
                    ob = ((1 - db) * (1 - eb) * lb + 0.5) | 0,
                    pb = (db * (1 - eb) * lb + 0.5) | 0,
                    qb = ((1 - db) * eb * lb + 0.5) | 0,
                    rb = lb - ob - pb - qb,
                    vb = 0,
                    wb = 0,
                    xb = 0,
                    Y = 0;
                  g > Y;
                  ++Y
                )
                  for (
                    D = ((Y + S) * u + R) | 0,
                      E = D << 1,
                      F = (Y * g) | 0,
                      G = F << 1,
                      X = 0;
                    g > X;
                    ++X, ++D, ++F, E += 2
                  )
                    (sb =
                      q[D] * ob +
                      q[D + 1] * pb +
                      q[D + u] * qb +
                      q[D + u + 1] * rb),
                      (sb = (sb + kb) >> jb),
                      (tb =
                        B[E] * ob +
                        B[E + 2] * pb +
                        B[E + C] * qb +
                        B[E + C + 2] * rb),
                      (tb = (tb + mb) >> ib),
                      (ub =
                        B[E + 1] * ob +
                        B[E + 3] * pb +
                        B[E + C + 1] * qb +
                        B[E + C + 3] * rb),
                      (ub = (ub + mb) >> ib),
                      (z[F] = sb),
                      (A[G++] = tb),
                      (A[G++] = ub),
                      (vb += tb * tb),
                      (wb += tb * ub),
                      (xb += ub * ub);
                if (
                  ((vb *= nb),
                  (wb *= nb),
                  (xb *= nb),
                  (yb = vb * xb - wb * wb),
                  (zb =
                    (xb + vb - Math.sqrt((vb - xb) * (vb - xb) + 4 * wb * wb)) /
                    n),
                  k > zb || Ab > yb)
                )
                  0 == Z && (i[$] = 0);
                else
                  for (
                    yb = 1 / yb, L -= l, M -= l, N = 0, O = 0, _ = 0;
                    h > _;
                    ++_
                  ) {
                    if (
                      ((T = 0 | L),
                      (U = 0 | M),
                      (X = (ab >= T) | (T >= bb) | (ab >= U) | (U >= cb)),
                      0 != X)
                    ) {
                      0 == Z && (i[$] = 0);
                      break;
                    }
                    for (
                      db = L - T,
                        eb = M - U,
                        ob = ((1 - db) * (1 - eb) * lb + 0.5) | 0,
                        pb = (db * (1 - eb) * lb + 0.5) | 0,
                        qb = ((1 - db) * eb * lb + 0.5) | 0,
                        rb = lb - ob - pb - qb,
                        fb = 0,
                        gb = 0,
                        Y = 0;
                      g > Y;
                      ++Y
                    )
                      for (
                        H = ((Y + U) * u + T) | 0,
                          F = (Y * g) | 0,
                          G = F << 1,
                          X = 0;
                        g > X;
                        ++X, ++H, ++F
                      )
                        (sb =
                          r[H] * ob +
                          r[H + 1] * pb +
                          r[H + u] * qb +
                          r[H + u + 1] * rb),
                          (sb = (sb + kb) >> jb),
                          (sb -= z[F]),
                          (fb += sb * A[G++]),
                          (gb += sb * A[G++]);
                    if (
                      ((fb *= nb),
                      (gb *= nb),
                      (P = (wb * gb - xb * fb) * yb),
                      (Q = (wb * fb - vb * gb) * yb),
                      (L += P),
                      (M += Q),
                      (e[V] = L + l),
                      (e[W] = M + l),
                      j >= P * P + Q * Q)
                    )
                      break;
                    if (
                      _ > 0 &&
                      Math.abs(P + N) < 0.01 &&
                      Math.abs(Q + O) < 0.01
                    ) {
                      (e[V] -= 0.5 * P), (e[W] -= 0.5 * Q);
                      break;
                    }
                    (N = P), (O = Q);
                  }
              } else 0 == Z && (i[$] = 0);
          jsfeat.cache.put_buffer(w),
            jsfeat.cache.put_buffer(x),
            jsfeat.cache.put_buffer(y);
        },
      };
    })();
    a.optical_flow_lk = b;
  })(jsfeat),
  (function (a) {
    var b = (function () {
      var a = function (a, b) {
        var c = (0.25 * a.width + 0.5) | 0;
        return (
          b.x <= a.x + c &&
          b.x >= a.x - c &&
          b.y <= a.y + c &&
          b.y >= a.y - c &&
          (b.width <= 1.5 * a.width + 0.5) | 0 &&
          (1.5 * b.width + 0.5) | (0 >= a.width)
        );
      };
      return {
        edges_density: 0.07,
        detect_single_scale: function (a, b, c, d, e, f, g, h) {
          var i,
            j,
            k,
            l,
            m,
            n,
            o,
            p,
            q,
            r,
            s,
            t,
            u,
            v,
            w,
            x,
            y,
            z,
            A,
            B,
            C,
            D,
            E,
            F,
            G,
            H,
            I = (h.size[0] * g) | 0,
            J = (h.size[1] * g) | 0,
            K = (0.5 * g + 1.5) | 0,
            L = K,
            M = (e - I) | 0,
            N = (f - J) | 0,
            O = (e + 1) | 0,
            P = 1 / (I * J),
            Q = !0,
            R = 0,
            S = I,
            T = J * O,
            U = T + I,
            V = (I * J * 255 * this.edges_density) | 0,
            W = [];
          for (m = 0; N > m; m += L)
            for (R = m * O, l = 0; M > l; l += K, R += K)
              if (
                ((o = a[R] - a[R + S] - a[R + T] + a[R + U]),
                d &&
                  ((n = d[R] - d[R + S] - d[R + T] + d[R + U]),
                  V > n || 20 > o))
              )
                (l += K), (R += K);
              else {
                for (
                  o *= P,
                    p = (b[R] - b[R + S] - b[R + T] + b[R + U]) * P - o * o,
                    q = p > 0 ? Math.sqrt(p) : 1,
                    r = h.complexClassifiers,
                    v = r.length,
                    Q = !0,
                    i = 0;
                  v > i;
                  ++i
                ) {
                  for (
                    s = r[i],
                      y = s.threshold,
                      t = s.simpleClassifiers,
                      w = t.length,
                      z = 0,
                      j = 0;
                    w > j;
                    ++j
                  ) {
                    if (
                      ((u = t[j]),
                      (A = 0),
                      (C = u.features),
                      (x = C.length),
                      1 === u.tilted)
                    )
                      for (k = 0; x > k; ++k)
                        (B = C[k]),
                          (D = ~~(l + B[0] * g) + ~~(m + B[1] * g) * O),
                          (G = ~~(B[2] * g)),
                          (H = ~~(B[3] * g)),
                          (E = G * O),
                          (F = H * O),
                          (A +=
                            (c[D] -
                              c[D + G + E] -
                              c[D - H + F] +
                              c[D + G - H + E + F]) *
                            B[4]);
                    else
                      for (k = 0; x > k; ++k)
                        (B = C[k]),
                          (D = ~~(l + B[0] * g) + ~~(m + B[1] * g) * O),
                          (G = ~~(B[2] * g)),
                          (H = ~~(B[3] * g)),
                          (F = H * O),
                          (A +=
                            (a[D] - a[D + G] - a[D + F] + a[D + F + G]) * B[4]);
                    z += A * P < u.threshold * q ? u.left_val : u.right_val;
                  }
                  if (y > z) {
                    Q = !1;
                    break;
                  }
                }
                Q &&
                  (W.push({
                    x: l,
                    y: m,
                    width: I,
                    height: J,
                    neighbor: 1,
                    confidence: z,
                  }),
                  (l += K),
                  (R += K));
              }
          return W;
        },
        detect_multi_scale: function (a, b, c, d, e, f, g, h, i) {
          "undefined" == typeof h && (h = 1.2),
            "undefined" == typeof i && (i = 1);
          for (
            var j = g.size[0], k = g.size[1], l = [];
            e > i * j && f > i * k;

          )
            (l = l.concat(this.detect_single_scale(a, b, c, d, e, f, i, g))),
              (i *= h);
          return l;
        },
        group_rectangles: function (b, c) {
          "undefined" == typeof c && (c = 1);
          var d,
            e,
            f = b.length,
            g = [];
          for (d = 0; f > d; ++d) g[d] = { parent: -1, element: b[d], rank: 0 };
          for (d = 0; f > d; ++d)
            if (g[d].element) {
              for (var h = d; -1 != g[h].parent; ) h = g[h].parent;
              for (e = 0; f > e; ++e)
                if (d != e && g[e].element && a(g[d].element, g[e].element)) {
                  for (var i = e; -1 != g[i].parent; ) i = g[i].parent;
                  if (i != h) {
                    g[h].rank > g[i].rank
                      ? (g[i].parent = h)
                      : ((g[h].parent = i),
                        g[h].rank == g[i].rank && g[i].rank++,
                        (h = i));
                    for (var j, k = e; -1 != g[k].parent; )
                      (j = k), (k = g[k].parent), (g[j].parent = h);
                    for (k = d; -1 != g[k].parent; )
                      (j = k), (k = g[k].parent), (g[j].parent = h);
                  }
                }
            }
          var l = [],
            m = 0;
          for (d = 0; f > d; d++) {
            e = -1;
            var n = d;
            if (g[n].element) {
              for (; -1 != g[n].parent; ) n = g[n].parent;
              g[n].rank >= 0 && (g[n].rank = ~m++), (e = ~g[n].rank);
            }
            l[d] = e;
          }
          var o = [];
          for (d = 0; m + 1 > d; ++d)
            o[d] = {
              neighbors: 0,
              x: 0,
              y: 0,
              width: 0,
              height: 0,
              confidence: 0,
            };
          for (d = 0; f > d; ++d) {
            var p = b[d],
              q = l[d];
            0 == o[q].neighbors && (o[q].confidence = p.confidence),
              ++o[q].neighbors,
              (o[q].x += p.x),
              (o[q].y += p.y),
              (o[q].width += p.width),
              (o[q].height += p.height),
              (o[q].confidence = Math.max(o[q].confidence, p.confidence));
          }
          var r = [];
          for (d = 0; m > d; ++d)
            (f = o[d].neighbors),
              f >= c &&
                r.push({
                  x: (2 * o[d].x + f) / (2 * f),
                  y: (2 * o[d].y + f) / (2 * f),
                  width: (2 * o[d].width + f) / (2 * f),
                  height: (2 * o[d].height + f) / (2 * f),
                  neighbors: o[d].neighbors,
                  confidence: o[d].confidence,
                });
          var s = [];
          for (f = r.length, d = 0; f > d; ++d) {
            var p = r[d],
              t = !0;
            for (e = 0; f > e; ++e) {
              var u = r[e],
                v = (0.25 * u.width + 0.5) | 0;
              if (
                d != e &&
                p.x >= u.x - v &&
                p.y >= u.y - v &&
                p.x + p.width <= u.x + u.width + v &&
                p.y + p.height <= u.y + u.height + v &&
                (u.neighbors > Math.max(3, p.neighbors) || p.neighbors < 3)
              ) {
                t = !1;
                break;
              }
            }
            t && s.push(p);
          }
          return s;
        },
      };
    })();
    a.haar = b;
  })(jsfeat),
  (function (a) {
    var b = (function () {
      var a = function (a, b) {
        var c = (0.25 * a.width + 0.5) | 0;
        return (
          b.x <= a.x + c &&
          b.x >= a.x - c &&
          b.y <= a.y + c &&
          b.y >= a.y - c &&
          (b.width <= 1.5 * a.width + 0.5) | 0 &&
          (1.5 * b.width + 0.5) | (0 >= a.width)
        );
      };
      return {
        interval: 4,
        scale: 1.1486,
        next: 5,
        scale_to: 1,
        prepare_cascade: function (a) {
          for (var b = a.stage_classifier.length, c = 0; b > c; c++)
            for (
              var d = a.stage_classifier[c].feature,
                e = a.stage_classifier[c].count,
                f = (a.stage_classifier[c]._feature = new Array(e)),
                g = 0;
              e > g;
              g++
            )
              f[g] = {
                size: d[g].size,
                px: new Array(d[g].size),
                pz: new Array(d[g].size),
                nx: new Array(d[g].size),
                nz: new Array(d[g].size),
              };
        },
        build_pyramid: function (a, b, c, d, e) {
          if (
            ("undefined" == typeof d && (d = 4),
            "undefined" == typeof e && (e = !0),
            e)
          ) {
            var f = a.getContext("2d"),
              g = a.width * a.height,
              h = f.getImageData(0, 0, a.width, a.height),
              i = h.data,
              j = new Uint32Array(i.buffer),
              k = jsfeat.cache.get_buffer(g),
              l = k.u8;
            jsfeat.imgproc.grayscale(i, l);
            for (var m = 255 << 24, n = g, o = 0; --n >= 0; )
              (o = l[n]), (j[n] = m | (o << 16) | (o << 8) | o);
            f.putImageData(h, 0, 0), jsfeat.cache.put_buffer(k);
          }
          (this.interval = d),
            (this.scale = Math.pow(2, 1 / (this.interval + 1))),
            (this.next = (this.interval + 1) | 0),
            (this.scale_to =
              (Math.log(Math.min(a.width / b, a.height / c)) /
                Math.log(this.scale)) |
              0);
          var p = document.createElement("canvas");
          (p.width = a.width), (p.height = a.height);
          var q = p.getContext("2d"),
            r = new Array(4 * (this.scale_to + 2 * this.next));
          r[0] = {
            width: a.width,
            height: a.height,
            data: a.getContext("2d").getImageData(0, 0, a.width, a.height).data,
          };
          var s, t;
          for (n = 1; n <= this.interval; ++n)
            (s = (a.width / Math.pow(this.scale, n)) | 0),
              (t = (a.height / Math.pow(this.scale, n)) | 0),
              q.drawImage(a, 0, 0, a.width, a.height, 0, 0, s, t),
              (r[4 * n] = {
                width: s,
                height: t,
                data: q.getImageData(0, 0, s, t).data,
              });
          for (n = this.next; n < this.scale_to + 2 * this.next; ++n)
            (s = r[4 * n - 4 * this.next].width >> 1),
              (t = r[4 * n - 4 * this.next].height >> 1),
              q.drawImage(a, 0, 0, a.width, a.height, 0, 0, s, t),
              (r[4 * n] = {
                width: s,
                height: t,
                data: q.getImageData(0, 0, s, t).data,
              });
          for (n = 2 * this.next; n < this.scale_to + 2 * this.next; ++n)
            (s = r[4 * n - 4 * this.next].width >> 1),
              (t = r[4 * n - 4 * this.next].height >> 1),
              q.drawImage(a, 1, 0, a.width - 1, a.height, 0, 0, s - 2, t),
              (r[4 * n + 1] = {
                width: s,
                height: t,
                data: q.getImageData(0, 0, s, t).data,
              }),
              q.drawImage(a, 0, 1, a.width, a.height - 1, 0, 0, s, t - 2),
              (r[4 * n + 2] = {
                width: s,
                height: t,
                data: q.getImageData(0, 0, s, t).data,
              }),
              q.drawImage(
                a,
                1,
                1,
                a.width - 1,
                a.height - 1,
                0,
                0,
                s - 2,
                t - 2
              ),
              (r[4 * n + 3] = {
                width: s,
                height: t,
                data: q.getImageData(0, 0, s, t).data,
              });
          return r;
        },
        detect: function (a, b) {
          var c,
            d,
            e,
            f,
            g,
            h = (this.interval, this.scale),
            i = this.next,
            j = this.scale_to,
            k = 0,
            l = 0,
            m = 0,
            n = 0,
            o = 0,
            p = 0,
            q = 0,
            r = 0,
            s = 0,
            t = 0,
            u = 0,
            v = 0,
            w = 0,
            x = 0,
            y = 0,
            z = 0,
            A = 0,
            B = 0,
            C = !0,
            D = !0,
            E = 1,
            F = 1,
            G = [0, 1, 0, 1],
            H = [0, 0, 1, 1],
            I = [],
            J = [],
            K = [0, 0, 0],
            L = [0, 0, 0],
            M = [0, 0, 0];
          for (k = 0; j > k; k++) {
            for (
              y = k << 2,
                z = a[y + (i << 3)].width - (b.width >> 2),
                A = a[y + (i << 3)].height - (b.height >> 2),
                L[0] = a[y].width << 2,
                L[1] = a[y + (i << 2)].width << 2,
                L[2] = a[y + (i << 3)].width << 2,
                M[0] = (a[y].width << 4) - (z << 4),
                M[1] = (a[y + (i << 2)].width << 3) - (z << 3),
                M[2] = (a[y + (i << 3)].width << 2) - (z << 2),
                r = b.stage_classifier.length,
                l = 0;
              r > l;
              l++
            )
              for (
                e = b.stage_classifier[l].feature,
                  d = b.stage_classifier[l]._feature,
                  s = b.stage_classifier[l].count,
                  m = 0;
                s > m;
                m++
              )
                for (f = d[m], g = e[m], t = 0 | g.size, q = 0; t > q; q++)
                  (f.px[q] = (g.px[q] << 2) + g.py[q] * L[g.pz[q]]),
                    (f.pz[q] = g.pz[q]),
                    (f.nx[q] = (g.nx[q] << 2) + g.ny[q] * L[g.nz[q]]),
                    (f.nz[q] = g.nz[q]);
            for (
              J[0] = a[y].data, J[1] = a[y + (i << 2)].data, q = 0;
              4 > q;
              q++
            )
              for (
                J[2] = a[y + (i << 3) + q].data,
                  K[0] = (G[q] << 3) + H[q] * (a[y].width << 3),
                  K[1] = (G[q] << 2) + H[q] * (a[y + (i << 2)].width << 2),
                  K[2] = 0,
                  p = 0;
                A > p;
                p++
              ) {
                for (o = 0; z > o; o++) {
                  for (
                    B = 0, C = !0, r = b.stage_classifier.length, l = 0;
                    r > l;
                    l++
                  ) {
                    for (
                      B = 0,
                        c = b.stage_classifier[l].alpha,
                        d = b.stage_classifier[l]._feature,
                        s = b.stage_classifier[l].count,
                        m = 0;
                      s > m;
                      m++
                    )
                      if (
                        ((f = d[m]),
                        (v = J[f.pz[0]][K[f.pz[0]] + f.px[0]]),
                        (w = J[f.nz[0]][K[f.nz[0]] + f.nx[0]]),
                        w >= v)
                      )
                        B += c[m << 1];
                      else {
                        for (D = !0, t = f.size, x = 0; t > x; x++) {
                          if (
                            f.pz[x] >= 0 &&
                            ((u = J[f.pz[x]][K[f.pz[x]] + f.px[x]]), v > u)
                          ) {
                            if (w >= u) {
                              D = !1;
                              break;
                            }
                            v = u;
                          }
                          if (
                            f.nz[x] >= 0 &&
                            ((n = J[f.nz[x]][K[f.nz[x]] + f.nx[x]]), n > w)
                          ) {
                            if (n >= v) {
                              D = !1;
                              break;
                            }
                            w = n;
                          }
                        }
                        B += D ? c[(m << 1) + 1] : c[m << 1];
                      }
                    if (B < b.stage_classifier[l].threshold) {
                      C = !1;
                      break;
                    }
                  }
                  C &&
                    I.push({
                      x: (4 * o + 2 * G[q]) * E,
                      y: (4 * p + 2 * H[q]) * F,
                      width: b.width * E,
                      height: b.height * F,
                      neighbor: 1,
                      confidence: B,
                    }),
                    (K[0] += 16),
                    (K[1] += 8),
                    (K[2] += 4);
                }
                (K[0] += M[0]), (K[1] += M[1]), (K[2] += M[2]);
              }
            (E *= h), (F *= h);
          }
          return I;
        },
        group_rectangles: function (b, c) {
          "undefined" == typeof c && (c = 1);
          var d,
            e,
            f = b.length,
            g = [];
          for (d = 0; f > d; ++d) g[d] = { parent: -1, element: b[d], rank: 0 };
          for (d = 0; f > d; ++d)
            if (g[d].element) {
              for (var h = d; -1 != g[h].parent; ) h = g[h].parent;
              for (e = 0; f > e; ++e)
                if (d != e && g[e].element && a(g[d].element, g[e].element)) {
                  for (var i = e; -1 != g[i].parent; ) i = g[i].parent;
                  if (i != h) {
                    g[h].rank > g[i].rank
                      ? (g[i].parent = h)
                      : ((g[h].parent = i),
                        g[h].rank == g[i].rank && g[i].rank++,
                        (h = i));
                    for (var j, k = e; -1 != g[k].parent; )
                      (j = k), (k = g[k].parent), (g[j].parent = h);
                    for (k = d; -1 != g[k].parent; )
                      (j = k), (k = g[k].parent), (g[j].parent = h);
                  }
                }
            }
          var l = [],
            m = 0;
          for (d = 0; f > d; d++) {
            e = -1;
            var n = d;
            if (g[n].element) {
              for (; -1 != g[n].parent; ) n = g[n].parent;
              g[n].rank >= 0 && (g[n].rank = ~m++), (e = ~g[n].rank);
            }
            l[d] = e;
          }
          var o = [];
          for (d = 0; m + 1 > d; ++d)
            o[d] = {
              neighbors: 0,
              x: 0,
              y: 0,
              width: 0,
              height: 0,
              confidence: 0,
            };
          for (d = 0; f > d; ++d) {
            var p = b[d],
              q = l[d];
            0 == o[q].neighbors && (o[q].confidence = p.confidence),
              ++o[q].neighbors,
              (o[q].x += p.x),
              (o[q].y += p.y),
              (o[q].width += p.width),
              (o[q].height += p.height),
              (o[q].confidence = Math.max(o[q].confidence, p.confidence));
          }
          var r = [];
          for (d = 0; m > d; ++d)
            (f = o[d].neighbors),
              f >= c &&
                r.push({
                  x: (2 * o[d].x + f) / (2 * f),
                  y: (2 * o[d].y + f) / (2 * f),
                  width: (2 * o[d].width + f) / (2 * f),
                  height: (2 * o[d].height + f) / (2 * f),
                  neighbors: o[d].neighbors,
                  confidence: o[d].confidence,
                });
          var s = [];
          for (f = r.length, d = 0; f > d; ++d) {
            var p = r[d],
              t = !0;
            for (e = 0; f > e; ++e) {
              var u = r[e],
                v = (0.25 * u.width + 0.5) | 0;
              if (
                d != e &&
                p.x >= u.x - v &&
                p.y >= u.y - v &&
                p.x + p.width <= u.x + u.width + v &&
                p.y + p.height <= u.y + u.height + v &&
                (u.neighbors > Math.max(3, p.neighbors) || p.neighbors < 3)
              ) {
                t = !1;
                break;
              }
            }
            t && s.push(p);
          }
          return s;
        },
      };
    })();
    a.bbf = b;
  })(jsfeat),
  (function (a) {
    a.frontalface = {
      complexClassifiers: [
        {
          simpleClassifiers: [
            {
              features: [
                [3, 7, 14, 4, -1],
                [3, 9, 14, 2, 2],
              ],
              threshold: 0.004014195874333382,
              right_val: 0.8378106951713562,
              left_val: 0.0337941907346249,
            },
            {
              features: [
                [1, 2, 18, 4, -1],
                [7, 2, 6, 4, 3],
              ],
              threshold: 0.0151513395830989,
              right_val: 0.7488812208175659,
              left_val: 0.1514132022857666,
            },
            {
              features: [
                [1, 7, 15, 9, -1],
                [1, 10, 15, 3, 3],
              ],
              threshold: 0.004210993181914091,
              right_val: 0.6374819874763489,
              left_val: 0.0900492817163467,
            },
          ],
          threshold: 0.822689414024353,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [5, 6, 2, 6, -1],
                [5, 9, 2, 3, 2],
              ],
              threshold: 0.0016227109590545297,
              right_val: 0.7110946178436279,
              left_val: 0.0693085864186287,
            },
            {
              features: [
                [7, 5, 6, 3, -1],
                [9, 5, 2, 3, 3],
              ],
              threshold: 0.002290664939209819,
              right_val: 0.6668692231178284,
              left_val: 0.1795803010463715,
            },
            {
              features: [
                [4, 0, 12, 9, -1],
                [4, 3, 12, 3, 3],
              ],
              threshold: 0.005002570804208517,
              right_val: 0.6554006934165955,
              left_val: 0.1693672984838486,
            },
            {
              features: [
                [6, 9, 10, 8, -1],
                [6, 13, 10, 4, 2],
              ],
              threshold: 0.007965989410877228,
              right_val: 0.0914145186543465,
              left_val: 0.5866332054138184,
            },
            {
              features: [
                [3, 6, 14, 8, -1],
                [3, 10, 14, 4, 2],
              ],
              threshold: -0.003522701095789671,
              right_val: 0.6031895875930786,
              left_val: 0.1413166970014572,
            },
            {
              features: [
                [14, 1, 6, 10, -1],
                [14, 1, 3, 10, 2],
              ],
              threshold: 0.0366676896810532,
              right_val: 0.7920318245887756,
              left_val: 0.3675672113895416,
            },
            {
              features: [
                [7, 8, 5, 12, -1],
                [7, 12, 5, 4, 3],
              ],
              threshold: 0.009336147457361221,
              right_val: 0.2088509947061539,
              left_val: 0.6161385774612427,
            },
            {
              features: [
                [1, 1, 18, 3, -1],
                [7, 1, 6, 3, 3],
              ],
              threshold: 0.008696131408214569,
              right_val: 0.6360273957252502,
              left_val: 0.2836230993270874,
            },
            {
              features: [
                [1, 8, 17, 2, -1],
                [1, 9, 17, 1, 2],
              ],
              threshold: 0.0011488880263641477,
              right_val: 0.5800700783729553,
              left_val: 0.2223580926656723,
            },
            {
              features: [
                [16, 6, 4, 2, -1],
                [16, 7, 4, 1, 2],
              ],
              threshold: -0.002148468978703022,
              right_val: 0.5787054896354675,
              left_val: 0.2406464070081711,
            },
            {
              features: [
                [5, 17, 2, 2, -1],
                [5, 18, 2, 1, 2],
              ],
              threshold: 0.002121906029060483,
              right_val: 0.136223703622818,
              left_val: 0.5559654831886292,
            },
            {
              features: [
                [14, 2, 6, 12, -1],
                [14, 2, 3, 12, 2],
              ],
              threshold: -0.0939491465687752,
              right_val: 0.4717740118503571,
              left_val: 0.8502737283706665,
            },
            {
              features: [
                [4, 0, 4, 12, -1],
                [4, 0, 2, 6, 2],
                [6, 6, 2, 6, 2],
              ],
              threshold: 0.0013777789426967502,
              right_val: 0.2834529876708984,
              left_val: 0.5993673801422119,
            },
            {
              features: [
                [2, 11, 18, 8, -1],
                [8, 11, 6, 8, 3],
              ],
              threshold: 0.0730631574988365,
              right_val: 0.7060034275054932,
              left_val: 0.4341886043548584,
            },
            {
              features: [
                [5, 7, 10, 2, -1],
                [5, 8, 10, 1, 2],
              ],
              threshold: 0.00036767389974556863,
              right_val: 0.6051574945449829,
              left_val: 0.3027887940406799,
            },
            {
              features: [
                [15, 11, 5, 3, -1],
                [15, 12, 5, 1, 3],
              ],
              threshold: -0.0060479710809886456,
              right_val: 0.5675256848335266,
              left_val: 0.17984339594841,
            },
          ],
          threshold: 6.956608772277832,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [5, 3, 10, 9, -1],
                [5, 6, 10, 3, 3],
              ],
              threshold: -0.0165106896311045,
              right_val: 0.1424857974052429,
              left_val: 0.6644225120544434,
            },
            {
              features: [
                [9, 4, 2, 14, -1],
                [9, 11, 2, 7, 2],
              ],
              threshold: 0.002705249935388565,
              right_val: 0.1288477033376694,
              left_val: 0.6325352191925049,
            },
            {
              features: [
                [3, 5, 4, 12, -1],
                [3, 9, 4, 4, 3],
              ],
              threshold: 0.002806986914947629,
              right_val: 0.6193193197250366,
              left_val: 0.1240288019180298,
            },
            {
              features: [
                [4, 5, 12, 5, -1],
                [8, 5, 4, 5, 3],
              ],
              threshold: -0.0015402400167658925,
              right_val: 0.5670015811920166,
              left_val: 0.1432143002748489,
            },
            {
              features: [
                [5, 6, 10, 8, -1],
                [5, 10, 10, 4, 2],
              ],
              threshold: -0.0005638627917505801,
              right_val: 0.5905207991600037,
              left_val: 0.1657433062791824,
            },
            {
              features: [
                [8, 0, 6, 9, -1],
                [8, 3, 6, 3, 3],
              ],
              threshold: 0.0019253729842603207,
              right_val: 0.5738824009895325,
              left_val: 0.2695507109165192,
            },
            {
              features: [
                [9, 12, 1, 8, -1],
                [9, 16, 1, 4, 2],
              ],
              threshold: -0.005021484103053808,
              right_val: 0.5782774090766907,
              left_val: 0.1893538981676102,
            },
            {
              features: [
                [0, 7, 20, 6, -1],
                [0, 9, 20, 2, 3],
              ],
              threshold: 0.0026365420781075954,
              right_val: 0.5695425868034363,
              left_val: 0.2309329062700272,
            },
            {
              features: [
                [7, 0, 6, 17, -1],
                [9, 0, 2, 17, 3],
              ],
              threshold: -0.0015127769438549876,
              right_val: 0.5956642031669617,
              left_val: 0.2759602069854736,
            },
            {
              features: [
                [9, 0, 6, 4, -1],
                [11, 0, 2, 4, 3],
              ],
              threshold: -0.0101574398577213,
              right_val: 0.5522047281265259,
              left_val: 0.1732538044452667,
            },
            {
              features: [
                [5, 1, 6, 4, -1],
                [7, 1, 2, 4, 3],
              ],
              threshold: -0.011953660286963,
              right_val: 0.5559014081954956,
              left_val: 0.1339409947395325,
            },
            {
              features: [
                [12, 1, 6, 16, -1],
                [14, 1, 2, 16, 3],
              ],
              threshold: 0.004885949194431305,
              right_val: 0.6188849210739136,
              left_val: 0.3628703951835632,
            },
            {
              features: [
                [0, 5, 18, 8, -1],
                [0, 5, 9, 4, 2],
                [9, 9, 9, 4, 2],
              ],
              threshold: -0.0801329165697098,
              right_val: 0.5475944876670837,
              left_val: 0.0912110507488251,
            },
            {
              features: [
                [8, 15, 10, 4, -1],
                [13, 15, 5, 2, 2],
                [8, 17, 5, 2, 2],
              ],
              threshold: 0.0010643280111253262,
              right_val: 0.5711399912834167,
              left_val: 0.3715142905712128,
            },
            {
              features: [
                [3, 1, 4, 8, -1],
                [3, 1, 2, 4, 2],
                [5, 5, 2, 4, 2],
              ],
              threshold: -0.0013419450260698795,
              right_val: 0.331809788942337,
              left_val: 0.5953313708305359,
            },
            {
              features: [
                [3, 6, 14, 10, -1],
                [10, 6, 7, 5, 2],
                [3, 11, 7, 5, 2],
              ],
              threshold: -0.0546011403203011,
              right_val: 0.5602846145629883,
              left_val: 0.1844065934419632,
            },
            {
              features: [
                [2, 1, 6, 16, -1],
                [4, 1, 2, 16, 3],
              ],
              threshold: 0.0029071690514683723,
              right_val: 0.6131715178489685,
              left_val: 0.3594244122505188,
            },
            {
              features: [
                [0, 18, 20, 2, -1],
                [0, 19, 20, 1, 2],
              ],
              threshold: 0.0007471871795132756,
              right_val: 0.3459562957286835,
              left_val: 0.5994353294372559,
            },
            {
              features: [
                [8, 13, 4, 3, -1],
                [8, 14, 4, 1, 3],
              ],
              threshold: 0.004301380831748247,
              right_val: 0.6990845203399658,
              left_val: 0.4172652065753937,
            },
            {
              features: [
                [9, 14, 2, 3, -1],
                [9, 15, 2, 1, 3],
              ],
              threshold: 0.004501757211983204,
              right_val: 0.7801457047462463,
              left_val: 0.4509715139865875,
            },
            {
              features: [
                [0, 12, 9, 6, -1],
                [0, 14, 9, 2, 3],
              ],
              threshold: 0.0241385009139776,
              right_val: 0.1319826990365982,
              left_val: 0.5438212752342224,
            },
          ],
          threshold: 9.498542785644531,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [5, 7, 3, 4, -1],
                [5, 9, 3, 2, 2],
              ],
              threshold: 0.001921223010867834,
              right_val: 0.6199870705604553,
              left_val: 0.1415266990661621,
            },
            {
              features: [
                [9, 3, 2, 16, -1],
                [9, 11, 2, 8, 2],
              ],
              threshold: -0.00012748669541906565,
              right_val: 0.1884928941726685,
              left_val: 0.6191074252128601,
            },
            {
              features: [
                [3, 6, 13, 8, -1],
                [3, 10, 13, 4, 2],
              ],
              threshold: 0.0005140993162058294,
              right_val: 0.5857927799224854,
              left_val: 0.1487396955490112,
            },
            {
              features: [
                [12, 3, 8, 2, -1],
                [12, 3, 4, 2, 2],
              ],
              threshold: 0.004187860991805792,
              right_val: 0.6359239816665649,
              left_val: 0.2746909856796265,
            },
            {
              features: [
                [8, 8, 4, 12, -1],
                [8, 12, 4, 4, 3],
              ],
              threshold: 0.005101571790874004,
              right_val: 0.2175628989934921,
              left_val: 0.5870851278305054,
            },
            {
              features: [
                [11, 3, 8, 6, -1],
                [15, 3, 4, 3, 2],
                [11, 6, 4, 3, 2],
              ],
              threshold: -0.002144844038411975,
              right_val: 0.2979590892791748,
              left_val: 0.5880944728851318,
            },
            {
              features: [
                [7, 1, 6, 19, -1],
                [9, 1, 2, 19, 3],
              ],
              threshold: -0.0028977119363844395,
              right_val: 0.5876647233963013,
              left_val: 0.2373327016830444,
            },
            {
              features: [
                [9, 0, 6, 4, -1],
                [11, 0, 2, 4, 3],
              ],
              threshold: -0.0216106791049242,
              right_val: 0.5194202065467834,
              left_val: 0.1220654994249344,
            },
            {
              features: [
                [3, 1, 9, 3, -1],
                [6, 1, 3, 3, 3],
              ],
              threshold: -0.004629931878298521,
              right_val: 0.5817409157752991,
              left_val: 0.263123095035553,
            },
            {
              features: [
                [8, 15, 10, 4, -1],
                [13, 15, 5, 2, 2],
                [8, 17, 5, 2, 2],
              ],
              threshold: 0.000593937118537724,
              right_val: 0.5698544979095459,
              left_val: 0.363862007856369,
            },
            {
              features: [
                [0, 3, 6, 10, -1],
                [3, 3, 3, 10, 2],
              ],
              threshold: 0.0538786612451077,
              right_val: 0.7559366226196289,
              left_val: 0.4303531050682068,
            },
            {
              features: [
                [3, 4, 15, 15, -1],
                [3, 9, 15, 5, 3],
              ],
              threshold: 0.0018887349870055914,
              right_val: 0.561342716217041,
              left_val: 0.2122603058815002,
            },
            {
              features: [
                [6, 5, 8, 6, -1],
                [6, 7, 8, 2, 3],
              ],
              threshold: -0.0023635339457541704,
              right_val: 0.2642767131328583,
              left_val: 0.563184916973114,
            },
            {
              features: [
                [4, 4, 12, 10, -1],
                [10, 4, 6, 5, 2],
                [4, 9, 6, 5, 2],
              ],
              threshold: 0.0240177996456623,
              right_val: 0.2751705944538117,
              left_val: 0.5797107815742493,
            },
            {
              features: [
                [6, 4, 4, 4, -1],
                [8, 4, 2, 4, 2],
              ],
              threshold: 0.00020543030404951423,
              right_val: 0.575256884098053,
              left_val: 0.2705242037773132,
            },
            {
              features: [
                [15, 11, 1, 2, -1],
                [15, 12, 1, 1, 2],
              ],
              threshold: 0.0008479019743390381,
              right_val: 0.2334876954555512,
              left_val: 0.5435624718666077,
            },
            {
              features: [
                [3, 11, 2, 2, -1],
                [3, 12, 2, 1, 2],
              ],
              threshold: 0.0014091329649090767,
              right_val: 0.2063155025243759,
              left_val: 0.5319424867630005,
            },
            {
              features: [
                [16, 11, 1, 3, -1],
                [16, 12, 1, 1, 3],
              ],
              threshold: 0.0014642629539594054,
              right_val: 0.3068861067295075,
              left_val: 0.5418980717658997,
            },
            {
              features: [
                [3, 15, 6, 4, -1],
                [3, 15, 3, 2, 2],
                [6, 17, 3, 2, 2],
              ],
              threshold: 0.0016352549428120255,
              right_val: 0.6112868189811707,
              left_val: 0.3695372939109802,
            },
            {
              features: [
                [6, 7, 8, 2, -1],
                [6, 8, 8, 1, 2],
              ],
              threshold: 0.0008317275205627084,
              right_val: 0.6025236248970032,
              left_val: 0.3565036952495575,
            },
            {
              features: [
                [3, 11, 1, 3, -1],
                [3, 12, 1, 1, 3],
              ],
              threshold: -0.0020998890977352858,
              right_val: 0.5362827181816101,
              left_val: 0.1913982033729553,
            },
            {
              features: [
                [6, 0, 12, 2, -1],
                [6, 1, 12, 1, 2],
              ],
              threshold: -0.0007421398186124861,
              right_val: 0.552931010723114,
              left_val: 0.3835555016994476,
            },
            {
              features: [
                [9, 14, 2, 3, -1],
                [9, 15, 2, 1, 3],
              ],
              threshold: 0.0032655049581080675,
              right_val: 0.7101895809173584,
              left_val: 0.4312896132469177,
            },
            {
              features: [
                [7, 15, 6, 2, -1],
                [7, 16, 6, 1, 2],
              ],
              threshold: 0.0008913499186746776,
              right_val: 0.6391963958740234,
              left_val: 0.3984830975532532,
            },
            {
              features: [
                [0, 5, 4, 6, -1],
                [0, 7, 4, 2, 3],
              ],
              threshold: -0.0152841797098517,
              right_val: 0.5433713793754578,
              left_val: 0.2366732954978943,
            },
            {
              features: [
                [4, 12, 12, 2, -1],
                [8, 12, 4, 2, 3],
              ],
              threshold: 0.004838141147047281,
              right_val: 0.3239189088344574,
              left_val: 0.5817500948905945,
            },
            {
              features: [
                [6, 3, 1, 9, -1],
                [6, 6, 1, 3, 3],
              ],
              threshold: -0.0009109317907132208,
              right_val: 0.2911868989467621,
              left_val: 0.5540593862533569,
            },
            {
              features: [
                [10, 17, 3, 2, -1],
                [11, 17, 1, 2, 3],
              ],
              threshold: -0.006127506028860807,
              right_val: 0.5196629166603088,
              left_val: 0.1775255054235458,
            },
            {
              features: [
                [9, 9, 2, 2, -1],
                [9, 10, 2, 1, 2],
              ],
              threshold: -0.00044576259097084403,
              right_val: 0.5533593893051147,
              left_val: 0.3024170100688934,
            },
            {
              features: [
                [7, 6, 6, 4, -1],
                [9, 6, 2, 4, 3],
              ],
              threshold: 0.0226465407758951,
              right_val: 0.6975377202033997,
              left_val: 0.4414930939674377,
            },
            {
              features: [
                [7, 17, 3, 2, -1],
                [8, 17, 1, 2, 3],
              ],
              threshold: -0.0018804960418492556,
              right_val: 0.5497952103614807,
              left_val: 0.2791394889354706,
            },
            {
              features: [
                [10, 17, 3, 3, -1],
                [11, 17, 1, 3, 3],
              ],
              threshold: 0.007088910788297653,
              right_val: 0.2385547012090683,
              left_val: 0.5263199210166931,
            },
            {
              features: [
                [8, 12, 3, 2, -1],
                [8, 13, 3, 1, 2],
              ],
              threshold: 0.0017318050377070904,
              right_val: 0.6983600854873657,
              left_val: 0.4319379031658173,
            },
            {
              features: [
                [9, 3, 6, 2, -1],
                [11, 3, 2, 2, 3],
              ],
              threshold: -0.006848270073533058,
              right_val: 0.5390920042991638,
              left_val: 0.3082042932510376,
            },
            {
              features: [
                [3, 11, 14, 4, -1],
                [3, 13, 14, 2, 2],
              ],
              threshold: -15062530110299122e-21,
              right_val: 0.3120366036891937,
              left_val: 0.552192211151123,
            },
            {
              features: [
                [1, 10, 18, 4, -1],
                [10, 10, 9, 2, 2],
                [1, 12, 9, 2, 2],
              ],
              threshold: 0.0294755697250366,
              right_val: 0.1770603060722351,
              left_val: 0.5401322841644287,
            },
            {
              features: [
                [0, 10, 3, 3, -1],
                [0, 11, 3, 1, 3],
              ],
              threshold: 0.008138732984662056,
              right_val: 0.121101900935173,
              left_val: 0.5178617835044861,
            },
            {
              features: [
                [9, 1, 6, 6, -1],
                [11, 1, 2, 6, 3],
              ],
              threshold: 0.0209429506212473,
              right_val: 0.3311221897602081,
              left_val: 0.5290294289588928,
            },
            {
              features: [
                [8, 7, 3, 6, -1],
                [9, 7, 1, 6, 3],
              ],
              threshold: -0.009566552937030792,
              right_val: 0.4451968967914581,
              left_val: 0.7471994161605835,
            },
          ],
          threshold: 18.4129695892334,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [1, 0, 18, 9, -1],
                [1, 3, 18, 3, 3],
              ],
              threshold: -0.00028206960996612906,
              right_val: 0.6076732277870178,
              left_val: 0.2064086049795151,
            },
            {
              features: [
                [12, 10, 2, 6, -1],
                [12, 13, 2, 3, 2],
              ],
              threshold: 0.00167906004935503,
              right_val: 0.1255383938550949,
              left_val: 0.5851997137069702,
            },
            {
              features: [
                [0, 5, 19, 8, -1],
                [0, 9, 19, 4, 2],
              ],
              threshold: 0.0006982791237533092,
              right_val: 0.5728961229324341,
              left_val: 0.094018429517746,
            },
            {
              features: [
                [7, 0, 6, 9, -1],
                [9, 0, 2, 9, 3],
              ],
              threshold: 0.0007895901217125356,
              right_val: 0.5694308876991272,
              left_val: 0.1781987994909287,
            },
            {
              features: [
                [5, 3, 6, 1, -1],
                [7, 3, 2, 1, 3],
              ],
              threshold: -0.002856049919500947,
              right_val: 0.5788664817810059,
              left_val: 0.1638399064540863,
            },
            {
              features: [
                [11, 3, 6, 1, -1],
                [13, 3, 2, 1, 3],
              ],
              threshold: -0.0038122469559311867,
              right_val: 0.5508564710617065,
              left_val: 0.2085440009832382,
            },
            {
              features: [
                [5, 10, 4, 6, -1],
                [5, 13, 4, 3, 2],
              ],
              threshold: 0.0015896620461717248,
              right_val: 0.1857215017080307,
              left_val: 0.5702760815620422,
            },
            {
              features: [
                [11, 3, 6, 1, -1],
                [13, 3, 2, 1, 3],
              ],
              threshold: 0.0100783398374915,
              right_val: 0.2189770042896271,
              left_val: 0.5116943120956421,
            },
            {
              features: [
                [4, 4, 12, 6, -1],
                [4, 6, 12, 2, 3],
              ],
              threshold: -0.0635263025760651,
              right_val: 0.4043813049793243,
              left_val: 0.7131379842758179,
            },
            {
              features: [
                [15, 12, 2, 6, -1],
                [15, 14, 2, 2, 3],
              ],
              threshold: -0.009103149175643921,
              right_val: 0.54639732837677,
              left_val: 0.2567181885242462,
            },
            {
              features: [
                [9, 3, 2, 2, -1],
                [10, 3, 1, 2, 2],
              ],
              threshold: -0.002403500024229288,
              right_val: 0.559097409248352,
              left_val: 0.1700665950775147,
            },
            {
              features: [
                [9, 3, 3, 1, -1],
                [10, 3, 1, 1, 3],
              ],
              threshold: 0.001522636041045189,
              right_val: 0.2619054019451141,
              left_val: 0.5410556793212891,
            },
            {
              features: [
                [1, 1, 4, 14, -1],
                [3, 1, 2, 14, 2],
              ],
              threshold: 0.0179974399507046,
              right_val: 0.6535220742225647,
              left_val: 0.3732436895370483,
            },
            {
              features: [
                [9, 0, 4, 4, -1],
                [11, 0, 2, 2, 2],
                [9, 2, 2, 2, 2],
              ],
              threshold: -0.00645381910726428,
              right_val: 0.5537446141242981,
              left_val: 0.2626481950283051,
            },
            {
              features: [
                [7, 5, 1, 14, -1],
                [7, 12, 1, 7, 2],
              ],
              threshold: -0.0118807600811124,
              right_val: 0.5544745922088623,
              left_val: 0.2003753930330277,
            },
            {
              features: [
                [19, 0, 1, 4, -1],
                [19, 2, 1, 2, 2],
              ],
              threshold: 0.0012713660253211856,
              right_val: 0.303197592496872,
              left_val: 0.5591902732849121,
            },
            {
              features: [
                [5, 5, 6, 4, -1],
                [8, 5, 3, 4, 2],
              ],
              threshold: 0.0011376109905540943,
              right_val: 0.5646508932113647,
              left_val: 0.2730407118797302,
            },
            {
              features: [
                [9, 18, 3, 2, -1],
                [10, 18, 1, 2, 3],
              ],
              threshold: -0.00426519988104701,
              right_val: 0.5461820960044861,
              left_val: 0.1405909061431885,
            },
            {
              features: [
                [8, 18, 3, 2, -1],
                [9, 18, 1, 2, 3],
              ],
              threshold: -0.0029602861031889915,
              right_val: 0.5459290146827698,
              left_val: 0.1795035004615784,
            },
            {
              features: [
                [4, 5, 12, 6, -1],
                [4, 7, 12, 2, 3],
              ],
              threshold: -0.008844822645187378,
              right_val: 0.280921995639801,
              left_val: 0.5736783146858215,
            },
            {
              features: [
                [3, 12, 2, 6, -1],
                [3, 14, 2, 2, 3],
              ],
              threshold: -0.006643068976700306,
              right_val: 0.5503826141357422,
              left_val: 0.2370675951242447,
            },
            {
              features: [
                [10, 8, 2, 12, -1],
                [10, 12, 2, 4, 3],
              ],
              threshold: 0.003999780863523483,
              right_val: 0.3304282128810883,
              left_val: 0.5608199834823608,
            },
            {
              features: [
                [7, 18, 3, 2, -1],
                [8, 18, 1, 2, 3],
              ],
              threshold: -0.004122172016650438,
              right_val: 0.5378993153572083,
              left_val: 0.1640105992555618,
            },
            {
              features: [
                [9, 0, 6, 2, -1],
                [11, 0, 2, 2, 3],
              ],
              threshold: 0.0156249096617103,
              right_val: 0.2288603931665421,
              left_val: 0.5227649211883545,
            },
            {
              features: [
                [5, 11, 9, 3, -1],
                [5, 12, 9, 1, 3],
              ],
              threshold: -0.0103564197197557,
              right_val: 0.4252927899360657,
              left_val: 0.7016193866729736,
            },
            {
              features: [
                [9, 0, 6, 2, -1],
                [11, 0, 2, 2, 3],
              ],
              threshold: -0.008796080946922302,
              right_val: 0.5355830192565918,
              left_val: 0.2767347097396851,
            },
            {
              features: [
                [1, 1, 18, 5, -1],
                [7, 1, 6, 5, 3],
              ],
              threshold: 0.1622693985700607,
              right_val: 0.744257926940918,
              left_val: 0.434224009513855,
            },
            {
              features: [
                [8, 0, 4, 4, -1],
                [10, 0, 2, 2, 2],
                [8, 2, 2, 2, 2],
              ],
              threshold: 0.0045542530715465546,
              right_val: 0.2582125067710877,
              left_val: 0.5726485848426819,
            },
            {
              features: [
                [3, 12, 1, 3, -1],
                [3, 13, 1, 1, 3],
              ],
              threshold: -0.002130920998752117,
              right_val: 0.5361018776893616,
              left_val: 0.2106848061084747,
            },
            {
              features: [
                [8, 14, 5, 3, -1],
                [8, 15, 5, 1, 3],
              ],
              threshold: -0.0132084200158715,
              right_val: 0.4552468061447144,
              left_val: 0.7593790888786316,
            },
            {
              features: [
                [5, 4, 10, 12, -1],
                [5, 4, 5, 6, 2],
                [10, 10, 5, 6, 2],
              ],
              threshold: -0.0659966766834259,
              right_val: 0.5344039797782898,
              left_val: 0.125247597694397,
            },
            {
              features: [
                [9, 6, 9, 12, -1],
                [9, 10, 9, 4, 3],
              ],
              threshold: 0.007914265617728233,
              right_val: 0.5601043105125427,
              left_val: 0.3315384089946747,
            },
            {
              features: [
                [2, 2, 12, 14, -1],
                [2, 2, 6, 7, 2],
                [8, 9, 6, 7, 2],
              ],
              threshold: 0.0208942797034979,
              right_val: 0.2768838107585907,
              left_val: 0.5506049990653992,
            },
          ],
          threshold: 15.324139595031738,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [4, 7, 12, 2, -1],
                [8, 7, 4, 2, 3],
              ],
              threshold: 0.0011961159761995077,
              right_val: 0.6156241297721863,
              left_val: 0.1762690991163254,
            },
            {
              features: [
                [7, 4, 6, 4, -1],
                [7, 6, 6, 2, 2],
              ],
              threshold: -0.0018679830245673656,
              right_val: 0.1832399964332581,
              left_val: 0.6118106842041016,
            },
            {
              features: [
                [4, 5, 11, 8, -1],
                [4, 9, 11, 4, 2],
              ],
              threshold: -0.00019579799845814705,
              right_val: 0.5723816156387329,
              left_val: 0.0990442633628845,
            },
            {
              features: [
                [3, 10, 16, 4, -1],
                [3, 12, 16, 2, 2],
              ],
              threshold: -0.0008025565766729414,
              right_val: 0.2377282977104187,
              left_val: 0.5579879879951477,
            },
            {
              features: [
                [0, 0, 16, 2, -1],
                [0, 1, 16, 1, 2],
              ],
              threshold: -0.0024510810617357492,
              right_val: 0.5858935117721558,
              left_val: 0.2231457978487015,
            },
            {
              features: [
                [7, 5, 6, 2, -1],
                [9, 5, 2, 2, 3],
              ],
              threshold: 0.0005036185029894114,
              right_val: 0.5794103741645813,
              left_val: 0.2653993964195252,
            },
            {
              features: [
                [3, 2, 6, 10, -1],
                [3, 2, 3, 5, 2],
                [6, 7, 3, 5, 2],
              ],
              threshold: 0.0040293349884450436,
              right_val: 0.2484865039587021,
              left_val: 0.5803827047348022,
            },
            {
              features: [
                [10, 5, 8, 15, -1],
                [10, 10, 8, 5, 3],
              ],
              threshold: -0.0144517095759511,
              right_val: 0.5484204888343811,
              left_val: 0.1830351948738098,
            },
            {
              features: [
                [3, 14, 8, 6, -1],
                [3, 14, 4, 3, 2],
                [7, 17, 4, 3, 2],
              ],
              threshold: 0.0020380979403853416,
              right_val: 0.6051092743873596,
              left_val: 0.3363558948040009,
            },
            {
              features: [
                [14, 2, 2, 2, -1],
                [14, 3, 2, 1, 2],
              ],
              threshold: -0.0016155190533027053,
              right_val: 0.5441246032714844,
              left_val: 0.2286642044782639,
            },
            {
              features: [
                [1, 10, 7, 6, -1],
                [1, 13, 7, 3, 2],
              ],
              threshold: 0.0033458340913057327,
              right_val: 0.2392338067293167,
              left_val: 0.5625913143157959,
            },
            {
              features: [
                [15, 4, 4, 3, -1],
                [15, 4, 2, 3, 2],
              ],
              threshold: 0.0016379579901695251,
              right_val: 0.5964621901512146,
              left_val: 0.3906993865966797,
            },
            {
              features: [
                [2, 9, 14, 6, -1],
                [2, 9, 7, 3, 2],
                [9, 12, 7, 3, 2],
              ],
              threshold: 0.0302512105554342,
              right_val: 0.1575746983289719,
              left_val: 0.524848222732544,
            },
            {
              features: [
                [5, 7, 10, 4, -1],
                [5, 9, 10, 2, 2],
              ],
              threshold: 0.037251990288496,
              right_val: 0.6748418807983398,
              left_val: 0.4194310903549194,
            },
            {
              features: [
                [6, 9, 8, 8, -1],
                [6, 9, 4, 4, 2],
                [10, 13, 4, 4, 2],
              ],
              threshold: -0.0251097902655602,
              right_val: 0.5473451018333435,
              left_val: 0.1882549971342087,
            },
            {
              features: [
                [14, 1, 3, 2, -1],
                [14, 2, 3, 1, 2],
              ],
              threshold: -0.005309905856847763,
              right_val: 0.5227110981941223,
              left_val: 0.133997306227684,
            },
            {
              features: [
                [1, 4, 4, 2, -1],
                [3, 4, 2, 2, 2],
              ],
              threshold: 0.0012086479691788554,
              right_val: 0.6109635829925537,
              left_val: 0.3762088119983673,
            },
            {
              features: [
                [11, 10, 2, 8, -1],
                [11, 14, 2, 4, 2],
              ],
              threshold: -0.0219076797366142,
              right_val: 0.5404006838798523,
              left_val: 0.266314297914505,
            },
            {
              features: [
                [0, 0, 5, 3, -1],
                [0, 1, 5, 1, 3],
              ],
              threshold: 0.0054116579703986645,
              right_val: 0.2232273072004318,
              left_val: 0.5363578796386719,
            },
            {
              features: [
                [2, 5, 18, 8, -1],
                [11, 5, 9, 4, 2],
                [2, 9, 9, 4, 2],
              ],
              threshold: 0.069946326315403,
              right_val: 0.2453698068857193,
              left_val: 0.5358232855796814,
            },
            {
              features: [
                [6, 6, 1, 6, -1],
                [6, 9, 1, 3, 2],
              ],
              threshold: 0.00034520021290518343,
              right_val: 0.5376930236816406,
              left_val: 0.2409671992063522,
            },
            {
              features: [
                [19, 1, 1, 3, -1],
                [19, 2, 1, 1, 3],
              ],
              threshold: 0.0012627709656953812,
              right_val: 0.3155693113803864,
              left_val: 0.5425856709480286,
            },
            {
              features: [
                [7, 6, 6, 6, -1],
                [9, 6, 2, 6, 3],
              ],
              threshold: 0.0227195098996162,
              right_val: 0.6597865223884583,
              left_val: 0.4158405959606171,
            },
            {
              features: [
                [19, 1, 1, 3, -1],
                [19, 2, 1, 1, 3],
              ],
              threshold: -0.001811100053600967,
              right_val: 0.5505244731903076,
              left_val: 0.2811253070831299,
            },
            {
              features: [
                [3, 13, 2, 3, -1],
                [3, 14, 2, 1, 3],
              ],
              threshold: 0.0033469670452177525,
              right_val: 0.1891465038061142,
              left_val: 0.526002824306488,
            },
            {
              features: [
                [8, 4, 8, 12, -1],
                [12, 4, 4, 6, 2],
                [8, 10, 4, 6, 2],
              ],
              threshold: 0.00040791751234792173,
              right_val: 0.3344210088253021,
              left_val: 0.5673509240150452,
            },
            {
              features: [
                [5, 2, 6, 3, -1],
                [7, 2, 2, 3, 3],
              ],
              threshold: 0.0127347996458411,
              right_val: 0.2395612001419067,
              left_val: 0.5343592166900635,
            },
            {
              features: [
                [6, 1, 9, 10, -1],
                [6, 6, 9, 5, 2],
              ],
              threshold: -0.007311972789466381,
              right_val: 0.4022207856178284,
              left_val: 0.6010890007019043,
            },
            {
              features: [
                [0, 4, 6, 12, -1],
                [2, 4, 2, 12, 3],
              ],
              threshold: -0.0569487512111664,
              right_val: 0.4543190896511078,
              left_val: 0.8199151158332825,
            },
            {
              features: [
                [15, 13, 2, 3, -1],
                [15, 14, 2, 1, 3],
              ],
              threshold: -0.005011659115552902,
              right_val: 0.5357710719108582,
              left_val: 0.2200281023979187,
            },
            {
              features: [
                [7, 14, 5, 3, -1],
                [7, 15, 5, 1, 3],
              ],
              threshold: 0.006033436860889196,
              right_val: 0.7181751132011414,
              left_val: 0.4413081109523773,
            },
            {
              features: [
                [15, 13, 3, 3, -1],
                [15, 14, 3, 1, 3],
              ],
              threshold: 0.0039437441155314445,
              right_val: 0.2791733145713806,
              left_val: 0.547886073589325,
            },
            {
              features: [
                [6, 14, 8, 3, -1],
                [6, 15, 8, 1, 3],
              ],
              threshold: -0.0036591119132936,
              right_val: 0.3989723920822144,
              left_val: 0.635786771774292,
            },
            {
              features: [
                [15, 13, 3, 3, -1],
                [15, 14, 3, 1, 3],
              ],
              threshold: -0.0038456181064248085,
              right_val: 0.5300664901733398,
              left_val: 0.3493686020374298,
            },
            {
              features: [
                [2, 13, 3, 3, -1],
                [2, 14, 3, 1, 3],
              ],
              threshold: -0.007192626129835844,
              right_val: 0.5229672789573669,
              left_val: 0.1119614988565445,
            },
            {
              features: [
                [4, 7, 12, 12, -1],
                [10, 7, 6, 6, 2],
                [4, 13, 6, 6, 2],
              ],
              threshold: -0.0527989417314529,
              right_val: 0.54534512758255,
              left_val: 0.2387102991342545,
            },
            {
              features: [
                [9, 7, 2, 6, -1],
                [10, 7, 1, 6, 2],
              ],
              threshold: -0.007953766733407974,
              right_val: 0.4439376890659332,
              left_val: 0.7586917877197266,
            },
            {
              features: [
                [8, 9, 5, 2, -1],
                [8, 10, 5, 1, 2],
              ],
              threshold: -0.0027344180271029472,
              right_val: 0.5489321947097778,
              left_val: 0.2565476894378662,
            },
            {
              features: [
                [8, 6, 3, 4, -1],
                [9, 6, 1, 4, 3],
              ],
              threshold: -0.0018507939530536532,
              right_val: 0.4252474904060364,
              left_val: 0.6734347939491272,
            },
            {
              features: [
                [9, 6, 2, 8, -1],
                [9, 10, 2, 4, 2],
              ],
              threshold: 0.0159189198166132,
              right_val: 0.2292661964893341,
              left_val: 0.548835277557373,
            },
            {
              features: [
                [7, 7, 3, 6, -1],
                [8, 7, 1, 6, 3],
              ],
              threshold: -0.0012687679845839739,
              right_val: 0.4022389948368073,
              left_val: 0.6104331016540527,
            },
            {
              features: [
                [11, 3, 3, 3, -1],
                [12, 3, 1, 3, 3],
              ],
              threshold: 0.006288391072303057,
              right_val: 0.1536193042993546,
              left_val: 0.5310853123664856,
            },
            {
              features: [
                [5, 4, 6, 1, -1],
                [7, 4, 2, 1, 3],
              ],
              threshold: -0.0062259892001748085,
              right_val: 0.524160623550415,
              left_val: 0.1729111969470978,
            },
            {
              features: [
                [5, 6, 10, 3, -1],
                [5, 7, 10, 1, 3],
              ],
              threshold: -0.0121325999498367,
              right_val: 0.4325182139873505,
              left_val: 0.659775972366333,
            },
          ],
          threshold: 21.010639190673828,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [7, 3, 6, 9, -1],
                [7, 6, 6, 3, 3],
              ],
              threshold: -0.0039184908382594585,
              right_val: 0.1469330936670303,
              left_val: 0.6103435158729553,
            },
            {
              features: [
                [6, 7, 9, 1, -1],
                [9, 7, 3, 1, 3],
              ],
              threshold: 0.0015971299726516008,
              right_val: 0.5896466970443726,
              left_val: 0.2632363140583038,
            },
            {
              features: [
                [2, 8, 16, 8, -1],
                [2, 12, 16, 4, 2],
              ],
              threshold: 0.0177801102399826,
              right_val: 0.1760361939668655,
              left_val: 0.587287425994873,
            },
            {
              features: [
                [14, 6, 2, 6, -1],
                [14, 9, 2, 3, 2],
              ],
              threshold: 0.0006533476989716291,
              right_val: 0.5596066117286682,
              left_val: 0.1567801982164383,
            },
            {
              features: [
                [1, 5, 6, 15, -1],
                [1, 10, 6, 5, 3],
              ],
              threshold: -0.00028353091329336166,
              right_val: 0.5732036232948303,
              left_val: 0.1913153976202011,
            },
            {
              features: [
                [10, 0, 6, 9, -1],
                [10, 3, 6, 3, 3],
              ],
              threshold: 0.0016104689566418529,
              right_val: 0.5623080730438232,
              left_val: 0.2914913892745972,
            },
            {
              features: [
                [6, 6, 7, 14, -1],
                [6, 13, 7, 7, 2],
              ],
              threshold: -0.0977506190538406,
              right_val: 0.5648233294487,
              left_val: 0.194347694516182,
            },
            {
              features: [
                [13, 7, 3, 6, -1],
                [13, 9, 3, 2, 3],
              ],
              threshold: 0.0005518235848285258,
              right_val: 0.5504639744758606,
              left_val: 0.3134616911411285,
            },
            {
              features: [
                [1, 8, 15, 4, -1],
                [6, 8, 5, 4, 3],
              ],
              threshold: -0.0128582203760743,
              right_val: 0.5760142803192139,
              left_val: 0.253648191690445,
            },
            {
              features: [
                [11, 2, 3, 10, -1],
                [11, 7, 3, 5, 2],
              ],
              threshold: 0.004153023939579725,
              right_val: 0.36597740650177,
              left_val: 0.5767722129821777,
            },
            {
              features: [
                [3, 7, 4, 6, -1],
                [3, 9, 4, 2, 3],
              ],
              threshold: 0.0017092459602281451,
              right_val: 0.5918939113616943,
              left_val: 0.2843191027641296,
            },
            {
              features: [
                [13, 3, 6, 10, -1],
                [15, 3, 2, 10, 3],
              ],
              threshold: 0.007521735969930887,
              right_val: 0.6183109283447266,
              left_val: 0.4052427113056183,
            },
            {
              features: [
                [5, 7, 8, 10, -1],
                [5, 7, 4, 5, 2],
                [9, 12, 4, 5, 2],
              ],
              threshold: 0.0022479810286313295,
              right_val: 0.3135401010513306,
              left_val: 0.578375518321991,
            },
            {
              features: [
                [4, 4, 12, 12, -1],
                [10, 4, 6, 6, 2],
                [4, 10, 6, 6, 2],
              ],
              threshold: 0.0520062111318111,
              right_val: 0.1916636973619461,
              left_val: 0.5541312098503113,
            },
            {
              features: [
                [1, 4, 6, 9, -1],
                [3, 4, 2, 9, 3],
              ],
              threshold: 0.0120855299755931,
              right_val: 0.6644591093063354,
              left_val: 0.4032655954360962,
            },
            {
              features: [
                [11, 3, 2, 5, -1],
                [11, 3, 1, 5, 2],
              ],
              threshold: 14687820112158079e-21,
              right_val: 0.5709382891654968,
              left_val: 0.3535977900028229,
            },
            {
              features: [
                [7, 3, 2, 5, -1],
                [8, 3, 1, 5, 2],
              ],
              threshold: 7139518857002258e-21,
              right_val: 0.5610269904136658,
              left_val: 0.3037444949150085,
            },
            {
              features: [
                [10, 14, 2, 3, -1],
                [10, 15, 2, 1, 3],
              ],
              threshold: -0.0046001640148460865,
              right_val: 0.4580326080322266,
              left_val: 0.7181087136268616,
            },
            {
              features: [
                [5, 12, 6, 2, -1],
                [8, 12, 3, 2, 2],
              ],
              threshold: 0.0020058949012309313,
              right_val: 0.2953684031963348,
              left_val: 0.5621951818466187,
            },
            {
              features: [
                [9, 14, 2, 3, -1],
                [9, 15, 2, 1, 3],
              ],
              threshold: 0.004505027085542679,
              right_val: 0.7619017958641052,
              left_val: 0.4615387916564941,
            },
            {
              features: [
                [4, 11, 12, 6, -1],
                [4, 14, 12, 3, 2],
              ],
              threshold: 0.0117468303069472,
              right_val: 0.1772529035806656,
              left_val: 0.5343837141990662,
            },
            {
              features: [
                [11, 11, 5, 9, -1],
                [11, 14, 5, 3, 3],
              ],
              threshold: -0.0583163388073444,
              right_val: 0.5340772271156311,
              left_val: 0.1686245948076248,
            },
            {
              features: [
                [6, 15, 3, 2, -1],
                [6, 16, 3, 1, 2],
              ],
              threshold: 0.00023629379575140774,
              right_val: 0.6026803851127625,
              left_val: 0.3792056143283844,
            },
            {
              features: [
                [11, 0, 3, 5, -1],
                [12, 0, 1, 5, 3],
              ],
              threshold: -0.007815618067979813,
              right_val: 0.5324323773384094,
              left_val: 0.151286706328392,
            },
            {
              features: [
                [5, 5, 6, 7, -1],
                [8, 5, 3, 7, 2],
              ],
              threshold: -0.0108761601150036,
              right_val: 0.5319945216178894,
              left_val: 0.2081822007894516,
            },
            {
              features: [
                [13, 0, 1, 9, -1],
                [13, 3, 1, 3, 3],
              ],
              threshold: -0.0027745519764721394,
              right_val: 0.5210328102111816,
              left_val: 0.4098246991634369,
            },
            {
              features: [
                [3, 2, 4, 8, -1],
                [3, 2, 2, 4, 2],
                [5, 6, 2, 4, 2],
              ],
              threshold: -0.0007827638182789087,
              right_val: 0.3478842079639435,
              left_val: 0.5693274140357971,
            },
            {
              features: [
                [13, 12, 4, 6, -1],
                [13, 14, 4, 2, 3],
              ],
              threshold: 0.0138704096898437,
              right_val: 0.2257698029279709,
              left_val: 0.5326750874519348,
            },
            {
              features: [
                [3, 12, 4, 6, -1],
                [3, 14, 4, 2, 3],
              ],
              threshold: -0.0236749108880758,
              right_val: 0.5200707912445068,
              left_val: 0.1551305055618286,
            },
            {
              features: [
                [13, 11, 3, 4, -1],
                [13, 13, 3, 2, 2],
              ],
              threshold: -14879409718560055e-21,
              right_val: 0.3820176124572754,
              left_val: 0.5500566959381104,
            },
            {
              features: [
                [4, 4, 4, 3, -1],
                [4, 5, 4, 1, 3],
              ],
              threshold: 0.00361906411126256,
              right_val: 0.6639748215675354,
              left_val: 0.4238683879375458,
            },
            {
              features: [
                [7, 5, 11, 8, -1],
                [7, 9, 11, 4, 2],
              ],
              threshold: -0.0198171101510525,
              right_val: 0.5382357835769653,
              left_val: 0.2150038033723831,
            },
            {
              features: [
                [7, 8, 3, 4, -1],
                [8, 8, 1, 4, 3],
              ],
              threshold: -0.0038154039066284895,
              right_val: 0.4215297102928162,
              left_val: 0.6675711274147034,
            },
            {
              features: [
                [9, 1, 6, 1, -1],
                [11, 1, 2, 1, 3],
              ],
              threshold: -0.0049775829538702965,
              right_val: 0.5386328101158142,
              left_val: 0.2267289012670517,
            },
            {
              features: [
                [5, 5, 3, 3, -1],
                [5, 6, 3, 1, 3],
              ],
              threshold: 0.002244102070108056,
              right_val: 0.6855735778808594,
              left_val: 0.4308691024780273,
            },
            {
              features: [
                [0, 9, 20, 6, -1],
                [10, 9, 10, 3, 2],
                [0, 12, 10, 3, 2],
              ],
              threshold: 0.0122824599966407,
              right_val: 0.3467479050159454,
              left_val: 0.5836614966392517,
            },
            {
              features: [
                [8, 6, 3, 5, -1],
                [9, 6, 1, 5, 3],
              ],
              threshold: -0.002854869933798909,
              right_val: 0.4311453998088837,
              left_val: 0.7016944885253906,
            },
            {
              features: [
                [11, 0, 1, 3, -1],
                [11, 1, 1, 1, 3],
              ],
              threshold: -0.0037875669077038765,
              right_val: 0.5224946141242981,
              left_val: 0.2895345091819763,
            },
            {
              features: [
                [4, 2, 4, 2, -1],
                [4, 3, 4, 1, 2],
              ],
              threshold: -0.0012201230274513364,
              right_val: 0.5481644868850708,
              left_val: 0.2975570857524872,
            },
            {
              features: [
                [12, 6, 4, 3, -1],
                [12, 7, 4, 1, 3],
              ],
              threshold: 0.010160599835217,
              right_val: 0.8182697892189026,
              left_val: 0.4888817965984345,
            },
            {
              features: [
                [5, 0, 6, 4, -1],
                [7, 0, 2, 4, 3],
              ],
              threshold: -0.0161745697259903,
              right_val: 0.5239992737770081,
              left_val: 0.1481492966413498,
            },
            {
              features: [
                [9, 7, 3, 8, -1],
                [10, 7, 1, 8, 3],
              ],
              threshold: 0.0192924607545137,
              right_val: 0.7378190755844116,
              left_val: 0.4786309897899628,
            },
            {
              features: [
                [9, 7, 2, 2, -1],
                [10, 7, 1, 2, 2],
              ],
              threshold: -0.003247953951358795,
              right_val: 0.4470643997192383,
              left_val: 0.7374222874641418,
            },
            {
              features: [
                [6, 7, 14, 4, -1],
                [13, 7, 7, 2, 2],
                [6, 9, 7, 2, 2],
              ],
              threshold: -0.009380348026752472,
              right_val: 0.5537996292114258,
              left_val: 0.3489154875278473,
            },
            {
              features: [
                [0, 5, 3, 6, -1],
                [0, 7, 3, 2, 3],
              ],
              threshold: -0.0126061299815774,
              right_val: 0.5315443277359009,
              left_val: 0.2379686981439591,
            },
            {
              features: [
                [13, 11, 3, 4, -1],
                [13, 13, 3, 2, 2],
              ],
              threshold: -0.0256219301372766,
              right_val: 0.5138769745826721,
              left_val: 0.1964688003063202,
            },
            {
              features: [
                [4, 11, 3, 4, -1],
                [4, 13, 3, 2, 2],
              ],
              threshold: -7574149640277028e-20,
              right_val: 0.3365853130817413,
              left_val: 0.5590522885322571,
            },
            {
              features: [
                [5, 9, 12, 8, -1],
                [11, 9, 6, 4, 2],
                [5, 13, 6, 4, 2],
              ],
              threshold: -0.0892108827829361,
              right_val: 0.516263484954834,
              left_val: 0.0634046569466591,
            },
            {
              features: [
                [9, 12, 1, 3, -1],
                [9, 13, 1, 1, 3],
              ],
              threshold: -0.002767048077657819,
              right_val: 0.4490706026554108,
              left_val: 0.732346773147583,
            },
            {
              features: [
                [10, 15, 2, 4, -1],
                [10, 17, 2, 2, 2],
              ],
              threshold: 0.0002715257869567722,
              right_val: 0.5985518097877502,
              left_val: 0.411483496427536,
            },
          ],
          threshold: 23.918790817260742,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [7, 7, 6, 1, -1],
                [9, 7, 2, 1, 3],
              ],
              threshold: 0.001478621968999505,
              right_val: 0.6643316745758057,
              left_val: 0.266354501247406,
            },
            {
              features: [
                [12, 3, 6, 6, -1],
                [15, 3, 3, 3, 2],
                [12, 6, 3, 3, 2],
              ],
              threshold: -0.001874165958724916,
              right_val: 0.2518512904644013,
              left_val: 0.6143848896026611,
            },
            {
              features: [
                [0, 4, 10, 6, -1],
                [0, 6, 10, 2, 3],
              ],
              threshold: -0.001715100952424109,
              right_val: 0.2397463023662567,
              left_val: 0.5766341090202332,
            },
            {
              features: [
                [8, 3, 8, 14, -1],
                [12, 3, 4, 7, 2],
                [8, 10, 4, 7, 2],
              ],
              threshold: -0.0018939269939437509,
              right_val: 0.2529144883155823,
              left_val: 0.5682045817375183,
            },
            {
              features: [
                [4, 4, 7, 15, -1],
                [4, 9, 7, 5, 3],
              ],
              threshold: -0.005300605203956366,
              right_val: 0.5556079745292664,
              left_val: 0.1640675961971283,
            },
            {
              features: [
                [12, 2, 6, 8, -1],
                [15, 2, 3, 4, 2],
                [12, 6, 3, 4, 2],
              ],
              threshold: -0.0466625317931175,
              right_val: 0.4762830138206482,
              left_val: 0.6123154163360596,
            },
            {
              features: [
                [2, 2, 6, 8, -1],
                [2, 2, 3, 4, 2],
                [5, 6, 3, 4, 2],
              ],
              threshold: -0.000794313324149698,
              right_val: 0.2839404046535492,
              left_val: 0.5707858800888062,
            },
            {
              features: [
                [2, 13, 18, 7, -1],
                [8, 13, 6, 7, 3],
              ],
              threshold: 0.0148916700854898,
              right_val: 0.6006367206573486,
              left_val: 0.4089672863483429,
            },
            {
              features: [
                [4, 3, 8, 14, -1],
                [4, 3, 4, 7, 2],
                [8, 10, 4, 7, 2],
              ],
              threshold: -0.0012046529445797205,
              right_val: 0.2705289125442505,
              left_val: 0.5712450742721558,
            },
            {
              features: [
                [18, 1, 2, 6, -1],
                [18, 3, 2, 2, 3],
              ],
              threshold: 0.006061938125640154,
              right_val: 0.3262225985527039,
              left_val: 0.526250422000885,
            },
            {
              features: [
                [9, 11, 2, 3, -1],
                [9, 12, 2, 1, 3],
              ],
              threshold: -0.0025286648888140917,
              right_val: 0.4199256896972656,
              left_val: 0.6853830814361572,
            },
            {
              features: [
                [18, 1, 2, 6, -1],
                [18, 3, 2, 2, 3],
              ],
              threshold: -0.005901021882891655,
              right_val: 0.5434812903404236,
              left_val: 0.3266282081604004,
            },
            {
              features: [
                [0, 1, 2, 6, -1],
                [0, 3, 2, 2, 3],
              ],
              threshold: 0.005670276004821062,
              right_val: 0.2319003939628601,
              left_val: 0.5468410849571228,
            },
            {
              features: [
                [1, 5, 18, 6, -1],
                [1, 7, 18, 2, 3],
              ],
              threshold: -0.003030410036444664,
              right_val: 0.2708238065242767,
              left_val: 0.557066798210144,
            },
            {
              features: [
                [0, 2, 6, 7, -1],
                [3, 2, 3, 7, 2],
              ],
              threshold: 0.002980364952236414,
              right_val: 0.5890625715255737,
              left_val: 0.3700568974018097,
            },
            {
              features: [
                [7, 3, 6, 14, -1],
                [7, 10, 6, 7, 2],
              ],
              threshold: -0.0758405104279518,
              right_val: 0.5419948101043701,
              left_val: 0.2140070050954819,
            },
            {
              features: [
                [3, 7, 13, 10, -1],
                [3, 12, 13, 5, 2],
              ],
              threshold: 0.0192625392228365,
              right_val: 0.2726590037345886,
              left_val: 0.5526772141456604,
            },
            {
              features: [
                [11, 15, 2, 2, -1],
                [11, 16, 2, 1, 2],
              ],
              threshold: 0.00018888259364757687,
              right_val: 0.6017209887504578,
              left_val: 0.3958011865615845,
            },
            {
              features: [
                [2, 11, 16, 4, -1],
                [2, 11, 8, 2, 2],
                [10, 13, 8, 2, 2],
              ],
              threshold: 0.0293695498257875,
              right_val: 0.1435758024454117,
              left_val: 0.5241373777389526,
            },
            {
              features: [
                [13, 7, 6, 4, -1],
                [16, 7, 3, 2, 2],
                [13, 9, 3, 2, 2],
              ],
              threshold: 0.0010417619487270713,
              right_val: 0.5929983258247375,
              left_val: 0.3385409116744995,
            },
            {
              features: [
                [6, 10, 3, 9, -1],
                [6, 13, 3, 3, 3],
              ],
              threshold: 0.0026125640142709017,
              right_val: 0.3021597862243652,
              left_val: 0.5485377907752991,
            },
            {
              features: [
                [14, 6, 1, 6, -1],
                [14, 9, 1, 3, 2],
              ],
              threshold: 0.0009697746718302369,
              right_val: 0.553203284740448,
              left_val: 0.3375276029109955,
            },
            {
              features: [
                [5, 10, 4, 1, -1],
                [7, 10, 2, 1, 2],
              ],
              threshold: 0.0005951265920884907,
              right_val: 0.3359399139881134,
              left_val: 0.563174307346344,
            },
            {
              features: [
                [3, 8, 15, 5, -1],
                [8, 8, 5, 5, 3],
              ],
              threshold: -0.1015655994415283,
              right_val: 0.5230425000190735,
              left_val: 0.0637350380420685,
            },
            {
              features: [
                [1, 6, 5, 4, -1],
                [1, 8, 5, 2, 2],
              ],
              threshold: 0.0361566990613937,
              right_val: 0.1029528975486755,
              left_val: 0.5136963129043579,
            },
            {
              features: [
                [3, 1, 17, 6, -1],
                [3, 3, 17, 2, 3],
              ],
              threshold: 0.003462414024397731,
              right_val: 0.5558289289474487,
              left_val: 0.3879320025444031,
            },
            {
              features: [
                [6, 7, 8, 2, -1],
                [10, 7, 4, 2, 2],
              ],
              threshold: 0.0195549800992012,
              right_val: 0.1875859946012497,
              left_val: 0.5250086784362793,
            },
            {
              features: [
                [9, 7, 3, 2, -1],
                [10, 7, 1, 2, 3],
              ],
              threshold: -0.0023121440317481756,
              right_val: 0.4679641127586365,
              left_val: 0.667202889919281,
            },
            {
              features: [
                [8, 7, 3, 2, -1],
                [9, 7, 1, 2, 3],
              ],
              threshold: -0.001860528951510787,
              right_val: 0.4334670901298523,
              left_val: 0.7163379192352295,
            },
            {
              features: [
                [8, 9, 4, 2, -1],
                [8, 10, 4, 1, 2],
              ],
              threshold: -0.0009402636205777526,
              right_val: 0.5650203227996826,
              left_val: 0.302136093378067,
            },
            {
              features: [
                [8, 8, 4, 3, -1],
                [8, 9, 4, 1, 3],
              ],
              threshold: -0.005241833161562681,
              right_val: 0.5250256061553955,
              left_val: 0.1820009052753449,
            },
            {
              features: [
                [9, 5, 6, 4, -1],
                [9, 5, 3, 4, 2],
              ],
              threshold: 0.00011729019752237946,
              right_val: 0.544597327709198,
              left_val: 0.3389188051223755,
            },
            {
              features: [
                [8, 13, 4, 3, -1],
                [8, 14, 4, 1, 3],
              ],
              threshold: 0.0011878840159624815,
              right_val: 0.6253563165664673,
              left_val: 0.4085349142551422,
            },
            {
              features: [
                [4, 7, 12, 6, -1],
                [10, 7, 6, 3, 2],
                [4, 10, 6, 3, 2],
              ],
              threshold: -0.0108813596889377,
              right_val: 0.5700082778930664,
              left_val: 0.3378399014472961,
            },
            {
              features: [
                [8, 14, 4, 3, -1],
                [8, 15, 4, 1, 3],
              ],
              threshold: 0.0017354859737679362,
              right_val: 0.6523038744926453,
              left_val: 0.4204635918140411,
            },
            {
              features: [
                [9, 7, 3, 3, -1],
                [9, 8, 3, 1, 3],
              ],
              threshold: -0.00651190523058176,
              right_val: 0.5428143739700317,
              left_val: 0.2595216035842896,
            },
            {
              features: [
                [7, 4, 3, 8, -1],
                [8, 4, 1, 8, 3],
              ],
              threshold: -0.0012136430013924837,
              right_val: 0.3977893888950348,
              left_val: 0.6165143847465515,
            },
            {
              features: [
                [10, 0, 3, 6, -1],
                [11, 0, 1, 6, 3],
              ],
              threshold: -0.010354240424931,
              right_val: 0.5219504833221436,
              left_val: 0.1628028005361557,
            },
            {
              features: [
                [6, 3, 4, 8, -1],
                [8, 3, 2, 8, 2],
              ],
              threshold: 0.0005585883045569062,
              right_val: 0.5503574013710022,
              left_val: 0.3199650943279266,
            },
            {
              features: [
                [14, 3, 6, 13, -1],
                [14, 3, 3, 13, 2],
              ],
              threshold: 0.0152996499091387,
              right_val: 0.6122388243675232,
              left_val: 0.4103994071483612,
            },
            {
              features: [
                [8, 13, 3, 6, -1],
                [8, 16, 3, 3, 2],
              ],
              threshold: -0.021588210016489,
              right_val: 0.519738495349884,
              left_val: 0.103491298854351,
            },
            {
              features: [
                [14, 3, 6, 13, -1],
                [14, 3, 3, 13, 2],
              ],
              threshold: -0.1283462941646576,
              right_val: 0.4893102943897247,
              left_val: 0.8493865132331848,
            },
            {
              features: [
                [0, 7, 10, 4, -1],
                [0, 7, 5, 2, 2],
                [5, 9, 5, 2, 2],
              ],
              threshold: -0.0022927189711481333,
              right_val: 0.5471575260162354,
              left_val: 0.3130157887935638,
            },
            {
              features: [
                [14, 3, 6, 13, -1],
                [14, 3, 3, 13, 2],
              ],
              threshold: 0.0799151062965393,
              right_val: 0.6073989272117615,
              left_val: 0.4856320917606354,
            },
            {
              features: [
                [0, 3, 6, 13, -1],
                [3, 3, 3, 13, 2],
              ],
              threshold: -0.0794410929083824,
              right_val: 0.462453305721283,
              left_val: 0.8394674062728882,
            },
            {
              features: [
                [9, 1, 4, 1, -1],
                [9, 1, 2, 1, 2],
              ],
              threshold: -0.00528000108897686,
              right_val: 0.5306698083877563,
              left_val: 0.1881695985794067,
            },
            {
              features: [
                [8, 0, 2, 1, -1],
                [9, 0, 1, 1, 2],
              ],
              threshold: 0.0010463109938427806,
              right_val: 0.2583065927028656,
              left_val: 0.5271229147911072,
            },
            {
              features: [
                [10, 16, 4, 4, -1],
                [12, 16, 2, 2, 2],
                [10, 18, 2, 2, 2],
              ],
              threshold: 0.00026317298761568964,
              right_val: 0.5735440850257874,
              left_val: 0.4235304892063141,
            },
            {
              features: [
                [9, 6, 2, 3, -1],
                [10, 6, 1, 3, 2],
              ],
              threshold: -0.0036173160187900066,
              right_val: 0.4495444893836975,
              left_val: 0.6934396028518677,
            },
            {
              features: [
                [4, 5, 12, 2, -1],
                [8, 5, 4, 2, 3],
              ],
              threshold: 0.0114218797534704,
              right_val: 0.4138193130493164,
              left_val: 0.590092122554779,
            },
            {
              features: [
                [8, 7, 3, 5, -1],
                [9, 7, 1, 5, 3],
              ],
              threshold: -0.0019963278900831938,
              right_val: 0.4327239990234375,
              left_val: 0.6466382741928101,
            },
          ],
          threshold: 24.52787971496582,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [6, 4, 8, 6, -1],
                [6, 6, 8, 2, 3],
              ],
              threshold: -0.00996912457048893,
              right_val: 0.2482212036848068,
              left_val: 0.6142324209213257,
            },
            {
              features: [
                [9, 5, 2, 12, -1],
                [9, 11, 2, 6, 2],
              ],
              threshold: 0.0007307305932044983,
              right_val: 0.2321965992450714,
              left_val: 0.5704951882362366,
            },
            {
              features: [
                [4, 6, 6, 8, -1],
                [4, 10, 6, 4, 2],
              ],
              threshold: 0.0006404530140571296,
              right_val: 0.5814933180809021,
              left_val: 0.2112251967191696,
            },
            {
              features: [
                [12, 2, 8, 5, -1],
                [12, 2, 4, 5, 2],
              ],
              threshold: 0.004542401991784573,
              right_val: 0.586631178855896,
              left_val: 0.2950482070446014,
            },
            {
              features: [
                [0, 8, 18, 3, -1],
                [0, 9, 18, 1, 3],
              ],
              threshold: 9247744310414419e-20,
              right_val: 0.5791326761245728,
              left_val: 0.2990990877151489,
            },
            {
              features: [
                [8, 12, 4, 8, -1],
                [8, 16, 4, 4, 2],
              ],
              threshold: -0.008660314604640007,
              right_val: 0.5635542273521423,
              left_val: 0.2813029885292053,
            },
            {
              features: [
                [0, 2, 8, 5, -1],
                [4, 2, 4, 5, 2],
              ],
              threshold: 0.008051581680774689,
              right_val: 0.6054757237434387,
              left_val: 0.3535369038581848,
            },
            {
              features: [
                [13, 11, 3, 4, -1],
                [13, 13, 3, 2, 2],
              ],
              threshold: 0.00043835240649059415,
              right_val: 0.2731510996818543,
              left_val: 0.5596532225608826,
            },
            {
              features: [
                [5, 11, 6, 1, -1],
                [7, 11, 2, 1, 3],
              ],
              threshold: -981689736363478e-19,
              right_val: 0.3638561069965363,
              left_val: 0.5978031754493713,
            },
            {
              features: [
                [11, 3, 3, 1, -1],
                [12, 3, 1, 1, 3],
              ],
              threshold: -0.0011298790341243148,
              right_val: 0.5432729125022888,
              left_val: 0.2755252122879028,
            },
            {
              features: [
                [7, 13, 5, 3, -1],
                [7, 14, 5, 1, 3],
              ],
              threshold: 0.006435615010559559,
              right_val: 0.7069833278656006,
              left_val: 0.4305641949176788,
            },
            {
              features: [
                [11, 11, 7, 6, -1],
                [11, 14, 7, 3, 2],
              ],
              threshold: -0.0568293295800686,
              right_val: 0.5294997096061707,
              left_val: 0.2495242953300476,
            },
            {
              features: [
                [2, 11, 7, 6, -1],
                [2, 14, 7, 3, 2],
              ],
              threshold: 0.004066816996783018,
              right_val: 0.2497723996639252,
              left_val: 0.5478553175926208,
            },
            {
              features: [
                [12, 14, 2, 6, -1],
                [12, 16, 2, 2, 3],
              ],
              threshold: 481647984997835e-19,
              right_val: 0.5706356167793274,
              left_val: 0.3938601016998291,
            },
            {
              features: [
                [8, 14, 3, 3, -1],
                [8, 15, 3, 1, 3],
              ],
              threshold: 0.00617950176820159,
              right_val: 0.7394766807556152,
              left_val: 0.440760612487793,
            },
            {
              features: [
                [11, 0, 3, 5, -1],
                [12, 0, 1, 5, 3],
              ],
              threshold: 0.006498575210571289,
              right_val: 0.2479152977466583,
              left_val: 0.5445243120193481,
            },
            {
              features: [
                [6, 1, 4, 9, -1],
                [8, 1, 2, 9, 2],
              ],
              threshold: -0.0010211090557277203,
              right_val: 0.5338971018791199,
              left_val: 0.2544766962528229,
            },
            {
              features: [
                [10, 3, 6, 1, -1],
                [12, 3, 2, 1, 3],
              ],
              threshold: -0.005424752831459045,
              right_val: 0.5324069261550903,
              left_val: 0.2718858122825623,
            },
            {
              features: [
                [8, 8, 3, 4, -1],
                [8, 10, 3, 2, 2],
              ],
              threshold: -0.0010559899965301156,
              right_val: 0.553450882434845,
              left_val: 0.3178288042545319,
            },
            {
              features: [
                [8, 12, 4, 2, -1],
                [8, 13, 4, 1, 2],
              ],
              threshold: 0.0006646580877713859,
              right_val: 0.6558194160461426,
              left_val: 0.4284219145774841,
            },
            {
              features: [
                [5, 18, 4, 2, -1],
                [5, 19, 4, 1, 2],
              ],
              threshold: -0.00027524109464138746,
              right_val: 0.3810262978076935,
              left_val: 0.5902860760688782,
            },
            {
              features: [
                [2, 1, 18, 6, -1],
                [2, 3, 18, 2, 3],
              ],
              threshold: 0.004229320213198662,
              right_val: 0.5709385871887207,
              left_val: 0.381648987531662,
            },
            {
              features: [
                [6, 0, 3, 2, -1],
                [7, 0, 1, 2, 3],
              ],
              threshold: -0.0032868210691958666,
              right_val: 0.5259544253349304,
              left_val: 0.1747743934392929,
            },
            {
              features: [
                [13, 8, 6, 2, -1],
                [16, 8, 3, 1, 2],
                [13, 9, 3, 1, 2],
              ],
              threshold: 0.0001561187964398414,
              right_val: 0.5725612044334412,
              left_val: 0.3601722121238709,
            },
            {
              features: [
                [6, 10, 3, 6, -1],
                [6, 13, 3, 3, 2],
              ],
              threshold: -7362138148891972e-21,
              right_val: 0.3044497072696686,
              left_val: 0.540185809135437,
            },
            {
              features: [
                [0, 13, 20, 4, -1],
                [10, 13, 10, 2, 2],
                [0, 15, 10, 2, 2],
              ],
              threshold: -0.014767250046134,
              right_val: 0.5573434829711914,
              left_val: 0.3220770061016083,
            },
            {
              features: [
                [7, 7, 6, 5, -1],
                [9, 7, 2, 5, 3],
              ],
              threshold: 0.0244895908981562,
              right_val: 0.6518812775611877,
              left_val: 0.4301528036594391,
            },
            {
              features: [
                [11, 0, 2, 2, -1],
                [11, 1, 2, 1, 2],
              ],
              threshold: -0.000376520911231637,
              right_val: 0.5598236918449402,
              left_val: 0.356458306312561,
            },
            {
              features: [
                [1, 8, 6, 2, -1],
                [1, 8, 3, 1, 2],
                [4, 9, 3, 1, 2],
              ],
              threshold: 736576885174145e-20,
              right_val: 0.556189775466919,
              left_val: 0.3490782976150513,
            },
            {
              features: [
                [0, 2, 20, 2, -1],
                [10, 2, 10, 1, 2],
                [0, 3, 10, 1, 2],
              ],
              threshold: -0.0150999398902059,
              right_val: 0.5335299968719482,
              left_val: 0.1776272058486939,
            },
            {
              features: [
                [7, 14, 5, 3, -1],
                [7, 15, 5, 1, 3],
              ],
              threshold: -0.0038316650316119194,
              right_val: 0.4221394062042236,
              left_val: 0.6149687767028809,
            },
            {
              features: [
                [7, 13, 6, 6, -1],
                [10, 13, 3, 3, 2],
                [7, 16, 3, 3, 2],
              ],
              threshold: 0.0169254001230001,
              right_val: 0.2166585028171539,
              left_val: 0.5413014888763428,
            },
            {
              features: [
                [9, 12, 2, 3, -1],
                [9, 13, 2, 1, 3],
              ],
              threshold: -0.003047785023227334,
              right_val: 0.4354617893695831,
              left_val: 0.6449490785598755,
            },
            {
              features: [
                [16, 11, 1, 6, -1],
                [16, 13, 1, 2, 3],
              ],
              threshold: 0.003214058931916952,
              right_val: 0.3523217141628265,
              left_val: 0.5400155186653137,
            },
            {
              features: [
                [3, 11, 1, 6, -1],
                [3, 13, 1, 2, 3],
              ],
              threshold: -0.004002320114523172,
              right_val: 0.5338417291641235,
              left_val: 0.2774524092674255,
            },
            {
              features: [
                [4, 4, 14, 12, -1],
                [11, 4, 7, 6, 2],
                [4, 10, 7, 6, 2],
              ],
              threshold: 0.0074182129465043545,
              right_val: 0.3702817857265472,
              left_val: 0.567673921585083,
            },
            {
              features: [
                [5, 4, 3, 3, -1],
                [5, 5, 3, 1, 3],
              ],
              threshold: -0.008876458741724491,
              right_val: 0.4583688974380493,
              left_val: 0.7749221920967102,
            },
            {
              features: [
                [12, 3, 3, 3, -1],
                [13, 3, 1, 3, 3],
              ],
              threshold: 0.002731173997744918,
              right_val: 0.3996661007404327,
              left_val: 0.5338721871376038,
            },
            {
              features: [
                [6, 6, 8, 3, -1],
                [6, 7, 8, 1, 3],
              ],
              threshold: -0.0025082379579544067,
              right_val: 0.377749890089035,
              left_val: 0.5611963272094727,
            },
            {
              features: [
                [12, 3, 3, 3, -1],
                [13, 3, 1, 3, 3],
              ],
              threshold: -0.008054107427597046,
              right_val: 0.5179182887077332,
              left_val: 0.291522890329361,
            },
            {
              features: [
                [3, 1, 4, 10, -1],
                [3, 1, 2, 5, 2],
                [5, 6, 2, 5, 2],
              ],
              threshold: -0.0009793881326913834,
              right_val: 0.3700192868709564,
              left_val: 0.5536432862281799,
            },
            {
              features: [
                [5, 7, 10, 2, -1],
                [5, 7, 5, 2, 2],
              ],
              threshold: -0.005874590948224068,
              right_val: 0.5679376125335693,
              left_val: 0.3754391074180603,
            },
            {
              features: [
                [8, 7, 3, 3, -1],
                [9, 7, 1, 3, 3],
              ],
              threshold: -0.00449367193505168,
              right_val: 0.4480949938297272,
              left_val: 0.7019699215888977,
            },
            {
              features: [
                [15, 12, 2, 3, -1],
                [15, 13, 2, 1, 3],
              ],
              threshold: -0.00543892290443182,
              right_val: 0.5313386917114258,
              left_val: 0.2310364991426468,
            },
            {
              features: [
                [7, 8, 3, 4, -1],
                [8, 8, 1, 4, 3],
              ],
              threshold: -0.0007509464048780501,
              right_val: 0.4129343032836914,
              left_val: 0.5864868760108948,
            },
            {
              features: [
                [13, 4, 1, 12, -1],
                [13, 10, 1, 6, 2],
              ],
              threshold: 14528800420521293e-21,
              right_val: 0.5619621276855469,
              left_val: 0.3732407093048096,
            },
            {
              features: [
                [4, 5, 12, 12, -1],
                [4, 5, 6, 6, 2],
                [10, 11, 6, 6, 2],
              ],
              threshold: 0.0407580696046352,
              right_val: 0.2720521986484528,
              left_val: 0.5312091112136841,
            },
            {
              features: [
                [7, 14, 7, 3, -1],
                [7, 15, 7, 1, 3],
              ],
              threshold: 0.006650593131780624,
              right_val: 0.6693493723869324,
              left_val: 0.4710015952587128,
            },
            {
              features: [
                [3, 12, 2, 3, -1],
                [3, 13, 2, 1, 3],
              ],
              threshold: 0.0045759351924061775,
              right_val: 0.1637275964021683,
              left_val: 0.5167819261550903,
            },
            {
              features: [
                [3, 2, 14, 2, -1],
                [10, 2, 7, 1, 2],
                [3, 3, 7, 1, 2],
              ],
              threshold: 0.0065269311890006065,
              right_val: 0.2938531935214996,
              left_val: 0.5397608876228333,
            },
            {
              features: [
                [0, 1, 3, 10, -1],
                [1, 1, 1, 10, 3],
              ],
              threshold: -0.0136603796854615,
              right_val: 0.453220009803772,
              left_val: 0.7086488008499146,
            },
            {
              features: [
                [9, 0, 6, 5, -1],
                [11, 0, 2, 5, 3],
              ],
              threshold: 0.0273588690906763,
              right_val: 0.3589231967926025,
              left_val: 0.5206481218338013,
            },
            {
              features: [
                [5, 7, 6, 2, -1],
                [8, 7, 3, 2, 2],
              ],
              threshold: 0.0006219755159690976,
              right_val: 0.5441123247146606,
              left_val: 0.3507075905799866,
            },
            {
              features: [
                [7, 1, 6, 10, -1],
                [7, 6, 6, 5, 2],
              ],
              threshold: -0.0033077080734074116,
              right_val: 0.402489185333252,
              left_val: 0.5859522819519043,
            },
            {
              features: [
                [1, 1, 18, 3, -1],
                [7, 1, 6, 3, 3],
              ],
              threshold: -0.0106311095878482,
              right_val: 0.4422602951526642,
              left_val: 0.6743267178535461,
            },
            {
              features: [
                [16, 3, 3, 6, -1],
                [16, 5, 3, 2, 3],
              ],
              threshold: 0.0194416493177414,
              right_val: 0.1797904968261719,
              left_val: 0.5282716155052185,
            },
          ],
          threshold: 27.153350830078125,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [6, 3, 7, 6, -1],
                [6, 6, 7, 3, 2],
              ],
              threshold: -0.005505216773599386,
              right_val: 0.2626559138298035,
              left_val: 0.5914731025695801,
            },
            {
              features: [
                [4, 7, 12, 2, -1],
                [8, 7, 4, 2, 3],
              ],
              threshold: 0.001956227933987975,
              right_val: 0.5741627216339111,
              left_val: 0.2312581986188889,
            },
            {
              features: [
                [0, 4, 17, 10, -1],
                [0, 9, 17, 5, 2],
              ],
              threshold: -0.008892478421330452,
              right_val: 0.5626654028892517,
              left_val: 0.1656530052423477,
            },
            {
              features: [
                [3, 4, 15, 16, -1],
                [3, 12, 15, 8, 2],
              ],
              threshold: 0.0836383774876595,
              right_val: 0.1957294940948486,
              left_val: 0.5423449873924255,
            },
            {
              features: [
                [7, 15, 6, 4, -1],
                [7, 17, 6, 2, 2],
              ],
              threshold: 0.0012282270472496748,
              right_val: 0.5992503762245178,
              left_val: 0.3417904078960419,
            },
            {
              features: [
                [15, 2, 4, 9, -1],
                [15, 2, 2, 9, 2],
              ],
              threshold: 0.0057629169896245,
              right_val: 0.6079903841018677,
              left_val: 0.3719581961631775,
            },
            {
              features: [
                [2, 3, 3, 2, -1],
                [2, 4, 3, 1, 2],
              ],
              threshold: -0.0016417410224676132,
              right_val: 0.5576915740966797,
              left_val: 0.2577486038208008,
            },
            {
              features: [
                [13, 6, 7, 9, -1],
                [13, 9, 7, 3, 3],
              ],
              threshold: 0.0034113149158656597,
              right_val: 0.5514171719551086,
              left_val: 0.2950749099254608,
            },
            {
              features: [
                [8, 11, 4, 3, -1],
                [8, 12, 4, 1, 3],
              ],
              threshold: -0.0110693201422691,
              right_val: 0.4477078914642334,
              left_val: 0.7569358944892883,
            },
            {
              features: [
                [0, 2, 20, 6, -1],
                [10, 2, 10, 3, 2],
                [0, 5, 10, 3, 2],
              ],
              threshold: 0.0348659716546535,
              right_val: 0.2669621109962463,
              left_val: 0.5583708882331848,
            },
            {
              features: [
                [3, 2, 6, 10, -1],
                [3, 2, 3, 5, 2],
                [6, 7, 3, 5, 2],
              ],
              threshold: 0.0006570109981112182,
              right_val: 0.2988890111446381,
              left_val: 0.5627313256263733,
            },
            {
              features: [
                [13, 10, 3, 4, -1],
                [13, 12, 3, 2, 2],
              ],
              threshold: -0.0243391301482916,
              right_val: 0.5108863115310669,
              left_val: 0.2771185040473938,
            },
            {
              features: [
                [4, 10, 3, 4, -1],
                [4, 12, 3, 2, 2],
              ],
              threshold: 0.0005943520227447152,
              right_val: 0.3120341897010803,
              left_val: 0.5580651760101318,
            },
            {
              features: [
                [7, 5, 6, 3, -1],
                [9, 5, 2, 3, 3],
              ],
              threshold: 0.0022971509024500847,
              right_val: 0.5679075717926025,
              left_val: 0.3330250084400177,
            },
            {
              features: [
                [7, 6, 6, 8, -1],
                [7, 10, 6, 4, 2],
              ],
              threshold: -0.0037801829166710377,
              right_val: 0.5344808101654053,
              left_val: 0.2990534901618958,
            },
            {
              features: [
                [0, 11, 20, 6, -1],
                [0, 14, 20, 3, 2],
              ],
              threshold: -0.13420669734478,
              right_val: 0.5392568111419678,
              left_val: 0.1463858932256699,
            },
            {
              features: [
                [4, 13, 4, 6, -1],
                [4, 13, 2, 3, 2],
                [6, 16, 2, 3, 2],
              ],
              threshold: 0.0007522454834543169,
              right_val: 0.5692734718322754,
              left_val: 0.3746953904628754,
            },
            {
              features: [
                [6, 0, 8, 12, -1],
                [10, 0, 4, 6, 2],
                [6, 6, 4, 6, 2],
              ],
              threshold: -0.040545541793108,
              right_val: 0.5484297871589661,
              left_val: 0.2754747867584229,
            },
            {
              features: [
                [2, 0, 15, 2, -1],
                [2, 1, 15, 1, 2],
              ],
              threshold: 0.0012572970008477569,
              right_val: 0.5756075978279114,
              left_val: 0.3744584023952484,
            },
            {
              features: [
                [9, 12, 2, 3, -1],
                [9, 13, 2, 1, 3],
              ],
              threshold: -0.007424994837492704,
              right_val: 0.4728231132030487,
              left_val: 0.7513859272003174,
            },
            {
              features: [
                [3, 12, 1, 2, -1],
                [3, 13, 1, 1, 2],
              ],
              threshold: 0.0005090812919661403,
              right_val: 0.2932321131229401,
              left_val: 0.540489673614502,
            },
            {
              features: [
                [9, 11, 2, 3, -1],
                [9, 12, 2, 1, 3],
              ],
              threshold: -0.001280845026485622,
              right_val: 0.4273349046707153,
              left_val: 0.6169779896736145,
            },
            {
              features: [
                [7, 3, 3, 1, -1],
                [8, 3, 1, 1, 3],
              ],
              threshold: -0.0018348860321566463,
              right_val: 0.5206472277641296,
              left_val: 0.2048496007919312,
            },
            {
              features: [
                [17, 7, 3, 6, -1],
                [17, 9, 3, 2, 3],
              ],
              threshold: 0.0274848695844412,
              right_val: 0.1675522029399872,
              left_val: 0.5252984762191772,
            },
            {
              features: [
                [7, 2, 3, 2, -1],
                [8, 2, 1, 2, 3],
              ],
              threshold: 0.0022372419480234385,
              right_val: 0.2777658104896545,
              left_val: 0.5267782807350159,
            },
            {
              features: [
                [11, 4, 5, 3, -1],
                [11, 5, 5, 1, 3],
              ],
              threshold: -0.008863529190421104,
              right_val: 0.4812048971652985,
              left_val: 0.69545578956604,
            },
            {
              features: [
                [4, 4, 5, 3, -1],
                [4, 5, 5, 1, 3],
              ],
              threshold: 0.004175397101789713,
              right_val: 0.6349195837974548,
              left_val: 0.4291887879371643,
            },
            {
              features: [
                [19, 3, 1, 2, -1],
                [19, 4, 1, 1, 2],
              ],
              threshold: -0.0017098189564421773,
              right_val: 0.5361248850822449,
              left_val: 0.2930536866188049,
            },
            {
              features: [
                [5, 5, 4, 3, -1],
                [5, 6, 4, 1, 3],
              ],
              threshold: 0.006532854866236448,
              right_val: 0.7409694194793701,
              left_val: 0.4495325088500977,
            },
            {
              features: [
                [17, 7, 3, 6, -1],
                [17, 9, 3, 2, 3],
              ],
              threshold: -0.009537290781736374,
              right_val: 0.5416501760482788,
              left_val: 0.3149119913578033,
            },
            {
              features: [
                [0, 7, 3, 6, -1],
                [0, 9, 3, 2, 3],
              ],
              threshold: 0.0253109894692898,
              right_val: 0.1311707943677902,
              left_val: 0.5121892094612122,
            },
            {
              features: [
                [14, 2, 6, 9, -1],
                [14, 5, 6, 3, 3],
              ],
              threshold: 0.0364609695971012,
              right_val: 0.2591339945793152,
              left_val: 0.5175911784172058,
            },
            {
              features: [
                [0, 4, 5, 6, -1],
                [0, 6, 5, 2, 3],
              ],
              threshold: 0.0208543296903372,
              right_val: 0.1582316011190414,
              left_val: 0.5137140154838562,
            },
            {
              features: [
                [10, 5, 6, 2, -1],
                [12, 5, 2, 2, 3],
              ],
              threshold: -0.0008720774785615504,
              right_val: 0.439897894859314,
              left_val: 0.5574309825897217,
            },
            {
              features: [
                [4, 5, 6, 2, -1],
                [6, 5, 2, 2, 3],
              ],
              threshold: -15227000403683633e-21,
              right_val: 0.3708069920539856,
              left_val: 0.5548940896987915,
            },
            {
              features: [
                [8, 1, 4, 6, -1],
                [8, 3, 4, 2, 3],
              ],
              threshold: -0.0008431650931015611,
              right_val: 0.5554211139678955,
              left_val: 0.3387419879436493,
            },
            {
              features: [
                [0, 2, 3, 6, -1],
                [0, 4, 3, 2, 3],
              ],
              threshold: 0.0036037859972566366,
              right_val: 0.3411171138286591,
              left_val: 0.5358061790466309,
            },
            {
              features: [
                [6, 6, 8, 3, -1],
                [6, 7, 8, 1, 3],
              ],
              threshold: -0.006805789191275835,
              right_val: 0.4345862865447998,
              left_val: 0.6125202775001526,
            },
            {
              features: [
                [0, 1, 5, 9, -1],
                [0, 4, 5, 3, 3],
              ],
              threshold: -0.0470216609537601,
              right_val: 0.519373893737793,
              left_val: 0.2358165979385376,
            },
            {
              features: [
                [16, 0, 4, 15, -1],
                [16, 0, 2, 15, 2],
              ],
              threshold: -0.0369541086256504,
              right_val: 0.4760943949222565,
              left_val: 0.7323111295700073,
            },
            {
              features: [
                [1, 10, 3, 2, -1],
                [1, 11, 3, 1, 2],
              ],
              threshold: 0.0010439479956403375,
              right_val: 0.3411330878734589,
              left_val: 0.5419455170631409,
            },
            {
              features: [
                [14, 4, 1, 10, -1],
                [14, 9, 1, 5, 2],
              ],
              threshold: -0.00021050689974799752,
              right_val: 0.5554947257041931,
              left_val: 0.2821694016456604,
            },
            {
              features: [
                [0, 1, 4, 12, -1],
                [2, 1, 2, 12, 2],
              ],
              threshold: -0.0808315873146057,
              right_val: 0.4697434902191162,
              left_val: 0.9129930138587952,
            },
            {
              features: [
                [11, 11, 4, 2, -1],
                [11, 11, 2, 2, 2],
              ],
              threshold: -0.0003657905908767134,
              right_val: 0.3978292942047119,
              left_val: 0.6022670269012451,
            },
            {
              features: [
                [5, 11, 4, 2, -1],
                [7, 11, 2, 2, 2],
              ],
              threshold: -0.00012545920617412776,
              right_val: 0.384553998708725,
              left_val: 0.5613213181495667,
            },
            {
              features: [
                [3, 8, 15, 5, -1],
                [8, 8, 5, 5, 3],
              ],
              threshold: -0.0687864869832993,
              right_val: 0.5300496816635132,
              left_val: 0.2261611968278885,
            },
            {
              features: [
                [0, 0, 6, 10, -1],
                [3, 0, 3, 10, 2],
              ],
              threshold: 0.0124157899990678,
              right_val: 0.5828812122344971,
              left_val: 0.4075691998004913,
            },
            {
              features: [
                [11, 4, 3, 2, -1],
                [12, 4, 1, 2, 3],
              ],
              threshold: -0.004717481788247824,
              right_val: 0.5267757773399353,
              left_val: 0.2827253937721252,
            },
            {
              features: [
                [8, 12, 3, 8, -1],
                [8, 16, 3, 4, 2],
              ],
              threshold: 0.0381368584930897,
              right_val: 0.1023615971207619,
              left_val: 0.5074741244316101,
            },
            {
              features: [
                [8, 14, 5, 3, -1],
                [8, 15, 5, 1, 3],
              ],
              threshold: -0.0028168049175292253,
              right_val: 0.4359692931175232,
              left_val: 0.6169006824493408,
            },
            {
              features: [
                [7, 14, 4, 3, -1],
                [7, 15, 4, 1, 3],
              ],
              threshold: 0.008130360394716263,
              right_val: 0.76060950756073,
              left_val: 0.4524433016777039,
            },
            {
              features: [
                [11, 4, 3, 2, -1],
                [12, 4, 1, 2, 3],
              ],
              threshold: 0.006005601957440376,
              right_val: 0.185971200466156,
              left_val: 0.5240408778190613,
            },
            {
              features: [
                [3, 15, 14, 4, -1],
                [3, 15, 7, 2, 2],
                [10, 17, 7, 2, 2],
              ],
              threshold: 0.0191393196582794,
              right_val: 0.2332071959972382,
              left_val: 0.5209379196166992,
            },
            {
              features: [
                [2, 2, 16, 4, -1],
                [10, 2, 8, 2, 2],
                [2, 4, 8, 2, 2],
              ],
              threshold: 0.0164457596838474,
              right_val: 0.3264234960079193,
              left_val: 0.5450702905654907,
            },
            {
              features: [
                [0, 8, 6, 12, -1],
                [3, 8, 3, 12, 2],
              ],
              threshold: -0.0373568907380104,
              right_val: 0.4533241987228394,
              left_val: 0.6999046802520752,
            },
            {
              features: [
                [5, 7, 10, 2, -1],
                [5, 7, 5, 2, 2],
              ],
              threshold: -0.0197279006242752,
              right_val: 0.54128098487854,
              left_val: 0.2653664946556091,
            },
            {
              features: [
                [9, 7, 2, 5, -1],
                [10, 7, 1, 5, 2],
              ],
              threshold: 0.0066972579807043076,
              right_val: 0.7138652205467224,
              left_val: 0.4480566084384918,
            },
            {
              features: [
                [13, 7, 6, 4, -1],
                [16, 7, 3, 2, 2],
                [13, 9, 3, 2, 2],
              ],
              threshold: 0.0007445752853527665,
              right_val: 0.5471320152282715,
              left_val: 0.4231350123882294,
            },
            {
              features: [
                [0, 13, 8, 2, -1],
                [0, 14, 8, 1, 2],
              ],
              threshold: 0.0011790640419349074,
              right_val: 0.3130455017089844,
              left_val: 0.5341702103614807,
            },
            {
              features: [
                [13, 7, 6, 4, -1],
                [16, 7, 3, 2, 2],
                [13, 9, 3, 2, 2],
              ],
              threshold: 0.0349806100130081,
              right_val: 0.343053013086319,
              left_val: 0.5118659734725952,
            },
            {
              features: [
                [1, 7, 6, 4, -1],
                [1, 7, 3, 2, 2],
                [4, 9, 3, 2, 2],
              ],
              threshold: 0.0005685979267582297,
              right_val: 0.5468639731407166,
              left_val: 0.3532187044620514,
            },
            {
              features: [
                [12, 6, 1, 12, -1],
                [12, 12, 1, 6, 2],
              ],
              threshold: -0.0113406497985125,
              right_val: 0.5348700881004333,
              left_val: 0.2842353880405426,
            },
            {
              features: [
                [9, 5, 2, 6, -1],
                [10, 5, 1, 6, 2],
              ],
              threshold: -0.00662281084805727,
              right_val: 0.4492664933204651,
              left_val: 0.6883640289306641,
            },
            {
              features: [
                [14, 12, 2, 3, -1],
                [14, 13, 2, 1, 3],
              ],
              threshold: -0.008016033098101616,
              right_val: 0.5224308967590332,
              left_val: 0.1709893941879273,
            },
            {
              features: [
                [4, 12, 2, 3, -1],
                [4, 13, 2, 1, 3],
              ],
              threshold: 0.0014206819469109178,
              right_val: 0.299338310956955,
              left_val: 0.5290846228599548,
            },
            {
              features: [
                [8, 12, 4, 3, -1],
                [8, 13, 4, 1, 3],
              ],
              threshold: -0.002780171111226082,
              right_val: 0.4460499882698059,
              left_val: 0.6498854160308838,
            },
            {
              features: [
                [5, 2, 2, 4, -1],
                [5, 2, 1, 2, 2],
                [6, 4, 1, 2, 2],
              ],
              threshold: -0.0014747589593753219,
              right_val: 0.5388113260269165,
              left_val: 0.3260438144207001,
            },
            {
              features: [
                [5, 5, 11, 3, -1],
                [5, 6, 11, 1, 3],
              ],
              threshold: -0.0238303393125534,
              right_val: 0.4801219999790192,
              left_val: 0.7528941035270691,
            },
            {
              features: [
                [7, 6, 4, 12, -1],
                [7, 12, 4, 6, 2],
              ],
              threshold: 0.00693697901442647,
              right_val: 0.3261427879333496,
              left_val: 0.5335165858268738,
            },
            {
              features: [
                [12, 13, 8, 5, -1],
                [12, 13, 4, 5, 2],
              ],
              threshold: 0.008280625566840172,
              right_val: 0.5737829804420471,
              left_val: 0.458039402961731,
            },
            {
              features: [
                [7, 6, 1, 12, -1],
                [7, 12, 1, 6, 2],
              ],
              threshold: -0.0104395002126694,
              right_val: 0.5233827829360962,
              left_val: 0.2592320144176483,
            },
          ],
          threshold: 34.55411148071289,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [1, 2, 6, 3, -1],
                [4, 2, 3, 3, 2],
              ],
              threshold: 0.0072006587870419025,
              right_val: 0.6849808096885681,
              left_val: 0.325888603925705,
            },
            {
              features: [
                [9, 5, 6, 10, -1],
                [12, 5, 3, 5, 2],
                [9, 10, 3, 5, 2],
              ],
              threshold: -0.002859358908608556,
              right_val: 0.2537829875946045,
              left_val: 0.5838881134986877,
            },
            {
              features: [
                [5, 5, 8, 12, -1],
                [5, 5, 4, 6, 2],
                [9, 11, 4, 6, 2],
              ],
              threshold: 0.0006858052802272141,
              right_val: 0.2812424004077911,
              left_val: 0.5708081722259521,
            },
            {
              features: [
                [0, 7, 20, 6, -1],
                [0, 9, 20, 2, 3],
              ],
              threshold: 0.007958019152283669,
              right_val: 0.5544260740280151,
              left_val: 0.2501051127910614,
            },
            {
              features: [
                [4, 2, 2, 2, -1],
                [4, 3, 2, 1, 2],
              ],
              threshold: -0.0012124150525778532,
              right_val: 0.5433350205421448,
              left_val: 0.2385368049144745,
            },
            {
              features: [
                [4, 18, 12, 2, -1],
                [8, 18, 4, 2, 3],
              ],
              threshold: 0.00794261321425438,
              right_val: 0.6220757961273193,
              left_val: 0.3955070972442627,
            },
            {
              features: [
                [7, 4, 4, 16, -1],
                [7, 12, 4, 8, 2],
              ],
              threshold: 0.0024630590341985226,
              right_val: 0.2992357909679413,
              left_val: 0.5639708042144775,
            },
            {
              features: [
                [7, 6, 7, 8, -1],
                [7, 10, 7, 4, 2],
              ],
              threshold: -0.006039659958332777,
              right_val: 0.541167676448822,
              left_val: 0.218651294708252,
            },
            {
              features: [
                [6, 3, 3, 1, -1],
                [7, 3, 1, 1, 3],
              ],
              threshold: -0.0012988339876756072,
              right_val: 0.5364584922790527,
              left_val: 0.23507060110569,
            },
            {
              features: [
                [11, 15, 2, 4, -1],
                [11, 17, 2, 2, 2],
              ],
              threshold: 0.00022299369447864592,
              right_val: 0.572960615158081,
              left_val: 0.380411297082901,
            },
            {
              features: [
                [3, 5, 4, 8, -1],
                [3, 9, 4, 4, 2],
              ],
              threshold: 0.0014654280385002494,
              right_val: 0.5258268713951111,
              left_val: 0.2510167956352234,
            },
            {
              features: [
                [7, 1, 6, 12, -1],
                [7, 7, 6, 6, 2],
              ],
              threshold: -0.0008121004211716354,
              right_val: 0.3851158916950226,
              left_val: 0.5992823839187622,
            },
            {
              features: [
                [4, 6, 6, 2, -1],
                [6, 6, 2, 2, 3],
              ],
              threshold: -0.0013836020370945334,
              right_val: 0.3636586964130402,
              left_val: 0.5681396126747131,
            },
            {
              features: [
                [16, 4, 4, 6, -1],
                [16, 6, 4, 2, 3],
              ],
              threshold: -0.0279364492744207,
              right_val: 0.5377560257911682,
              left_val: 0.1491317003965378,
            },
            {
              features: [
                [3, 3, 5, 2, -1],
                [3, 4, 5, 1, 2],
              ],
              threshold: -0.0004691955109592527,
              right_val: 0.5572484731674194,
              left_val: 0.3692429959774017,
            },
            {
              features: [
                [9, 11, 2, 3, -1],
                [9, 12, 2, 1, 3],
              ],
              threshold: -0.004982965998351574,
              right_val: 0.4532504081726074,
              left_val: 0.6758509278297424,
            },
            {
              features: [
                [2, 16, 4, 2, -1],
                [2, 17, 4, 1, 2],
              ],
              threshold: 0.001881530974060297,
              right_val: 0.2932539880275726,
              left_val: 0.5368022918701172,
            },
            {
              features: [
                [7, 13, 6, 6, -1],
                [10, 13, 3, 3, 2],
                [7, 16, 3, 3, 2],
              ],
              threshold: -0.0190675500780344,
              right_val: 0.5330067276954651,
              left_val: 0.1649377048015595,
            },
            {
              features: [
                [7, 0, 3, 4, -1],
                [8, 0, 1, 4, 3],
              ],
              threshold: -0.0046906559728085995,
              right_val: 0.5119361877441406,
              left_val: 0.1963925957679749,
            },
            {
              features: [
                [8, 15, 4, 3, -1],
                [8, 16, 4, 1, 3],
              ],
              threshold: 0.005977713968604803,
              right_val: 0.7008398175239563,
              left_val: 0.467117190361023,
            },
            {
              features: [
                [0, 4, 4, 6, -1],
                [0, 6, 4, 2, 3],
              ],
              threshold: -0.0333031304180622,
              right_val: 0.5104162096977234,
              left_val: 0.1155416965484619,
            },
            {
              features: [
                [5, 6, 12, 3, -1],
                [9, 6, 4, 3, 3],
              ],
              threshold: 0.0907441079616547,
              right_val: 0.1306173056364059,
              left_val: 0.5149660110473633,
            },
            {
              features: [
                [7, 6, 6, 14, -1],
                [9, 6, 2, 14, 3],
              ],
              threshold: 0.0009355589863844216,
              right_val: 0.543985903263092,
              left_val: 0.3605481088161469,
            },
            {
              features: [
                [9, 7, 3, 3, -1],
                [10, 7, 1, 3, 3],
              ],
              threshold: 0.0149016501381993,
              right_val: 0.7687569856643677,
              left_val: 0.4886212050914764,
            },
            {
              features: [
                [6, 12, 2, 4, -1],
                [6, 14, 2, 2, 2],
              ],
              threshold: 0.0006159411859698594,
              right_val: 0.3240939080715179,
              left_val: 0.5356813073158264,
            },
            {
              features: [
                [10, 12, 7, 6, -1],
                [10, 14, 7, 2, 3],
              ],
              threshold: -0.0506709888577461,
              right_val: 0.5230404138565063,
              left_val: 0.1848621964454651,
            },
            {
              features: [
                [1, 0, 15, 2, -1],
                [1, 1, 15, 1, 2],
              ],
              threshold: 0.0006866574985906482,
              right_val: 0.5517945885658264,
              left_val: 0.3840579986572266,
            },
            {
              features: [
                [14, 0, 6, 6, -1],
                [14, 0, 3, 6, 2],
              ],
              threshold: 0.008371243253350258,
              right_val: 0.6131753921508789,
              left_val: 0.4288564026355743,
            },
            {
              features: [
                [5, 3, 3, 1, -1],
                [6, 3, 1, 1, 3],
              ],
              threshold: -0.0012953069526702166,
              right_val: 0.528073787689209,
              left_val: 0.2913674116134644,
            },
            {
              features: [
                [14, 0, 6, 6, -1],
                [14, 0, 3, 6, 2],
              ],
              threshold: -0.0419416800141335,
              right_val: 0.4856030941009522,
              left_val: 0.7554799914360046,
            },
            {
              features: [
                [0, 3, 20, 10, -1],
                [0, 8, 20, 5, 2],
              ],
              threshold: -0.0235293805599213,
              right_val: 0.5256081223487854,
              left_val: 0.2838279902935028,
            },
            {
              features: [
                [14, 0, 6, 6, -1],
                [14, 0, 3, 6, 2],
              ],
              threshold: 0.0408574491739273,
              right_val: 0.6277297139167786,
              left_val: 0.4870935082435608,
            },
            {
              features: [
                [0, 0, 6, 6, -1],
                [3, 0, 3, 6, 2],
              ],
              threshold: -0.0254068691283464,
              right_val: 0.4575029015541077,
              left_val: 0.7099707722663879,
            },
            {
              features: [
                [19, 15, 1, 2, -1],
                [19, 16, 1, 1, 2],
              ],
              threshold: -0.00041415440500713885,
              right_val: 0.5469412207603455,
              left_val: 0.4030886888504028,
            },
            {
              features: [
                [0, 2, 4, 8, -1],
                [2, 2, 2, 8, 2],
              ],
              threshold: 0.0218241196125746,
              right_val: 0.6768701076507568,
              left_val: 0.4502024054527283,
            },
            {
              features: [
                [2, 1, 18, 4, -1],
                [11, 1, 9, 2, 2],
                [2, 3, 9, 2, 2],
              ],
              threshold: 0.0141140399500728,
              right_val: 0.3791700005531311,
              left_val: 0.5442860722541809,
            },
            {
              features: [
                [8, 12, 1, 2, -1],
                [8, 13, 1, 1, 2],
              ],
              threshold: 6721459067193791e-20,
              right_val: 0.5873476266860962,
              left_val: 0.4200463891029358,
            },
            {
              features: [
                [5, 2, 10, 6, -1],
                [10, 2, 5, 3, 2],
                [5, 5, 5, 3, 2],
              ],
              threshold: -0.00794176384806633,
              right_val: 0.5585265755653381,
              left_val: 0.3792561888694763,
            },
            {
              features: [
                [9, 7, 2, 4, -1],
                [10, 7, 1, 4, 2],
              ],
              threshold: -0.00721444096416235,
              right_val: 0.4603548943996429,
              left_val: 0.7253103852272034,
            },
            {
              features: [
                [9, 7, 3, 3, -1],
                [10, 7, 1, 3, 3],
              ],
              threshold: 0.002581733977422118,
              right_val: 0.5900238752365112,
              left_val: 0.4693301916122437,
            },
            {
              features: [
                [4, 5, 12, 8, -1],
                [8, 5, 4, 8, 3],
              ],
              threshold: 0.1340931951999664,
              right_val: 0.1808844953775406,
              left_val: 0.5149213075637817,
            },
            {
              features: [
                [15, 15, 4, 3, -1],
                [15, 16, 4, 1, 3],
              ],
              threshold: 0.0022962710354477167,
              right_val: 0.3717867136001587,
              left_val: 0.5399743914604187,
            },
            {
              features: [
                [8, 18, 3, 1, -1],
                [9, 18, 1, 1, 3],
              ],
              threshold: -0.002157584996894002,
              right_val: 0.5148863792419434,
              left_val: 0.2408495992422104,
            },
            {
              features: [
                [9, 13, 4, 3, -1],
                [9, 14, 4, 1, 3],
              ],
              threshold: -0.004919618833810091,
              right_val: 0.4738740026950836,
              left_val: 0.6573588252067566,
            },
            {
              features: [
                [7, 13, 4, 3, -1],
                [7, 14, 4, 1, 3],
              ],
              threshold: 0.0016267469618469477,
              right_val: 0.6303114295005798,
              left_val: 0.4192821979522705,
            },
            {
              features: [
                [19, 15, 1, 2, -1],
                [19, 16, 1, 1, 2],
              ],
              threshold: 0.00033413388882763684,
              right_val: 0.3702101111412048,
              left_val: 0.5540298223495483,
            },
            {
              features: [
                [0, 15, 8, 4, -1],
                [0, 17, 8, 2, 2],
              ],
              threshold: -0.0266980808228254,
              right_val: 0.5101410746574402,
              left_val: 0.1710917949676514,
            },
            {
              features: [
                [9, 3, 6, 4, -1],
                [11, 3, 2, 4, 3],
              ],
              threshold: -0.0305618792772293,
              right_val: 0.5168793797492981,
              left_val: 0.1904218047857285,
            },
            {
              features: [
                [8, 14, 4, 3, -1],
                [8, 15, 4, 1, 3],
              ],
              threshold: 0.002851154888048768,
              right_val: 0.6313853859901428,
              left_val: 0.4447506964206696,
            },
            {
              features: [
                [3, 14, 14, 6, -1],
                [3, 16, 14, 2, 3],
              ],
              threshold: -0.0362114794552326,
              right_val: 0.5377349257469177,
              left_val: 0.2490727007389069,
            },
            {
              features: [
                [6, 3, 6, 6, -1],
                [6, 6, 6, 3, 2],
              ],
              threshold: -0.002411518944427371,
              right_val: 0.3664236962795258,
              left_val: 0.5381243228912354,
            },
            {
              features: [
                [5, 11, 10, 6, -1],
                [5, 14, 10, 3, 2],
              ],
              threshold: -0.0007725320174358785,
              right_val: 0.3541550040245056,
              left_val: 0.5530232191085815,
            },
            {
              features: [
                [3, 10, 3, 4, -1],
                [4, 10, 1, 4, 3],
              ],
              threshold: 0.0002948172914329916,
              right_val: 0.5667243003845215,
              left_val: 0.4132699072360992,
            },
            {
              features: [
                [13, 9, 2, 2, -1],
                [13, 9, 1, 2, 2],
              ],
              threshold: -0.006233456078916788,
              right_val: 0.5198668837547302,
              left_val: 0.0987872332334518,
            },
            {
              features: [
                [5, 3, 6, 4, -1],
                [7, 3, 2, 4, 3],
              ],
              threshold: -0.0262747295200825,
              right_val: 0.5028107166290283,
              left_val: 0.0911274924874306,
            },
            {
              features: [
                [9, 7, 3, 3, -1],
                [10, 7, 1, 3, 3],
              ],
              threshold: 0.005321226082742214,
              right_val: 0.6222720742225647,
              left_val: 0.4726648926734924,
            },
            {
              features: [
                [2, 12, 2, 3, -1],
                [2, 13, 2, 1, 3],
              ],
              threshold: -0.004112905822694302,
              right_val: 0.5137804746627808,
              left_val: 0.2157457023859024,
            },
            {
              features: [
                [9, 8, 3, 12, -1],
                [9, 12, 3, 4, 3],
              ],
              threshold: 0.0032457809429615736,
              right_val: 0.3721776902675629,
              left_val: 0.5410770773887634,
            },
            {
              features: [
                [3, 14, 4, 6, -1],
                [3, 14, 2, 3, 2],
                [5, 17, 2, 3, 2],
              ],
              threshold: -0.0163597092032433,
              right_val: 0.4685291945934296,
              left_val: 0.7787874937057495,
            },
            {
              features: [
                [16, 15, 2, 2, -1],
                [16, 16, 2, 1, 2],
              ],
              threshold: 0.00032166109303943813,
              right_val: 0.4240373969078064,
              left_val: 0.5478987097740173,
            },
            {
              features: [
                [2, 15, 2, 2, -1],
                [2, 16, 2, 1, 2],
              ],
              threshold: 0.000644524407107383,
              right_val: 0.3501324951648712,
              left_val: 0.5330560803413391,
            },
            {
              features: [
                [8, 12, 4, 3, -1],
                [8, 13, 4, 1, 3],
              ],
              threshold: -0.0078909732401371,
              right_val: 0.4726569056510925,
              left_val: 0.6923521161079407,
            },
            {
              features: [
                [0, 7, 20, 1, -1],
                [10, 7, 10, 1, 2],
              ],
              threshold: 0.048336211591959,
              right_val: 0.0757492035627365,
              left_val: 0.50559002161026,
            },
            {
              features: [
                [7, 6, 8, 3, -1],
                [7, 6, 4, 3, 2],
              ],
              threshold: -0.000751781277358532,
              right_val: 0.5538573861122131,
              left_val: 0.3783741891384125,
            },
            {
              features: [
                [5, 7, 8, 2, -1],
                [9, 7, 4, 2, 2],
              ],
              threshold: -0.002495391061529517,
              right_val: 0.5359612107276917,
              left_val: 0.3081651031970978,
            },
            {
              features: [
                [9, 7, 3, 5, -1],
                [10, 7, 1, 5, 3],
              ],
              threshold: -0.0022385010961443186,
              right_val: 0.4649342894554138,
              left_val: 0.663395881652832,
            },
            {
              features: [
                [8, 7, 3, 5, -1],
                [9, 7, 1, 5, 3],
              ],
              threshold: -0.0017988430336117744,
              right_val: 0.4347187876701355,
              left_val: 0.6596844792366028,
            },
            {
              features: [
                [11, 1, 3, 5, -1],
                [12, 1, 1, 5, 3],
              ],
              threshold: 0.008786091580986977,
              right_val: 0.2315579950809479,
              left_val: 0.523183286190033,
            },
            {
              features: [
                [6, 2, 3, 6, -1],
                [7, 2, 1, 6, 3],
              ],
              threshold: 0.003671538084745407,
              right_val: 0.2977376878261566,
              left_val: 0.520425021648407,
            },
            {
              features: [
                [14, 14, 6, 5, -1],
                [14, 14, 3, 5, 2],
              ],
              threshold: -0.0353364497423172,
              right_val: 0.4861505031585693,
              left_val: 0.7238878011703491,
            },
            {
              features: [
                [9, 8, 2, 2, -1],
                [9, 9, 2, 1, 2],
              ],
              threshold: -0.0006918924045749009,
              right_val: 0.5229824781417847,
              left_val: 0.3105022013187408,
            },
            {
              features: [
                [10, 7, 1, 3, -1],
                [10, 8, 1, 1, 3],
              ],
              threshold: -0.003394610946998,
              right_val: 0.5210173726081848,
              left_val: 0.3138968050479889,
            },
            {
              features: [
                [6, 6, 2, 2, -1],
                [6, 6, 1, 1, 2],
                [7, 7, 1, 1, 2],
              ],
              threshold: 0.0009856928372755647,
              right_val: 0.6585097908973694,
              left_val: 0.4536580145359039,
            },
            {
              features: [
                [2, 11, 18, 4, -1],
                [11, 11, 9, 2, 2],
                [2, 13, 9, 2, 2],
              ],
              threshold: -0.0501631014049053,
              right_val: 0.5198916792869568,
              left_val: 0.1804454028606415,
            },
            {
              features: [
                [6, 6, 2, 2, -1],
                [6, 6, 1, 1, 2],
                [7, 7, 1, 1, 2],
              ],
              threshold: -0.0022367259953171015,
              right_val: 0.4651359021663666,
              left_val: 0.7255702018737793,
            },
            {
              features: [
                [0, 15, 20, 2, -1],
                [0, 16, 20, 1, 2],
              ],
              threshold: 0.0007432628772221506,
              right_val: 0.5898545980453491,
              left_val: 0.4412921071052551,
            },
            {
              features: [
                [4, 14, 2, 3, -1],
                [4, 15, 2, 1, 3],
              ],
              threshold: -0.0009348518215119839,
              right_val: 0.5366017818450928,
              left_val: 0.3500052988529205,
            },
            {
              features: [
                [8, 14, 4, 3, -1],
                [8, 15, 4, 1, 3],
              ],
              threshold: 0.0174979399889708,
              right_val: 0.8315284848213196,
              left_val: 0.4912194907665253,
            },
            {
              features: [
                [8, 7, 2, 3, -1],
                [8, 8, 2, 1, 3],
              ],
              threshold: -0.0015200000489130616,
              right_val: 0.537056028842926,
              left_val: 0.3570275902748108,
            },
            {
              features: [
                [9, 10, 2, 3, -1],
                [9, 11, 2, 1, 3],
              ],
              threshold: 0.0007800394087098539,
              right_val: 0.5967335104942322,
              left_val: 0.4353772103786469,
            },
          ],
          threshold: 39.1072883605957,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [5, 4, 10, 4, -1],
                [5, 6, 10, 2, 2],
              ],
              threshold: -0.00999455526471138,
              right_val: 0.3054533004760742,
              left_val: 0.6162583231925964,
            },
            {
              features: [
                [9, 7, 6, 4, -1],
                [12, 7, 3, 2, 2],
                [9, 9, 3, 2, 2],
              ],
              threshold: -0.001108522992581129,
              right_val: 0.3155578076839447,
              left_val: 0.5818294882774353,
            },
            {
              features: [
                [4, 7, 3, 6, -1],
                [4, 9, 3, 2, 3],
              ],
              threshold: 0.001036438043229282,
              right_val: 0.5692911744117737,
              left_val: 0.2552052140235901,
            },
            {
              features: [
                [11, 15, 4, 4, -1],
                [13, 15, 2, 2, 2],
                [11, 17, 2, 2, 2],
              ],
              threshold: 0.000682113110087812,
              right_val: 0.5934931039810181,
              left_val: 0.3685089945793152,
            },
            {
              features: [
                [7, 8, 4, 2, -1],
                [7, 9, 4, 1, 2],
              ],
              threshold: -0.0006805734010413289,
              right_val: 0.5474792122840881,
              left_val: 0.2332392036914825,
            },
            {
              features: [
                [13, 1, 4, 3, -1],
                [13, 1, 2, 3, 2],
              ],
              threshold: 0.0002606878988444805,
              right_val: 0.5667545795440674,
              left_val: 0.325745701789856,
            },
            {
              features: [
                [5, 15, 4, 4, -1],
                [5, 15, 2, 2, 2],
                [7, 17, 2, 2, 2],
              ],
              threshold: 0.0005160737200640142,
              right_val: 0.5845472812652588,
              left_val: 0.3744716942310333,
            },
            {
              features: [
                [9, 5, 4, 7, -1],
                [9, 5, 2, 7, 2],
              ],
              threshold: 0.0008500752155669034,
              right_val: 0.5522807240486145,
              left_val: 0.3420371115207672,
            },
            {
              features: [
                [5, 6, 8, 3, -1],
                [9, 6, 4, 3, 2],
              ],
              threshold: -0.0018607829697430134,
              right_val: 0.5375424027442932,
              left_val: 0.2804419994354248,
            },
            {
              features: [
                [9, 9, 2, 2, -1],
                [9, 10, 2, 1, 2],
              ],
              threshold: -0.001503397012129426,
              right_val: 0.5498952269554138,
              left_val: 0.2579050958156586,
            },
            {
              features: [
                [7, 15, 5, 3, -1],
                [7, 16, 5, 1, 3],
              ],
              threshold: 0.0023478909861296415,
              right_val: 0.6313710808753967,
              left_val: 0.4175156056880951,
            },
            {
              features: [
                [11, 10, 4, 3, -1],
                [11, 10, 2, 3, 2],
              ],
              threshold: -0.00028880240279249847,
              right_val: 0.4052666127681732,
              left_val: 0.5865169763565063,
            },
            {
              features: [
                [6, 9, 8, 10, -1],
                [6, 14, 8, 5, 2],
              ],
              threshold: 0.008940547704696655,
              right_val: 0.231865406036377,
              left_val: 0.5211141109466553,
            },
            {
              features: [
                [10, 11, 6, 2, -1],
                [10, 11, 3, 2, 2],
              ],
              threshold: -0.0193277392536402,
              right_val: 0.5241525769233704,
              left_val: 0.2753432989120483,
            },
            {
              features: [
                [4, 11, 6, 2, -1],
                [7, 11, 3, 2, 2],
              ],
              threshold: -0.0002020206011366099,
              right_val: 0.3677195906639099,
              left_val: 0.5722978711128235,
            },
            {
              features: [
                [11, 3, 8, 1, -1],
                [11, 3, 4, 1, 2],
              ],
              threshold: 0.002117906929925084,
              right_val: 0.5542430877685547,
              left_val: 0.4466108083724976,
            },
            {
              features: [
                [6, 3, 3, 2, -1],
                [7, 3, 1, 2, 3],
              ],
              threshold: -0.0017743760254234076,
              right_val: 0.5300959944725037,
              left_val: 0.2813253104686737,
            },
            {
              features: [
                [14, 5, 6, 5, -1],
                [14, 5, 3, 5, 2],
              ],
              threshold: 0.004223445896059275,
              right_val: 0.5795428156852722,
              left_val: 0.439970999956131,
            },
            {
              features: [
                [7, 5, 2, 12, -1],
                [7, 11, 2, 6, 2],
              ],
              threshold: -0.0143752200528979,
              right_val: 0.5292059183120728,
              left_val: 0.2981117963790894,
            },
            {
              features: [
                [8, 11, 4, 3, -1],
                [8, 12, 4, 1, 3],
              ],
              threshold: -0.0153491804376245,
              right_val: 0.4748171865940094,
              left_val: 0.7705215215682983,
            },
            {
              features: [
                [4, 1, 2, 3, -1],
                [5, 1, 1, 3, 2],
              ],
              threshold: 15152279956964776e-21,
              right_val: 0.5576897263526917,
              left_val: 0.3718844056129456,
            },
            {
              features: [
                [18, 3, 2, 6, -1],
                [18, 5, 2, 2, 3],
              ],
              threshold: -0.009129391983151436,
              right_val: 0.5286766886711121,
              left_val: 0.3615196049213409,
            },
            {
              features: [
                [0, 3, 2, 6, -1],
                [0, 5, 2, 2, 3],
              ],
              threshold: 0.0022512159775942564,
              right_val: 0.3486298024654388,
              left_val: 0.5364704728126526,
            },
            {
              features: [
                [9, 12, 2, 3, -1],
                [9, 13, 2, 1, 3],
              ],
              threshold: -0.0049696918576955795,
              right_val: 0.4676836133003235,
              left_val: 0.6927651762962341,
            },
            {
              features: [
                [7, 13, 4, 3, -1],
                [7, 14, 4, 1, 3],
              ],
              threshold: -0.0128290103748441,
              right_val: 0.4660735130310059,
              left_val: 0.7712153792381287,
            },
            {
              features: [
                [18, 0, 2, 6, -1],
                [18, 2, 2, 2, 3],
              ],
              threshold: -0.009366006590425968,
              right_val: 0.5351287722587585,
              left_val: 0.3374983966350555,
            },
            {
              features: [
                [0, 0, 2, 6, -1],
                [0, 2, 2, 2, 3],
              ],
              threshold: 0.0032452319283038378,
              right_val: 0.3289610147476196,
              left_val: 0.5325189828872681,
            },
            {
              features: [
                [8, 14, 6, 3, -1],
                [8, 15, 6, 1, 3],
              ],
              threshold: -0.0117235602810979,
              right_val: 0.4754300117492676,
              left_val: 0.6837652921676636,
            },
            {
              features: [
                [7, 4, 2, 4, -1],
                [8, 4, 1, 4, 2],
              ],
              threshold: 2925794069597032e-20,
              right_val: 0.5360502004623413,
              left_val: 0.357208788394928,
            },
            {
              features: [
                [8, 5, 4, 6, -1],
                [8, 7, 4, 2, 3],
              ],
              threshold: -22244219508138485e-21,
              right_val: 0.3552064001560211,
              left_val: 0.5541427135467529,
            },
            {
              features: [
                [6, 4, 2, 2, -1],
                [7, 4, 1, 2, 2],
              ],
              threshold: 0.005088150966912508,
              right_val: 0.1256462037563324,
              left_val: 0.5070844292640686,
            },
            {
              features: [
                [3, 14, 14, 4, -1],
                [10, 14, 7, 2, 2],
                [3, 16, 7, 2, 2],
              ],
              threshold: 0.0274296794086695,
              right_val: 0.1625818014144898,
              left_val: 0.5269560217857361,
            },
            {
              features: [
                [6, 15, 6, 2, -1],
                [6, 15, 3, 1, 2],
                [9, 16, 3, 1, 2],
              ],
              threshold: -0.00641428679227829,
              right_val: 0.4584197103977203,
              left_val: 0.7145588994026184,
            },
            {
              features: [
                [14, 15, 6, 2, -1],
                [14, 16, 6, 1, 2],
              ],
              threshold: 0.003347995923832059,
              right_val: 0.3494696915149689,
              left_val: 0.5398612022399902,
            },
            {
              features: [
                [2, 12, 12, 8, -1],
                [2, 16, 12, 4, 2],
              ],
              threshold: -0.0826354920864105,
              right_val: 0.5160226225852966,
              left_val: 0.2439192980527878,
            },
            {
              features: [
                [7, 7, 7, 2, -1],
                [7, 8, 7, 1, 2],
              ],
              threshold: 0.0010261740535497665,
              right_val: 0.5767908096313477,
              left_val: 0.3886891901493073,
            },
            {
              features: [
                [0, 2, 18, 2, -1],
                [0, 3, 18, 1, 2],
              ],
              threshold: -0.0016307090409100056,
              right_val: 0.5347700715065002,
              left_val: 0.3389458060264587,
            },
            {
              features: [
                [9, 6, 2, 5, -1],
                [9, 6, 1, 5, 2],
              ],
              threshold: 0.0024546680506318808,
              right_val: 0.638724684715271,
              left_val: 0.4601413905620575,
            },
            {
              features: [
                [7, 5, 3, 8, -1],
                [8, 5, 1, 8, 3],
              ],
              threshold: -0.0009947651997208595,
              right_val: 0.4120396077632904,
              left_val: 0.5769879221916199,
            },
            {
              features: [
                [9, 6, 3, 4, -1],
                [10, 6, 1, 4, 3],
              ],
              threshold: 0.0154091902077198,
              right_val: 0.7089822292327881,
              left_val: 0.4878709018230438,
            },
            {
              features: [
                [4, 13, 3, 2, -1],
                [4, 14, 3, 1, 2],
              ],
              threshold: 0.001178440055809915,
              right_val: 0.2895244956016541,
              left_val: 0.5263553261756897,
            },
            {
              features: [
                [9, 4, 6, 3, -1],
                [11, 4, 2, 3, 3],
              ],
              threshold: -0.0277019198983908,
              right_val: 0.5219606757164001,
              left_val: 0.149882897734642,
            },
            {
              features: [
                [5, 4, 6, 3, -1],
                [7, 4, 2, 3, 3],
              ],
              threshold: -0.0295053999871016,
              right_val: 0.4999816119670868,
              left_val: 0.024893319234252,
            },
            {
              features: [
                [14, 11, 5, 2, -1],
                [14, 12, 5, 1, 2],
              ],
              threshold: 0.0004515943001024425,
              right_val: 0.4029662907123566,
              left_val: 0.5464622974395752,
            },
            {
              features: [
                [1, 2, 6, 9, -1],
                [3, 2, 2, 9, 3],
              ],
              threshold: 0.007177263963967562,
              right_val: 0.5866296887397766,
              left_val: 0.4271056950092316,
            },
            {
              features: [
                [14, 6, 6, 13, -1],
                [14, 6, 3, 13, 2],
              ],
              threshold: -0.0741820484399796,
              right_val: 0.4919027984142304,
              left_val: 0.6874179244041443,
            },
            {
              features: [
                [3, 6, 14, 8, -1],
                [3, 6, 7, 4, 2],
                [10, 10, 7, 4, 2],
              ],
              threshold: -0.0172541607171297,
              right_val: 0.534873902797699,
              left_val: 0.3370676040649414,
            },
            {
              features: [
                [16, 0, 4, 11, -1],
                [16, 0, 2, 11, 2],
              ],
              threshold: 0.0148515598848462,
              right_val: 0.6129904985427856,
              left_val: 0.4626792967319489,
            },
            {
              features: [
                [3, 4, 12, 12, -1],
                [3, 4, 6, 6, 2],
                [9, 10, 6, 6, 2],
              ],
              threshold: 0.0100020002573729,
              right_val: 0.3423453867435455,
              left_val: 0.5346122980117798,
            },
            {
              features: [
                [11, 4, 5, 3, -1],
                [11, 5, 5, 1, 3],
              ],
              threshold: 0.0020138120744377375,
              right_val: 0.5824304223060608,
              left_val: 0.4643830060958862,
            },
            {
              features: [
                [4, 11, 4, 2, -1],
                [4, 12, 4, 1, 2],
              ],
              threshold: 0.0015135470312088728,
              right_val: 0.2856149971485138,
              left_val: 0.5196396112442017,
            },
            {
              features: [
                [10, 7, 2, 2, -1],
                [10, 7, 1, 2, 2],
              ],
              threshold: 0.003138143103569746,
              right_val: 0.5958529710769653,
              left_val: 0.4838162958621979,
            },
            {
              features: [
                [8, 7, 2, 2, -1],
                [9, 7, 1, 2, 2],
              ],
              threshold: -0.005145044066011906,
              right_val: 0.4741412103176117,
              left_val: 0.8920302987098694,
            },
            {
              features: [
                [9, 17, 3, 2, -1],
                [10, 17, 1, 2, 3],
              ],
              threshold: -0.004473670851439238,
              right_val: 0.5337278842926025,
              left_val: 0.2033942937850952,
            },
            {
              features: [
                [5, 6, 3, 3, -1],
                [5, 7, 3, 1, 3],
              ],
              threshold: 0.001962847076356411,
              right_val: 0.6725863218307495,
              left_val: 0.457163393497467,
            },
            {
              features: [
                [10, 0, 3, 3, -1],
                [11, 0, 1, 3, 3],
              ],
              threshold: 0.005426045041531324,
              right_val: 0.2845670878887177,
              left_val: 0.5271108150482178,
            },
            {
              features: [
                [5, 6, 6, 2, -1],
                [5, 6, 3, 1, 2],
                [8, 7, 3, 1, 2],
              ],
              threshold: 0.0004961146041750908,
              right_val: 0.5718597769737244,
              left_val: 0.4138312935829163,
            },
            {
              features: [
                [12, 16, 4, 3, -1],
                [12, 17, 4, 1, 3],
              ],
              threshold: 0.009372878819704056,
              right_val: 0.2804847061634064,
              left_val: 0.5225151181221008,
            },
            {
              features: [
                [3, 12, 3, 2, -1],
                [3, 13, 3, 1, 2],
              ],
              threshold: 0.0006050089723430574,
              right_val: 0.3314523994922638,
              left_val: 0.523676872253418,
            },
            {
              features: [
                [9, 12, 3, 2, -1],
                [9, 13, 3, 1, 2],
              ],
              threshold: 0.0005679255118593574,
              right_val: 0.6276971101760864,
              left_val: 0.4531059861183167,
            },
            {
              features: [
                [1, 11, 16, 4, -1],
                [1, 11, 8, 2, 2],
                [9, 13, 8, 2, 2],
              ],
              threshold: 0.0246443394571543,
              right_val: 0.2017143964767456,
              left_val: 0.5130851864814758,
            },
            {
              features: [
                [12, 4, 3, 3, -1],
                [12, 5, 3, 1, 3],
              ],
              threshold: -0.0102904504165053,
              right_val: 0.4876641035079956,
              left_val: 0.7786595225334167,
            },
            {
              features: [
                [4, 4, 5, 3, -1],
                [4, 5, 5, 1, 3],
              ],
              threshold: 0.002062941901385784,
              right_val: 0.5881264209747314,
              left_val: 0.4288598895072937,
            },
            {
              features: [
                [12, 16, 4, 3, -1],
                [12, 17, 4, 1, 3],
              ],
              threshold: -0.005051948130130768,
              right_val: 0.5286008715629578,
              left_val: 0.3523977994918823,
            },
            {
              features: [
                [5, 4, 3, 3, -1],
                [5, 5, 3, 1, 3],
              ],
              threshold: -0.0057692620903253555,
              right_val: 0.4588094055652618,
              left_val: 0.6841086149215698,
            },
            {
              features: [
                [9, 0, 2, 2, -1],
                [9, 1, 2, 1, 2],
              ],
              threshold: -0.0004578994121402502,
              right_val: 0.5485978126525879,
              left_val: 0.356552004814148,
            },
            {
              features: [
                [8, 9, 4, 2, -1],
                [8, 10, 4, 1, 2],
              ],
              threshold: -0.0007591883768327534,
              right_val: 0.5254197120666504,
              left_val: 0.336879312992096,
            },
            {
              features: [
                [8, 8, 4, 3, -1],
                [8, 9, 4, 1, 3],
              ],
              threshold: -0.001773725962266326,
              right_val: 0.5454015135765076,
              left_val: 0.3422161042690277,
            },
            {
              features: [
                [0, 13, 6, 3, -1],
                [2, 13, 2, 3, 3],
              ],
              threshold: -0.008561046794056892,
              right_val: 0.4485856890678406,
              left_val: 0.6533612012863159,
            },
            {
              features: [
                [16, 14, 3, 2, -1],
                [16, 15, 3, 1, 2],
              ],
              threshold: 0.0017277270089834929,
              right_val: 0.3925352990627289,
              left_val: 0.5307580232620239,
            },
            {
              features: [
                [1, 18, 18, 2, -1],
                [7, 18, 6, 2, 3],
              ],
              threshold: -0.0281996093690395,
              right_val: 0.4588584005832672,
              left_val: 0.685745894908905,
            },
            {
              features: [
                [16, 14, 3, 2, -1],
                [16, 15, 3, 1, 2],
              ],
              threshold: -0.001778110978193581,
              right_val: 0.5369856953620911,
              left_val: 0.4037851095199585,
            },
            {
              features: [
                [1, 14, 3, 2, -1],
                [1, 15, 3, 1, 2],
              ],
              threshold: 0.00033177141449414194,
              right_val: 0.3705750107765198,
              left_val: 0.539979875087738,
            },
            {
              features: [
                [7, 14, 6, 3, -1],
                [7, 15, 6, 1, 3],
              ],
              threshold: 0.0026385399978607893,
              right_val: 0.6452730894088745,
              left_val: 0.4665437042713165,
            },
            {
              features: [
                [5, 14, 8, 3, -1],
                [5, 15, 8, 1, 3],
              ],
              threshold: -0.0021183069329708815,
              right_val: 0.4064677059650421,
              left_val: 0.5914781093597412,
            },
            {
              features: [
                [10, 6, 4, 14, -1],
                [10, 6, 2, 14, 2],
              ],
              threshold: -0.0147732896730304,
              right_val: 0.5294762849807739,
              left_val: 0.3642038106918335,
            },
            {
              features: [
                [6, 6, 4, 14, -1],
                [8, 6, 2, 14, 2],
              ],
              threshold: -0.0168154407292604,
              right_val: 0.5144972801208496,
              left_val: 0.2664231956005096,
            },
            {
              features: [
                [13, 5, 2, 3, -1],
                [13, 6, 2, 1, 3],
              ],
              threshold: -0.006337014026939869,
              right_val: 0.4852097928524017,
              left_val: 0.6779531240463257,
            },
            {
              features: [
                [7, 16, 6, 1, -1],
                [9, 16, 2, 1, 3],
              ],
              threshold: -44560048991115764e-21,
              right_val: 0.4153054058551788,
              left_val: 0.5613964796066284,
            },
            {
              features: [
                [9, 12, 3, 3, -1],
                [9, 13, 3, 1, 3],
              ],
              threshold: -0.0010240620467811823,
              right_val: 0.4566304087638855,
              left_val: 0.5964478254318237,
            },
            {
              features: [
                [7, 0, 3, 3, -1],
                [8, 0, 1, 3, 3],
              ],
              threshold: -0.00231616897508502,
              right_val: 0.5188159942626953,
              left_val: 0.2976115047931671,
            },
            {
              features: [
                [4, 0, 16, 18, -1],
                [4, 9, 16, 9, 2],
              ],
              threshold: 0.5321757197380066,
              right_val: 0.220263198018074,
              left_val: 0.5187839269638062,
            },
            {
              features: [
                [1, 1, 16, 14, -1],
                [1, 8, 16, 7, 2],
              ],
              threshold: -0.1664305031299591,
              right_val: 0.5060343146324158,
              left_val: 0.1866022944450378,
            },
            {
              features: [
                [3, 9, 15, 4, -1],
                [8, 9, 5, 4, 3],
              ],
              threshold: 0.112535297870636,
              right_val: 0.1185022965073586,
              left_val: 0.5212125182151794,
            },
            {
              features: [
                [6, 12, 7, 3, -1],
                [6, 13, 7, 1, 3],
              ],
              threshold: 0.009304686449468136,
              right_val: 0.6826149225234985,
              left_val: 0.4589937031269074,
            },
            {
              features: [
                [14, 15, 2, 3, -1],
                [14, 16, 2, 1, 3],
              ],
              threshold: -0.004625509958714247,
              right_val: 0.5225008726119995,
              left_val: 0.3079940974712372,
            },
            {
              features: [
                [2, 3, 16, 14, -1],
                [2, 3, 8, 7, 2],
                [10, 10, 8, 7, 2],
              ],
              threshold: -0.1111646965146065,
              right_val: 0.5080801844596863,
              left_val: 0.2101044058799744,
            },
            {
              features: [
                [16, 2, 4, 18, -1],
                [18, 2, 2, 9, 2],
                [16, 11, 2, 9, 2],
              ],
              threshold: -0.0108884396031499,
              right_val: 0.4790464043617249,
              left_val: 0.5765355229377747,
            },
            {
              features: [
                [4, 15, 2, 3, -1],
                [4, 16, 2, 1, 3],
              ],
              threshold: 0.005856430158019066,
              right_val: 0.1563598960638046,
              left_val: 0.5065100193023682,
            },
            {
              features: [
                [16, 2, 4, 18, -1],
                [18, 2, 2, 9, 2],
                [16, 11, 2, 9, 2],
              ],
              threshold: 0.0548543892800808,
              right_val: 0.7230510711669922,
              left_val: 0.49669149518013,
            },
            {
              features: [
                [1, 1, 8, 3, -1],
                [1, 2, 8, 1, 3],
              ],
              threshold: -0.0111973397433758,
              right_val: 0.5098798274993896,
              left_val: 0.2194979041814804,
            },
            {
              features: [
                [8, 11, 4, 3, -1],
                [8, 12, 4, 1, 3],
              ],
              threshold: 0.004406907130032778,
              right_val: 0.6770902872085571,
              left_val: 0.4778401851654053,
            },
            {
              features: [
                [5, 11, 5, 9, -1],
                [5, 14, 5, 3, 3],
              ],
              threshold: -0.0636652931571007,
              right_val: 0.5081024169921875,
              left_val: 0.1936362981796265,
            },
            {
              features: [
                [16, 0, 4, 11, -1],
                [16, 0, 2, 11, 2],
              ],
              threshold: -0.009808149188756943,
              right_val: 0.4810341000556946,
              left_val: 0.599906325340271,
            },
            {
              features: [
                [7, 0, 6, 1, -1],
                [9, 0, 2, 1, 3],
              ],
              threshold: -0.0021717099007219076,
              right_val: 0.5235472917556763,
              left_val: 0.3338333964347839,
            },
            {
              features: [
                [16, 3, 3, 7, -1],
                [17, 3, 1, 7, 3],
              ],
              threshold: -0.0133155202493072,
              right_val: 0.4919213056564331,
              left_val: 0.6617069840431213,
            },
            {
              features: [
                [1, 3, 3, 7, -1],
                [2, 3, 1, 7, 3],
              ],
              threshold: 0.002544207964092493,
              right_val: 0.6082184910774231,
              left_val: 0.4488744139671326,
            },
            {
              features: [
                [7, 8, 6, 12, -1],
                [7, 12, 6, 4, 3],
              ],
              threshold: 0.0120378397405148,
              right_val: 0.3292432129383087,
              left_val: 0.540939211845398,
            },
            {
              features: [
                [0, 0, 4, 11, -1],
                [2, 0, 2, 11, 2],
              ],
              threshold: -0.0207010507583618,
              right_val: 0.4594995975494385,
              left_val: 0.6819120049476624,
            },
            {
              features: [
                [14, 0, 6, 20, -1],
                [14, 0, 3, 20, 2],
              ],
              threshold: 0.0276082791388035,
              right_val: 0.5767282843589783,
              left_val: 0.4630792140960693,
            },
            {
              features: [
                [0, 3, 1, 2, -1],
                [0, 4, 1, 1, 2],
              ],
              threshold: 0.0012370620388537645,
              right_val: 0.2635016143321991,
              left_val: 0.5165379047393799,
            },
            {
              features: [
                [5, 5, 10, 8, -1],
                [10, 5, 5, 4, 2],
                [5, 9, 5, 4, 2],
              ],
              threshold: -0.037669338285923,
              right_val: 0.5278980135917664,
              left_val: 0.2536393105983734,
            },
            {
              features: [
                [4, 7, 12, 4, -1],
                [4, 7, 6, 2, 2],
                [10, 9, 6, 2, 2],
              ],
              threshold: -0.0018057259730994701,
              right_val: 0.5517500042915344,
              left_val: 0.3985156118869782,
            },
          ],
          threshold: 50.61048126220703,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [2, 1, 6, 4, -1],
                [5, 1, 3, 4, 2],
              ],
              threshold: 0.004429902881383896,
              right_val: 0.633522629737854,
              left_val: 0.2891018092632294,
            },
            {
              features: [
                [9, 7, 6, 4, -1],
                [12, 7, 3, 2, 2],
                [9, 9, 3, 2, 2],
              ],
              threshold: -0.0023813319858163595,
              right_val: 0.3477487862110138,
              left_val: 0.621178925037384,
            },
            {
              features: [
                [5, 6, 2, 6, -1],
                [5, 9, 2, 3, 2],
              ],
              threshold: 0.0022915711160749197,
              right_val: 0.5582118034362793,
              left_val: 0.2254412025213242,
            },
            {
              features: [
                [9, 16, 6, 4, -1],
                [12, 16, 3, 2, 2],
                [9, 18, 3, 2, 2],
              ],
              threshold: 0.0009945794008672237,
              right_val: 0.5930070877075195,
              left_val: 0.3711710870265961,
            },
            {
              features: [
                [9, 4, 2, 12, -1],
                [9, 10, 2, 6, 2],
              ],
              threshold: 0.0007716466789133847,
              right_val: 0.334799587726593,
              left_val: 0.565172016620636,
            },
            {
              features: [
                [7, 1, 6, 18, -1],
                [9, 1, 2, 18, 3],
              ],
              threshold: -0.001138641033321619,
              right_val: 0.5508630871772766,
              left_val: 0.3069126009941101,
            },
            {
              features: [
                [4, 12, 12, 2, -1],
                [8, 12, 4, 2, 3],
              ],
              threshold: -0.0001640303962631151,
              right_val: 0.3699047863483429,
              left_val: 0.576282799243927,
            },
            {
              features: [
                [8, 8, 6, 2, -1],
                [8, 9, 6, 1, 2],
              ],
              threshold: 29793529392918572e-21,
              right_val: 0.5437911152839661,
              left_val: 0.2644244134426117,
            },
            {
              features: [
                [8, 0, 3, 6, -1],
                [9, 0, 1, 6, 3],
              ],
              threshold: 0.008577490225434303,
              right_val: 0.1795724928379059,
              left_val: 0.5051138997077942,
            },
            {
              features: [
                [11, 18, 3, 2, -1],
                [11, 19, 3, 1, 2],
              ],
              threshold: -0.0002603268949314952,
              right_val: 0.4446826875209808,
              left_val: 0.5826969146728516,
            },
            {
              features: [
                [1, 1, 17, 4, -1],
                [1, 3, 17, 2, 2],
              ],
              threshold: -0.006140463054180145,
              right_val: 0.5346971750259399,
              left_val: 0.3113852143287659,
            },
            {
              features: [
                [11, 8, 4, 12, -1],
                [11, 8, 2, 12, 2],
              ],
              threshold: -0.0230869501829147,
              right_val: 0.533119797706604,
              left_val: 0.32779461145401,
            },
            {
              features: [
                [8, 14, 4, 3, -1],
                [8, 15, 4, 1, 3],
              ],
              threshold: -0.0142436502501369,
              right_val: 0.4588063061237335,
              left_val: 0.7381709814071655,
            },
            {
              features: [
                [12, 3, 2, 17, -1],
                [12, 3, 1, 17, 2],
              ],
              threshold: 0.0194871295243502,
              right_val: 0.2274471968412399,
              left_val: 0.5256630778312683,
            },
            {
              features: [
                [4, 7, 6, 1, -1],
                [6, 7, 2, 1, 3],
              ],
              threshold: -0.0009668110869824886,
              right_val: 0.3815006911754608,
              left_val: 0.5511230826377869,
            },
            {
              features: [
                [18, 3, 2, 3, -1],
                [18, 4, 2, 1, 3],
              ],
              threshold: 0.003147470997646451,
              right_val: 0.2543726861476898,
              left_val: 0.5425636768341064,
            },
            {
              features: [
                [8, 4, 3, 4, -1],
                [8, 6, 3, 2, 2],
              ],
              threshold: -0.00018026070029009134,
              right_val: 0.3406304121017456,
              left_val: 0.5380191802978516,
            },
            {
              features: [
                [4, 5, 12, 10, -1],
                [4, 10, 12, 5, 2],
              ],
              threshold: -0.006026626098901033,
              right_val: 0.54205721616745,
              left_val: 0.3035801947116852,
            },
            {
              features: [
                [5, 18, 4, 2, -1],
                [7, 18, 2, 2, 2],
              ],
              threshold: 0.00044462960795499384,
              right_val: 0.5660110116004944,
              left_val: 0.3990997076034546,
            },
            {
              features: [
                [17, 2, 3, 6, -1],
                [17, 4, 3, 2, 3],
              ],
              threshold: 0.002260976005345583,
              right_val: 0.3940688073635101,
              left_val: 0.5562806725502014,
            },
            {
              features: [
                [7, 7, 6, 6, -1],
                [9, 7, 2, 6, 3],
              ],
              threshold: 0.0511330589652061,
              right_val: 0.7118561863899231,
              left_val: 0.4609653949737549,
            },
            {
              features: [
                [17, 2, 3, 6, -1],
                [17, 4, 3, 2, 3],
              ],
              threshold: -0.0177863091230392,
              right_val: 0.5322144031524658,
              left_val: 0.2316166013479233,
            },
            {
              features: [
                [8, 0, 3, 4, -1],
                [9, 0, 1, 4, 3],
              ],
              threshold: -0.004967962857335806,
              right_val: 0.5122029185295105,
              left_val: 0.233077198266983,
            },
            {
              features: [
                [9, 14, 2, 3, -1],
                [9, 15, 2, 1, 3],
              ],
              threshold: 0.002066768938675523,
              right_val: 0.6455488204956055,
              left_val: 0.4657444059848785,
            },
            {
              features: [
                [0, 12, 6, 3, -1],
                [0, 13, 6, 1, 3],
              ],
              threshold: 0.007441376801580191,
              right_val: 0.236163392663002,
              left_val: 0.5154392123222351,
            },
            {
              features: [
                [8, 14, 4, 3, -1],
                [8, 15, 4, 1, 3],
              ],
              threshold: -0.003627727972343564,
              right_val: 0.4476661086082459,
              left_val: 0.6219773292541504,
            },
            {
              features: [
                [3, 12, 2, 3, -1],
                [3, 13, 2, 1, 3],
              ],
              threshold: -0.005353075917810202,
              right_val: 0.5102208256721497,
              left_val: 0.1837355047464371,
            },
            {
              features: [
                [5, 6, 12, 7, -1],
                [9, 6, 4, 7, 3],
              ],
              threshold: 0.1453091949224472,
              right_val: 0.1535930931568146,
              left_val: 0.5145987272262573,
            },
            {
              features: [
                [0, 2, 3, 6, -1],
                [0, 4, 3, 2, 3],
              ],
              threshold: 0.0024394490756094456,
              right_val: 0.3624661862850189,
              left_val: 0.5343660116195679,
            },
            {
              features: [
                [14, 6, 1, 3, -1],
                [14, 7, 1, 1, 3],
              ],
              threshold: -0.003128339070826769,
              right_val: 0.4845592081546783,
              left_val: 0.6215007901191711,
            },
            {
              features: [
                [2, 0, 3, 14, -1],
                [3, 0, 1, 14, 3],
              ],
              threshold: 0.0017940260004252195,
              right_val: 0.5824198126792908,
              left_val: 0.4299261868000031,
            },
            {
              features: [
                [12, 14, 5, 6, -1],
                [12, 16, 5, 2, 3],
              ],
              threshold: 0.0362538211047649,
              right_val: 0.1439467966556549,
              left_val: 0.5260334014892578,
            },
            {
              features: [
                [4, 14, 5, 6, -1],
                [4, 16, 5, 2, 3],
              ],
              threshold: -0.005174672231078148,
              right_val: 0.5287045240402222,
              left_val: 0.350653886795044,
            },
            {
              features: [
                [11, 10, 2, 2, -1],
                [12, 10, 1, 1, 2],
                [11, 11, 1, 1, 2],
              ],
              threshold: 0.0006538329762406647,
              right_val: 0.6122040152549744,
              left_val: 0.4809640944004059,
            },
            {
              features: [
                [5, 0, 3, 14, -1],
                [6, 0, 1, 14, 3],
              ],
              threshold: -0.0264802295714617,
              right_val: 0.5045586228370667,
              left_val: 0.1139362007379532,
            },
            {
              features: [
                [10, 15, 2, 3, -1],
                [10, 16, 2, 1, 3],
              ],
              threshold: -0.0030440660193562508,
              right_val: 0.4794734120368958,
              left_val: 0.6352095007896423,
            },
            {
              features: [
                [0, 2, 2, 3, -1],
                [0, 3, 2, 1, 3],
              ],
              threshold: 0.0036993520334362984,
              right_val: 0.2498510926961899,
              left_val: 0.5131118297576904,
            },
            {
              features: [
                [5, 11, 12, 6, -1],
                [5, 14, 12, 3, 2],
              ],
              threshold: -0.0003676293126773089,
              right_val: 0.3709532022476196,
              left_val: 0.54213947057724,
            },
            {
              features: [
                [6, 11, 3, 9, -1],
                [6, 14, 3, 3, 3],
              ],
              threshold: -0.041382260620594,
              right_val: 0.5081691741943359,
              left_val: 0.1894959956407547,
            },
            {
              features: [
                [11, 10, 2, 2, -1],
                [12, 10, 1, 1, 2],
                [11, 11, 1, 1, 2],
              ],
              threshold: -0.0010532729793339968,
              right_val: 0.4783608913421631,
              left_val: 0.645436704158783,
            },
            {
              features: [
                [5, 6, 1, 3, -1],
                [5, 7, 1, 1, 3],
              ],
              threshold: -0.0021648600231856108,
              right_val: 0.449982613325119,
              left_val: 0.6215031147003174,
            },
            {
              features: [
                [4, 9, 13, 3, -1],
                [4, 10, 13, 1, 3],
              ],
              threshold: -0.0005674774874933064,
              right_val: 0.5419334769248962,
              left_val: 0.3712610900402069,
            },
            {
              features: [
                [1, 7, 15, 6, -1],
                [6, 7, 5, 6, 3],
              ],
              threshold: 0.173758402466774,
              right_val: 0.1215742006897926,
              left_val: 0.5023643970489502,
            },
            {
              features: [
                [4, 5, 12, 6, -1],
                [8, 5, 4, 6, 3],
              ],
              threshold: -0.0029049699660390615,
              right_val: 0.5381883978843689,
              left_val: 0.3240267932415009,
            },
            {
              features: [
                [8, 10, 4, 3, -1],
                [8, 11, 4, 1, 3],
              ],
              threshold: 0.0012299539521336555,
              right_val: 0.5703486204147339,
              left_val: 0.4165507853031158,
            },
            {
              features: [
                [15, 14, 1, 3, -1],
                [15, 15, 1, 1, 3],
              ],
              threshold: -0.0005432923790067434,
              right_val: 0.554754912853241,
              left_val: 0.3854042887687683,
            },
            {
              features: [
                [1, 11, 5, 3, -1],
                [1, 12, 5, 1, 3],
              ],
              threshold: -0.008329725824296474,
              right_val: 0.5097082853317261,
              left_val: 0.2204494029283524,
            },
            {
              features: [
                [7, 1, 7, 12, -1],
                [7, 7, 7, 6, 2],
              ],
              threshold: -0.00010417630255687982,
              right_val: 0.4303036034107208,
              left_val: 0.560706615447998,
            },
            {
              features: [
                [0, 1, 6, 10, -1],
                [0, 1, 3, 5, 2],
                [3, 6, 3, 5, 2],
              ],
              threshold: 0.0312047004699707,
              right_val: 0.6982004046440125,
              left_val: 0.4621657133102417,
            },
            {
              features: [
                [16, 1, 4, 3, -1],
                [16, 2, 4, 1, 3],
              ],
              threshold: 0.007894350215792656,
              right_val: 0.226906806230545,
              left_val: 0.5269594192504883,
            },
            {
              features: [
                [5, 5, 2, 3, -1],
                [5, 6, 2, 1, 3],
              ],
              threshold: -0.004364531021565199,
              right_val: 0.4537956118583679,
              left_val: 0.6359223127365112,
            },
            {
              features: [
                [12, 2, 3, 5, -1],
                [13, 2, 1, 5, 3],
              ],
              threshold: 0.007679305970668793,
              right_val: 0.274048388004303,
              left_val: 0.5274767875671387,
            },
            {
              features: [
                [0, 3, 4, 6, -1],
                [0, 5, 4, 2, 3],
              ],
              threshold: -0.0254311393946409,
              right_val: 0.5071732997894287,
              left_val: 0.2038519978523254,
            },
            {
              features: [
                [8, 12, 4, 2, -1],
                [8, 13, 4, 1, 2],
              ],
              threshold: 0.0008200060110539198,
              right_val: 0.6119868159294128,
              left_val: 0.4587455093860626,
            },
            {
              features: [
                [8, 18, 3, 1, -1],
                [9, 18, 1, 1, 3],
              ],
              threshold: 0.002928460016846657,
              right_val: 0.2028204947710037,
              left_val: 0.5071274042129517,
            },
            {
              features: [
                [11, 10, 2, 2, -1],
                [12, 10, 1, 1, 2],
                [11, 11, 1, 1, 2],
              ],
              threshold: 4525647091213614e-20,
              right_val: 0.5430821776390076,
              left_val: 0.4812104105949402,
            },
            {
              features: [
                [7, 10, 2, 2, -1],
                [7, 10, 1, 1, 2],
                [8, 11, 1, 1, 2],
              ],
              threshold: 0.0013158309739083052,
              right_val: 0.6779323220252991,
              left_val: 0.4625813961029053,
            },
            {
              features: [
                [11, 11, 4, 4, -1],
                [11, 13, 4, 2, 2],
              ],
              threshold: 0.0015870389761403203,
              right_val: 0.3431465029716492,
              left_val: 0.5386291742324829,
            },
            {
              features: [
                [8, 12, 3, 8, -1],
                [9, 12, 1, 8, 3],
              ],
              threshold: -0.0215396601706743,
              right_val: 0.5003222823143005,
              left_val: 0.025942500680685,
            },
            {
              features: [
                [13, 0, 6, 3, -1],
                [13, 1, 6, 1, 3],
              ],
              threshold: 0.014334480278194,
              right_val: 0.1590632945299149,
              left_val: 0.5202844738960266,
            },
            {
              features: [
                [8, 8, 3, 4, -1],
                [9, 8, 1, 4, 3],
              ],
              threshold: -0.008388138376176357,
              right_val: 0.4648044109344482,
              left_val: 0.728248119354248,
            },
            {
              features: [
                [5, 7, 10, 10, -1],
                [10, 7, 5, 5, 2],
                [5, 12, 5, 5, 2],
              ],
              threshold: 0.00919068418443203,
              right_val: 0.3923191130161285,
              left_val: 0.556235671043396,
            },
            {
              features: [
                [3, 18, 8, 2, -1],
                [3, 18, 4, 1, 2],
                [7, 19, 4, 1, 2],
              ],
              threshold: -0.005845305975526571,
              right_val: 0.4629127979278565,
              left_val: 0.6803392767906189,
            },
            {
              features: [
                [10, 2, 6, 8, -1],
                [12, 2, 2, 8, 3],
              ],
              threshold: -0.0547077991068363,
              right_val: 0.5206125974655151,
              left_val: 0.2561671137809753,
            },
            {
              features: [
                [4, 2, 6, 8, -1],
                [6, 2, 2, 8, 3],
              ],
              threshold: 0.009114277549088001,
              right_val: 0.3053877055644989,
              left_val: 0.518962025642395,
            },
            {
              features: [
                [11, 0, 3, 7, -1],
                [12, 0, 1, 7, 3],
              ],
              threshold: -0.0155750000849366,
              right_val: 0.5169094800949097,
              left_val: 0.1295074969530106,
            },
            {
              features: [
                [7, 11, 2, 1, -1],
                [8, 11, 1, 1, 2],
              ],
              threshold: -0.0001205060034408234,
              right_val: 0.4230825006961823,
              left_val: 0.5735098123550415,
            },
            {
              features: [
                [15, 14, 1, 3, -1],
                [15, 15, 1, 1, 3],
              ],
              threshold: 0.0012273970060050488,
              right_val: 0.4079791903495789,
              left_val: 0.5289878249168396,
            },
            {
              features: [
                [7, 15, 2, 2, -1],
                [7, 15, 1, 1, 2],
                [8, 16, 1, 1, 2],
              ],
              threshold: -0.0012186600361019373,
              right_val: 0.4574409127235413,
              left_val: 0.6575639843940735,
            },
            {
              features: [
                [15, 14, 1, 3, -1],
                [15, 15, 1, 1, 3],
              ],
              threshold: -0.0033256649039685726,
              right_val: 0.5195019841194153,
              left_val: 0.3628047108650208,
            },
            {
              features: [
                [6, 0, 3, 7, -1],
                [7, 0, 1, 7, 3],
              ],
              threshold: -0.0132883097976446,
              right_val: 0.504348874092102,
              left_val: 0.1284265965223312,
            },
            {
              features: [
                [18, 1, 2, 7, -1],
                [18, 1, 1, 7, 2],
              ],
              threshold: -0.0033839771058410406,
              right_val: 0.475750595331192,
              left_val: 0.6292240023612976,
            },
            {
              features: [
                [2, 0, 8, 20, -1],
                [2, 10, 8, 10, 2],
              ],
              threshold: -0.2195422053337097,
              right_val: 0.5065013766288757,
              left_val: 0.148773193359375,
            },
            {
              features: [
                [3, 0, 15, 6, -1],
                [3, 2, 15, 2, 3],
              ],
              threshold: 0.004911170806735754,
              right_val: 0.5665838718414307,
              left_val: 0.425610214471817,
            },
            {
              features: [
                [4, 3, 12, 2, -1],
                [4, 4, 12, 1, 2],
              ],
              threshold: -0.00018744950648397207,
              right_val: 0.5586857199668884,
              left_val: 0.4004144072532654,
            },
            {
              features: [
                [16, 0, 4, 5, -1],
                [16, 0, 2, 5, 2],
              ],
              threshold: -0.00521786417812109,
              right_val: 0.4812706112861633,
              left_val: 0.6009116172790527,
            },
            {
              features: [
                [7, 0, 3, 4, -1],
                [8, 0, 1, 4, 3],
              ],
              threshold: -0.0011111519997939467,
              right_val: 0.5287089943885803,
              left_val: 0.3514933884143829,
            },
            {
              features: [
                [16, 0, 4, 5, -1],
                [16, 0, 2, 5, 2],
              ],
              threshold: 0.004403640050441027,
              right_val: 0.5924085974693298,
              left_val: 0.4642275869846344,
            },
            {
              features: [
                [1, 7, 6, 13, -1],
                [3, 7, 2, 13, 3],
              ],
              threshold: 0.1229949966073036,
              right_val: 0.0691524818539619,
              left_val: 0.5025529265403748,
            },
            {
              features: [
                [16, 0, 4, 5, -1],
                [16, 0, 2, 5, 2],
              ],
              threshold: -0.0123135102912784,
              right_val: 0.4934012889862061,
              left_val: 0.5884591937065125,
            },
            {
              features: [
                [0, 0, 4, 5, -1],
                [2, 0, 2, 5, 2],
              ],
              threshold: 0.004147103987634182,
              right_val: 0.589347779750824,
              left_val: 0.4372239112854004,
            },
            {
              features: [
                [14, 12, 3, 6, -1],
                [14, 14, 3, 2, 3],
              ],
              threshold: -0.003550264984369278,
              right_val: 0.5396270155906677,
              left_val: 0.4327551126480103,
            },
            {
              features: [
                [3, 12, 3, 6, -1],
                [3, 14, 3, 2, 3],
              ],
              threshold: -0.0192242693156004,
              right_val: 0.5068330764770508,
              left_val: 0.1913134008646011,
            },
            {
              features: [
                [16, 1, 4, 3, -1],
                [16, 2, 4, 1, 3],
              ],
              threshold: 0.0014395059552043676,
              right_val: 0.424353301525116,
              left_val: 0.5308178067207336,
            },
            {
              features: [
                [8, 7, 2, 10, -1],
                [8, 7, 1, 5, 2],
                [9, 12, 1, 5, 2],
              ],
              threshold: -0.00677519990131259,
              right_val: 0.4540086090564728,
              left_val: 0.6365395784378052,
            },
            {
              features: [
                [11, 11, 4, 4, -1],
                [11, 13, 4, 2, 2],
              ],
              threshold: 0.007011963054537773,
              right_val: 0.302619993686676,
              left_val: 0.5189834237098694,
            },
            {
              features: [
                [0, 1, 4, 3, -1],
                [0, 2, 4, 1, 3],
              ],
              threshold: 0.005401465110480785,
              right_val: 0.2557682991027832,
              left_val: 0.5105062127113342,
            },
            {
              features: [
                [13, 4, 1, 3, -1],
                [13, 5, 1, 1, 3],
              ],
              threshold: 0.0009027498890645802,
              right_val: 0.5861827731132507,
              left_val: 0.4696914851665497,
            },
            {
              features: [
                [7, 15, 3, 5, -1],
                [8, 15, 1, 5, 3],
              ],
              threshold: 0.0114744501188397,
              right_val: 0.152717798948288,
              left_val: 0.5053645968437195,
            },
            {
              features: [
                [9, 7, 3, 5, -1],
                [10, 7, 1, 5, 3],
              ],
              threshold: -0.006702343001961708,
              right_val: 0.4890604019165039,
              left_val: 0.6508980989456177,
            },
            {
              features: [
                [8, 7, 3, 5, -1],
                [9, 7, 1, 5, 3],
              ],
              threshold: -0.0020462959073483944,
              right_val: 0.4514600038528442,
              left_val: 0.6241816878318787,
            },
            {
              features: [
                [10, 6, 4, 14, -1],
                [10, 6, 2, 14, 2],
              ],
              threshold: -0.009995156899094582,
              right_val: 0.5400953888893127,
              left_val: 0.3432781100273132,
            },
            {
              features: [
                [0, 5, 5, 6, -1],
                [0, 7, 5, 2, 3],
              ],
              threshold: -0.0357007086277008,
              right_val: 0.5074077844619751,
              left_val: 0.1878059059381485,
            },
            {
              features: [
                [9, 5, 6, 4, -1],
                [9, 5, 3, 4, 2],
              ],
              threshold: 0.0004558456130325794,
              right_val: 0.5402569770812988,
              left_val: 0.3805277049541473,
            },
            {
              features: [
                [0, 0, 18, 10, -1],
                [6, 0, 6, 10, 3],
              ],
              threshold: -0.0542606003582478,
              right_val: 0.4595097005367279,
              left_val: 0.6843714714050293,
            },
            {
              features: [
                [10, 6, 4, 14, -1],
                [10, 6, 2, 14, 2],
              ],
              threshold: 0.0060600461438298225,
              right_val: 0.450052797794342,
              left_val: 0.5502905249595642,
            },
            {
              features: [
                [6, 6, 4, 14, -1],
                [8, 6, 2, 14, 2],
              ],
              threshold: -0.006479183211922646,
              right_val: 0.5310757160186768,
              left_val: 0.3368858098983765,
            },
            {
              features: [
                [13, 4, 1, 3, -1],
                [13, 5, 1, 1, 3],
              ],
              threshold: -0.0014939469983801246,
              right_val: 0.4756175875663757,
              left_val: 0.6487640142440796,
            },
            {
              features: [
                [5, 1, 2, 3, -1],
                [6, 1, 1, 3, 2],
              ],
              threshold: 14610530342906713e-21,
              right_val: 0.5451064109802246,
              left_val: 0.403457909822464,
            },
            {
              features: [
                [18, 1, 2, 18, -1],
                [19, 1, 1, 9, 2],
                [18, 10, 1, 9, 2],
              ],
              threshold: -0.00723219383507967,
              right_val: 0.4824739992618561,
              left_val: 0.6386873722076416,
            },
            {
              features: [
                [2, 1, 4, 3, -1],
                [2, 2, 4, 1, 3],
              ],
              threshold: -0.004064581822603941,
              right_val: 0.5157335996627808,
              left_val: 0.2986421883106232,
            },
            {
              features: [
                [18, 1, 2, 18, -1],
                [19, 1, 1, 9, 2],
                [18, 10, 1, 9, 2],
              ],
              threshold: 0.0304630808532238,
              right_val: 0.7159956097602844,
              left_val: 0.5022199749946594,
            },
            {
              features: [
                [1, 14, 4, 6, -1],
                [1, 14, 2, 3, 2],
                [3, 17, 2, 3, 2],
              ],
              threshold: -0.008054491132497787,
              right_val: 0.4619275033473969,
              left_val: 0.6492452025413513,
            },
            {
              features: [
                [10, 11, 7, 6, -1],
                [10, 13, 7, 2, 3],
              ],
              threshold: 0.0395051389932632,
              right_val: 0.2450613975524902,
              left_val: 0.5150570869445801,
            },
            {
              features: [
                [0, 10, 6, 10, -1],
                [0, 10, 3, 5, 2],
                [3, 15, 3, 5, 2],
              ],
              threshold: 0.008453020825982094,
              right_val: 0.6394037008285522,
              left_val: 0.4573669135570526,
            },
            {
              features: [
                [11, 0, 3, 4, -1],
                [12, 0, 1, 4, 3],
              ],
              threshold: -0.0011688120430335402,
              right_val: 0.548366129398346,
              left_val: 0.3865512013435364,
            },
            {
              features: [
                [5, 10, 5, 6, -1],
                [5, 13, 5, 3, 2],
              ],
              threshold: 0.002807067008689046,
              right_val: 0.2701480090618134,
              left_val: 0.5128579139709473,
            },
            {
              features: [
                [14, 6, 1, 8, -1],
                [14, 10, 1, 4, 2],
              ],
              threshold: 0.000473652093205601,
              right_val: 0.5387461185455322,
              left_val: 0.4051581919193268,
            },
            {
              features: [
                [1, 7, 18, 6, -1],
                [1, 7, 9, 3, 2],
                [10, 10, 9, 3, 2],
              ],
              threshold: 0.0117410803213716,
              right_val: 0.3719413876533508,
              left_val: 0.5295950174331665,
            },
            {
              features: [
                [9, 7, 2, 2, -1],
                [9, 7, 1, 2, 2],
              ],
              threshold: 0.0031833238899707794,
              right_val: 0.6895126104354858,
              left_val: 0.4789406955242157,
            },
            {
              features: [
                [5, 9, 4, 5, -1],
                [7, 9, 2, 5, 2],
              ],
              threshold: 0.0007024150108918548,
              right_val: 0.3918080925941467,
              left_val: 0.5384489297866821,
            },
          ],
          threshold: 54.62007141113281,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [7, 6, 6, 3, -1],
                [9, 6, 2, 3, 3],
              ],
              threshold: 0.0170599296689034,
              right_val: 0.7142534852027893,
              left_val: 0.3948527872562408,
            },
            {
              features: [
                [1, 0, 18, 4, -1],
                [7, 0, 6, 4, 3],
              ],
              threshold: 0.0218408405780792,
              right_val: 0.6090016961097717,
              left_val: 0.3370316028594971,
            },
            {
              features: [
                [7, 15, 2, 4, -1],
                [7, 17, 2, 2, 2],
              ],
              threshold: 0.00024520049919374287,
              right_val: 0.5987902283668518,
              left_val: 0.3500576019287109,
            },
            {
              features: [
                [1, 0, 19, 9, -1],
                [1, 3, 19, 3, 3],
              ],
              threshold: 0.008327260613441467,
              right_val: 0.5697240829467773,
              left_val: 0.3267528116703033,
            },
            {
              features: [
                [3, 7, 3, 6, -1],
                [3, 9, 3, 2, 3],
              ],
              threshold: 0.0005714829894714057,
              right_val: 0.5531656742095947,
              left_val: 0.3044599890708923,
            },
            {
              features: [
                [13, 7, 4, 4, -1],
                [15, 7, 2, 2, 2],
                [13, 9, 2, 2, 2],
              ],
              threshold: 0.0006737398798577487,
              right_val: 0.567263126373291,
              left_val: 0.3650012016296387,
            },
            {
              features: [
                [3, 7, 4, 4, -1],
                [3, 7, 2, 2, 2],
                [5, 9, 2, 2, 2],
              ],
              threshold: 3468159047770314e-20,
              right_val: 0.5388727188110352,
              left_val: 0.3313541114330292,
            },
            {
              features: [
                [9, 6, 10, 8, -1],
                [9, 10, 10, 4, 2],
              ],
              threshold: -0.005856339819729328,
              right_val: 0.5498778820037842,
              left_val: 0.2697942852973938,
            },
            {
              features: [
                [3, 8, 14, 12, -1],
                [3, 14, 14, 6, 2],
              ],
              threshold: 0.00851022731512785,
              right_val: 0.2762879133224487,
              left_val: 0.5269358158111572,
            },
            {
              features: [
                [6, 5, 10, 12, -1],
                [11, 5, 5, 6, 2],
                [6, 11, 5, 6, 2],
              ],
              threshold: -0.0698172077536583,
              right_val: 0.5259246826171875,
              left_val: 0.2909603118896484,
            },
            {
              features: [
                [9, 11, 2, 3, -1],
                [9, 12, 2, 1, 3],
              ],
              threshold: -0.0008611367084085941,
              right_val: 0.4073697924613953,
              left_val: 0.5892577171325684,
            },
            {
              features: [
                [9, 5, 6, 5, -1],
                [9, 5, 3, 5, 2],
              ],
              threshold: 0.0009714924963191152,
              right_val: 0.5415862202644348,
              left_val: 0.3523564040660858,
            },
            {
              features: [
                [9, 4, 2, 4, -1],
                [9, 6, 2, 2, 2],
              ],
              threshold: -1472749045206001e-20,
              right_val: 0.3503156006336212,
              left_val: 0.5423017740249634,
            },
            {
              features: [
                [9, 5, 6, 5, -1],
                [9, 5, 3, 5, 2],
              ],
              threshold: 0.0484202913939953,
              right_val: 0.3411195874214172,
              left_val: 0.51939457654953,
            },
            {
              features: [
                [5, 5, 6, 5, -1],
                [8, 5, 3, 5, 2],
              ],
              threshold: 0.0013257140526548028,
              right_val: 0.5335376262664795,
              left_val: 0.315776914358139,
            },
            {
              features: [
                [11, 2, 6, 1, -1],
                [13, 2, 2, 1, 3],
              ],
              threshold: 1492214960308047e-20,
              right_val: 0.5536553859710693,
              left_val: 0.4451299905776978,
            },
            {
              features: [
                [3, 2, 6, 1, -1],
                [5, 2, 2, 1, 3],
              ],
              threshold: -0.002717339899390936,
              right_val: 0.5248088836669922,
              left_val: 0.3031741976737976,
            },
            {
              features: [
                [13, 5, 2, 3, -1],
                [13, 6, 2, 1, 3],
              ],
              threshold: 0.0029219500720500946,
              right_val: 0.6606041789054871,
              left_val: 0.4781453013420105,
            },
            {
              features: [
                [0, 10, 1, 4, -1],
                [0, 12, 1, 2, 2],
              ],
              threshold: -0.0019804988987743855,
              right_val: 0.5287625193595886,
              left_val: 0.3186308145523071,
            },
            {
              features: [
                [13, 5, 2, 3, -1],
                [13, 6, 2, 1, 3],
              ],
              threshold: -0.004001210909336805,
              right_val: 0.4749928116798401,
              left_val: 0.6413596868515015,
            },
            {
              features: [
                [8, 18, 3, 2, -1],
                [9, 18, 1, 2, 3],
              ],
              threshold: -0.004349199123680592,
              right_val: 0.5098996758460999,
              left_val: 0.1507498025894165,
            },
            {
              features: [
                [6, 15, 9, 2, -1],
                [6, 16, 9, 1, 2],
              ],
              threshold: 0.0013490889687091112,
              right_val: 0.5881167054176331,
              left_val: 0.4316158890724182,
            },
            {
              features: [
                [8, 14, 4, 3, -1],
                [8, 15, 4, 1, 3],
              ],
              threshold: 0.0185970701277256,
              right_val: 0.9089794158935547,
              left_val: 0.4735553860664368,
            },
            {
              features: [
                [18, 4, 2, 4, -1],
                [18, 6, 2, 2, 2],
              ],
              threshold: -0.001856237999163568,
              right_val: 0.5577837228775024,
              left_val: 0.3553189039230347,
            },
            {
              features: [
                [5, 5, 2, 3, -1],
                [5, 6, 2, 1, 3],
              ],
              threshold: 0.002294043079018593,
              right_val: 0.6580877900123596,
              left_val: 0.4500094950199127,
            },
            {
              features: [
                [15, 16, 3, 2, -1],
                [15, 17, 3, 1, 2],
              ],
              threshold: 0.00029982850537635386,
              right_val: 0.3975878953933716,
              left_val: 0.5629242062568665,
            },
            {
              features: [
                [0, 0, 3, 9, -1],
                [0, 3, 3, 3, 3],
              ],
              threshold: 0.0035455459728837013,
              right_val: 0.3605485856533051,
              left_val: 0.5381547212600708,
            },
            {
              features: [
                [9, 7, 3, 3, -1],
                [9, 8, 3, 1, 3],
              ],
              threshold: 0.009610472247004509,
              right_val: 0.1796745955944061,
              left_val: 0.5255997180938721,
            },
            {
              features: [
                [8, 7, 3, 3, -1],
                [8, 8, 3, 1, 3],
              ],
              threshold: -0.0062783220782876015,
              right_val: 0.5114030241966248,
              left_val: 0.227285698056221,
            },
            {
              features: [
                [9, 5, 2, 6, -1],
                [9, 5, 1, 6, 2],
              ],
              threshold: 0.0034598479978740215,
              right_val: 0.6608219146728516,
              left_val: 0.4626308083534241,
            },
            {
              features: [
                [8, 6, 3, 4, -1],
                [9, 6, 1, 4, 3],
              ],
              threshold: -0.0013112019514665008,
              right_val: 0.4436857998371124,
              left_val: 0.6317539811134338,
            },
            {
              features: [
                [7, 6, 8, 12, -1],
                [11, 6, 4, 6, 2],
                [7, 12, 4, 6, 2],
              ],
              threshold: 0.002687617903575301,
              right_val: 0.4054022133350372,
              left_val: 0.5421109795570374,
            },
            {
              features: [
                [5, 6, 8, 12, -1],
                [5, 6, 4, 6, 2],
                [9, 12, 4, 6, 2],
              ],
              threshold: 0.003911816980689764,
              right_val: 0.3273454904556274,
              left_val: 0.5358477830886841,
            },
            {
              features: [
                [12, 4, 3, 3, -1],
                [12, 5, 3, 1, 3],
              ],
              threshold: -0.014206450432539,
              right_val: 0.4975781142711639,
              left_val: 0.7793576717376709,
            },
            {
              features: [
                [2, 16, 3, 2, -1],
                [2, 17, 3, 1, 2],
              ],
              threshold: 0.0007170552853494883,
              right_val: 0.3560903966426849,
              left_val: 0.5297319889068604,
            },
            {
              features: [
                [12, 4, 3, 3, -1],
                [12, 5, 3, 1, 3],
              ],
              threshold: 0.001663501956500113,
              right_val: 0.5816481709480286,
              left_val: 0.467809408903122,
            },
            {
              features: [
                [2, 12, 6, 6, -1],
                [2, 14, 6, 2, 3],
              ],
              threshold: 0.0033686188980937004,
              right_val: 0.3446420133113861,
              left_val: 0.5276734232902527,
            },
            {
              features: [
                [7, 13, 6, 3, -1],
                [7, 14, 6, 1, 3],
              ],
              threshold: 0.0127995302900672,
              right_val: 0.7472159266471863,
              left_val: 0.4834679961204529,
            },
            {
              features: [
                [6, 14, 6, 3, -1],
                [6, 15, 6, 1, 3],
              ],
              threshold: 0.0033901201095432043,
              right_val: 0.6401721239089966,
              left_val: 0.4511859118938446,
            },
            {
              features: [
                [14, 15, 5, 3, -1],
                [14, 16, 5, 1, 3],
              ],
              threshold: 0.004707077983766794,
              right_val: 0.355522096157074,
              left_val: 0.533565878868103,
            },
            {
              features: [
                [5, 4, 3, 3, -1],
                [5, 5, 3, 1, 3],
              ],
              threshold: 0.0014819339849054813,
              right_val: 0.5772724151611328,
              left_val: 0.4250707030296326,
            },
            {
              features: [
                [14, 15, 5, 3, -1],
                [14, 16, 5, 1, 3],
              ],
              threshold: -0.0069995759986341,
              right_val: 0.5292900204658508,
              left_val: 0.3003320097923279,
            },
            {
              features: [
                [5, 3, 6, 2, -1],
                [7, 3, 2, 2, 3],
              ],
              threshold: 0.0159390103071928,
              right_val: 0.1675581932067871,
              left_val: 0.5067319273948669,
            },
            {
              features: [
                [8, 15, 4, 3, -1],
                [8, 16, 4, 1, 3],
              ],
              threshold: 0.007637734990566969,
              right_val: 0.7085601091384888,
              left_val: 0.4795069992542267,
            },
            {
              features: [
                [1, 15, 5, 3, -1],
                [1, 16, 5, 1, 3],
              ],
              threshold: 0.006733404006808996,
              right_val: 0.2162470072507858,
              left_val: 0.5133113265037537,
            },
            {
              features: [
                [8, 13, 4, 6, -1],
                [10, 13, 2, 3, 2],
                [8, 16, 2, 3, 2],
              ],
              threshold: -0.012858809903264,
              right_val: 0.525137186050415,
              left_val: 0.1938841938972473,
            },
            {
              features: [
                [7, 8, 3, 3, -1],
                [8, 8, 1, 3, 3],
              ],
              threshold: -0.0006227080011740327,
              right_val: 0.419786810874939,
              left_val: 0.5686538219451904,
            },
            {
              features: [
                [12, 0, 5, 4, -1],
                [12, 2, 5, 2, 2],
              ],
              threshold: -0.0005265168147161603,
              right_val: 0.5429695844650269,
              left_val: 0.4224168956279755,
            },
            {
              features: [
                [0, 2, 20, 2, -1],
                [0, 2, 10, 1, 2],
                [10, 3, 10, 1, 2],
              ],
              threshold: 0.0110750999301672,
              right_val: 0.2514517903327942,
              left_val: 0.5113775134086609,
            },
            {
              features: [
                [1, 0, 18, 4, -1],
                [7, 0, 6, 4, 3],
              ],
              threshold: -0.0367282517254353,
              right_val: 0.4849618971347809,
              left_val: 0.7194662094116211,
            },
            {
              features: [
                [4, 3, 6, 1, -1],
                [6, 3, 2, 1, 3],
              ],
              threshold: -0.00028207109426148236,
              right_val: 0.539444625377655,
              left_val: 0.3840261995792389,
            },
            {
              features: [
                [4, 18, 13, 2, -1],
                [4, 19, 13, 1, 2],
              ],
              threshold: -0.0027489690110087395,
              right_val: 0.4569182097911835,
              left_val: 0.593708872795105,
            },
            {
              features: [
                [2, 10, 3, 6, -1],
                [2, 12, 3, 2, 3],
              ],
              threshold: 0.0100475195795298,
              right_val: 0.2802298069000244,
              left_val: 0.5138576030731201,
            },
            {
              features: [
                [14, 12, 6, 8, -1],
                [17, 12, 3, 4, 2],
                [14, 16, 3, 4, 2],
              ],
              threshold: -0.008149784058332443,
              right_val: 0.4636121094226837,
              left_val: 0.6090037226676941,
            },
            {
              features: [
                [4, 13, 10, 6, -1],
                [4, 13, 5, 3, 2],
                [9, 16, 5, 3, 2],
              ],
              threshold: -0.006883388850837946,
              right_val: 0.5254660248756409,
              left_val: 0.3458611071109772,
            },
            {
              features: [
                [14, 12, 1, 2, -1],
                [14, 13, 1, 1, 2],
              ],
              threshold: -140393603942357e-19,
              right_val: 0.4082083106040955,
              left_val: 0.5693104267120361,
            },
            {
              features: [
                [8, 13, 4, 3, -1],
                [8, 14, 4, 1, 3],
              ],
              threshold: 0.001549841952510178,
              right_val: 0.5806517004966736,
              left_val: 0.4350537061691284,
            },
            {
              features: [
                [14, 12, 2, 2, -1],
                [14, 13, 2, 1, 2],
              ],
              threshold: -0.006784149911254644,
              right_val: 0.5182775259017944,
              left_val: 0.1468873023986816,
            },
            {
              features: [
                [4, 12, 2, 2, -1],
                [4, 13, 2, 1, 2],
              ],
              threshold: 0.00021705629478674382,
              right_val: 0.345617413520813,
              left_val: 0.5293524265289307,
            },
            {
              features: [
                [8, 12, 9, 2, -1],
                [8, 13, 9, 1, 2],
              ],
              threshold: 0.00031198898795992136,
              right_val: 0.5942413806915283,
              left_val: 0.4652450978755951,
            },
            {
              features: [
                [9, 14, 2, 3, -1],
                [9, 15, 2, 1, 3],
              ],
              threshold: 0.005450753029435873,
              right_val: 0.7024846076965332,
              left_val: 0.4653508961200714,
            },
            {
              features: [
                [11, 10, 3, 6, -1],
                [11, 13, 3, 3, 2],
              ],
              threshold: -0.00025818689027801156,
              right_val: 0.3768967092037201,
              left_val: 0.5497295260429382,
            },
            {
              features: [
                [5, 6, 9, 12, -1],
                [5, 12, 9, 6, 2],
              ],
              threshold: -0.0174425393342972,
              right_val: 0.5457497835159302,
              left_val: 0.3919087946414948,
            },
            {
              features: [
                [11, 10, 3, 6, -1],
                [11, 13, 3, 3, 2],
              ],
              threshold: -0.045343529433012,
              right_val: 0.5154908895492554,
              left_val: 0.1631357073783875,
            },
            {
              features: [
                [6, 10, 3, 6, -1],
                [6, 13, 3, 3, 2],
              ],
              threshold: 0.0019190689781680703,
              right_val: 0.2791895866394043,
              left_val: 0.514589786529541,
            },
            {
              features: [
                [5, 4, 11, 3, -1],
                [5, 5, 11, 1, 3],
              ],
              threshold: -0.006017786916345358,
              right_val: 0.4756332933902741,
              left_val: 0.6517636179924011,
            },
            {
              features: [
                [7, 1, 5, 10, -1],
                [7, 6, 5, 5, 2],
              ],
              threshold: -0.004072073847055435,
              right_val: 0.4092685878276825,
              left_val: 0.5514652729034424,
            },
            {
              features: [
                [2, 8, 18, 2, -1],
                [2, 9, 18, 1, 2],
              ],
              threshold: 0.00039855059003457427,
              right_val: 0.5285550951957703,
              left_val: 0.316524088382721,
            },
            {
              features: [
                [7, 17, 5, 3, -1],
                [7, 18, 5, 1, 3],
              ],
              threshold: -0.0065418570302426815,
              right_val: 0.4652808904647827,
              left_val: 0.6853377819061279,
            },
            {
              features: [
                [5, 9, 12, 1, -1],
                [9, 9, 4, 1, 3],
              ],
              threshold: 0.003484508953988552,
              right_val: 0.4502759873867035,
              left_val: 0.5484588146209717,
            },
            {
              features: [
                [0, 14, 6, 6, -1],
                [0, 14, 3, 3, 2],
                [3, 17, 3, 3, 2],
              ],
              threshold: -0.0136967804282904,
              right_val: 0.4572555124759674,
              left_val: 0.6395779848098755,
            },
            {
              features: [
                [5, 9, 12, 1, -1],
                [9, 9, 4, 1, 3],
              ],
              threshold: -0.017347140237689,
              right_val: 0.5181614756584167,
              left_val: 0.2751072943210602,
            },
            {
              features: [
                [3, 9, 12, 1, -1],
                [7, 9, 4, 1, 3],
              ],
              threshold: -0.004088542889803648,
              right_val: 0.5194984078407288,
              left_val: 0.3325636088848114,
            },
            {
              features: [
                [14, 10, 6, 7, -1],
                [14, 10, 3, 7, 2],
              ],
              threshold: -0.009468790143728256,
              right_val: 0.485181987285614,
              left_val: 0.5942280888557434,
            },
            {
              features: [
                [1, 0, 16, 2, -1],
                [1, 1, 16, 1, 2],
              ],
              threshold: 0.0017084840219467878,
              right_val: 0.5519806146621704,
              left_val: 0.4167110919952393,
            },
            {
              features: [
                [10, 9, 10, 9, -1],
                [10, 12, 10, 3, 3],
              ],
              threshold: 0.009480909444391727,
              right_val: 0.4208514988422394,
              left_val: 0.5433894991874695,
            },
            {
              features: [
                [0, 1, 10, 2, -1],
                [5, 1, 5, 2, 2],
              ],
              threshold: -0.004738965071737766,
              right_val: 0.4560655057430267,
              left_val: 0.6407189965248108,
            },
            {
              features: [
                [17, 3, 2, 3, -1],
                [17, 4, 2, 1, 3],
              ],
              threshold: 0.006576105020940304,
              right_val: 0.2258227020502091,
              left_val: 0.5214555263519287,
            },
            {
              features: [
                [1, 3, 2, 3, -1],
                [1, 4, 2, 1, 3],
              ],
              threshold: -0.0021690549328923225,
              right_val: 0.5156704783439636,
              left_val: 0.3151527941226959,
            },
            {
              features: [
                [9, 7, 3, 6, -1],
                [10, 7, 1, 6, 3],
              ],
              threshold: 0.014660170301795,
              right_val: 0.668994128704071,
              left_val: 0.4870837032794952,
            },
            {
              features: [
                [6, 5, 4, 3, -1],
                [8, 5, 2, 3, 2],
              ],
              threshold: 0.00017231999663636088,
              right_val: 0.5251078009605408,
              left_val: 0.3569748997688294,
            },
            {
              features: [
                [7, 5, 6, 6, -1],
                [9, 5, 2, 6, 3],
              ],
              threshold: -0.0218037609010935,
              right_val: 0.496632993221283,
              left_val: 0.8825920820236206,
            },
            {
              features: [
                [3, 4, 12, 12, -1],
                [3, 4, 6, 6, 2],
                [9, 10, 6, 6, 2],
              ],
              threshold: -0.0947361066937447,
              right_val: 0.5061113834381104,
              left_val: 0.1446162015199661,
            },
            {
              features: [
                [9, 2, 6, 15, -1],
                [11, 2, 2, 15, 3],
              ],
              threshold: 0.0055825551971793175,
              right_val: 0.4238066077232361,
              left_val: 0.5396478772163391,
            },
            {
              features: [
                [2, 2, 6, 17, -1],
                [4, 2, 2, 17, 3],
              ],
              threshold: 0.001951709040440619,
              right_val: 0.5497786998748779,
              left_val: 0.4170410931110382,
            },
            {
              features: [
                [14, 10, 6, 7, -1],
                [14, 10, 3, 7, 2],
              ],
              threshold: 0.0121499001979828,
              right_val: 0.5664274096488953,
              left_val: 0.4698367118835449,
            },
            {
              features: [
                [0, 10, 6, 7, -1],
                [3, 10, 3, 7, 2],
              ],
              threshold: -0.007516962010413408,
              right_val: 0.4463135898113251,
              left_val: 0.6267772912979126,
            },
            {
              features: [
                [9, 2, 6, 15, -1],
                [11, 2, 2, 15, 3],
              ],
              threshold: -0.0716679096221924,
              right_val: 0.5221003293991089,
              left_val: 0.3097011148929596,
            },
            {
              features: [
                [5, 2, 6, 15, -1],
                [7, 2, 2, 15, 3],
              ],
              threshold: -0.0882924199104309,
              right_val: 0.5006365180015564,
              left_val: 0.0811238884925842,
            },
            {
              features: [
                [17, 9, 3, 6, -1],
                [17, 11, 3, 2, 3],
              ],
              threshold: 0.0310630798339844,
              right_val: 0.1282255947589874,
              left_val: 0.5155503749847412,
            },
            {
              features: [
                [6, 7, 6, 6, -1],
                [8, 7, 2, 6, 3],
              ],
              threshold: 0.0466218404471874,
              right_val: 0.736396074295044,
              left_val: 0.4699777960777283,
            },
            {
              features: [
                [1, 10, 18, 6, -1],
                [10, 10, 9, 3, 2],
                [1, 13, 9, 3, 2],
              ],
              threshold: -0.0121894897893071,
              right_val: 0.5518996715545654,
              left_val: 0.3920530080795288,
            },
            {
              features: [
                [0, 9, 10, 9, -1],
                [0, 12, 10, 3, 3],
              ],
              threshold: 0.0130161102861166,
              right_val: 0.3685136139392853,
              left_val: 0.5260658264160156,
            },
            {
              features: [
                [8, 15, 4, 3, -1],
                [8, 16, 4, 1, 3],
              ],
              threshold: -0.003495289944112301,
              right_val: 0.4716280996799469,
              left_val: 0.6339294910430908,
            },
            {
              features: [
                [5, 12, 3, 4, -1],
                [5, 14, 3, 2, 2],
              ],
              threshold: -4401503974804655e-20,
              right_val: 0.3776184916496277,
              left_val: 0.5333027243614197,
            },
            {
              features: [
                [3, 3, 16, 12, -1],
                [3, 9, 16, 6, 2],
              ],
              threshold: -0.1096649020910263,
              right_val: 0.5198346972465515,
              left_val: 0.1765342056751251,
            },
            {
              features: [
                [1, 1, 12, 12, -1],
                [1, 1, 6, 6, 2],
                [7, 7, 6, 6, 2],
              ],
              threshold: -0.0009027955820783973,
              right_val: 0.3838908076286316,
              left_val: 0.5324159860610962,
            },
            {
              features: [
                [10, 4, 2, 4, -1],
                [11, 4, 1, 2, 2],
                [10, 6, 1, 2, 2],
              ],
              threshold: 0.0007112664170563221,
              right_val: 0.5755224227905273,
              left_val: 0.4647929966449738,
            },
            {
              features: [
                [0, 9, 10, 2, -1],
                [0, 9, 5, 1, 2],
                [5, 10, 5, 1, 2],
              ],
              threshold: -0.003125027986243367,
              right_val: 0.5166770815849304,
              left_val: 0.323670893907547,
            },
            {
              features: [
                [9, 11, 3, 3, -1],
                [9, 12, 3, 1, 3],
              ],
              threshold: 0.002414467977359891,
              right_val: 0.6459717750549316,
              left_val: 0.4787439107894898,
            },
            {
              features: [
                [3, 12, 9, 2, -1],
                [3, 13, 9, 1, 2],
              ],
              threshold: 0.00044391240226104856,
              right_val: 0.6010255813598633,
              left_val: 0.4409308135509491,
            },
            {
              features: [
                [9, 9, 2, 2, -1],
                [9, 10, 2, 1, 2],
              ],
              threshold: -0.0002261118934256956,
              right_val: 0.5493255853652954,
              left_val: 0.4038113951683044,
            },
          ],
          threshold: 50.16973114013672,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [3, 4, 13, 6, -1],
                [3, 6, 13, 2, 3],
              ],
              threshold: -0.0469012893736362,
              right_val: 0.3743801116943359,
              left_val: 0.660017192363739,
            },
            {
              features: [
                [9, 7, 6, 4, -1],
                [12, 7, 3, 2, 2],
                [9, 9, 3, 2, 2],
              ],
              threshold: -0.001456834957934916,
              right_val: 0.3437797129154205,
              left_val: 0.578399121761322,
            },
            {
              features: [
                [1, 0, 6, 8, -1],
                [4, 0, 3, 8, 2],
              ],
              threshold: 0.005559836979955435,
              right_val: 0.5908216238021851,
              left_val: 0.3622266948223114,
            },
            {
              features: [
                [9, 5, 2, 12, -1],
                [9, 11, 2, 6, 2],
              ],
              threshold: 0.0007317048730328679,
              right_val: 0.2873558104038239,
              left_val: 0.550041913986206,
            },
            {
              features: [
                [4, 4, 3, 10, -1],
                [4, 9, 3, 5, 2],
              ],
              threshold: 0.001331800944171846,
              right_val: 0.5431019067764282,
              left_val: 0.267316997051239,
            },
            {
              features: [
                [6, 17, 8, 3, -1],
                [6, 18, 8, 1, 3],
              ],
              threshold: 0.00024347059661522508,
              right_val: 0.574138879776001,
              left_val: 0.3855027854442596,
            },
            {
              features: [
                [0, 5, 10, 6, -1],
                [0, 7, 10, 2, 3],
              ],
              threshold: -0.0030512469820678234,
              right_val: 0.3462845087051392,
              left_val: 0.5503209829330444,
            },
            {
              features: [
                [13, 2, 3, 2, -1],
                [13, 3, 3, 1, 2],
              ],
              threshold: -0.0006865719915367663,
              right_val: 0.5429509282112122,
              left_val: 0.3291221857070923,
            },
            {
              features: [
                [7, 5, 4, 5, -1],
                [9, 5, 2, 5, 2],
              ],
              threshold: 0.001466820016503334,
              right_val: 0.5351811051368713,
              left_val: 0.3588382005691528,
            },
            {
              features: [
                [12, 14, 3, 6, -1],
                [12, 16, 3, 2, 3],
              ],
              threshold: 0.0003202187072020024,
              right_val: 0.5700234174728394,
              left_val: 0.429684191942215,
            },
            {
              features: [
                [1, 11, 8, 2, -1],
                [1, 12, 8, 1, 2],
              ],
              threshold: 0.0007412218837998807,
              right_val: 0.3366870880126953,
              left_val: 0.5282164812088013,
            },
            {
              features: [
                [7, 13, 6, 3, -1],
                [7, 14, 6, 1, 3],
              ],
              threshold: 0.0038330298848450184,
              right_val: 0.6257336139678955,
              left_val: 0.4559567868709564,
            },
            {
              features: [
                [0, 5, 3, 6, -1],
                [0, 7, 3, 2, 3],
              ],
              threshold: -0.0154564399272203,
              right_val: 0.512945294380188,
              left_val: 0.2350116968154907,
            },
            {
              features: [
                [13, 2, 3, 2, -1],
                [13, 3, 3, 1, 2],
              ],
              threshold: 0.002679677912965417,
              right_val: 0.4155062139034271,
              left_val: 0.5329415202140808,
            },
            {
              features: [
                [4, 14, 4, 6, -1],
                [4, 14, 2, 3, 2],
                [6, 17, 2, 3, 2],
              ],
              threshold: 0.0028296569362282753,
              right_val: 0.5804538130760193,
              left_val: 0.4273087978363037,
            },
            {
              features: [
                [13, 2, 3, 2, -1],
                [13, 3, 3, 1, 2],
              ],
              threshold: -0.0039444249123334885,
              right_val: 0.5202686190605164,
              left_val: 0.2912611961364746,
            },
            {
              features: [
                [8, 2, 4, 12, -1],
                [8, 6, 4, 4, 3],
              ],
              threshold: 0.002717955969274044,
              right_val: 0.3585677146911621,
              left_val: 0.5307688117027283,
            },
            {
              features: [
                [14, 0, 6, 8, -1],
                [17, 0, 3, 4, 2],
                [14, 4, 3, 4, 2],
              ],
              threshold: 0.005907762795686722,
              right_val: 0.5941585898399353,
              left_val: 0.470377504825592,
            },
            {
              features: [
                [7, 17, 3, 2, -1],
                [8, 17, 1, 2, 3],
              ],
              threshold: -0.004224034957587719,
              right_val: 0.5088796019554138,
              left_val: 0.2141567021608353,
            },
            {
              features: [
                [8, 12, 4, 2, -1],
                [8, 13, 4, 1, 2],
              ],
              threshold: 0.0040725888684391975,
              right_val: 0.6841061115264893,
              left_val: 0.4766413867473602,
            },
            {
              features: [
                [6, 0, 8, 12, -1],
                [6, 0, 4, 6, 2],
                [10, 6, 4, 6, 2],
              ],
              threshold: 0.0101495301350951,
              right_val: 0.3748497068881989,
              left_val: 0.5360798835754395,
            },
            {
              features: [
                [14, 0, 2, 10, -1],
                [15, 0, 1, 5, 2],
                [14, 5, 1, 5, 2],
              ],
              threshold: -0.00018864999583456665,
              right_val: 0.3853805065155029,
              left_val: 0.5720130205154419,
            },
            {
              features: [
                [5, 3, 8, 6, -1],
                [5, 3, 4, 3, 2],
                [9, 6, 4, 3, 2],
              ],
              threshold: -0.0048864358104765415,
              right_val: 0.5340958833694458,
              left_val: 0.3693122863769531,
            },
            {
              features: [
                [14, 0, 6, 10, -1],
                [17, 0, 3, 5, 2],
                [14, 5, 3, 5, 2],
              ],
              threshold: 0.0261584799736738,
              right_val: 0.6059989929199219,
              left_val: 0.4962374866008759,
            },
            {
              features: [
                [9, 14, 1, 2, -1],
                [9, 15, 1, 1, 2],
              ],
              threshold: 0.0004856075975112617,
              right_val: 0.6012468934059143,
              left_val: 0.4438945949077606,
            },
            {
              features: [
                [15, 10, 4, 3, -1],
                [15, 11, 4, 1, 3],
              ],
              threshold: 0.0112687097862363,
              right_val: 0.1840388029813767,
              left_val: 0.5244250297546387,
            },
            {
              features: [
                [8, 14, 2, 3, -1],
                [8, 15, 2, 1, 3],
              ],
              threshold: -0.0028114619199186563,
              right_val: 0.4409897029399872,
              left_val: 0.6060283780097961,
            },
            {
              features: [
                [3, 13, 14, 4, -1],
                [10, 13, 7, 2, 2],
                [3, 15, 7, 2, 2],
              ],
              threshold: -0.005611272994428873,
              right_val: 0.5589237213134766,
              left_val: 0.3891170918941498,
            },
            {
              features: [
                [1, 10, 4, 3, -1],
                [1, 11, 4, 1, 3],
              ],
              threshold: 0.008568009361624718,
              right_val: 0.2062619030475617,
              left_val: 0.5069345831871033,
            },
            {
              features: [
                [9, 11, 6, 1, -1],
                [11, 11, 2, 1, 3],
              ],
              threshold: -0.00038172779022715986,
              right_val: 0.41926109790802,
              left_val: 0.5882201790809631,
            },
            {
              features: [
                [5, 11, 6, 1, -1],
                [7, 11, 2, 1, 3],
              ],
              threshold: -0.00017680290329735726,
              right_val: 0.400336891412735,
              left_val: 0.5533605813980103,
            },
            {
              features: [
                [3, 5, 16, 15, -1],
                [3, 10, 16, 5, 3],
              ],
              threshold: 0.006511253770440817,
              right_val: 0.5444191098213196,
              left_val: 0.3310146927833557,
            },
            {
              features: [
                [6, 12, 4, 2, -1],
                [8, 12, 2, 2, 2],
              ],
              threshold: -6594868318643421e-20,
              right_val: 0.3944905996322632,
              left_val: 0.5433831810951233,
            },
            {
              features: [
                [4, 4, 12, 10, -1],
                [10, 4, 6, 5, 2],
                [4, 9, 6, 5, 2],
              ],
              threshold: 0.006993905175477266,
              right_val: 0.4192714095115662,
              left_val: 0.5600358247756958,
            },
            {
              features: [
                [8, 6, 3, 4, -1],
                [9, 6, 1, 4, 3],
              ],
              threshold: -0.0046744439750909805,
              right_val: 0.4604960978031158,
              left_val: 0.6685466766357422,
            },
            {
              features: [
                [8, 12, 4, 8, -1],
                [10, 12, 2, 4, 2],
                [8, 16, 2, 4, 2],
              ],
              threshold: 0.0115898502990603,
              right_val: 0.2926830053329468,
              left_val: 0.5357121229171753,
            },
            {
              features: [
                [8, 14, 4, 3, -1],
                [8, 15, 4, 1, 3],
              ],
              threshold: 0.013007840141654,
              right_val: 0.730746328830719,
              left_val: 0.4679817855358124,
            },
            {
              features: [
                [12, 2, 3, 2, -1],
                [13, 2, 1, 2, 3],
              ],
              threshold: -0.0011008579749614,
              right_val: 0.5415065288543701,
              left_val: 0.3937501013278961,
            },
            {
              features: [
                [8, 15, 3, 2, -1],
                [8, 16, 3, 1, 2],
              ],
              threshold: 0.0006047264905646443,
              right_val: 0.5604041218757629,
              left_val: 0.4242376089096069,
            },
            {
              features: [
                [6, 0, 9, 14, -1],
                [9, 0, 3, 14, 3],
              ],
              threshold: -0.0144948400557041,
              right_val: 0.5293182730674744,
              left_val: 0.3631210029125214,
            },
            {
              features: [
                [9, 6, 2, 3, -1],
                [10, 6, 1, 3, 2],
              ],
              threshold: -0.005305694881826639,
              right_val: 0.4621821045875549,
              left_val: 0.686045229434967,
            },
            {
              features: [
                [10, 8, 2, 3, -1],
                [10, 9, 2, 1, 3],
              ],
              threshold: -0.00081829127157107,
              right_val: 0.542043924331665,
              left_val: 0.3944096863269806,
            },
            {
              features: [
                [0, 9, 4, 6, -1],
                [0, 11, 4, 2, 3],
              ],
              threshold: -0.0190775208175182,
              right_val: 0.5037891864776611,
              left_val: 0.1962621957063675,
            },
            {
              features: [
                [6, 0, 8, 2, -1],
                [6, 1, 8, 1, 2],
              ],
              threshold: 0.00035549470339901745,
              right_val: 0.5613973140716553,
              left_val: 0.4086259007453919,
            },
            {
              features: [
                [6, 14, 7, 3, -1],
                [6, 15, 7, 1, 3],
              ],
              threshold: 0.0019679730758070946,
              right_val: 0.5926123261451721,
              left_val: 0.448912113904953,
            },
            {
              features: [
                [8, 10, 8, 9, -1],
                [8, 13, 8, 3, 3],
              ],
              threshold: 0.006918914150446653,
              right_val: 0.3728385865688324,
              left_val: 0.5335925817489624,
            },
            {
              features: [
                [5, 2, 3, 2, -1],
                [6, 2, 1, 2, 3],
              ],
              threshold: 0.002987277926877141,
              right_val: 0.2975643873214722,
              left_val: 0.5111321210861206,
            },
            {
              features: [
                [14, 1, 6, 8, -1],
                [17, 1, 3, 4, 2],
                [14, 5, 3, 4, 2],
              ],
              threshold: -0.006226461846381426,
              right_val: 0.4824537932872772,
              left_val: 0.5541489720344543,
            },
            {
              features: [
                [0, 1, 6, 8, -1],
                [0, 1, 3, 4, 2],
                [3, 5, 3, 4, 2],
              ],
              threshold: 0.013353300280869,
              right_val: 0.6414797902107239,
              left_val: 0.4586423933506012,
            },
            {
              features: [
                [1, 2, 18, 6, -1],
                [10, 2, 9, 3, 2],
                [1, 5, 9, 3, 2],
              ],
              threshold: 0.0335052385926247,
              right_val: 0.3429994881153107,
              left_val: 0.5392425060272217,
            },
            {
              features: [
                [9, 3, 2, 1, -1],
                [10, 3, 1, 1, 2],
              ],
              threshold: -0.0025294460356235504,
              right_val: 0.5013315081596375,
              left_val: 0.1703713983297348,
            },
            {
              features: [
                [13, 2, 4, 6, -1],
                [15, 2, 2, 3, 2],
                [13, 5, 2, 3, 2],
              ],
              threshold: -0.001280162949115038,
              right_val: 0.4697405099868774,
              left_val: 0.5305461883544922,
            },
            {
              features: [
                [5, 4, 3, 3, -1],
                [5, 5, 3, 1, 3],
              ],
              threshold: 0.007068738806992769,
              right_val: 0.643650472164154,
              left_val: 0.4615545868873596,
            },
            {
              features: [
                [13, 5, 1, 3, -1],
                [13, 6, 1, 1, 3],
              ],
              threshold: 0.0009688049904070795,
              right_val: 0.6043894290924072,
              left_val: 0.4833599030971527,
            },
            {
              features: [
                [2, 16, 5, 3, -1],
                [2, 17, 5, 1, 3],
              ],
              threshold: 0.003964765928685665,
              right_val: 0.323181688785553,
              left_val: 0.5187637209892273,
            },
            {
              features: [
                [13, 2, 4, 6, -1],
                [15, 2, 2, 3, 2],
                [13, 5, 2, 3, 2],
              ],
              threshold: -0.022057730704546,
              right_val: 0.520098090171814,
              left_val: 0.4079256951808929,
            },
            {
              features: [
                [3, 2, 4, 6, -1],
                [3, 2, 2, 3, 2],
                [5, 5, 2, 3, 2],
              ],
              threshold: -0.0006690631271339953,
              right_val: 0.3815600872039795,
              left_val: 0.533160924911499,
            },
            {
              features: [
                [13, 5, 1, 2, -1],
                [13, 6, 1, 1, 2],
              ],
              threshold: -0.0006700932863168418,
              right_val: 0.4688901901245117,
              left_val: 0.5655422210693359,
            },
            {
              features: [
                [5, 5, 2, 2, -1],
                [5, 6, 2, 1, 2],
              ],
              threshold: 0.000742845528293401,
              right_val: 0.6287400126457214,
              left_val: 0.4534381031990051,
            },
            {
              features: [
                [13, 9, 2, 2, -1],
                [13, 9, 1, 2, 2],
              ],
              threshold: 0.0022227810695767403,
              right_val: 0.3303655982017517,
              left_val: 0.5350633263587952,
            },
            {
              features: [
                [5, 9, 2, 2, -1],
                [6, 9, 1, 2, 2],
              ],
              threshold: -0.005413052160292864,
              right_val: 0.500543475151062,
              left_val: 0.1113687008619309,
            },
            {
              features: [
                [13, 17, 3, 2, -1],
                [13, 18, 3, 1, 2],
              ],
              threshold: -14520040167553816e-21,
              right_val: 0.4325133860111237,
              left_val: 0.5628737807273865,
            },
            {
              features: [
                [6, 16, 4, 4, -1],
                [6, 16, 2, 2, 2],
                [8, 18, 2, 2, 2],
              ],
              threshold: 0.00023369169502984732,
              right_val: 0.5447791218757629,
              left_val: 0.4165835082530975,
            },
            {
              features: [
                [9, 16, 2, 3, -1],
                [9, 17, 2, 1, 3],
              ],
              threshold: 0.004289454780519009,
              right_val: 0.6778649091720581,
              left_val: 0.4860391020774841,
            },
            {
              features: [
                [0, 13, 9, 6, -1],
                [0, 15, 9, 2, 3],
              ],
              threshold: 0.0059103150852024555,
              right_val: 0.3612113893032074,
              left_val: 0.52623051404953,
            },
            {
              features: [
                [9, 14, 2, 6, -1],
                [9, 17, 2, 3, 2],
              ],
              threshold: 0.0129005396738648,
              right_val: 0.32502880692482,
              left_val: 0.5319377183914185,
            },
            {
              features: [
                [9, 15, 2, 3, -1],
                [9, 16, 2, 1, 3],
              ],
              threshold: 0.004698297940194607,
              right_val: 0.6665925979614258,
              left_val: 0.461824506521225,
            },
            {
              features: [
                [1, 10, 18, 6, -1],
                [1, 12, 18, 2, 3],
              ],
              threshold: 0.0104398597031832,
              right_val: 0.3883604109287262,
              left_val: 0.550567090511322,
            },
            {
              features: [
                [8, 11, 4, 2, -1],
                [8, 12, 4, 1, 2],
              ],
              threshold: 0.0030443191062659025,
              right_val: 0.7301844954490662,
              left_val: 0.4697853028774262,
            },
            {
              features: [
                [7, 9, 6, 2, -1],
                [7, 10, 6, 1, 2],
              ],
              threshold: -0.0006159375188872218,
              right_val: 0.5464984178543091,
              left_val: 0.3830839097499847,
            },
            {
              features: [
                [8, 8, 2, 3, -1],
                [8, 9, 2, 1, 3],
              ],
              threshold: -0.0034247159492224455,
              right_val: 0.5089530944824219,
              left_val: 0.256630003452301,
            },
            {
              features: [
                [17, 5, 3, 4, -1],
                [18, 5, 1, 4, 3],
              ],
              threshold: -0.009353856556117535,
              right_val: 0.49407958984375,
              left_val: 0.6469966173171997,
            },
            {
              features: [
                [1, 19, 18, 1, -1],
                [7, 19, 6, 1, 3],
              ],
              threshold: 0.0523389987647533,
              right_val: 0.787877082824707,
              left_val: 0.4745982885360718,
            },
            {
              features: [
                [9, 0, 3, 2, -1],
                [10, 0, 1, 2, 3],
              ],
              threshold: 0.0035765620414167643,
              right_val: 0.2748498022556305,
              left_val: 0.5306664705276489,
            },
            {
              features: [
                [1, 8, 1, 6, -1],
                [1, 10, 1, 2, 3],
              ],
              threshold: 0.0007155531784519553,
              right_val: 0.4041908979415894,
              left_val: 0.541312575340271,
            },
            {
              features: [
                [12, 17, 8, 3, -1],
                [12, 17, 4, 3, 2],
              ],
              threshold: -0.0105166798457503,
              right_val: 0.4815283119678497,
              left_val: 0.6158512234687805,
            },
            {
              features: [
                [0, 5, 3, 4, -1],
                [1, 5, 1, 4, 3],
              ],
              threshold: 0.007734792772680521,
              right_val: 0.7028980851173401,
              left_val: 0.4695805907249451,
            },
            {
              features: [
                [9, 7, 2, 3, -1],
                [9, 8, 2, 1, 3],
              ],
              threshold: -0.004322677850723267,
              right_val: 0.5304684042930603,
              left_val: 0.2849566042423248,
            },
            {
              features: [
                [7, 11, 2, 2, -1],
                [7, 11, 1, 1, 2],
                [8, 12, 1, 1, 2],
              ],
              threshold: -0.0025534399319440126,
              right_val: 0.4688892066478729,
              left_val: 0.7056984901428223,
            },
            {
              features: [
                [11, 3, 2, 5, -1],
                [11, 3, 1, 5, 2],
              ],
              threshold: 0.00010268510231981054,
              right_val: 0.5573464035987854,
              left_val: 0.3902932107448578,
            },
            {
              features: [
                [7, 3, 2, 5, -1],
                [8, 3, 1, 5, 2],
              ],
              threshold: 7139518857002258e-21,
              right_val: 0.526398777961731,
              left_val: 0.368423193693161,
            },
            {
              features: [
                [15, 13, 2, 3, -1],
                [15, 14, 2, 1, 3],
              ],
              threshold: -0.0016711989883333445,
              right_val: 0.5387271046638489,
              left_val: 0.3849175870418549,
            },
            {
              features: [
                [5, 6, 2, 3, -1],
                [5, 7, 2, 1, 3],
              ],
              threshold: 0.004926044959574938,
              right_val: 0.7447251081466675,
              left_val: 0.4729771912097931,
            },
            {
              features: [
                [4, 19, 15, 1, -1],
                [9, 19, 5, 1, 3],
              ],
              threshold: 0.0043908702209591866,
              right_val: 0.5591921806335449,
              left_val: 0.4809181094169617,
            },
            {
              features: [
                [1, 19, 15, 1, -1],
                [6, 19, 5, 1, 3],
              ],
              threshold: -0.0177936293184757,
              right_val: 0.4676927030086517,
              left_val: 0.6903678178787231,
            },
            {
              features: [
                [15, 13, 2, 3, -1],
                [15, 14, 2, 1, 3],
              ],
              threshold: 0.002046966925263405,
              right_val: 0.3308162093162537,
              left_val: 0.5370690226554871,
            },
            {
              features: [
                [5, 0, 4, 15, -1],
                [7, 0, 2, 15, 2],
              ],
              threshold: 0.0298914890736341,
              right_val: 0.3309059143066406,
              left_val: 0.5139865279197693,
            },
            {
              features: [
                [9, 6, 2, 5, -1],
                [9, 6, 1, 5, 2],
              ],
              threshold: 0.0015494900289922953,
              right_val: 0.6078342795372009,
              left_val: 0.466023713350296,
            },
            {
              features: [
                [9, 5, 2, 7, -1],
                [10, 5, 1, 7, 2],
              ],
              threshold: 0.001495696953497827,
              right_val: 0.5863919854164124,
              left_val: 0.4404835999011993,
            },
            {
              features: [
                [16, 11, 3, 3, -1],
                [16, 12, 3, 1, 3],
              ],
              threshold: 0.0009588592802174389,
              right_val: 0.4208523035049439,
              left_val: 0.5435971021652222,
            },
            {
              features: [
                [1, 11, 3, 3, -1],
                [1, 12, 3, 1, 3],
              ],
              threshold: 0.0004964370164088905,
              right_val: 0.4000622034072876,
              left_val: 0.5370578169822693,
            },
            {
              features: [
                [6, 6, 8, 3, -1],
                [6, 7, 8, 1, 3],
              ],
              threshold: -0.00272808107547462,
              right_val: 0.4259642958641052,
              left_val: 0.5659412741661072,
            },
            {
              features: [
                [0, 15, 6, 2, -1],
                [0, 16, 6, 1, 2],
              ],
              threshold: 0.0023026480339467525,
              right_val: 0.3350869119167328,
              left_val: 0.5161657929420471,
            },
            {
              features: [
                [1, 0, 18, 6, -1],
                [7, 0, 6, 6, 3],
              ],
              threshold: 0.2515163123607636,
              right_val: 0.714730978012085,
              left_val: 0.4869661927223206,
            },
            {
              features: [
                [6, 0, 3, 4, -1],
                [7, 0, 1, 4, 3],
              ],
              threshold: -0.004632802214473486,
              right_val: 0.5083789825439453,
              left_val: 0.27274489402771,
            },
            {
              features: [
                [14, 10, 4, 10, -1],
                [16, 10, 2, 5, 2],
                [14, 15, 2, 5, 2],
              ],
              threshold: -0.0404344908893108,
              right_val: 0.5021767020225525,
              left_val: 0.6851438879966736,
            },
            {
              features: [
                [3, 2, 3, 2, -1],
                [4, 2, 1, 2, 3],
              ],
              threshold: 14972220014897175e-21,
              right_val: 0.5522555112838745,
              left_val: 0.428446501493454,
            },
            {
              features: [
                [11, 2, 2, 2, -1],
                [11, 3, 2, 1, 2],
              ],
              threshold: -0.00024050309730228037,
              right_val: 0.5390074849128723,
              left_val: 0.4226118922233582,
            },
            {
              features: [
                [2, 10, 4, 10, -1],
                [2, 10, 2, 5, 2],
                [4, 15, 2, 5, 2],
              ],
              threshold: 0.0236578397452831,
              right_val: 0.7504366040229797,
              left_val: 0.4744631946086884,
            },
            {
              features: [
                [0, 13, 20, 6, -1],
                [10, 13, 10, 3, 2],
                [0, 16, 10, 3, 2],
              ],
              threshold: -0.00814491044729948,
              right_val: 0.5538362860679626,
              left_val: 0.424505889415741,
            },
            {
              features: [
                [0, 5, 2, 15, -1],
                [1, 5, 1, 15, 2],
              ],
              threshold: -0.003699213033542037,
              right_val: 0.4529713094234467,
              left_val: 0.5952357053756714,
            },
            {
              features: [
                [1, 7, 18, 4, -1],
                [10, 7, 9, 2, 2],
                [1, 9, 9, 2, 2],
              ],
              threshold: -0.0067718601785600185,
              right_val: 0.5473399758338928,
              left_val: 0.4137794077396393,
            },
            {
              features: [
                [0, 0, 2, 17, -1],
                [1, 0, 1, 17, 2],
              ],
              threshold: 0.004266953095793724,
              right_val: 0.5797994136810303,
              left_val: 0.4484114944934845,
            },
            {
              features: [
                [2, 6, 16, 6, -1],
                [10, 6, 8, 3, 2],
                [2, 9, 8, 3, 2],
              ],
              threshold: 0.0017791989957913756,
              right_val: 0.4432444870471954,
              left_val: 0.5624858736991882,
            },
            {
              features: [
                [8, 14, 1, 3, -1],
                [8, 15, 1, 1, 3],
              ],
              threshold: 0.0016774770338088274,
              right_val: 0.63642418384552,
              left_val: 0.4637751877307892,
            },
            {
              features: [
                [8, 15, 4, 2, -1],
                [8, 16, 4, 1, 2],
              ],
              threshold: 0.0011732629500329494,
              right_val: 0.5914415717124939,
              left_val: 0.4544503092765808,
            },
            {
              features: [
                [5, 2, 8, 2, -1],
                [5, 2, 4, 1, 2],
                [9, 3, 4, 1, 2],
              ],
              threshold: 0.000869981711730361,
              right_val: 0.3885917961597443,
              left_val: 0.5334752798080444,
            },
            {
              features: [
                [6, 11, 8, 6, -1],
                [6, 14, 8, 3, 2],
              ],
              threshold: 0.0007637834060005844,
              right_val: 0.374494194984436,
              left_val: 0.5398585200309753,
            },
            {
              features: [
                [9, 13, 2, 2, -1],
                [9, 14, 2, 1, 2],
              ],
              threshold: 0.00015684569370932877,
              right_val: 0.5614616274833679,
              left_val: 0.4317873120307922,
            },
            {
              features: [
                [18, 4, 2, 6, -1],
                [18, 6, 2, 2, 3],
              ],
              threshold: -0.0215113703161478,
              right_val: 0.5185542702674866,
              left_val: 0.1785925030708313,
            },
            {
              features: [
                [9, 12, 2, 2, -1],
                [9, 13, 2, 1, 2],
              ],
              threshold: 0.00013081369979772717,
              right_val: 0.5682849884033203,
              left_val: 0.4342499077320099,
            },
            {
              features: [
                [18, 4, 2, 6, -1],
                [18, 6, 2, 2, 3],
              ],
              threshold: 0.021992040798068,
              right_val: 0.2379394024610519,
              left_val: 0.5161716938018799,
            },
            {
              features: [
                [9, 13, 1, 3, -1],
                [9, 14, 1, 1, 3],
              ],
              threshold: -0.0008013650076463819,
              right_val: 0.4466426968574524,
              left_val: 0.598676323890686,
            },
            {
              features: [
                [18, 4, 2, 6, -1],
                [18, 6, 2, 2, 3],
              ],
              threshold: -0.008273609913885593,
              right_val: 0.5251057147979736,
              left_val: 0.410821795463562,
            },
            {
              features: [
                [0, 4, 2, 6, -1],
                [0, 6, 2, 2, 3],
              ],
              threshold: 0.0036831789184361696,
              right_val: 0.339751809835434,
              left_val: 0.5173814296722412,
            },
            {
              features: [
                [9, 12, 3, 3, -1],
                [9, 13, 3, 1, 3],
              ],
              threshold: -0.007952568121254444,
              right_val: 0.4845924079418182,
              left_val: 0.6888983249664307,
            },
            {
              features: [
                [3, 13, 2, 3, -1],
                [3, 14, 2, 1, 3],
              ],
              threshold: 0.0015382299898192286,
              right_val: 0.3454113900661469,
              left_val: 0.5178567171096802,
            },
            {
              features: [
                [13, 13, 4, 3, -1],
                [13, 14, 4, 1, 3],
              ],
              threshold: -0.0140435304492712,
              right_val: 0.518866777420044,
              left_val: 0.1678421050310135,
            },
            {
              features: [
                [5, 4, 3, 3, -1],
                [5, 5, 3, 1, 3],
              ],
              threshold: 0.0014315890148282051,
              right_val: 0.5655773878097534,
              left_val: 0.436825692653656,
            },
            {
              features: [
                [5, 2, 10, 6, -1],
                [5, 4, 10, 2, 3],
              ],
              threshold: -0.0340142287313938,
              right_val: 0.4959217011928558,
              left_val: 0.7802296280860901,
            },
            {
              features: [
                [3, 13, 4, 3, -1],
                [3, 14, 4, 1, 3],
              ],
              threshold: -0.0120272999629378,
              right_val: 0.503223180770874,
              left_val: 0.1585101038217545,
            },
            {
              features: [
                [3, 7, 15, 5, -1],
                [8, 7, 5, 5, 3],
              ],
              threshold: 0.1331661939620972,
              right_val: 0.2755128145217896,
              left_val: 0.5163304805755615,
            },
            {
              features: [
                [3, 7, 12, 2, -1],
                [7, 7, 4, 2, 3],
              ],
              threshold: -0.0015221949433907866,
              right_val: 0.5214552283287048,
              left_val: 0.372831791639328,
            },
            {
              features: [
                [10, 3, 3, 9, -1],
                [11, 3, 1, 9, 3],
              ],
              threshold: -0.000939292716793716,
              right_val: 0.4511165022850037,
              left_val: 0.5838379263877869,
            },
            {
              features: [
                [8, 6, 4, 6, -1],
                [10, 6, 2, 6, 2],
              ],
              threshold: 0.0277197398245335,
              right_val: 0.7331544756889343,
              left_val: 0.4728286862373352,
            },
            {
              features: [
                [9, 7, 4, 3, -1],
                [9, 8, 4, 1, 3],
              ],
              threshold: 0.003103015013039112,
              right_val: 0.4101563096046448,
              left_val: 0.5302202105522156,
            },
            {
              features: [
                [0, 9, 4, 9, -1],
                [2, 9, 2, 9, 2],
              ],
              threshold: 0.0778612196445465,
              right_val: 0.127296194434166,
              left_val: 0.4998334050178528,
            },
            {
              features: [
                [9, 13, 3, 5, -1],
                [10, 13, 1, 5, 3],
              ],
              threshold: -0.0158549398183823,
              right_val: 0.5165656208992004,
              left_val: 0.0508333593606949,
            },
            {
              features: [
                [7, 7, 6, 3, -1],
                [9, 7, 2, 3, 3],
              ],
              threshold: -0.00497253006324172,
              right_val: 0.4684231877326965,
              left_val: 0.6798133850097656,
            },
            {
              features: [
                [9, 7, 3, 5, -1],
                [10, 7, 1, 5, 3],
              ],
              threshold: -0.0009767650626599789,
              right_val: 0.4788931906223297,
              left_val: 0.6010771989822388,
            },
            {
              features: [
                [5, 7, 8, 2, -1],
                [9, 7, 4, 2, 2],
              ],
              threshold: -0.0024647710379213095,
              right_val: 0.5220503807067871,
              left_val: 0.3393397927284241,
            },
            {
              features: [
                [5, 9, 12, 2, -1],
                [9, 9, 4, 2, 3],
              ],
              threshold: -0.006793770007789135,
              right_val: 0.5239663124084473,
              left_val: 0.4365136921405792,
            },
            {
              features: [
                [5, 6, 10, 3, -1],
                [10, 6, 5, 3, 2],
              ],
              threshold: 0.0326080210506916,
              right_val: 0.2425214946269989,
              left_val: 0.505272388458252,
            },
            {
              features: [
                [10, 12, 3, 1, -1],
                [11, 12, 1, 1, 3],
              ],
              threshold: -0.0005851442110724747,
              right_val: 0.4758574068546295,
              left_val: 0.5733973979949951,
            },
            {
              features: [
                [0, 1, 11, 15, -1],
                [0, 6, 11, 5, 3],
              ],
              threshold: -0.0296326000243425,
              right_val: 0.5263597965240479,
              left_val: 0.3892289102077484,
            },
          ],
          threshold: 66.66912078857422,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [1, 0, 18, 6, -1],
                [7, 0, 6, 6, 3],
              ],
              threshold: 0.0465508513152599,
              right_val: 0.6240522861480713,
              left_val: 0.3276950120925903,
            },
            {
              features: [
                [7, 7, 6, 1, -1],
                [9, 7, 2, 1, 3],
              ],
              threshold: 0.007953712716698647,
              right_val: 0.6942939162254333,
              left_val: 0.4256485104560852,
            },
            {
              features: [
                [5, 16, 6, 4, -1],
                [5, 16, 3, 2, 2],
                [8, 18, 3, 2, 2],
              ],
              threshold: 0.0006822156137786806,
              right_val: 0.59007328748703,
              left_val: 0.3711487054824829,
            },
            {
              features: [
                [6, 5, 9, 8, -1],
                [6, 9, 9, 4, 2],
              ],
              threshold: -0.00019348249770700932,
              right_val: 0.53005450963974,
              left_val: 0.2041133940219879,
            },
            {
              features: [
                [5, 10, 2, 6, -1],
                [5, 13, 2, 3, 2],
              ],
              threshold: -0.0002671050897333771,
              right_val: 0.3103179037570953,
              left_val: 0.5416126251220703,
            },
            {
              features: [
                [7, 6, 8, 10, -1],
                [11, 6, 4, 5, 2],
                [7, 11, 4, 5, 2],
              ],
              threshold: 0.0027818060480058193,
              right_val: 0.3467069864273071,
              left_val: 0.5277832746505737,
            },
            {
              features: [
                [5, 6, 8, 10, -1],
                [5, 6, 4, 5, 2],
                [9, 11, 4, 5, 2],
              ],
              threshold: -0.000467790785478428,
              right_val: 0.3294492065906525,
              left_val: 0.5308231115341187,
            },
            {
              features: [
                [9, 5, 2, 2, -1],
                [9, 6, 2, 1, 2],
              ],
              threshold: -30335160772665404e-21,
              right_val: 0.3852097094058991,
              left_val: 0.577387273311615,
            },
            {
              features: [
                [5, 12, 8, 2, -1],
                [5, 13, 8, 1, 2],
              ],
              threshold: 0.0007803800981491804,
              right_val: 0.6150057911872864,
              left_val: 0.4317438900470734,
            },
            {
              features: [
                [10, 2, 8, 2, -1],
                [10, 3, 8, 1, 2],
              ],
              threshold: -0.004255385138094425,
              right_val: 0.5324292778968811,
              left_val: 0.2933903932571411,
            },
            {
              features: [
                [4, 0, 2, 10, -1],
                [4, 0, 1, 5, 2],
                [5, 5, 1, 5, 2],
              ],
              threshold: -0.0002473561035003513,
              right_val: 0.3843030035495758,
              left_val: 0.5468844771385193,
            },
            {
              features: [
                [9, 10, 2, 2, -1],
                [9, 11, 2, 1, 2],
              ],
              threshold: -0.00014724259381182492,
              right_val: 0.5755587220191956,
              left_val: 0.4281542897224426,
            },
            {
              features: [
                [2, 8, 15, 3, -1],
                [2, 9, 15, 1, 3],
              ],
              threshold: 0.0011864770203828812,
              right_val: 0.5471466183662415,
              left_val: 0.374730110168457,
            },
            {
              features: [
                [8, 13, 4, 3, -1],
                [8, 14, 4, 1, 3],
              ],
              threshold: 0.0023936580400913954,
              right_val: 0.6111528873443604,
              left_val: 0.4537783861160278,
            },
            {
              features: [
                [7, 2, 3, 2, -1],
                [8, 2, 1, 2, 3],
              ],
              threshold: -0.0015390539774671197,
              right_val: 0.518953800201416,
              left_val: 0.2971341907978058,
            },
            {
              features: [
                [7, 13, 6, 3, -1],
                [7, 14, 6, 1, 3],
              ],
              threshold: -0.007196879014372826,
              right_val: 0.4726476967334747,
              left_val: 0.6699066758155823,
            },
            {
              features: [
                [9, 9, 2, 2, -1],
                [9, 10, 2, 1, 2],
              ],
              threshold: -0.0004149978922214359,
              right_val: 0.5260317921638489,
              left_val: 0.3384954035282135,
            },
            {
              features: [
                [17, 2, 3, 6, -1],
                [17, 4, 3, 2, 3],
              ],
              threshold: 0.004435983020812273,
              right_val: 0.3920140862464905,
              left_val: 0.539912223815918,
            },
            {
              features: [
                [1, 5, 3, 4, -1],
                [2, 5, 1, 4, 3],
              ],
              threshold: 0.0026606200262904167,
              right_val: 0.6119617819786072,
              left_val: 0.4482578039169312,
            },
            {
              features: [
                [14, 8, 4, 6, -1],
                [14, 10, 4, 2, 3],
              ],
              threshold: -0.0015287200221791863,
              right_val: 0.5340266227722168,
              left_val: 0.3711237907409668,
            },
            {
              features: [
                [1, 4, 3, 8, -1],
                [2, 4, 1, 8, 3],
              ],
              threshold: -0.0047397250309586525,
              right_val: 0.4455145001411438,
              left_val: 0.603108823299408,
            },
            {
              features: [
                [8, 13, 4, 6, -1],
                [8, 16, 4, 3, 2],
              ],
              threshold: -0.0148291299119592,
              right_val: 0.5341861844062805,
              left_val: 0.2838754057884216,
            },
            {
              features: [
                [3, 14, 2, 2, -1],
                [3, 15, 2, 1, 2],
              ],
              threshold: 0.0009227555710822344,
              right_val: 0.3361653983592987,
              left_val: 0.5209547281265259,
            },
            {
              features: [
                [14, 8, 4, 6, -1],
                [14, 10, 4, 2, 3],
              ],
              threshold: 0.0835298076272011,
              right_val: 0.0811644494533539,
              left_val: 0.5119969844818115,
            },
            {
              features: [
                [2, 8, 4, 6, -1],
                [2, 10, 4, 2, 3],
              ],
              threshold: -0.0007563314866274595,
              right_val: 0.5189831256866455,
              left_val: 0.331712007522583,
            },
            {
              features: [
                [10, 14, 1, 6, -1],
                [10, 17, 1, 3, 2],
              ],
              threshold: 0.009840385988354683,
              right_val: 0.233495905995369,
              left_val: 0.524759829044342,
            },
            {
              features: [
                [7, 5, 3, 6, -1],
                [8, 5, 1, 6, 3],
              ],
              threshold: -0.0015953830443322659,
              right_val: 0.4295622110366821,
              left_val: 0.5750094056129456,
            },
            {
              features: [
                [11, 2, 2, 6, -1],
                [12, 2, 1, 3, 2],
                [11, 5, 1, 3, 2],
              ],
              threshold: 34766020689858124e-21,
              right_val: 0.5564029216766357,
              left_val: 0.4342445135116577,
            },
            {
              features: [
                [6, 6, 6, 5, -1],
                [8, 6, 2, 5, 3],
              ],
              threshold: 0.0298629105091095,
              right_val: 0.6579188108444214,
              left_val: 0.4579147100448608,
            },
            {
              features: [
                [17, 1, 3, 6, -1],
                [17, 3, 3, 2, 3],
              ],
              threshold: 0.0113255903124809,
              right_val: 0.3673888146877289,
              left_val: 0.5274311900138855,
            },
            {
              features: [
                [8, 7, 3, 5, -1],
                [9, 7, 1, 5, 3],
              ],
              threshold: -0.008782864548265934,
              right_val: 0.4642167091369629,
              left_val: 0.7100368738174438,
            },
            {
              features: [
                [9, 18, 3, 2, -1],
                [10, 18, 1, 2, 3],
              ],
              threshold: 0.004363995976746082,
              right_val: 0.2705877125263214,
              left_val: 0.5279216170310974,
            },
            {
              features: [
                [8, 18, 3, 2, -1],
                [9, 18, 1, 2, 3],
              ],
              threshold: 0.004180472809821367,
              right_val: 0.2449083030223846,
              left_val: 0.5072525143623352,
            },
            {
              features: [
                [12, 3, 5, 2, -1],
                [12, 4, 5, 1, 2],
              ],
              threshold: -0.0004566851130221039,
              right_val: 0.5548691153526306,
              left_val: 0.4283105134963989,
            },
            {
              features: [
                [7, 1, 5, 12, -1],
                [7, 7, 5, 6, 2],
              ],
              threshold: -0.0037140368949621916,
              right_val: 0.4103653132915497,
              left_val: 0.5519387722015381,
            },
            {
              features: [
                [1, 0, 18, 4, -1],
                [7, 0, 6, 4, 3],
              ],
              threshold: -0.025304289534688,
              right_val: 0.48698890209198,
              left_val: 0.6867002248764038,
            },
            {
              features: [
                [4, 2, 2, 2, -1],
                [4, 3, 2, 1, 2],
              ],
              threshold: -0.0003445408074185252,
              right_val: 0.528769314289093,
              left_val: 0.3728874027729034,
            },
            {
              features: [
                [11, 14, 4, 2, -1],
                [13, 14, 2, 1, 2],
                [11, 15, 2, 1, 2],
              ],
              threshold: -0.0008393523166887462,
              right_val: 0.4616062045097351,
              left_val: 0.6060152053833008,
            },
            {
              features: [
                [0, 2, 3, 6, -1],
                [0, 4, 3, 2, 3],
              ],
              threshold: 0.0172800496220589,
              right_val: 0.1819823980331421,
              left_val: 0.5049635767936707,
            },
            {
              features: [
                [9, 7, 2, 3, -1],
                [9, 8, 2, 1, 3],
              ],
              threshold: -0.006359507795423269,
              right_val: 0.5232778787612915,
              left_val: 0.1631239950656891,
            },
            {
              features: [
                [5, 5, 1, 3, -1],
                [5, 6, 1, 1, 3],
              ],
              threshold: 0.0010298109846189618,
              right_val: 0.6176549196243286,
              left_val: 0.446327805519104,
            },
            {
              features: [
                [10, 10, 6, 1, -1],
                [10, 10, 3, 1, 2],
              ],
              threshold: 0.0010117109632119536,
              right_val: 0.4300698935985565,
              left_val: 0.5473384857177734,
            },
            {
              features: [
                [4, 10, 6, 1, -1],
                [7, 10, 3, 1, 2],
              ],
              threshold: -0.010308800265193,
              right_val: 0.5000867247581482,
              left_val: 0.1166985034942627,
            },
            {
              features: [
                [9, 17, 3, 3, -1],
                [9, 18, 3, 1, 3],
              ],
              threshold: 0.005468201823532581,
              right_val: 0.6719213724136353,
              left_val: 0.4769287109375,
            },
            {
              features: [
                [4, 14, 1, 3, -1],
                [4, 15, 1, 1, 3],
              ],
              threshold: -0.0009169646073132753,
              right_val: 0.5178164839744568,
              left_val: 0.3471089899539948,
            },
            {
              features: [
                [12, 5, 3, 3, -1],
                [12, 6, 3, 1, 3],
              ],
              threshold: 0.002392282010987401,
              right_val: 0.6216310858726501,
              left_val: 0.4785236120223999,
            },
            {
              features: [
                [4, 5, 12, 3, -1],
                [4, 6, 12, 1, 3],
              ],
              threshold: -0.007557381875813007,
              right_val: 0.4410085082054138,
              left_val: 0.5814796090126038,
            },
            {
              features: [
                [9, 8, 2, 3, -1],
                [9, 9, 2, 1, 3],
              ],
              threshold: -0.0007702403236180544,
              right_val: 0.546572208404541,
              left_val: 0.387800008058548,
            },
            {
              features: [
                [4, 9, 3, 3, -1],
                [5, 9, 1, 3, 3],
              ],
              threshold: -0.00871259905397892,
              right_val: 0.4995836019515991,
              left_val: 0.1660051047801971,
            },
            {
              features: [
                [6, 0, 9, 17, -1],
                [9, 0, 3, 17, 3],
              ],
              threshold: -0.0103063201531768,
              right_val: 0.5274233818054199,
              left_val: 0.4093391001224518,
            },
            {
              features: [
                [9, 12, 1, 3, -1],
                [9, 13, 1, 1, 3],
              ],
              threshold: -0.002094097901135683,
              right_val: 0.4572280049324036,
              left_val: 0.6206194758415222,
            },
            {
              features: [
                [9, 5, 2, 15, -1],
                [9, 10, 2, 5, 3],
              ],
              threshold: 0.006809905171394348,
              right_val: 0.4155600070953369,
              left_val: 0.5567759275436401,
            },
            {
              features: [
                [8, 14, 2, 3, -1],
                [8, 15, 2, 1, 3],
              ],
              threshold: -0.0010746059706434608,
              right_val: 0.4353024959564209,
              left_val: 0.5638927817344666,
            },
            {
              features: [
                [10, 14, 1, 3, -1],
                [10, 15, 1, 1, 3],
              ],
              threshold: 0.0021550289820879698,
              right_val: 0.6749758124351501,
              left_val: 0.4826265871524811,
            },
            {
              features: [
                [7, 1, 6, 5, -1],
                [9, 1, 2, 5, 3],
              ],
              threshold: 0.0317423194646835,
              right_val: 0.188324898481369,
              left_val: 0.5048379898071289,
            },
            {
              features: [
                [0, 0, 20, 2, -1],
                [0, 0, 10, 2, 2],
              ],
              threshold: -0.0783827230334282,
              right_val: 0.5260158181190491,
              left_val: 0.2369548976421356,
            },
            {
              features: [
                [2, 13, 5, 3, -1],
                [2, 14, 5, 1, 3],
              ],
              threshold: 0.005741511937230825,
              right_val: 0.2776469886302948,
              left_val: 0.5048828721046448,
            },
            {
              features: [
                [9, 11, 2, 3, -1],
                [9, 12, 2, 1, 3],
              ],
              threshold: -0.0029014600440859795,
              right_val: 0.4693317115306854,
              left_val: 0.6238604784011841,
            },
            {
              features: [
                [2, 5, 9, 15, -1],
                [2, 10, 9, 5, 3],
              ],
              threshold: -0.0026427931152284145,
              right_val: 0.5169777274131775,
              left_val: 0.3314141929149628,
            },
            {
              features: [
                [5, 0, 12, 10, -1],
                [11, 0, 6, 5, 2],
                [5, 5, 6, 5, 2],
              ],
              threshold: -0.1094966009259224,
              right_val: 0.5183441042900085,
              left_val: 0.2380045056343079,
            },
            {
              features: [
                [5, 1, 2, 3, -1],
                [6, 1, 1, 3, 2],
              ],
              threshold: 7407591328956187e-20,
              right_val: 0.5362150073051453,
              left_val: 0.406963586807251,
            },
            {
              features: [
                [10, 7, 6, 1, -1],
                [12, 7, 2, 1, 3],
              ],
              threshold: -0.0005059380200691521,
              right_val: 0.437459409236908,
              left_val: 0.5506706237792969,
            },
            {
              features: [
                [3, 1, 2, 10, -1],
                [3, 1, 1, 5, 2],
                [4, 6, 1, 5, 2],
              ],
              threshold: -0.0008213177789002657,
              right_val: 0.4209375977516174,
              left_val: 0.5525709986686707,
            },
            {
              features: [
                [13, 7, 2, 1, -1],
                [13, 7, 1, 1, 2],
              ],
              threshold: -60276539443293586e-21,
              right_val: 0.4748266041278839,
              left_val: 0.5455474853515625,
            },
            {
              features: [
                [4, 13, 4, 6, -1],
                [4, 15, 4, 2, 3],
              ],
              threshold: 0.006806514225900173,
              right_val: 0.3424577116966248,
              left_val: 0.5157995820045471,
            },
            {
              features: [
                [13, 7, 2, 1, -1],
                [13, 7, 1, 1, 2],
              ],
              threshold: 0.0017202789895236492,
              right_val: 0.6331263780593872,
              left_val: 0.5013207793235779,
            },
            {
              features: [
                [5, 7, 2, 1, -1],
                [6, 7, 1, 1, 2],
              ],
              threshold: -0.0001301692973356694,
              right_val: 0.4226869940757752,
              left_val: 0.5539718270301819,
            },
            {
              features: [
                [2, 12, 18, 4, -1],
                [11, 12, 9, 2, 2],
                [2, 14, 9, 2, 2],
              ],
              threshold: -0.004801638890057802,
              right_val: 0.5430780053138733,
              left_val: 0.4425095021724701,
            },
            {
              features: [
                [5, 7, 2, 2, -1],
                [5, 7, 1, 1, 2],
                [6, 8, 1, 1, 2],
              ],
              threshold: -0.002539931097999215,
              right_val: 0.4697605073451996,
              left_val: 0.7145782113075256,
            },
            {
              features: [
                [16, 3, 4, 2, -1],
                [16, 4, 4, 1, 2],
              ],
              threshold: -0.0014278929447755218,
              right_val: 0.539960503578186,
              left_val: 0.4070445001125336,
            },
            {
              features: [
                [0, 2, 2, 18, -1],
                [0, 2, 1, 9, 2],
                [1, 11, 1, 9, 2],
              ],
              threshold: -0.0251425504684448,
              right_val: 0.4747352004051209,
              left_val: 0.7884690761566162,
            },
            {
              features: [
                [1, 2, 18, 4, -1],
                [10, 2, 9, 2, 2],
                [1, 4, 9, 2, 2],
              ],
              threshold: -0.0038899609353393316,
              right_val: 0.5577110052108765,
              left_val: 0.4296191930770874,
            },
            {
              features: [
                [9, 14, 1, 3, -1],
                [9, 15, 1, 1, 3],
              ],
              threshold: 0.004394745919853449,
              right_val: 0.702394425868988,
              left_val: 0.4693162143230438,
            },
            {
              features: [
                [2, 12, 18, 4, -1],
                [11, 12, 9, 2, 2],
                [2, 14, 9, 2, 2],
              ],
              threshold: 0.0246784202754498,
              right_val: 0.3812510073184967,
              left_val: 0.5242322087287903,
            },
            {
              features: [
                [0, 12, 18, 4, -1],
                [0, 12, 9, 2, 2],
                [9, 14, 9, 2, 2],
              ],
              threshold: 0.0380476787686348,
              right_val: 0.1687828004360199,
              left_val: 0.5011739730834961,
            },
            {
              features: [
                [11, 4, 5, 3, -1],
                [11, 5, 5, 1, 3],
              ],
              threshold: 0.007942486554384232,
              right_val: 0.6369568109512329,
              left_val: 0.4828582108020783,
            },
            {
              features: [
                [6, 4, 7, 3, -1],
                [6, 5, 7, 1, 3],
              ],
              threshold: -0.0015110049862414598,
              right_val: 0.4487667977809906,
              left_val: 0.5906485915184021,
            },
            {
              features: [
                [13, 17, 3, 3, -1],
                [13, 18, 3, 1, 3],
              ],
              threshold: 0.0064201741479337215,
              right_val: 0.2990570068359375,
              left_val: 0.5241097807884216,
            },
            {
              features: [
                [8, 1, 3, 4, -1],
                [9, 1, 1, 4, 3],
              ],
              threshold: -0.0029802159406244755,
              right_val: 0.5078489780426025,
              left_val: 0.3041465878486633,
            },
            {
              features: [
                [11, 4, 2, 4, -1],
                [11, 4, 1, 4, 2],
              ],
              threshold: -0.0007458007894456387,
              right_val: 0.5256826281547546,
              left_val: 0.4128139019012451,
            },
            {
              features: [
                [0, 17, 9, 3, -1],
                [3, 17, 3, 3, 3],
              ],
              threshold: -0.0104709500446916,
              right_val: 0.4494296014308929,
              left_val: 0.5808395147323608,
            },
            {
              features: [
                [11, 0, 2, 8, -1],
                [12, 0, 1, 4, 2],
                [11, 4, 1, 4, 2],
              ],
              threshold: 0.009336920455098152,
              right_val: 0.265894889831543,
              left_val: 0.524655282497406,
            },
            {
              features: [
                [0, 8, 6, 12, -1],
                [0, 8, 3, 6, 2],
                [3, 14, 3, 6, 2],
              ],
              threshold: 0.0279369000345469,
              right_val: 0.7087256908416748,
              left_val: 0.4674955010414124,
            },
            {
              features: [
                [10, 7, 4, 12, -1],
                [10, 13, 4, 6, 2],
              ],
              threshold: 0.007427767850458622,
              right_val: 0.3758518099784851,
              left_val: 0.5409486889839172,
            },
            {
              features: [
                [5, 3, 8, 14, -1],
                [5, 10, 8, 7, 2],
              ],
              threshold: -0.0235845092684031,
              right_val: 0.5238550901412964,
              left_val: 0.3758639991283417,
            },
            {
              features: [
                [14, 10, 6, 1, -1],
                [14, 10, 3, 1, 2],
              ],
              threshold: 0.0011452640173956752,
              right_val: 0.5804247260093689,
              left_val: 0.4329578876495361,
            },
            {
              features: [
                [0, 4, 10, 4, -1],
                [0, 6, 10, 2, 2],
              ],
              threshold: -0.0004346866044215858,
              right_val: 0.3873069882392883,
              left_val: 0.5280618071556091,
            },
            {
              features: [
                [10, 0, 5, 8, -1],
                [10, 4, 5, 4, 2],
              ],
              threshold: 0.0106485402211547,
              right_val: 0.5681251883506775,
              left_val: 0.4902113080024719,
            },
            {
              features: [
                [8, 1, 4, 8, -1],
                [8, 1, 2, 4, 2],
                [10, 5, 2, 4, 2],
              ],
              threshold: -0.0003941805043723434,
              right_val: 0.4318251013755798,
              left_val: 0.5570880174636841,
            },
            {
              features: [
                [9, 11, 6, 1, -1],
                [11, 11, 2, 1, 3],
              ],
              threshold: -0.00013270479394122958,
              right_val: 0.4343554973602295,
              left_val: 0.5658439993858337,
            },
            {
              features: [
                [8, 9, 3, 4, -1],
                [9, 9, 1, 4, 3],
              ],
              threshold: -0.002012551063671708,
              right_val: 0.4537523984909058,
              left_val: 0.6056739091873169,
            },
            {
              features: [
                [18, 4, 2, 6, -1],
                [18, 6, 2, 2, 3],
              ],
              threshold: 0.0024854319635778666,
              right_val: 0.4138010144233704,
              left_val: 0.5390477180480957,
            },
            {
              features: [
                [8, 8, 3, 4, -1],
                [9, 8, 1, 4, 3],
              ],
              threshold: 0.0018237880431115627,
              right_val: 0.5717188715934753,
              left_val: 0.4354828894138336,
            },
            {
              features: [
                [7, 1, 13, 3, -1],
                [7, 2, 13, 1, 3],
              ],
              threshold: -0.0166566595435143,
              right_val: 0.521612286567688,
              left_val: 0.3010913133621216,
            },
            {
              features: [
                [7, 13, 6, 1, -1],
                [9, 13, 2, 1, 3],
              ],
              threshold: 0.0008034955826587975,
              right_val: 0.3818396925926209,
              left_val: 0.5300151109695435,
            },
            {
              features: [
                [12, 11, 3, 6, -1],
                [12, 13, 3, 2, 3],
              ],
              threshold: 0.003417037893086672,
              right_val: 0.4241400063037872,
              left_val: 0.5328028798103333,
            },
            {
              features: [
                [5, 11, 6, 1, -1],
                [7, 11, 2, 1, 3],
              ],
              threshold: -0.00036222729249857366,
              right_val: 0.418697714805603,
              left_val: 0.5491728186607361,
            },
            {
              features: [
                [1, 4, 18, 10, -1],
                [10, 4, 9, 5, 2],
                [1, 9, 9, 5, 2],
              ],
              threshold: -0.1163002029061317,
              right_val: 0.522645115852356,
              left_val: 0.1440722048282623,
            },
            {
              features: [
                [8, 6, 4, 9, -1],
                [8, 9, 4, 3, 3],
              ],
              threshold: -0.0146950101479888,
              right_val: 0.4715717136859894,
              left_val: 0.7747725248336792,
            },
            {
              features: [
                [8, 6, 4, 3, -1],
                [8, 7, 4, 1, 3],
              ],
              threshold: 0.0021972130052745342,
              right_val: 0.3315644860267639,
              left_val: 0.5355433821678162,
            },
            {
              features: [
                [8, 7, 3, 3, -1],
                [9, 7, 1, 3, 3],
              ],
              threshold: -0.00046965209185145795,
              right_val: 0.4458136856555939,
              left_val: 0.5767235159873962,
            },
            {
              features: [
                [14, 15, 4, 3, -1],
                [14, 16, 4, 1, 3],
              ],
              threshold: 0.006514499895274639,
              right_val: 0.3647888898849487,
              left_val: 0.5215674042701721,
            },
            {
              features: [
                [5, 10, 3, 10, -1],
                [6, 10, 1, 10, 3],
              ],
              threshold: 0.0213000606745481,
              right_val: 0.1567950993776321,
              left_val: 0.4994204938411713,
            },
            {
              features: [
                [8, 15, 4, 3, -1],
                [8, 16, 4, 1, 3],
              ],
              threshold: 0.0031881409231573343,
              right_val: 0.6287270188331604,
              left_val: 0.4742200076580048,
            },
            {
              features: [
                [0, 8, 1, 6, -1],
                [0, 10, 1, 2, 3],
              ],
              threshold: 0.0009001977741718292,
              right_val: 0.394375205039978,
              left_val: 0.5347954034805298,
            },
            {
              features: [
                [10, 15, 1, 3, -1],
                [10, 16, 1, 1, 3],
              ],
              threshold: -0.005177227780222893,
              right_val: 0.5013138055801392,
              left_val: 0.6727191805839539,
            },
            {
              features: [
                [2, 15, 4, 3, -1],
                [2, 16, 4, 1, 3],
              ],
              threshold: -0.004376464989036322,
              right_val: 0.5128793120384216,
              left_val: 0.3106675148010254,
            },
            {
              features: [
                [18, 3, 2, 8, -1],
                [19, 3, 1, 4, 2],
                [18, 7, 1, 4, 2],
              ],
              threshold: 0.002629996044561267,
              right_val: 0.5755215883255005,
              left_val: 0.488631010055542,
            },
            {
              features: [
                [0, 3, 2, 8, -1],
                [0, 3, 1, 4, 2],
                [1, 7, 1, 4, 2],
              ],
              threshold: -0.002045868895947933,
              right_val: 0.4558076858520508,
              left_val: 0.6025794148445129,
            },
            {
              features: [
                [3, 7, 14, 10, -1],
                [10, 7, 7, 5, 2],
                [3, 12, 7, 5, 2],
              ],
              threshold: 0.0694827064871788,
              right_val: 0.2185259014368057,
              left_val: 0.5240747928619385,
            },
            {
              features: [
                [0, 7, 19, 3, -1],
                [0, 8, 19, 1, 3],
              ],
              threshold: 0.0240489393472672,
              right_val: 0.2090622037649155,
              left_val: 0.501186728477478,
            },
            {
              features: [
                [12, 6, 3, 3, -1],
                [12, 7, 3, 1, 3],
              ],
              threshold: 0.003109534038230777,
              right_val: 0.7108548283576965,
              left_val: 0.4866712093353272,
            },
            {
              features: [
                [0, 6, 1, 3, -1],
                [0, 7, 1, 1, 3],
              ],
              threshold: -0.00125032605137676,
              right_val: 0.5156195163726807,
              left_val: 0.3407891094684601,
            },
            {
              features: [
                [12, 6, 3, 3, -1],
                [12, 7, 3, 1, 3],
              ],
              threshold: -0.0010281190043315291,
              right_val: 0.443943202495575,
              left_val: 0.557557225227356,
            },
            {
              features: [
                [5, 6, 3, 3, -1],
                [5, 7, 3, 1, 3],
              ],
              threshold: -0.008889362215995789,
              right_val: 0.4620442092418671,
              left_val: 0.6402000784873962,
            },
            {
              features: [
                [8, 2, 4, 2, -1],
                [8, 3, 4, 1, 2],
              ],
              threshold: -0.0006109480164013803,
              right_val: 0.5448899865150452,
              left_val: 0.3766441941261292,
            },
            {
              features: [
                [6, 3, 4, 12, -1],
                [8, 3, 2, 12, 2],
              ],
              threshold: -0.005768635775893927,
              right_val: 0.5133677124977112,
              left_val: 0.3318648934364319,
            },
            {
              features: [
                [13, 6, 2, 3, -1],
                [13, 7, 2, 1, 3],
              ],
              threshold: 0.0018506490159779787,
              right_val: 0.6406934857368469,
              left_val: 0.4903570115566254,
            },
            {
              features: [
                [0, 10, 20, 4, -1],
                [0, 12, 20, 2, 2],
              ],
              threshold: -0.0997994691133499,
              right_val: 0.5015562176704407,
              left_val: 0.1536051034927368,
            },
            {
              features: [
                [2, 0, 17, 14, -1],
                [2, 7, 17, 7, 2],
              ],
              threshold: -0.3512834906578064,
              right_val: 0.5174378752708435,
              left_val: 0.0588231310248375,
            },
            {
              features: [
                [0, 0, 6, 10, -1],
                [0, 0, 3, 5, 2],
                [3, 5, 3, 5, 2],
              ],
              threshold: -0.0452445708215237,
              right_val: 0.4677872955799103,
              left_val: 0.6961488723754883,
            },
            {
              features: [
                [14, 6, 6, 4, -1],
                [14, 6, 3, 4, 2],
              ],
              threshold: 0.0714815780520439,
              right_val: 0.1038092970848084,
              left_val: 0.5167986154556274,
            },
            {
              features: [
                [0, 6, 6, 4, -1],
                [3, 6, 3, 4, 2],
              ],
              threshold: 0.0021895780228078365,
              right_val: 0.5532060861587524,
              left_val: 0.4273078143596649,
            },
            {
              features: [
                [13, 2, 7, 2, -1],
                [13, 3, 7, 1, 2],
              ],
              threshold: -0.0005924265133216977,
              right_val: 0.5276389122009277,
              left_val: 0.46389439702034,
            },
            {
              features: [
                [0, 2, 7, 2, -1],
                [0, 3, 7, 1, 2],
              ],
              threshold: 0.0016788389766588807,
              right_val: 0.3932034969329834,
              left_val: 0.530164897441864,
            },
            {
              features: [
                [6, 11, 14, 2, -1],
                [13, 11, 7, 1, 2],
                [6, 12, 7, 1, 2],
              ],
              threshold: -0.0022163488902151585,
              right_val: 0.4757033884525299,
              left_val: 0.5630694031715393,
            },
            {
              features: [
                [8, 5, 2, 2, -1],
                [8, 5, 1, 1, 2],
                [9, 6, 1, 1, 2],
              ],
              threshold: 0.00011568699846975505,
              right_val: 0.5535702705383301,
              left_val: 0.4307535886764526,
            },
            {
              features: [
                [13, 9, 2, 3, -1],
                [13, 9, 1, 3, 2],
              ],
              threshold: -0.007201728876680136,
              right_val: 0.5193064212799072,
              left_val: 0.144488200545311,
            },
            {
              features: [
                [1, 1, 3, 12, -1],
                [2, 1, 1, 12, 3],
              ],
              threshold: 0.0008908127201721072,
              right_val: 0.5593621134757996,
              left_val: 0.4384432137012482,
            },
            {
              features: [
                [17, 4, 1, 3, -1],
                [17, 5, 1, 1, 3],
              ],
              threshold: 0.00019605009583756328,
              right_val: 0.4705956876277924,
              left_val: 0.5340415835380554,
            },
            {
              features: [
                [2, 4, 1, 3, -1],
                [2, 5, 1, 1, 3],
              ],
              threshold: 0.0005202214233577251,
              right_val: 0.3810079097747803,
              left_val: 0.5213856101036072,
            },
            {
              features: [
                [14, 5, 1, 3, -1],
                [14, 6, 1, 1, 3],
              ],
              threshold: 0.0009458857239224017,
              right_val: 0.6130738854408264,
              left_val: 0.4769414961338043,
            },
            {
              features: [
                [7, 16, 2, 3, -1],
                [7, 17, 2, 1, 3],
              ],
              threshold: 916984718060121e-19,
              right_val: 0.5429363250732422,
              left_val: 0.4245009124279022,
            },
            {
              features: [
                [8, 13, 4, 6, -1],
                [10, 13, 2, 3, 2],
                [8, 16, 2, 3, 2],
              ],
              threshold: 0.002183320000767708,
              right_val: 0.419107586145401,
              left_val: 0.5457730889320374,
            },
            {
              features: [
                [5, 5, 1, 3, -1],
                [5, 6, 1, 1, 3],
              ],
              threshold: -0.0008603967144154012,
              right_val: 0.4471659958362579,
              left_val: 0.5764588713645935,
            },
            {
              features: [
                [16, 0, 4, 20, -1],
                [16, 0, 2, 20, 2],
              ],
              threshold: -0.0132362395524979,
              right_val: 0.4695009887218475,
              left_val: 0.6372823119163513,
            },
            {
              features: [
                [5, 1, 2, 6, -1],
                [5, 1, 1, 3, 2],
                [6, 4, 1, 3, 2],
              ],
              threshold: 0.0004337670106906444,
              right_val: 0.394582986831665,
              left_val: 0.5317873954772949,
            },
          ],
          threshold: 67.69892120361328,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [5, 4, 10, 4, -1],
                [5, 6, 10, 2, 2],
              ],
              threshold: -0.024847149848938,
              right_val: 0.3873311877250671,
              left_val: 0.6555516719818115,
            },
            {
              features: [
                [15, 2, 4, 12, -1],
                [15, 2, 2, 12, 2],
              ],
              threshold: 0.006134861148893833,
              right_val: 0.5973997712135315,
              left_val: 0.374807208776474,
            },
            {
              features: [
                [7, 6, 4, 12, -1],
                [7, 12, 4, 6, 2],
              ],
              threshold: 0.006449849810451269,
              right_val: 0.2548811137676239,
              left_val: 0.542549192905426,
            },
            {
              features: [
                [14, 5, 1, 8, -1],
                [14, 9, 1, 4, 2],
              ],
              threshold: 0.0006349121103994548,
              right_val: 0.5387253761291504,
              left_val: 0.2462442070245743,
            },
            {
              features: [
                [1, 4, 14, 10, -1],
                [1, 4, 7, 5, 2],
                [8, 9, 7, 5, 2],
              ],
              threshold: 0.0014023890253156424,
              right_val: 0.3528657853603363,
              left_val: 0.5594322085380554,
            },
            {
              features: [
                [11, 6, 6, 14, -1],
                [14, 6, 3, 7, 2],
                [11, 13, 3, 7, 2],
              ],
              threshold: 0.0003004400059580803,
              right_val: 0.576593816280365,
              left_val: 0.3958503901958466,
            },
            {
              features: [
                [3, 6, 6, 14, -1],
                [3, 6, 3, 7, 2],
                [6, 13, 3, 7, 2],
              ],
              threshold: 0.00010042409849120304,
              right_val: 0.5534998178482056,
              left_val: 0.3698996901512146,
            },
            {
              features: [
                [4, 9, 15, 2, -1],
                [9, 9, 5, 2, 3],
              ],
              threshold: -0.005084149073809385,
              right_val: 0.5547800064086914,
              left_val: 0.3711090981960297,
            },
            {
              features: [
                [7, 14, 6, 3, -1],
                [7, 15, 6, 1, 3],
              ],
              threshold: -0.0195372607558966,
              right_val: 0.4579297006130219,
              left_val: 0.7492755055427551,
            },
            {
              features: [
                [6, 3, 14, 4, -1],
                [13, 3, 7, 2, 2],
                [6, 5, 7, 2, 2],
              ],
              threshold: -7453274065483129e-21,
              right_val: 0.390406996011734,
              left_val: 0.5649787187576294,
            },
            {
              features: [
                [1, 9, 15, 2, -1],
                [6, 9, 5, 2, 3],
              ],
              threshold: -0.0036079459823668003,
              right_val: 0.5267801284790039,
              left_val: 0.3381088078022003,
            },
            {
              features: [
                [6, 11, 8, 9, -1],
                [6, 14, 8, 3, 3],
              ],
              threshold: 0.002069750102236867,
              right_val: 0.3714388906955719,
              left_val: 0.5519291162490845,
            },
            {
              features: [
                [7, 4, 3, 8, -1],
                [8, 4, 1, 8, 3],
              ],
              threshold: -0.0004646384040825069,
              right_val: 0.4113566875457764,
              left_val: 0.5608214735984802,
            },
            {
              features: [
                [14, 6, 2, 6, -1],
                [14, 9, 2, 3, 2],
              ],
              threshold: 0.0007549045258201659,
              right_val: 0.532935619354248,
              left_val: 0.3559206128120422,
            },
            {
              features: [
                [5, 7, 6, 4, -1],
                [5, 7, 3, 2, 2],
                [8, 9, 3, 2, 2],
              ],
              threshold: -0.0009832223877310753,
              right_val: 0.3763205111026764,
              left_val: 0.5414795875549316,
            },
            {
              features: [
                [1, 1, 18, 19, -1],
                [7, 1, 6, 19, 3],
              ],
              threshold: -0.0199406407773495,
              right_val: 0.4705299139022827,
              left_val: 0.634790301322937,
            },
            {
              features: [
                [1, 2, 6, 5, -1],
                [4, 2, 3, 5, 2],
              ],
              threshold: 0.0037680300883948803,
              right_val: 0.5563716292381287,
              left_val: 0.3913489878177643,
            },
            {
              features: [
                [12, 17, 6, 2, -1],
                [12, 18, 6, 1, 2],
              ],
              threshold: -0.009452850557863712,
              right_val: 0.5215116739273071,
              left_val: 0.2554892897605896,
            },
            {
              features: [
                [2, 17, 6, 2, -1],
                [2, 18, 6, 1, 2],
              ],
              threshold: 0.002956084907054901,
              right_val: 0.3063920140266419,
              left_val: 0.5174679160118103,
            },
            {
              features: [
                [17, 3, 3, 6, -1],
                [17, 5, 3, 2, 3],
              ],
              threshold: 0.009107873775064945,
              right_val: 0.2885963022708893,
              left_val: 0.5388448238372803,
            },
            {
              features: [
                [8, 17, 3, 3, -1],
                [8, 18, 3, 1, 3],
              ],
              threshold: 0.0018219229532405734,
              right_val: 0.58521968126297,
              left_val: 0.4336043000221252,
            },
            {
              features: [
                [10, 13, 2, 6, -1],
                [10, 16, 2, 3, 2],
              ],
              threshold: 0.0146887395530939,
              right_val: 0.2870005965232849,
              left_val: 0.5287361741065979,
            },
            {
              features: [
                [7, 13, 6, 3, -1],
                [7, 14, 6, 1, 3],
              ],
              threshold: -0.0143879903480411,
              right_val: 0.4647370874881744,
              left_val: 0.701944887638092,
            },
            {
              features: [
                [17, 3, 3, 6, -1],
                [17, 5, 3, 2, 3],
              ],
              threshold: -0.0189866498112679,
              right_val: 0.5247011780738831,
              left_val: 0.2986552119255066,
            },
            {
              features: [
                [8, 13, 2, 3, -1],
                [8, 14, 2, 1, 3],
              ],
              threshold: 0.0011527639580890536,
              right_val: 0.593166172504425,
              left_val: 0.4323473870754242,
            },
            {
              features: [
                [9, 3, 6, 2, -1],
                [11, 3, 2, 2, 3],
              ],
              threshold: 0.0109336702153087,
              right_val: 0.3130319118499756,
              left_val: 0.5286864042282104,
            },
            {
              features: [
                [0, 3, 3, 6, -1],
                [0, 5, 3, 2, 3],
              ],
              threshold: -0.0149327302351594,
              right_val: 0.508407711982727,
              left_val: 0.2658419013023377,
            },
            {
              features: [
                [8, 5, 4, 6, -1],
                [8, 7, 4, 2, 3],
              ],
              threshold: -0.0002997053961735219,
              right_val: 0.374072402715683,
              left_val: 0.5463526844978333,
            },
            {
              features: [
                [5, 5, 3, 2, -1],
                [5, 6, 3, 1, 2],
              ],
              threshold: 0.004167762119323015,
              right_val: 0.7435721755027771,
              left_val: 0.4703496992588043,
            },
            {
              features: [
                [10, 1, 3, 4, -1],
                [11, 1, 1, 4, 3],
              ],
              threshold: -0.00639053201302886,
              right_val: 0.5280538201332092,
              left_val: 0.2069258987903595,
            },
            {
              features: [
                [1, 2, 5, 9, -1],
                [1, 5, 5, 3, 3],
              ],
              threshold: 0.004502960946410894,
              right_val: 0.348354309797287,
              left_val: 0.518264889717102,
            },
            {
              features: [
                [13, 6, 2, 3, -1],
                [13, 7, 2, 1, 3],
              ],
              threshold: -0.009204036556184292,
              right_val: 0.4932360053062439,
              left_val: 0.680377721786499,
            },
            {
              features: [
                [0, 6, 14, 3, -1],
                [7, 6, 7, 3, 2],
              ],
              threshold: 0.0813272595405579,
              right_val: 0.2253051996231079,
              left_val: 0.5058398842811584,
            },
            {
              features: [
                [2, 11, 18, 8, -1],
                [2, 15, 18, 4, 2],
              ],
              threshold: -0.150792807340622,
              right_val: 0.5264679789543152,
              left_val: 0.2963424921035767,
            },
            {
              features: [
                [5, 6, 2, 3, -1],
                [5, 7, 2, 1, 3],
              ],
              threshold: 0.0033179009333252907,
              right_val: 0.7072932124137878,
              left_val: 0.4655495882034302,
            },
            {
              features: [
                [10, 6, 4, 2, -1],
                [12, 6, 2, 1, 2],
                [10, 7, 2, 1, 2],
              ],
              threshold: 0.0007740280125290155,
              right_val: 0.5668237805366516,
              left_val: 0.4780347943305969,
            },
            {
              features: [
                [6, 6, 4, 2, -1],
                [6, 6, 2, 1, 2],
                [8, 7, 2, 1, 2],
              ],
              threshold: 0.0006819954141974449,
              right_val: 0.5722156763076782,
              left_val: 0.4286996126174927,
            },
            {
              features: [
                [10, 1, 3, 4, -1],
                [11, 1, 1, 4, 3],
              ],
              threshold: 0.0053671570494771,
              right_val: 0.3114621937274933,
              left_val: 0.5299307107925415,
            },
            {
              features: [
                [7, 1, 2, 7, -1],
                [8, 1, 1, 7, 2],
              ],
              threshold: 9701866656541824e-20,
              right_val: 0.5269461870193481,
              left_val: 0.3674638867378235,
            },
            {
              features: [
                [4, 2, 15, 14, -1],
                [4, 9, 15, 7, 2],
              ],
              threshold: -0.1253408938646317,
              right_val: 0.5245791077613831,
              left_val: 0.2351492047309876,
            },
            {
              features: [
                [8, 7, 3, 2, -1],
                [9, 7, 1, 2, 3],
              ],
              threshold: -0.005251626949757338,
              right_val: 0.4693767130374908,
              left_val: 0.7115936875343323,
            },
            {
              features: [
                [2, 3, 18, 4, -1],
                [11, 3, 9, 2, 2],
                [2, 5, 9, 2, 2],
              ],
              threshold: -0.007834210991859436,
              right_val: 0.5409085750579834,
              left_val: 0.4462651014328003,
            },
            {
              features: [
                [9, 7, 2, 2, -1],
                [10, 7, 1, 2, 2],
              ],
              threshold: -0.001131006982177496,
              right_val: 0.4417662024497986,
              left_val: 0.5945618748664856,
            },
            {
              features: [
                [13, 9, 2, 3, -1],
                [13, 9, 1, 3, 2],
              ],
              threshold: 0.0017601120052859187,
              right_val: 0.3973453044891357,
              left_val: 0.5353249907493591,
            },
            {
              features: [
                [5, 2, 6, 2, -1],
                [7, 2, 2, 2, 3],
              ],
              threshold: -0.00081581249833107,
              right_val: 0.5264726877212524,
              left_val: 0.3760268092155457,
            },
            {
              features: [
                [9, 5, 2, 7, -1],
                [9, 5, 1, 7, 2],
              ],
              threshold: -0.003868758911266923,
              right_val: 0.4749819934368134,
              left_val: 0.6309912800788879,
            },
            {
              features: [
                [5, 9, 2, 3, -1],
                [6, 9, 1, 3, 2],
              ],
              threshold: 0.0015207129763439298,
              right_val: 0.3361223936080933,
              left_val: 0.5230181813240051,
            },
            {
              features: [
                [6, 0, 14, 18, -1],
                [6, 9, 14, 9, 2],
              ],
              threshold: 0.545867383480072,
              right_val: 0.1172635033726692,
              left_val: 0.5167139768600464,
            },
            {
              features: [
                [2, 16, 6, 3, -1],
                [2, 17, 6, 1, 3],
              ],
              threshold: 0.0156501904129982,
              right_val: 0.1393294930458069,
              left_val: 0.4979439079761505,
            },
            {
              features: [
                [9, 7, 3, 6, -1],
                [10, 7, 1, 6, 3],
              ],
              threshold: -0.0117318602278829,
              right_val: 0.4921196103096008,
              left_val: 0.7129650712013245,
            },
            {
              features: [
                [7, 8, 4, 3, -1],
                [7, 9, 4, 1, 3],
              ],
              threshold: -0.006176512222737074,
              right_val: 0.5049701929092407,
              left_val: 0.2288102954626083,
            },
            {
              features: [
                [7, 12, 6, 3, -1],
                [7, 13, 6, 1, 3],
              ],
              threshold: 0.0022457661107182503,
              right_val: 0.6048725843429565,
              left_val: 0.4632433950901032,
            },
            {
              features: [
                [9, 12, 2, 3, -1],
                [9, 13, 2, 1, 3],
              ],
              threshold: -0.005191586911678314,
              right_val: 0.4602192938327789,
              left_val: 0.6467421054840088,
            },
            {
              features: [
                [7, 12, 6, 2, -1],
                [9, 12, 2, 2, 3],
              ],
              threshold: -0.0238278806209564,
              right_val: 0.5226079225540161,
              left_val: 0.1482000946998596,
            },
            {
              features: [
                [5, 11, 4, 6, -1],
                [5, 14, 4, 3, 2],
              ],
              threshold: 0.0010284580057486892,
              right_val: 0.3375957012176514,
              left_val: 0.5135489106178284,
            },
            {
              features: [
                [11, 12, 7, 2, -1],
                [11, 13, 7, 1, 2],
              ],
              threshold: -0.0100788502022624,
              right_val: 0.5303567051887512,
              left_val: 0.2740561068058014,
            },
            {
              features: [
                [6, 10, 8, 6, -1],
                [6, 10, 4, 3, 2],
                [10, 13, 4, 3, 2],
              ],
              threshold: 0.002616893034428358,
              right_val: 0.3972454071044922,
              left_val: 0.533267080783844,
            },
            {
              features: [
                [11, 10, 3, 4, -1],
                [11, 12, 3, 2, 2],
              ],
              threshold: 0.000543853675480932,
              right_val: 0.4063411951065064,
              left_val: 0.5365604162216187,
            },
            {
              features: [
                [9, 16, 2, 3, -1],
                [9, 17, 2, 1, 3],
              ],
              threshold: 0.005351051222532988,
              right_val: 0.6889045834541321,
              left_val: 0.4653759002685547,
            },
            {
              features: [
                [13, 3, 1, 9, -1],
                [13, 6, 1, 3, 3],
              ],
              threshold: -0.0015274790348485112,
              right_val: 0.3624723851680756,
              left_val: 0.5449501276016235,
            },
            {
              features: [
                [1, 13, 14, 6, -1],
                [1, 15, 14, 2, 3],
              ],
              threshold: -0.0806244164705276,
              right_val: 0.5000287294387817,
              left_val: 0.1656087040901184,
            },
            {
              features: [
                [13, 6, 1, 6, -1],
                [13, 9, 1, 3, 2],
              ],
              threshold: 0.0221920292824507,
              right_val: 0.2002808004617691,
              left_val: 0.5132731199264526,
            },
            {
              features: [
                [0, 4, 3, 8, -1],
                [1, 4, 1, 8, 3],
              ],
              threshold: 0.007310063112527132,
              right_val: 0.6366536021232605,
              left_val: 0.4617947936058044,
            },
            {
              features: [
                [18, 0, 2, 18, -1],
                [18, 0, 1, 18, 2],
              ],
              threshold: -0.006406307220458984,
              right_val: 0.4867860972881317,
              left_val: 0.5916250944137573,
            },
            {
              features: [
                [2, 3, 6, 2, -1],
                [2, 4, 6, 1, 2],
              ],
              threshold: -0.0007641504053026438,
              right_val: 0.5315797924995422,
              left_val: 0.388840913772583,
            },
            {
              features: [
                [9, 0, 8, 6, -1],
                [9, 2, 8, 2, 3],
              ],
              threshold: 0.0007673448999412358,
              right_val: 0.5605279803276062,
              left_val: 0.4159064888954163,
            },
            {
              features: [
                [6, 6, 1, 6, -1],
                [6, 9, 1, 3, 2],
              ],
              threshold: 0.0006147450185380876,
              right_val: 0.5120148062705994,
              left_val: 0.3089022040367127,
            },
            {
              features: [
                [14, 8, 6, 3, -1],
                [14, 9, 6, 1, 3],
              ],
              threshold: -0.005010527092963457,
              right_val: 0.5207306146621704,
              left_val: 0.3972199857234955,
            },
            {
              features: [
                [0, 0, 2, 18, -1],
                [1, 0, 1, 18, 2],
              ],
              threshold: -0.008690913207828999,
              right_val: 0.4608575999736786,
              left_val: 0.6257408261299133,
            },
            {
              features: [
                [1, 18, 18, 2, -1],
                [10, 18, 9, 1, 2],
                [1, 19, 9, 1, 2],
              ],
              threshold: -0.016391459852457,
              right_val: 0.5242266058921814,
              left_val: 0.2085209935903549,
            },
            {
              features: [
                [3, 15, 2, 2, -1],
                [3, 16, 2, 1, 2],
              ],
              threshold: 0.00040973909199237823,
              right_val: 0.3780320882797241,
              left_val: 0.5222427248954773,
            },
            {
              features: [
                [8, 14, 5, 3, -1],
                [8, 15, 5, 1, 3],
              ],
              threshold: -0.002524228999391198,
              right_val: 0.4611890017986298,
              left_val: 0.5803927183151245,
            },
            {
              features: [
                [8, 14, 2, 3, -1],
                [8, 15, 2, 1, 3],
              ],
              threshold: 0.0005094531225040555,
              right_val: 0.5846015810966492,
              left_val: 0.4401271939277649,
            },
            {
              features: [
                [12, 3, 3, 3, -1],
                [13, 3, 1, 3, 3],
              ],
              threshold: 0.001965641975402832,
              right_val: 0.4184590876102448,
              left_val: 0.5322325229644775,
            },
            {
              features: [
                [7, 5, 6, 2, -1],
                [9, 5, 2, 2, 3],
              ],
              threshold: 0.0005629889783449471,
              right_val: 0.5234565734863281,
              left_val: 0.3741844892501831,
            },
            {
              features: [
                [15, 5, 5, 2, -1],
                [15, 6, 5, 1, 2],
              ],
              threshold: -0.0006794679793529212,
              right_val: 0.5356478095054626,
              left_val: 0.4631041884422302,
            },
            {
              features: [
                [0, 5, 5, 2, -1],
                [0, 6, 5, 1, 2],
              ],
              threshold: 0.007285634987056255,
              right_val: 0.2377564013004303,
              left_val: 0.5044670104980469,
            },
            {
              features: [
                [17, 14, 1, 6, -1],
                [17, 17, 1, 3, 2],
              ],
              threshold: -0.0174594894051552,
              right_val: 0.5050435066223145,
              left_val: 0.7289121150970459,
            },
            {
              features: [
                [2, 9, 9, 3, -1],
                [5, 9, 3, 3, 3],
              ],
              threshold: -0.0254217498004436,
              right_val: 0.4678100049495697,
              left_val: 0.6667134761810303,
            },
            {
              features: [
                [12, 3, 3, 3, -1],
                [13, 3, 1, 3, 3],
              ],
              threshold: -0.0015647639520466328,
              right_val: 0.532362699508667,
              left_val: 0.4391759037971497,
            },
            {
              features: [
                [0, 0, 4, 18, -1],
                [2, 0, 2, 18, 2],
              ],
              threshold: 0.0114443600177765,
              right_val: 0.5680012106895447,
              left_val: 0.4346440136432648,
            },
            {
              features: [
                [17, 6, 1, 3, -1],
                [17, 7, 1, 1, 3],
              ],
              threshold: -0.0006735255010426044,
              right_val: 0.5296812057495117,
              left_val: 0.44771409034729,
            },
            {
              features: [
                [2, 14, 1, 6, -1],
                [2, 17, 1, 3, 2],
              ],
              threshold: 0.009319420903921127,
              right_val: 0.7462607026100159,
              left_val: 0.4740200042724609,
            },
            {
              features: [
                [19, 8, 1, 2, -1],
                [19, 9, 1, 1, 2],
              ],
              threshold: 0.00013328490604180843,
              right_val: 0.475213497877121,
              left_val: 0.536506175994873,
            },
            {
              features: [
                [5, 3, 3, 3, -1],
                [6, 3, 1, 3, 3],
              ],
              threshold: -0.007881579920649529,
              right_val: 0.5015255212783813,
              left_val: 0.1752219051122665,
            },
            {
              features: [
                [9, 16, 2, 3, -1],
                [9, 17, 2, 1, 3],
              ],
              threshold: -0.005798568017780781,
              right_val: 0.4896200895309448,
              left_val: 0.7271236777305603,
            },
            {
              features: [
                [2, 6, 1, 3, -1],
                [2, 7, 1, 1, 3],
              ],
              threshold: -0.0003892249951604754,
              right_val: 0.5344941020011902,
              left_val: 0.4003908932209015,
            },
            {
              features: [
                [12, 4, 8, 2, -1],
                [16, 4, 4, 1, 2],
                [12, 5, 4, 1, 2],
              ],
              threshold: -0.0019288610201328993,
              right_val: 0.4803955852985382,
              left_val: 0.5605612993240356,
            },
            {
              features: [
                [0, 4, 8, 2, -1],
                [0, 4, 4, 1, 2],
                [4, 5, 4, 1, 2],
              ],
              threshold: 0.008421415463089943,
              right_val: 0.7623608708381653,
              left_val: 0.4753246903419495,
            },
            {
              features: [
                [2, 16, 18, 4, -1],
                [2, 18, 18, 2, 2],
              ],
              threshold: 0.008165587671101093,
              right_val: 0.419164389371872,
              left_val: 0.5393261909484863,
            },
            {
              features: [
                [7, 15, 2, 4, -1],
                [7, 17, 2, 2, 2],
              ],
              threshold: 0.00048280550981871784,
              right_val: 0.5399821996688843,
              left_val: 0.4240800142288208,
            },
            {
              features: [
                [4, 0, 14, 3, -1],
                [4, 1, 14, 1, 3],
              ],
              threshold: -0.002718663075938821,
              right_val: 0.5424923896789551,
              left_val: 0.4244599938392639,
            },
            {
              features: [
                [0, 0, 4, 20, -1],
                [2, 0, 2, 20, 2],
              ],
              threshold: -0.0125072300434113,
              right_val: 0.4550411105155945,
              left_val: 0.5895841717720032,
            },
            {
              features: [
                [12, 4, 4, 8, -1],
                [14, 4, 2, 4, 2],
                [12, 8, 2, 4, 2],
              ],
              threshold: -0.0242865197360516,
              right_val: 0.518917977809906,
              left_val: 0.2647134959697723,
            },
            {
              features: [
                [6, 7, 2, 2, -1],
                [6, 7, 1, 1, 2],
                [7, 8, 1, 1, 2],
              ],
              threshold: -0.0029676330741494894,
              right_val: 0.4749749898910523,
              left_val: 0.734768271446228,
            },
            {
              features: [
                [10, 6, 2, 3, -1],
                [10, 7, 2, 1, 3],
              ],
              threshold: -0.0125289997085929,
              right_val: 0.5177599787712097,
              left_val: 0.2756049931049347,
            },
            {
              features: [
                [8, 7, 3, 2, -1],
                [8, 8, 3, 1, 2],
              ],
              threshold: -0.0010104000102728605,
              right_val: 0.5144724249839783,
              left_val: 0.3510560989379883,
            },
            {
              features: [
                [8, 2, 6, 12, -1],
                [8, 8, 6, 6, 2],
              ],
              threshold: -0.0021348530426621437,
              right_val: 0.466731995344162,
              left_val: 0.5637925863265991,
            },
            {
              features: [
                [4, 0, 11, 12, -1],
                [4, 4, 11, 4, 3],
              ],
              threshold: 0.0195642597973347,
              right_val: 0.6137639880180359,
              left_val: 0.4614573121070862,
            },
            {
              features: [
                [14, 9, 6, 11, -1],
                [16, 9, 2, 11, 3],
              ],
              threshold: -0.0971463471651077,
              right_val: 0.5193555951118469,
              left_val: 0.2998378872871399,
            },
            {
              features: [
                [0, 14, 4, 3, -1],
                [0, 15, 4, 1, 3],
              ],
              threshold: 0.00450145686045289,
              right_val: 0.3045755922794342,
              left_val: 0.5077884793281555,
            },
            {
              features: [
                [9, 10, 2, 3, -1],
                [9, 11, 2, 1, 3],
              ],
              threshold: 0.006370697170495987,
              right_val: 0.6887500882148743,
              left_val: 0.486101895570755,
            },
            {
              features: [
                [5, 11, 3, 2, -1],
                [5, 12, 3, 1, 2],
              ],
              threshold: -0.009072152897715569,
              right_val: 0.5017563104629517,
              left_val: 0.1673395931720734,
            },
            {
              features: [
                [9, 15, 3, 3, -1],
                [10, 15, 1, 3, 3],
              ],
              threshold: -0.005353720858693123,
              right_val: 0.524263322353363,
              left_val: 0.2692756950855255,
            },
            {
              features: [
                [8, 8, 3, 4, -1],
                [9, 8, 1, 4, 3],
              ],
              threshold: -0.0109328404068947,
              right_val: 0.4736028909683228,
              left_val: 0.7183864116668701,
            },
            {
              features: [
                [9, 15, 3, 3, -1],
                [10, 15, 1, 3, 3],
              ],
              threshold: 0.008235607296228409,
              right_val: 0.2389862984418869,
              left_val: 0.5223966836929321,
            },
            {
              features: [
                [7, 7, 3, 2, -1],
                [8, 7, 1, 2, 3],
              ],
              threshold: -0.0010038160253316164,
              right_val: 0.4433943033218384,
              left_val: 0.5719355940818787,
            },
            {
              features: [
                [2, 10, 16, 4, -1],
                [10, 10, 8, 2, 2],
                [2, 12, 8, 2, 2],
              ],
              threshold: 0.004085912834852934,
              right_val: 0.4148836135864258,
              left_val: 0.5472841858863831,
            },
            {
              features: [
                [2, 3, 4, 17, -1],
                [4, 3, 2, 17, 2],
              ],
              threshold: 0.1548541933298111,
              right_val: 0.0610615983605385,
              left_val: 0.4973812103271484,
            },
            {
              features: [
                [15, 13, 2, 7, -1],
                [15, 13, 1, 7, 2],
              ],
              threshold: 0.00020897459762636572,
              right_val: 0.542388916015625,
              left_val: 0.4709174036979675,
            },
            {
              features: [
                [2, 2, 6, 1, -1],
                [5, 2, 3, 1, 2],
              ],
              threshold: 0.0003331699117552489,
              right_val: 0.5300992131233215,
              left_val: 0.4089626967906952,
            },
            {
              features: [
                [5, 2, 12, 4, -1],
                [9, 2, 4, 4, 3],
              ],
              threshold: -0.0108134001493454,
              right_val: 0.4957334101200104,
              left_val: 0.6104369759559631,
            },
            {
              features: [
                [6, 0, 8, 12, -1],
                [6, 0, 4, 6, 2],
                [10, 6, 4, 6, 2],
              ],
              threshold: 0.0456560105085373,
              right_val: 0.2866660058498383,
              left_val: 0.5069689154624939,
            },
            {
              features: [
                [13, 7, 2, 2, -1],
                [14, 7, 1, 1, 2],
                [13, 8, 1, 1, 2],
              ],
              threshold: 0.0012569549726322293,
              right_val: 0.631817102432251,
              left_val: 0.484691709280014,
            },
            {
              features: [
                [0, 12, 20, 6, -1],
                [0, 14, 20, 2, 3],
              ],
              threshold: -0.120150700211525,
              right_val: 0.4980959892272949,
              left_val: 0.0605261400341988,
            },
            {
              features: [
                [14, 7, 2, 3, -1],
                [14, 7, 1, 3, 2],
              ],
              threshold: -0.00010533799650147557,
              right_val: 0.4708042144775391,
              left_val: 0.5363109707832336,
            },
            {
              features: [
                [0, 8, 9, 12, -1],
                [3, 8, 3, 12, 3],
              ],
              threshold: -0.2070319056510925,
              right_val: 0.497909814119339,
              left_val: 0.059660330414772,
            },
            {
              features: [
                [3, 0, 16, 2, -1],
                [3, 0, 8, 2, 2],
              ],
              threshold: 0.00012909180077258497,
              right_val: 0.5377997756004333,
              left_val: 0.4712977111339569,
            },
            {
              features: [
                [6, 15, 3, 3, -1],
                [6, 16, 3, 1, 3],
              ],
              threshold: 0.000388185289921239,
              right_val: 0.5534191131591797,
              left_val: 0.4363538026809692,
            },
            {
              features: [
                [8, 15, 6, 3, -1],
                [8, 16, 6, 1, 3],
              ],
              threshold: -0.0029243610333651304,
              right_val: 0.4825215935707092,
              left_val: 0.5811185836791992,
            },
            {
              features: [
                [0, 10, 1, 6, -1],
                [0, 12, 1, 2, 3],
              ],
              threshold: 0.0008388233254663646,
              right_val: 0.403813898563385,
              left_val: 0.5311700105667114,
            },
            {
              features: [
                [10, 9, 4, 3, -1],
                [10, 10, 4, 1, 3],
              ],
              threshold: -0.0019061550265178084,
              right_val: 0.526001513004303,
              left_val: 0.3770701885223389,
            },
            {
              features: [
                [9, 15, 2, 3, -1],
                [9, 16, 2, 1, 3],
              ],
              threshold: 0.00895143486559391,
              right_val: 0.7682183980941772,
              left_val: 0.4766167998313904,
            },
            {
              features: [
                [5, 7, 10, 1, -1],
                [5, 7, 5, 1, 2],
              ],
              threshold: 0.0130834598094225,
              right_val: 0.3062222003936768,
              left_val: 0.5264462828636169,
            },
            {
              features: [
                [4, 0, 12, 19, -1],
                [10, 0, 6, 19, 2],
              ],
              threshold: -0.2115933001041412,
              right_val: 0.4695810079574585,
              left_val: 0.6737198233604431,
            },
            {
              features: [
                [0, 6, 20, 6, -1],
                [10, 6, 10, 3, 2],
                [0, 9, 10, 3, 2],
              ],
              threshold: 0.0031493250280618668,
              right_val: 0.4386953115463257,
              left_val: 0.5644835233688354,
            },
            {
              features: [
                [3, 6, 2, 2, -1],
                [3, 6, 1, 1, 2],
                [4, 7, 1, 1, 2],
              ],
              threshold: 0.00039754100725986063,
              right_val: 0.5895630121231079,
              left_val: 0.4526061117649078,
            },
            {
              features: [
                [15, 6, 2, 2, -1],
                [16, 6, 1, 1, 2],
                [15, 7, 1, 1, 2],
              ],
              threshold: -0.0013814480043947697,
              right_val: 0.4942413866519928,
              left_val: 0.6070582270622253,
            },
            {
              features: [
                [3, 6, 2, 2, -1],
                [3, 6, 1, 1, 2],
                [4, 7, 1, 1, 2],
              ],
              threshold: -0.0005812218878418207,
              right_val: 0.4508252143859863,
              left_val: 0.5998213291168213,
            },
            {
              features: [
                [14, 4, 1, 12, -1],
                [14, 10, 1, 6, 2],
              ],
              threshold: -0.002390532987192273,
              right_val: 0.5223848223686218,
              left_val: 0.420558899641037,
            },
            {
              features: [
                [2, 5, 16, 10, -1],
                [2, 5, 8, 5, 2],
                [10, 10, 8, 5, 2],
              ],
              threshold: 0.0272689294070005,
              right_val: 0.3563301861286163,
              left_val: 0.5206447243690491,
            },
            {
              features: [
                [9, 17, 3, 2, -1],
                [10, 17, 1, 2, 3],
              ],
              threshold: -0.0037658358924090862,
              right_val: 0.5218814015388489,
              left_val: 0.3144704103469849,
            },
            {
              features: [
                [1, 4, 2, 2, -1],
                [1, 5, 2, 1, 2],
              ],
              threshold: -0.0014903489500284195,
              right_val: 0.5124437212944031,
              left_val: 0.338019609451294,
            },
            {
              features: [
                [5, 0, 15, 5, -1],
                [10, 0, 5, 5, 3],
              ],
              threshold: -0.0174282304942608,
              right_val: 0.4919725954532623,
              left_val: 0.5829960703849792,
            },
            {
              features: [
                [0, 0, 15, 5, -1],
                [5, 0, 5, 5, 3],
              ],
              threshold: -0.0152780301868916,
              right_val: 0.4617887139320374,
              left_val: 0.6163144707679749,
            },
            {
              features: [
                [11, 2, 2, 17, -1],
                [11, 2, 1, 17, 2],
              ],
              threshold: 0.0319956094026566,
              right_val: 0.171276405453682,
              left_val: 0.5166357159614563,
            },
            {
              features: [
                [7, 2, 2, 17, -1],
                [8, 2, 1, 17, 2],
              ],
              threshold: -0.003825671039521694,
              right_val: 0.5131387710571289,
              left_val: 0.3408012092113495,
            },
            {
              features: [
                [15, 11, 2, 9, -1],
                [15, 11, 1, 9, 2],
              ],
              threshold: -0.00851864367723465,
              right_val: 0.4997941851615906,
              left_val: 0.6105518937110901,
            },
            {
              features: [
                [3, 11, 2, 9, -1],
                [4, 11, 1, 9, 2],
              ],
              threshold: 0.0009064162150025368,
              right_val: 0.5582311153411865,
              left_val: 0.4327270984649658,
            },
            {
              features: [
                [5, 16, 14, 4, -1],
                [5, 16, 7, 4, 2],
              ],
              threshold: 0.0103448498994112,
              right_val: 0.5452420115470886,
              left_val: 0.4855653047561646,
            },
          ],
          threshold: 69.22987365722656,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [1, 4, 18, 1, -1],
                [7, 4, 6, 1, 3],
              ],
              threshold: 0.007898182608187199,
              right_val: 0.5946462154388428,
              left_val: 0.333252489566803,
            },
            {
              features: [
                [13, 7, 6, 4, -1],
                [16, 7, 3, 2, 2],
                [13, 9, 3, 2, 2],
              ],
              threshold: 0.0016170160379260778,
              right_val: 0.5577868819236755,
              left_val: 0.3490641117095947,
            },
            {
              features: [
                [9, 8, 2, 12, -1],
                [9, 12, 2, 4, 3],
              ],
              threshold: -0.0005544974119402468,
              right_val: 0.3291530013084412,
              left_val: 0.5542566180229187,
            },
            {
              features: [
                [12, 1, 6, 6, -1],
                [12, 3, 6, 2, 3],
              ],
              threshold: 0.001542898011393845,
              right_val: 0.5545979142189026,
              left_val: 0.3612579107284546,
            },
            {
              features: [
                [5, 2, 6, 6, -1],
                [5, 2, 3, 3, 2],
                [8, 5, 3, 3, 2],
              ],
              threshold: -0.0010329450014978647,
              right_val: 0.5576140284538269,
              left_val: 0.3530139029026032,
            },
            {
              features: [
                [9, 16, 6, 4, -1],
                [12, 16, 3, 2, 2],
                [9, 18, 3, 2, 2],
              ],
              threshold: 0.0007769815856590867,
              right_val: 0.5645321011543274,
              left_val: 0.3916778862476349,
            },
            {
              features: [
                [1, 2, 18, 3, -1],
                [7, 2, 6, 3, 3],
              ],
              threshold: 0.143203005194664,
              right_val: 0.7023633122444153,
              left_val: 0.4667482078075409,
            },
            {
              features: [
                [7, 4, 9, 10, -1],
                [7, 9, 9, 5, 2],
              ],
              threshold: -0.007386649027466774,
              right_val: 0.5289257764816284,
              left_val: 0.3073684871196747,
            },
            {
              features: [
                [5, 9, 4, 4, -1],
                [7, 9, 2, 4, 2],
              ],
              threshold: -0.0006293674232438207,
              right_val: 0.4037049114704132,
              left_val: 0.562211811542511,
            },
            {
              features: [
                [11, 10, 3, 6, -1],
                [11, 13, 3, 3, 2],
              ],
              threshold: 0.0007889352855272591,
              right_val: 0.3557874858379364,
              left_val: 0.5267661213874817,
            },
            {
              features: [
                [7, 11, 5, 3, -1],
                [7, 12, 5, 1, 3],
              ],
              threshold: -0.0122280502691865,
              right_val: 0.4625549912452698,
              left_val: 0.6668320894241333,
            },
            {
              features: [
                [7, 11, 6, 6, -1],
                [10, 11, 3, 3, 2],
                [7, 14, 3, 3, 2],
              ],
              threshold: 0.0035420239437371492,
              right_val: 0.3869673013687134,
              left_val: 0.5521438121795654,
            },
            {
              features: [
                [0, 0, 10, 9, -1],
                [0, 3, 10, 3, 3],
              ],
              threshold: -0.0010585320414975286,
              right_val: 0.5320926904678345,
              left_val: 0.3628678023815155,
            },
            {
              features: [
                [13, 14, 1, 6, -1],
                [13, 16, 1, 2, 3],
              ],
              threshold: 14935660146875307e-21,
              right_val: 0.5363323092460632,
              left_val: 0.4632444977760315,
            },
            {
              features: [
                [0, 2, 3, 6, -1],
                [0, 4, 3, 2, 3],
              ],
              threshold: 0.005253770854324102,
              right_val: 0.3265708982944489,
              left_val: 0.5132231712341309,
            },
            {
              features: [
                [8, 14, 4, 3, -1],
                [8, 15, 4, 1, 3],
              ],
              threshold: -0.008233802393078804,
              right_val: 0.4774140119552612,
              left_val: 0.6693689823150635,
            },
            {
              features: [
                [6, 14, 1, 6, -1],
                [6, 16, 1, 2, 3],
              ],
              threshold: 2186681012972258e-20,
              right_val: 0.5457931160926819,
              left_val: 0.405386209487915,
            },
            {
              features: [
                [9, 15, 2, 3, -1],
                [9, 16, 2, 1, 3],
              ],
              threshold: -0.0038150229956954718,
              right_val: 0.4793178141117096,
              left_val: 0.645499587059021,
            },
            {
              features: [
                [6, 4, 3, 3, -1],
                [7, 4, 1, 3, 3],
              ],
              threshold: 0.0011105879675596952,
              right_val: 0.3529678881168366,
              left_val: 0.5270407199859619,
            },
            {
              features: [
                [9, 0, 11, 3, -1],
                [9, 1, 11, 1, 3],
              ],
              threshold: -0.005770768970251083,
              right_val: 0.5352957844734192,
              left_val: 0.3803547024726868,
            },
            {
              features: [
                [0, 6, 20, 3, -1],
                [0, 7, 20, 1, 3],
              ],
              threshold: -0.003015833906829357,
              right_val: 0.3887133002281189,
              left_val: 0.533940315246582,
            },
            {
              features: [
                [10, 1, 1, 2, -1],
                [10, 2, 1, 1, 2],
              ],
              threshold: -0.0008545368909835815,
              right_val: 0.5273603796958923,
              left_val: 0.3564616143703461,
            },
            {
              features: [
                [9, 6, 2, 6, -1],
                [10, 6, 1, 6, 2],
              ],
              threshold: 0.0110505102202296,
              right_val: 0.6849737763404846,
              left_val: 0.4671907126903534,
            },
            {
              features: [
                [5, 8, 12, 1, -1],
                [9, 8, 4, 1, 3],
              ],
              threshold: 0.0426058396697044,
              right_val: 0.0702200904488564,
              left_val: 0.51514732837677,
            },
            {
              features: [
                [3, 8, 12, 1, -1],
                [7, 8, 4, 1, 3],
              ],
              threshold: -0.0030781750101596117,
              right_val: 0.5152602195739746,
              left_val: 0.3041661083698273,
            },
            {
              features: [
                [9, 7, 3, 5, -1],
                [10, 7, 1, 5, 3],
              ],
              threshold: -0.005481572821736336,
              right_val: 0.4897229969501495,
              left_val: 0.6430295705795288,
            },
            {
              features: [
                [3, 9, 6, 2, -1],
                [6, 9, 3, 2, 2],
              ],
              threshold: 0.003188186092302203,
              right_val: 0.3826209902763367,
              left_val: 0.5307493209838867,
            },
            {
              features: [
                [12, 9, 3, 3, -1],
                [12, 10, 3, 1, 3],
              ],
              threshold: 0.00035947180003859103,
              right_val: 0.5421904921531677,
              left_val: 0.4650047123432159,
            },
            {
              features: [
                [7, 0, 6, 1, -1],
                [9, 0, 2, 1, 3],
              ],
              threshold: -0.004070503171533346,
              right_val: 0.5079116225242615,
              left_val: 0.2849679887294769,
            },
            {
              features: [
                [12, 9, 3, 3, -1],
                [12, 10, 3, 1, 3],
              ],
              threshold: -0.0145941702648997,
              right_val: 0.5128461718559265,
              left_val: 0.2971645891666412,
            },
            {
              features: [
                [7, 10, 2, 1, -1],
                [8, 10, 1, 1, 2],
              ],
              threshold: -0.00011947689927183092,
              right_val: 0.4343082010746002,
              left_val: 0.563109815120697,
            },
            {
              features: [
                [6, 4, 9, 13, -1],
                [9, 4, 3, 13, 3],
              ],
              threshold: -0.0006934464909136295,
              right_val: 0.5359959006309509,
              left_val: 0.4403578042984009,
            },
            {
              features: [
                [6, 8, 4, 2, -1],
                [6, 9, 4, 1, 2],
              ],
              threshold: 14834799912932795e-21,
              right_val: 0.5164697766304016,
              left_val: 0.3421008884906769,
            },
            {
              features: [
                [16, 2, 4, 6, -1],
                [16, 2, 2, 6, 2],
              ],
              threshold: 0.009029698558151722,
              right_val: 0.6114075183868408,
              left_val: 0.4639343023300171,
            },
            {
              features: [
                [0, 17, 6, 3, -1],
                [0, 18, 6, 1, 3],
              ],
              threshold: -0.008064081892371178,
              right_val: 0.5075494050979614,
              left_val: 0.2820158898830414,
            },
            {
              features: [
                [10, 10, 3, 10, -1],
                [10, 15, 3, 5, 2],
              ],
              threshold: 0.0260621197521687,
              right_val: 0.2688778042793274,
              left_val: 0.5208905935287476,
            },
            {
              features: [
                [8, 7, 3, 5, -1],
                [9, 7, 1, 5, 3],
              ],
              threshold: 0.0173146594315767,
              right_val: 0.6738539934158325,
              left_val: 0.4663713872432709,
            },
            {
              features: [
                [10, 4, 4, 3, -1],
                [10, 4, 2, 3, 2],
              ],
              threshold: 0.0226666405797005,
              right_val: 0.2212723940610886,
              left_val: 0.5209349989891052,
            },
            {
              features: [
                [8, 4, 3, 8, -1],
                [9, 4, 1, 8, 3],
              ],
              threshold: -0.002196592977270484,
              right_val: 0.4538190066814423,
              left_val: 0.6063101291656494,
            },
            {
              features: [
                [6, 6, 9, 13, -1],
                [9, 6, 3, 13, 3],
              ],
              threshold: -0.009528247639536858,
              right_val: 0.5247430801391602,
              left_val: 0.4635204970836639,
            },
            {
              features: [
                [6, 0, 8, 12, -1],
                [6, 0, 4, 6, 2],
                [10, 6, 4, 6, 2],
              ],
              threshold: 0.00809436198323965,
              right_val: 0.3913882076740265,
              left_val: 0.5289440155029297,
            },
            {
              features: [
                [14, 2, 6, 8, -1],
                [16, 2, 2, 8, 3],
              ],
              threshold: -0.0728773325681686,
              right_val: 0.4990234971046448,
              left_val: 0.7752001881599426,
            },
            {
              features: [
                [6, 0, 3, 6, -1],
                [7, 0, 1, 6, 3],
              ],
              threshold: -0.006900952197611332,
              right_val: 0.5048090219497681,
              left_val: 0.2428039014339447,
            },
            {
              features: [
                [14, 2, 6, 8, -1],
                [16, 2, 2, 8, 3],
              ],
              threshold: -0.0113082397729158,
              right_val: 0.4842376112937927,
              left_val: 0.5734364986419678,
            },
            {
              features: [
                [0, 5, 6, 6, -1],
                [0, 8, 6, 3, 2],
              ],
              threshold: 0.0596132017672062,
              right_val: 0.2524977028369904,
              left_val: 0.5029836297035217,
            },
            {
              features: [
                [9, 12, 6, 2, -1],
                [12, 12, 3, 1, 2],
                [9, 13, 3, 1, 2],
              ],
              threshold: -0.0028624620754271746,
              right_val: 0.4898459911346436,
              left_val: 0.6073045134544373,
            },
            {
              features: [
                [8, 17, 3, 2, -1],
                [9, 17, 1, 2, 3],
              ],
              threshold: 0.00447814492508769,
              right_val: 0.2220316976308823,
              left_val: 0.5015289187431335,
            },
            {
              features: [
                [11, 6, 2, 2, -1],
                [12, 6, 1, 1, 2],
                [11, 7, 1, 1, 2],
              ],
              threshold: -0.001751324045471847,
              right_val: 0.4933868944644928,
              left_val: 0.6614428758621216,
            },
            {
              features: [
                [1, 9, 18, 2, -1],
                [7, 9, 6, 2, 3],
              ],
              threshold: 0.0401634201407433,
              right_val: 0.3741044998168945,
              left_val: 0.5180878043174744,
            },
            {
              features: [
                [11, 6, 2, 2, -1],
                [12, 6, 1, 1, 2],
                [11, 7, 1, 1, 2],
              ],
              threshold: 0.0003476894926279783,
              right_val: 0.5818032026290894,
              left_val: 0.4720416963100433,
            },
            {
              features: [
                [3, 4, 12, 8, -1],
                [7, 4, 4, 8, 3],
              ],
              threshold: 0.00265516503714025,
              right_val: 0.5221335887908936,
              left_val: 0.3805010914802551,
            },
            {
              features: [
                [13, 11, 5, 3, -1],
                [13, 12, 5, 1, 3],
              ],
              threshold: -0.008770627900958061,
              right_val: 0.5231295228004456,
              left_val: 0.294416606426239,
            },
            {
              features: [
                [9, 10, 2, 3, -1],
                [9, 11, 2, 1, 3],
              ],
              threshold: -0.005512209143489599,
              right_val: 0.4722816944122315,
              left_val: 0.7346177101135254,
            },
            {
              features: [
                [14, 7, 2, 3, -1],
                [14, 7, 1, 3, 2],
              ],
              threshold: 0.0006867204210720956,
              right_val: 0.424241304397583,
              left_val: 0.5452876091003418,
            },
            {
              features: [
                [5, 4, 1, 3, -1],
                [5, 5, 1, 1, 3],
              ],
              threshold: 0.0005601966986432672,
              right_val: 0.5601285099983215,
              left_val: 0.439886212348938,
            },
            {
              features: [
                [13, 4, 2, 3, -1],
                [13, 5, 2, 1, 3],
              ],
              threshold: 0.0024143769405782223,
              right_val: 0.6136621832847595,
              left_val: 0.4741686880588532,
            },
            {
              features: [
                [5, 4, 2, 3, -1],
                [5, 5, 2, 1, 3],
              ],
              threshold: -0.0015680900542065501,
              right_val: 0.4516409933567047,
              left_val: 0.604455292224884,
            },
            {
              features: [
                [9, 8, 2, 3, -1],
                [9, 9, 2, 1, 3],
              ],
              threshold: -0.0036827491130679846,
              right_val: 0.5294982194900513,
              left_val: 0.2452459037303925,
            },
            {
              features: [
                [8, 9, 2, 2, -1],
                [8, 10, 2, 1, 2],
              ],
              threshold: -0.000294091907562688,
              right_val: 0.5251451134681702,
              left_val: 0.3732838034629822,
            },
            {
              features: [
                [15, 14, 1, 4, -1],
                [15, 16, 1, 2, 2],
              ],
              threshold: 0.00042847759323194623,
              right_val: 0.4065535068511963,
              left_val: 0.5498809814453125,
            },
            {
              features: [
                [3, 12, 2, 2, -1],
                [3, 13, 2, 1, 2],
              ],
              threshold: -0.004881707020103931,
              right_val: 0.4999957084655762,
              left_val: 0.2139908969402313,
            },
            {
              features: [
                [12, 15, 2, 2, -1],
                [13, 15, 1, 1, 2],
                [12, 16, 1, 1, 2],
              ],
              threshold: 0.00027272020815871656,
              right_val: 0.581342875957489,
              left_val: 0.465028703212738,
            },
            {
              features: [
                [9, 13, 2, 2, -1],
                [9, 14, 2, 1, 2],
              ],
              threshold: 0.00020947199664078653,
              right_val: 0.5572792887687683,
              left_val: 0.4387486875057221,
            },
            {
              features: [
                [4, 11, 14, 9, -1],
                [4, 14, 14, 3, 3],
              ],
              threshold: 0.0485011897981167,
              right_val: 0.3212889134883881,
              left_val: 0.5244972705841064,
            },
            {
              features: [
                [7, 13, 4, 3, -1],
                [7, 14, 4, 1, 3],
              ],
              threshold: -0.004516641143709421,
              right_val: 0.4545882046222687,
              left_val: 0.605681300163269,
            },
            {
              features: [
                [15, 14, 1, 4, -1],
                [15, 16, 1, 2, 2],
              ],
              threshold: -0.0122916800901294,
              right_val: 0.5152214169502258,
              left_val: 0.2040929049253464,
            },
            {
              features: [
                [4, 14, 1, 4, -1],
                [4, 16, 1, 2, 2],
              ],
              threshold: 0.0004854967992287129,
              right_val: 0.3739503026008606,
              left_val: 0.5237604975700378,
            },
            {
              features: [
                [14, 0, 6, 13, -1],
                [16, 0, 2, 13, 3],
              ],
              threshold: 0.0305560491979122,
              right_val: 0.5938246250152588,
              left_val: 0.4960533976554871,
            },
            {
              features: [
                [4, 1, 2, 12, -1],
                [4, 1, 1, 6, 2],
                [5, 7, 1, 6, 2],
              ],
              threshold: -0.00015105320198927075,
              right_val: 0.4145204126834869,
              left_val: 0.5351303815841675,
            },
            {
              features: [
                [11, 14, 6, 6, -1],
                [14, 14, 3, 3, 2],
                [11, 17, 3, 3, 2],
              ],
              threshold: 0.0024937440175563097,
              right_val: 0.5514941215515137,
              left_val: 0.4693366885185242,
            },
            {
              features: [
                [3, 14, 6, 6, -1],
                [3, 14, 3, 3, 2],
                [6, 17, 3, 3, 2],
              ],
              threshold: -0.012382130138576,
              right_val: 0.4681667983531952,
              left_val: 0.6791396737098694,
            },
            {
              features: [
                [14, 17, 3, 2, -1],
                [14, 18, 3, 1, 2],
              ],
              threshold: -0.005133346188813448,
              right_val: 0.5229160189628601,
              left_val: 0.3608739078044891,
            },
            {
              features: [
                [3, 17, 3, 2, -1],
                [3, 18, 3, 1, 2],
              ],
              threshold: 0.0005191927775740623,
              right_val: 0.3633613884449005,
              left_val: 0.5300073027610779,
            },
            {
              features: [
                [14, 0, 6, 13, -1],
                [16, 0, 2, 13, 3],
              ],
              threshold: 0.1506042033433914,
              right_val: 0.2211782038211823,
              left_val: 0.515731692314148,
            },
            {
              features: [
                [0, 0, 6, 13, -1],
                [2, 0, 2, 13, 3],
              ],
              threshold: 0.007714414969086647,
              right_val: 0.5776609182357788,
              left_val: 0.4410496950149536,
            },
            {
              features: [
                [10, 10, 7, 6, -1],
                [10, 12, 7, 2, 3],
              ],
              threshold: 0.009444352239370346,
              right_val: 0.375665009021759,
              left_val: 0.5401855111122131,
            },
            {
              features: [
                [6, 15, 2, 2, -1],
                [6, 15, 1, 1, 2],
                [7, 16, 1, 1, 2],
              ],
              threshold: 0.00025006249779835343,
              right_val: 0.5607374906539917,
              left_val: 0.4368270933628082,
            },
            {
              features: [
                [6, 11, 8, 6, -1],
                [10, 11, 4, 3, 2],
                [6, 14, 4, 3, 2],
              ],
              threshold: -0.003307715058326721,
              right_val: 0.551823079586029,
              left_val: 0.4244799017906189,
            },
            {
              features: [
                [7, 6, 2, 2, -1],
                [7, 6, 1, 1, 2],
                [8, 7, 1, 1, 2],
              ],
              threshold: 0.0007404891075566411,
              right_val: 0.5900576710700989,
              left_val: 0.4496962130069733,
            },
            {
              features: [
                [2, 2, 16, 6, -1],
                [10, 2, 8, 3, 2],
                [2, 5, 8, 3, 2],
              ],
              threshold: 0.0440920516848564,
              right_val: 0.3156355023384094,
              left_val: 0.5293493270874023,
            },
            {
              features: [
                [5, 4, 3, 3, -1],
                [5, 5, 3, 1, 3],
              ],
              threshold: 0.0033639909233897924,
              right_val: 0.5848662257194519,
              left_val: 0.4483296871185303,
            },
            {
              features: [
                [11, 7, 3, 10, -1],
                [11, 12, 3, 5, 2],
              ],
              threshold: -0.003976007923483849,
              right_val: 0.5483639240264893,
              left_val: 0.4559507071971893,
            },
            {
              features: [
                [6, 7, 3, 10, -1],
                [6, 12, 3, 5, 2],
              ],
              threshold: 0.0027716930489987135,
              right_val: 0.3792484104633331,
              left_val: 0.534178614616394,
            },
            {
              features: [
                [10, 7, 3, 2, -1],
                [11, 7, 1, 2, 3],
              ],
              threshold: -0.00024123019829858094,
              right_val: 0.4576973021030426,
              left_val: 0.5667188763618469,
            },
            {
              features: [
                [8, 12, 4, 2, -1],
                [8, 13, 4, 1, 2],
              ],
              threshold: 0.0004942566738463938,
              right_val: 0.5628787279129028,
              left_val: 0.4421244859695435,
            },
            {
              features: [
                [10, 1, 1, 3, -1],
                [10, 2, 1, 1, 3],
              ],
              threshold: -0.0003887646889779717,
              right_val: 0.5391063094139099,
              left_val: 0.4288370907306671,
            },
            {
              features: [
                [1, 2, 4, 18, -1],
                [1, 2, 2, 9, 2],
                [3, 11, 2, 9, 2],
              ],
              threshold: -0.0500488989055157,
              right_val: 0.4703742861747742,
              left_val: 0.6899513006210327,
            },
            {
              features: [
                [12, 4, 4, 12, -1],
                [12, 10, 4, 6, 2],
              ],
              threshold: -0.0366354808211327,
              right_val: 0.5191826224327087,
              left_val: 0.2217779010534287,
            },
            {
              features: [
                [0, 0, 1, 6, -1],
                [0, 2, 1, 2, 3],
              ],
              threshold: 0.0024273579474538565,
              right_val: 0.3497397899627686,
              left_val: 0.5136224031448364,
            },
            {
              features: [
                [9, 11, 2, 3, -1],
                [9, 12, 2, 1, 3],
              ],
              threshold: 0.001955803018063307,
              right_val: 0.640838086605072,
              left_val: 0.4826192855834961,
            },
            {
              features: [
                [8, 7, 4, 3, -1],
                [8, 8, 4, 1, 3],
              ],
              threshold: -0.0017494610510766506,
              right_val: 0.5272685289382935,
              left_val: 0.3922835886478424,
            },
            {
              features: [
                [10, 7, 3, 2, -1],
                [11, 7, 1, 2, 3],
              ],
              threshold: 0.0139550799503922,
              right_val: 0.8416504859924316,
              left_val: 0.507820188999176,
            },
            {
              features: [
                [7, 7, 3, 2, -1],
                [8, 7, 1, 2, 3],
              ],
              threshold: -0.00021896739781368524,
              right_val: 0.4314234852790833,
              left_val: 0.5520489811897278,
            },
            {
              features: [
                [9, 4, 6, 1, -1],
                [11, 4, 2, 1, 3],
              ],
              threshold: -0.0015131309628486633,
              right_val: 0.5382571220397949,
              left_val: 0.3934605121612549,
            },
            {
              features: [
                [8, 7, 2, 3, -1],
                [9, 7, 1, 3, 2],
              ],
              threshold: -0.004362280014902353,
              right_val: 0.4736475944519043,
              left_val: 0.7370628714561462,
            },
            {
              features: [
                [12, 7, 8, 6, -1],
                [16, 7, 4, 3, 2],
                [12, 10, 4, 3, 2],
              ],
              threshold: 0.0651605874300003,
              right_val: 0.328159511089325,
              left_val: 0.5159279704093933,
            },
            {
              features: [
                [0, 7, 8, 6, -1],
                [0, 7, 4, 3, 2],
                [4, 10, 4, 3, 2],
              ],
              threshold: -0.0023567399475723505,
              right_val: 0.5172886252403259,
              left_val: 0.3672826886177063,
            },
            {
              features: [
                [18, 2, 2, 10, -1],
                [19, 2, 1, 5, 2],
                [18, 7, 1, 5, 2],
              ],
              threshold: 0.0151466596871614,
              right_val: 0.6687604188919067,
              left_val: 0.5031493902206421,
            },
            {
              features: [
                [0, 2, 6, 4, -1],
                [3, 2, 3, 4, 2],
              ],
              threshold: -0.0228509604930878,
              right_val: 0.4709596931934357,
              left_val: 0.676751971244812,
            },
            {
              features: [
                [9, 4, 6, 1, -1],
                [11, 4, 2, 1, 3],
              ],
              threshold: 0.004886765033006668,
              right_val: 0.4059878885746002,
              left_val: 0.5257998108863831,
            },
            {
              features: [
                [7, 15, 2, 2, -1],
                [7, 15, 1, 1, 2],
                [8, 16, 1, 1, 2],
              ],
              threshold: 0.0017619599821045995,
              right_val: 0.6688278913497925,
              left_val: 0.4696272909641266,
            },
            {
              features: [
                [11, 13, 1, 6, -1],
                [11, 16, 1, 3, 2],
              ],
              threshold: -0.0012942519970238209,
              right_val: 0.5344281792640686,
              left_val: 0.4320712983608246,
            },
            {
              features: [
                [8, 13, 1, 6, -1],
                [8, 16, 1, 3, 2],
              ],
              threshold: 0.0109299495816231,
              right_val: 0.1637486070394516,
              left_val: 0.4997706115245819,
            },
            {
              features: [
                [14, 3, 2, 1, -1],
                [14, 3, 1, 1, 2],
              ],
              threshold: 2995848990394734e-20,
              right_val: 0.5633224248886108,
              left_val: 0.4282417893409729,
            },
            {
              features: [
                [8, 15, 2, 3, -1],
                [8, 16, 2, 1, 3],
              ],
              threshold: -0.0065884361974895,
              right_val: 0.4700526893138886,
              left_val: 0.677212119102478,
            },
            {
              features: [
                [12, 15, 7, 4, -1],
                [12, 17, 7, 2, 2],
              ],
              threshold: 0.0032527779694646597,
              right_val: 0.4536148905754089,
              left_val: 0.531339704990387,
            },
            {
              features: [
                [4, 14, 12, 3, -1],
                [4, 15, 12, 1, 3],
              ],
              threshold: -0.00404357397928834,
              right_val: 0.4413388967514038,
              left_val: 0.5660061836242676,
            },
            {
              features: [
                [10, 3, 3, 2, -1],
                [11, 3, 1, 2, 3],
              ],
              threshold: -0.0012523540062829852,
              right_val: 0.5356451869010925,
              left_val: 0.3731913864612579,
            },
            {
              features: [
                [4, 12, 2, 2, -1],
                [4, 13, 2, 1, 2],
              ],
              threshold: 0.00019246719602961093,
              right_val: 0.3738811016082764,
              left_val: 0.5189986228942871,
            },
            {
              features: [
                [10, 11, 4, 6, -1],
                [10, 14, 4, 3, 2],
              ],
              threshold: -0.038589671254158,
              right_val: 0.51888108253479,
              left_val: 0.2956373989582062,
            },
            {
              features: [
                [7, 13, 2, 2, -1],
                [7, 13, 1, 1, 2],
                [8, 14, 1, 1, 2],
              ],
              threshold: 0.0001548987056594342,
              right_val: 0.5509533286094666,
              left_val: 0.4347135126590729,
            },
            {
              features: [
                [4, 11, 14, 4, -1],
                [11, 11, 7, 2, 2],
                [4, 13, 7, 2, 2],
              ],
              threshold: -0.0337638482451439,
              right_val: 0.5195475816726685,
              left_val: 0.3230330049991608,
            },
            {
              features: [
                [1, 18, 18, 2, -1],
                [7, 18, 6, 2, 3],
              ],
              threshold: -0.008265706710517406,
              right_val: 0.4552114009857178,
              left_val: 0.5975489020347595,
            },
            {
              features: [
                [11, 18, 2, 2, -1],
                [12, 18, 1, 1, 2],
                [11, 19, 1, 1, 2],
              ],
              threshold: 14481440302915871e-21,
              right_val: 0.5497426986694336,
              left_val: 0.4745678007602692,
            },
            {
              features: [
                [7, 18, 2, 2, -1],
                [7, 18, 1, 1, 2],
                [8, 19, 1, 1, 2],
              ],
              threshold: 14951299817766994e-21,
              right_val: 0.5480644106864929,
              left_val: 0.4324473142623901,
            },
            {
              features: [
                [12, 18, 8, 2, -1],
                [12, 19, 8, 1, 2],
              ],
              threshold: -0.018741799518466,
              right_val: 0.517853319644928,
              left_val: 0.1580052971839905,
            },
            {
              features: [
                [7, 14, 6, 2, -1],
                [7, 15, 6, 1, 2],
              ],
              threshold: 0.0017572239739820361,
              right_val: 0.5773764252662659,
              left_val: 0.4517636895179749,
            },
            {
              features: [
                [8, 12, 4, 8, -1],
                [10, 12, 2, 4, 2],
                [8, 16, 2, 4, 2],
              ],
              threshold: -0.0031391119118779898,
              right_val: 0.5460842251777649,
              left_val: 0.4149647951126099,
            },
            {
              features: [
                [4, 9, 3, 3, -1],
                [4, 10, 3, 1, 3],
              ],
              threshold: 6665677938144654e-20,
              right_val: 0.5293084979057312,
              left_val: 0.4039090871810913,
            },
            {
              features: [
                [7, 10, 6, 2, -1],
                [9, 10, 2, 2, 3],
              ],
              threshold: 0.006774342153221369,
              right_val: 0.612195611000061,
              left_val: 0.4767651855945587,
            },
            {
              features: [
                [5, 0, 4, 15, -1],
                [7, 0, 2, 15, 2],
              ],
              threshold: -0.0073868161998689175,
              right_val: 0.5187280774116516,
              left_val: 0.3586258888244629,
            },
            {
              features: [
                [8, 6, 12, 14, -1],
                [12, 6, 4, 14, 3],
              ],
              threshold: 0.0140409301966429,
              right_val: 0.5576155781745911,
              left_val: 0.4712139964103699,
            },
            {
              features: [
                [5, 16, 3, 3, -1],
                [5, 17, 3, 1, 3],
              ],
              threshold: -0.005525832995772362,
              right_val: 0.5039281249046326,
              left_val: 0.2661027014255524,
            },
            {
              features: [
                [8, 1, 12, 19, -1],
                [12, 1, 4, 19, 3],
              ],
              threshold: 0.3868423998355866,
              right_val: 0.2525899112224579,
              left_val: 0.5144339799880981,
            },
            {
              features: [
                [3, 0, 3, 2, -1],
                [3, 1, 3, 1, 2],
              ],
              threshold: 0.0001145924034062773,
              right_val: 0.5423371195793152,
              left_val: 0.4284994900226593,
            },
            {
              features: [
                [10, 12, 4, 5, -1],
                [10, 12, 2, 5, 2],
              ],
              threshold: -0.0184675697237253,
              right_val: 0.5213062167167664,
              left_val: 0.3885835111141205,
            },
            {
              features: [
                [6, 12, 4, 5, -1],
                [8, 12, 2, 5, 2],
              ],
              threshold: -0.0004590701137203723,
              right_val: 0.4235909879207611,
              left_val: 0.541256308555603,
            },
            {
              features: [
                [11, 11, 2, 2, -1],
                [12, 11, 1, 1, 2],
                [11, 12, 1, 1, 2],
              ],
              threshold: 0.0012527540093287826,
              right_val: 0.6624091267585754,
              left_val: 0.4899305105209351,
            },
            {
              features: [
                [0, 2, 3, 6, -1],
                [0, 4, 3, 2, 3],
              ],
              threshold: 0.001491060946136713,
              right_val: 0.4040051996707916,
              left_val: 0.5286778211593628,
            },
            {
              features: [
                [11, 11, 2, 2, -1],
                [12, 11, 1, 1, 2],
                [11, 12, 1, 1, 2],
              ],
              threshold: -0.0007543556275777519,
              right_val: 0.4795120060443878,
              left_val: 0.6032990217208862,
            },
            {
              features: [
                [7, 6, 4, 10, -1],
                [7, 11, 4, 5, 2],
              ],
              threshold: -0.0069478838704526424,
              right_val: 0.5373504161834717,
              left_val: 0.408440113067627,
            },
            {
              features: [
                [11, 11, 2, 2, -1],
                [12, 11, 1, 1, 2],
                [11, 12, 1, 1, 2],
              ],
              threshold: 0.0002809292054735124,
              right_val: 0.5759382247924805,
              left_val: 0.4846062958240509,
            },
            {
              features: [
                [2, 13, 5, 2, -1],
                [2, 14, 5, 1, 2],
              ],
              threshold: 0.0009607371757738292,
              right_val: 0.3554979860782623,
              left_val: 0.5164741277694702,
            },
            {
              features: [
                [11, 11, 2, 2, -1],
                [12, 11, 1, 1, 2],
                [11, 12, 1, 1, 2],
              ],
              threshold: -0.0002688392996788025,
              right_val: 0.4731765985488892,
              left_val: 0.5677582025527954,
            },
            {
              features: [
                [7, 11, 2, 2, -1],
                [7, 11, 1, 1, 2],
                [8, 12, 1, 1, 2],
              ],
              threshold: 0.0021599370520561934,
              right_val: 0.7070567011833191,
              left_val: 0.4731487035751343,
            },
            {
              features: [
                [14, 13, 3, 3, -1],
                [14, 14, 3, 1, 3],
              ],
              threshold: 0.005623530130833387,
              right_val: 0.2781791985034943,
              left_val: 0.5240243077278137,
            },
            {
              features: [
                [3, 13, 3, 3, -1],
                [3, 14, 3, 1, 3],
              ],
              threshold: -0.005024399142712355,
              right_val: 0.5062304139137268,
              left_val: 0.2837013900279999,
            },
            {
              features: [
                [9, 14, 2, 3, -1],
                [9, 15, 2, 1, 3],
              ],
              threshold: -0.009761163964867592,
              right_val: 0.4934569001197815,
              left_val: 0.7400717735290527,
            },
            {
              features: [
                [8, 7, 3, 3, -1],
                [8, 8, 3, 1, 3],
              ],
              threshold: 0.004151510074734688,
              right_val: 0.3407008051872253,
              left_val: 0.5119131207466125,
            },
            {
              features: [
                [13, 5, 3, 3, -1],
                [13, 6, 3, 1, 3],
              ],
              threshold: 0.006246508099138737,
              right_val: 0.6579058766365051,
              left_val: 0.4923788011074066,
            },
            {
              features: [
                [0, 9, 5, 3, -1],
                [0, 10, 5, 1, 3],
              ],
              threshold: -0.007059747818857431,
              right_val: 0.503284215927124,
              left_val: 0.2434711009263992,
            },
            {
              features: [
                [13, 5, 3, 3, -1],
                [13, 6, 3, 1, 3],
              ],
              threshold: -0.0020587709732353687,
              right_val: 0.469508707523346,
              left_val: 0.590031087398529,
            },
            {
              features: [
                [9, 12, 2, 8, -1],
                [9, 12, 1, 4, 2],
                [10, 16, 1, 4, 2],
              ],
              threshold: -0.0024146060459315777,
              right_val: 0.5189201831817627,
              left_val: 0.3647317886352539,
            },
            {
              features: [
                [11, 7, 2, 2, -1],
                [12, 7, 1, 1, 2],
                [11, 8, 1, 1, 2],
              ],
              threshold: -0.0014817609917372465,
              right_val: 0.4940128028392792,
              left_val: 0.6034948229789734,
            },
            {
              features: [
                [0, 16, 6, 4, -1],
                [3, 16, 3, 4, 2],
              ],
              threshold: -0.0063016400672495365,
              right_val: 0.4560427963733673,
              left_val: 0.5818989872932434,
            },
            {
              features: [
                [10, 6, 2, 3, -1],
                [10, 7, 2, 1, 3],
              ],
              threshold: 0.00347634288482368,
              right_val: 0.3483993113040924,
              left_val: 0.5217475891113281,
            },
            {
              features: [
                [9, 5, 2, 6, -1],
                [9, 7, 2, 2, 3],
              ],
              threshold: -0.0222508702427149,
              right_val: 0.5032082796096802,
              left_val: 0.2360700070858002,
            },
            {
              features: [
                [12, 15, 8, 4, -1],
                [12, 15, 4, 4, 2],
              ],
              threshold: -0.030612550675869,
              right_val: 0.4914919137954712,
              left_val: 0.6499186754226685,
            },
            {
              features: [
                [0, 14, 8, 6, -1],
                [4, 14, 4, 6, 2],
              ],
              threshold: 0.013057479634881,
              right_val: 0.5683764219284058,
              left_val: 0.4413323104381561,
            },
            {
              features: [
                [9, 0, 3, 2, -1],
                [10, 0, 1, 2, 3],
              ],
              threshold: -0.0006009574281051755,
              right_val: 0.5333483219146729,
              left_val: 0.4359731078147888,
            },
            {
              features: [
                [4, 15, 4, 2, -1],
                [6, 15, 2, 2, 2],
              ],
              threshold: -0.0004151425091549754,
              right_val: 0.4326060116291046,
              left_val: 0.550406277179718,
            },
            {
              features: [
                [12, 7, 3, 13, -1],
                [13, 7, 1, 13, 3],
              ],
              threshold: -0.013776290230453,
              right_val: 0.5201548933982849,
              left_val: 0.4064112901687622,
            },
            {
              features: [
                [5, 7, 3, 13, -1],
                [6, 7, 1, 13, 3],
              ],
              threshold: -0.0322965085506439,
              right_val: 0.4977194964885712,
              left_val: 0.0473519712686539,
            },
            {
              features: [
                [9, 6, 3, 9, -1],
                [9, 9, 3, 3, 3],
              ],
              threshold: 0.0535569787025452,
              right_val: 0.666693925857544,
              left_val: 0.4881733059883118,
            },
            {
              features: [
                [4, 4, 7, 12, -1],
                [4, 10, 7, 6, 2],
              ],
              threshold: 0.008188954554498196,
              right_val: 0.4240820109844208,
              left_val: 0.5400037169456482,
            },
            {
              features: [
                [12, 12, 2, 2, -1],
                [13, 12, 1, 1, 2],
                [12, 13, 1, 1, 2],
              ],
              threshold: 0.00021055320394225419,
              right_val: 0.5563852787017822,
              left_val: 0.4802047908306122,
            },
            {
              features: [
                [6, 12, 2, 2, -1],
                [6, 12, 1, 1, 2],
                [7, 13, 1, 1, 2],
              ],
              threshold: -0.00243827304802835,
              right_val: 0.4773685038089752,
              left_val: 0.7387793064117432,
            },
            {
              features: [
                [8, 9, 4, 2, -1],
                [10, 9, 2, 1, 2],
                [8, 10, 2, 1, 2],
              ],
              threshold: 0.003283557016402483,
              right_val: 0.3171291947364807,
              left_val: 0.5288546085357666,
            },
            {
              features: [
                [3, 6, 2, 2, -1],
                [3, 6, 1, 1, 2],
                [4, 7, 1, 1, 2],
              ],
              threshold: 0.00237295706756413,
              right_val: 0.7060170769691467,
              left_val: 0.4750812947750092,
            },
            {
              features: [
                [16, 6, 3, 2, -1],
                [16, 7, 3, 1, 2],
              ],
              threshold: -0.0014541699783876538,
              right_val: 0.533073902130127,
              left_val: 0.3811730146408081,
            },
          ],
          threshold: 79.24907684326172,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [0, 7, 19, 4, -1],
                [0, 9, 19, 2, 2],
              ],
              threshold: 0.0557552389800549,
              right_val: 0.6806036829948425,
              left_val: 0.4019156992435455,
            },
            {
              features: [
                [10, 2, 10, 1, -1],
                [10, 2, 5, 1, 2],
              ],
              threshold: 0.002473024884238839,
              right_val: 0.5965719819068909,
              left_val: 0.3351148962974548,
            },
            {
              features: [
                [9, 4, 2, 12, -1],
                [9, 10, 2, 6, 2],
              ],
              threshold: -0.00035031698644161224,
              right_val: 0.3482286930084229,
              left_val: 0.5557708144187927,
            },
            {
              features: [
                [12, 18, 4, 1, -1],
                [12, 18, 2, 1, 2],
              ],
              threshold: 0.0005416763015091419,
              right_val: 0.5693380832672119,
              left_val: 0.426085889339447,
            },
            {
              features: [
                [1, 7, 6, 4, -1],
                [1, 7, 3, 2, 2],
                [4, 9, 3, 2, 2],
              ],
              threshold: 0.0007719367858953774,
              right_val: 0.5433688759803772,
              left_val: 0.3494240045547485,
            },
            {
              features: [
                [12, 0, 6, 13, -1],
                [14, 0, 2, 13, 3],
              ],
              threshold: -0.0015999219613149762,
              right_val: 0.5484359264373779,
              left_val: 0.4028499126434326,
            },
            {
              features: [
                [2, 0, 6, 13, -1],
                [4, 0, 2, 13, 3],
              ],
              threshold: -0.00011832080053864047,
              right_val: 0.5425465106964111,
              left_val: 0.3806901872158051,
            },
            {
              features: [
                [10, 5, 8, 8, -1],
                [10, 9, 8, 4, 2],
              ],
              threshold: 0.0003290903114248067,
              right_val: 0.5429521799087524,
              left_val: 0.262010008096695,
            },
            {
              features: [
                [8, 3, 2, 5, -1],
                [9, 3, 1, 5, 2],
              ],
              threshold: 0.0002951810893137008,
              right_val: 0.5399264097213745,
              left_val: 0.379976898431778,
            },
            {
              features: [
                [8, 4, 9, 1, -1],
                [11, 4, 3, 1, 3],
              ],
              threshold: 9046671038959175e-20,
              right_val: 0.5440226197242737,
              left_val: 0.4433645009994507,
            },
            {
              features: [
                [3, 4, 9, 1, -1],
                [6, 4, 3, 1, 3],
              ],
              threshold: 15007190086180344e-21,
              right_val: 0.5409119725227356,
              left_val: 0.3719654977321625,
            },
            {
              features: [
                [1, 0, 18, 10, -1],
                [7, 0, 6, 10, 3],
              ],
              threshold: 0.1393561065196991,
              right_val: 0.4479042887687683,
              left_val: 0.552539587020874,
            },
            {
              features: [
                [7, 17, 5, 3, -1],
                [7, 18, 5, 1, 3],
              ],
              threshold: 0.0016461990308016539,
              right_val: 0.5772169828414917,
              left_val: 0.4264501035213471,
            },
            {
              features: [
                [7, 11, 6, 1, -1],
                [9, 11, 2, 1, 3],
              ],
              threshold: 0.0004998443182557821,
              right_val: 0.5685871243476868,
              left_val: 0.4359526038169861,
            },
            {
              features: [
                [2, 2, 3, 2, -1],
                [2, 3, 3, 1, 2],
              ],
              threshold: -0.001097128028050065,
              right_val: 0.5205408930778503,
              left_val: 0.3390136957168579,
            },
            {
              features: [
                [8, 12, 4, 2, -1],
                [8, 13, 4, 1, 2],
              ],
              threshold: 0.0006691989256069064,
              right_val: 0.598065972328186,
              left_val: 0.4557456076145172,
            },
            {
              features: [
                [6, 10, 3, 6, -1],
                [6, 13, 3, 3, 2],
              ],
              threshold: 0.0008647104259580374,
              right_val: 0.2944033145904541,
              left_val: 0.5134841203689575,
            },
            {
              features: [
                [11, 4, 2, 4, -1],
                [11, 4, 1, 4, 2],
              ],
              threshold: -0.0002718259929679334,
              right_val: 0.5377181172370911,
              left_val: 0.3906578123569489,
            },
            {
              features: [
                [7, 4, 2, 4, -1],
                [8, 4, 1, 4, 2],
              ],
              threshold: 3024949910468422e-20,
              right_val: 0.5225688815116882,
              left_val: 0.3679609894752502,
            },
            {
              features: [
                [9, 6, 2, 4, -1],
                [9, 6, 1, 4, 2],
              ],
              threshold: -0.008522589690983295,
              right_val: 0.4892365038394928,
              left_val: 0.7293102145195007,
            },
            {
              features: [
                [6, 13, 8, 3, -1],
                [6, 14, 8, 1, 3],
              ],
              threshold: 0.0016705560265108943,
              right_val: 0.5696138143539429,
              left_val: 0.43453249335289,
            },
            {
              features: [
                [9, 15, 3, 4, -1],
                [10, 15, 1, 4, 3],
              ],
              threshold: -0.0071433838456869125,
              right_val: 0.5225623846054077,
              left_val: 0.2591280043125153,
            },
            {
              features: [
                [9, 2, 2, 17, -1],
                [10, 2, 1, 17, 2],
              ],
              threshold: -0.0163193698972464,
              right_val: 0.4651575982570648,
              left_val: 0.6922279000282288,
            },
            {
              features: [
                [7, 0, 6, 1, -1],
                [9, 0, 2, 1, 3],
              ],
              threshold: 0.004803426098078489,
              right_val: 0.3286302983760834,
              left_val: 0.5352262854576111,
            },
            {
              features: [
                [8, 15, 3, 4, -1],
                [9, 15, 1, 4, 3],
              ],
              threshold: -0.0075421929359436035,
              right_val: 0.5034546256065369,
              left_val: 0.2040544003248215,
            },
            {
              features: [
                [7, 13, 7, 3, -1],
                [7, 14, 7, 1, 3],
              ],
              threshold: -0.0143631100654602,
              right_val: 0.4889059066772461,
              left_val: 0.6804888844490051,
            },
            {
              features: [
                [8, 16, 3, 3, -1],
                [9, 16, 1, 3, 3],
              ],
              threshold: 0.0008906358852982521,
              right_val: 0.3895480930805206,
              left_val: 0.5310695767402649,
            },
            {
              features: [
                [6, 2, 8, 10, -1],
                [6, 7, 8, 5, 2],
              ],
              threshold: -0.004406019113957882,
              right_val: 0.4372426867485046,
              left_val: 0.5741562843322754,
            },
            {
              features: [
                [2, 5, 8, 8, -1],
                [2, 9, 8, 4, 2],
              ],
              threshold: -0.0001886254030978307,
              right_val: 0.5098205208778381,
              left_val: 0.2831785976886749,
            },
            {
              features: [
                [14, 16, 2, 2, -1],
                [14, 17, 2, 1, 2],
              ],
              threshold: -0.0037979281041771173,
              right_val: 0.5246580243110657,
              left_val: 0.3372507989406586,
            },
            {
              features: [
                [4, 16, 2, 2, -1],
                [4, 17, 2, 1, 2],
              ],
              threshold: 0.00014627049677073956,
              right_val: 0.391171008348465,
              left_val: 0.5306674242019653,
            },
            {
              features: [
                [10, 11, 4, 6, -1],
                [10, 14, 4, 3, 2],
              ],
              threshold: -49164638767251745e-21,
              right_val: 0.3942720890045166,
              left_val: 0.5462496280670166,
            },
            {
              features: [
                [6, 11, 4, 6, -1],
                [6, 14, 4, 3, 2],
              ],
              threshold: -0.0335825011134148,
              right_val: 0.5048211812973022,
              left_val: 0.2157824039459229,
            },
            {
              features: [
                [10, 14, 1, 3, -1],
                [10, 15, 1, 1, 3],
              ],
              threshold: -0.0035339309833943844,
              right_val: 0.4872696995735169,
              left_val: 0.6465312242507935,
            },
            {
              features: [
                [8, 14, 4, 3, -1],
                [8, 15, 4, 1, 3],
              ],
              threshold: 0.005014411173760891,
              right_val: 0.6248074769973755,
              left_val: 0.4617668092250824,
            },
            {
              features: [
                [10, 0, 4, 6, -1],
                [12, 0, 2, 3, 2],
                [10, 3, 2, 3, 2],
              ],
              threshold: 0.0188173707574606,
              right_val: 0.2000052034854889,
              left_val: 0.5220689177513123,
            },
            {
              features: [
                [0, 3, 20, 2, -1],
                [0, 4, 20, 1, 2],
              ],
              threshold: -0.001343433978036046,
              right_val: 0.53016197681427,
              left_val: 0.4014537930488586,
            },
            {
              features: [
                [12, 0, 8, 2, -1],
                [16, 0, 4, 1, 2],
                [12, 1, 4, 1, 2],
              ],
              threshold: 0.001755796023644507,
              right_val: 0.5653169751167297,
              left_val: 0.4794039130210877,
            },
            {
              features: [
                [2, 12, 10, 8, -1],
                [2, 16, 10, 4, 2],
              ],
              threshold: -0.0956374630331993,
              right_val: 0.5006706714630127,
              left_val: 0.2034195065498352,
            },
            {
              features: [
                [17, 7, 2, 10, -1],
                [18, 7, 1, 5, 2],
                [17, 12, 1, 5, 2],
              ],
              threshold: -0.0222412291914225,
              right_val: 0.5046340227127075,
              left_val: 0.7672473192214966,
            },
            {
              features: [
                [1, 7, 2, 10, -1],
                [1, 7, 1, 5, 2],
                [2, 12, 1, 5, 2],
              ],
              threshold: -0.0155758196488023,
              right_val: 0.4755851030349731,
              left_val: 0.7490342259407043,
            },
            {
              features: [
                [15, 10, 3, 6, -1],
                [15, 12, 3, 2, 3],
              ],
              threshold: 0.005359911825507879,
              right_val: 0.4004670977592468,
              left_val: 0.5365303754806519,
            },
            {
              features: [
                [4, 4, 6, 2, -1],
                [6, 4, 2, 2, 3],
              ],
              threshold: -0.0217634998261929,
              right_val: 0.4964174926280975,
              left_val: 0.0740154981613159,
            },
            {
              features: [
                [0, 5, 20, 6, -1],
                [0, 7, 20, 2, 3],
              ],
              threshold: -0.165615901350975,
              right_val: 0.5218086242675781,
              left_val: 0.2859103083610535,
            },
            {
              features: [
                [0, 0, 8, 2, -1],
                [0, 0, 4, 1, 2],
                [4, 1, 4, 1, 2],
              ],
              threshold: 0.0001646132004680112,
              right_val: 0.5380793213844299,
              left_val: 0.4191615879535675,
            },
            {
              features: [
                [1, 0, 18, 4, -1],
                [7, 0, 6, 4, 3],
              ],
              threshold: -0.008907750248908997,
              right_val: 0.4877404868602753,
              left_val: 0.6273192763328552,
            },
            {
              features: [
                [1, 13, 6, 2, -1],
                [1, 14, 6, 1, 2],
              ],
              threshold: 0.0008634644909761846,
              right_val: 0.3671025931835175,
              left_val: 0.5159940719604492,
            },
            {
              features: [
                [10, 8, 3, 4, -1],
                [11, 8, 1, 4, 3],
              ],
              threshold: -0.0013751760125160217,
              right_val: 0.4579083919525147,
              left_val: 0.5884376764297485,
            },
            {
              features: [
                [6, 1, 6, 1, -1],
                [8, 1, 2, 1, 3],
              ],
              threshold: -0.0014081239933148026,
              right_val: 0.5139945149421692,
              left_val: 0.3560509979724884,
            },
            {
              features: [
                [8, 14, 4, 3, -1],
                [8, 15, 4, 1, 3],
              ],
              threshold: -0.003934288863092661,
              right_val: 0.466427206993103,
              left_val: 0.5994288921356201,
            },
            {
              features: [
                [1, 6, 18, 2, -1],
                [10, 6, 9, 2, 2],
              ],
              threshold: -0.0319669283926487,
              right_val: 0.5144183039665222,
              left_val: 0.3345462083816528,
            },
            {
              features: [
                [15, 11, 1, 2, -1],
                [15, 12, 1, 1, 2],
              ],
              threshold: -15089280168467667e-21,
              right_val: 0.441405713558197,
              left_val: 0.5582656264305115,
            },
            {
              features: [
                [6, 5, 1, 2, -1],
                [6, 6, 1, 1, 2],
              ],
              threshold: 0.0005199447041377425,
              right_val: 0.6168993711471558,
              left_val: 0.4623680114746094,
            },
            {
              features: [
                [13, 4, 1, 3, -1],
                [13, 5, 1, 1, 3],
              ],
              threshold: -0.0034220460802316666,
              right_val: 0.4974805116653442,
              left_val: 0.6557074785232544,
            },
            {
              features: [
                [2, 15, 1, 2, -1],
                [2, 16, 1, 1, 2],
              ],
              threshold: 0.00017723299970384687,
              right_val: 0.3901908099651337,
              left_val: 0.5269501805305481,
            },
            {
              features: [
                [12, 4, 4, 3, -1],
                [12, 5, 4, 1, 3],
              ],
              threshold: 0.0015716759953647852,
              right_val: 0.5790457725524902,
              left_val: 0.4633373022079468,
            },
            {
              features: [
                [0, 0, 7, 3, -1],
                [0, 1, 7, 1, 3],
              ],
              threshold: -0.00890413299202919,
              right_val: 0.5053591132164001,
              left_val: 0.2689608037471771,
            },
            {
              features: [
                [9, 12, 6, 2, -1],
                [9, 12, 3, 2, 2],
              ],
              threshold: 0.00040677518700249493,
              right_val: 0.4329898953437805,
              left_val: 0.5456603169441223,
            },
            {
              features: [
                [5, 4, 2, 3, -1],
                [5, 5, 2, 1, 3],
              ],
              threshold: 0.0067604780197143555,
              right_val: 0.6689761877059937,
              left_val: 0.4648993909358978,
            },
            {
              features: [
                [18, 4, 2, 3, -1],
                [18, 5, 2, 1, 3],
              ],
              threshold: 0.0029100088868290186,
              right_val: 0.3377839922904968,
              left_val: 0.5309703946113586,
            },
            {
              features: [
                [3, 0, 8, 6, -1],
                [3, 2, 8, 2, 3],
              ],
              threshold: 0.0013885459629818797,
              right_val: 0.5349133014678955,
              left_val: 0.4074738919734955,
            },
            {
              features: [
                [0, 2, 20, 6, -1],
                [10, 2, 10, 3, 2],
                [0, 5, 10, 3, 2],
              ],
              threshold: -0.0767642632126808,
              right_val: 0.522824227809906,
              left_val: 0.1992176026105881,
            },
            {
              features: [
                [4, 7, 2, 4, -1],
                [5, 7, 1, 4, 2],
              ],
              threshold: -0.00022688310127705336,
              right_val: 0.4253072142601013,
              left_val: 0.5438501834869385,
            },
            {
              features: [
                [3, 10, 15, 2, -1],
                [8, 10, 5, 2, 3],
              ],
              threshold: -0.006309415213763714,
              right_val: 0.5378909707069397,
              left_val: 0.4259178936481476,
            },
            {
              features: [
                [3, 0, 12, 11, -1],
                [9, 0, 6, 11, 2],
              ],
              threshold: -0.1100727990269661,
              right_val: 0.4721749126911163,
              left_val: 0.6904156804084778,
            },
            {
              features: [
                [13, 0, 2, 6, -1],
                [13, 0, 1, 6, 2],
              ],
              threshold: 0.0002861965913325548,
              right_val: 0.5548306107521057,
              left_val: 0.4524914920330048,
            },
            {
              features: [
                [0, 19, 2, 1, -1],
                [1, 19, 1, 1, 2],
              ],
              threshold: 2942532955785282e-20,
              right_val: 0.4236463904380798,
              left_val: 0.5370373725891113,
            },
            {
              features: [
                [16, 10, 4, 10, -1],
                [18, 10, 2, 5, 2],
                [16, 15, 2, 5, 2],
              ],
              threshold: -0.0248865708708763,
              right_val: 0.4969303905963898,
              left_val: 0.6423557996749878,
            },
            {
              features: [
                [4, 8, 10, 3, -1],
                [4, 9, 10, 1, 3],
              ],
              threshold: 0.0331488512456417,
              right_val: 0.1613811999559403,
              left_val: 0.4988475143909454,
            },
            {
              features: [
                [14, 12, 3, 3, -1],
                [14, 13, 3, 1, 3],
              ],
              threshold: 0.0007849169196560979,
              right_val: 0.4223009049892426,
              left_val: 0.541602611541748,
            },
            {
              features: [
                [0, 10, 4, 10, -1],
                [0, 10, 2, 5, 2],
                [2, 15, 2, 5, 2],
              ],
              threshold: 0.004708718974143267,
              right_val: 0.6027557849884033,
              left_val: 0.4576328992843628,
            },
            {
              features: [
                [18, 3, 2, 6, -1],
                [18, 5, 2, 2, 3],
              ],
              threshold: 0.0024144479539245367,
              right_val: 0.4422498941421509,
              left_val: 0.530897319316864,
            },
            {
              features: [
                [6, 6, 1, 3, -1],
                [6, 7, 1, 1, 3],
              ],
              threshold: 0.0019523180089890957,
              right_val: 0.666332483291626,
              left_val: 0.4705634117126465,
            },
            {
              features: [
                [7, 7, 7, 2, -1],
                [7, 8, 7, 1, 2],
              ],
              threshold: 0.0013031980488449335,
              right_val: 0.5526962280273438,
              left_val: 0.4406126141548157,
            },
            {
              features: [
                [0, 3, 2, 6, -1],
                [0, 5, 2, 2, 3],
              ],
              threshold: 0.004473549779504538,
              right_val: 0.3301498889923096,
              left_val: 0.5129023790359497,
            },
            {
              features: [
                [11, 1, 3, 1, -1],
                [12, 1, 1, 1, 3],
              ],
              threshold: -0.002665286883711815,
              right_val: 0.5175036191940308,
              left_val: 0.3135471045970917,
            },
            {
              features: [
                [5, 0, 2, 6, -1],
                [6, 0, 1, 6, 2],
              ],
              threshold: 0.0001366677024634555,
              right_val: 0.530687689781189,
              left_val: 0.4119370877742767,
            },
            {
              features: [
                [1, 1, 18, 14, -1],
                [7, 1, 6, 14, 3],
              ],
              threshold: -0.0171264503151178,
              right_val: 0.4836578965187073,
              left_val: 0.6177806258201599,
            },
            {
              features: [
                [4, 6, 8, 3, -1],
                [8, 6, 4, 3, 2],
              ],
              threshold: -0.0002660143072716892,
              right_val: 0.5169736742973328,
              left_val: 0.3654330968856812,
            },
            {
              features: [
                [9, 12, 6, 2, -1],
                [9, 12, 3, 2, 2],
              ],
              threshold: -0.022932380437851,
              right_val: 0.5163992047309875,
              left_val: 0.349091500043869,
            },
            {
              features: [
                [5, 12, 6, 2, -1],
                [8, 12, 3, 2, 2],
              ],
              threshold: 0.0023316550068557262,
              right_val: 0.3709389865398407,
              left_val: 0.5166299939155579,
            },
            {
              features: [
                [10, 7, 3, 5, -1],
                [11, 7, 1, 5, 3],
              ],
              threshold: 0.016925660893321,
              right_val: 0.8053988218307495,
              left_val: 0.501473605632782,
            },
            {
              features: [
                [7, 7, 3, 5, -1],
                [8, 7, 1, 5, 3],
              ],
              threshold: -0.008985882624983788,
              right_val: 0.465702086687088,
              left_val: 0.6470788717269897,
            },
            {
              features: [
                [13, 0, 3, 10, -1],
                [14, 0, 1, 10, 3],
              ],
              threshold: -0.0118746999651194,
              right_val: 0.5258755087852478,
              left_val: 0.3246378898620606,
            },
            {
              features: [
                [4, 11, 3, 2, -1],
                [4, 12, 3, 1, 2],
              ],
              threshold: 0.00019350569345988333,
              right_val: 0.3839643895626068,
              left_val: 0.5191941857337952,
            },
            {
              features: [
                [17, 3, 3, 6, -1],
                [18, 3, 1, 6, 3],
              ],
              threshold: 0.005871349014341831,
              right_val: 0.6187043190002441,
              left_val: 0.4918133914470673,
            },
            {
              features: [
                [1, 8, 18, 10, -1],
                [1, 13, 18, 5, 2],
              ],
              threshold: -0.2483879029750824,
              right_val: 0.4988150000572205,
              left_val: 0.1836802959442139,
            },
            {
              features: [
                [13, 0, 3, 10, -1],
                [14, 0, 1, 10, 3],
              ],
              threshold: 0.0122560001909733,
              right_val: 0.3632029891014099,
              left_val: 0.5227053761482239,
            },
            {
              features: [
                [9, 14, 2, 3, -1],
                [9, 15, 2, 1, 3],
              ],
              threshold: 0.0008399017970077693,
              right_val: 0.5774148106575012,
              left_val: 0.4490250051021576,
            },
            {
              features: [
                [16, 3, 3, 7, -1],
                [17, 3, 1, 7, 3],
              ],
              threshold: 0.002540736924856901,
              right_val: 0.5858299136161804,
              left_val: 0.4804787039756775,
            },
            {
              features: [
                [4, 0, 3, 10, -1],
                [5, 0, 1, 10, 3],
              ],
              threshold: -0.0148224299773574,
              right_val: 0.5023537278175354,
              left_val: 0.2521049976348877,
            },
            {
              features: [
                [16, 3, 3, 7, -1],
                [17, 3, 1, 7, 3],
              ],
              threshold: -0.005797395948320627,
              right_val: 0.4853715002536774,
              left_val: 0.5996695756912231,
            },
            {
              features: [
                [0, 9, 1, 2, -1],
                [0, 10, 1, 1, 2],
              ],
              threshold: 0.000726621481589973,
              right_val: 0.3671779930591583,
              left_val: 0.5153716802597046,
            },
            {
              features: [
                [18, 1, 2, 10, -1],
                [18, 1, 1, 10, 2],
              ],
              threshold: -0.0172325801104307,
              right_val: 0.4994656145572662,
              left_val: 0.6621719002723694,
            },
            {
              features: [
                [0, 1, 2, 10, -1],
                [1, 1, 1, 10, 2],
              ],
              threshold: 0.007862408645451069,
              right_val: 0.6256101727485657,
              left_val: 0.4633395075798035,
            },
            {
              features: [
                [10, 16, 3, 4, -1],
                [11, 16, 1, 4, 3],
              ],
              threshold: -0.004734362009912729,
              right_val: 0.5281885266304016,
              left_val: 0.3615573048591614,
            },
            {
              features: [
                [2, 8, 3, 3, -1],
                [3, 8, 1, 3, 3],
              ],
              threshold: 0.0008304847870022058,
              right_val: 0.5550957918167114,
              left_val: 0.4442889094352722,
            },
            {
              features: [
                [11, 0, 2, 6, -1],
                [12, 0, 1, 3, 2],
                [11, 3, 1, 3, 2],
              ],
              threshold: 0.00766021991148591,
              right_val: 0.2613354921340942,
              left_val: 0.5162935256958008,
            },
            {
              features: [
                [7, 0, 2, 6, -1],
                [7, 0, 1, 3, 2],
                [8, 3, 1, 3, 2],
              ],
              threshold: -0.004104837775230408,
              right_val: 0.5019031763076782,
              left_val: 0.2789632081985474,
            },
            {
              features: [
                [16, 3, 3, 7, -1],
                [17, 3, 1, 7, 3],
              ],
              threshold: 0.004851257894188166,
              right_val: 0.5661668181419373,
              left_val: 0.4968984127044678,
            },
            {
              features: [
                [1, 3, 3, 7, -1],
                [2, 3, 1, 7, 3],
              ],
              threshold: 0.0009989645332098007,
              right_val: 0.5551813244819641,
              left_val: 0.4445607960224152,
            },
            {
              features: [
                [14, 1, 6, 16, -1],
                [16, 1, 2, 16, 3],
              ],
              threshold: -0.2702363133430481,
              right_val: 0.515131413936615,
              left_val: 0.0293882098048925,
            },
            {
              features: [
                [0, 1, 6, 16, -1],
                [2, 1, 2, 16, 3],
              ],
              threshold: -0.0130906803533435,
              right_val: 0.4447459876537323,
              left_val: 0.5699399709701538,
            },
            {
              features: [
                [2, 0, 16, 8, -1],
                [10, 0, 8, 4, 2],
                [2, 4, 8, 4, 2],
              ],
              threshold: -0.009434279054403305,
              right_val: 0.5487895011901855,
              left_val: 0.4305466115474701,
            },
            {
              features: [
                [6, 8, 5, 3, -1],
                [6, 9, 5, 1, 3],
              ],
              threshold: -0.0015482039889320731,
              right_val: 0.512808084487915,
              left_val: 0.3680317103862763,
            },
            {
              features: [
                [9, 7, 3, 3, -1],
                [10, 7, 1, 3, 3],
              ],
              threshold: 0.005374613218009472,
              right_val: 0.6101555824279785,
              left_val: 0.4838916957378388,
            },
            {
              features: [
                [8, 8, 4, 3, -1],
                [8, 9, 4, 1, 3],
              ],
              threshold: 0.0015786769799888134,
              right_val: 0.4118548035621643,
              left_val: 0.5325223207473755,
            },
            {
              features: [
                [9, 6, 2, 4, -1],
                [9, 6, 1, 4, 2],
              ],
              threshold: 0.003685605013743043,
              right_val: 0.6252303123474121,
              left_val: 0.4810948073863983,
            },
            {
              features: [
                [0, 7, 15, 1, -1],
                [5, 7, 5, 1, 3],
              ],
              threshold: 0.009388701990246773,
              right_val: 0.3629410862922669,
              left_val: 0.520022988319397,
            },
            {
              features: [
                [8, 2, 7, 9, -1],
                [8, 5, 7, 3, 3],
              ],
              threshold: 0.0127926301211119,
              right_val: 0.673801600933075,
              left_val: 0.4961709976196289,
            },
            {
              features: [
                [1, 7, 16, 4, -1],
                [1, 7, 8, 2, 2],
                [9, 9, 8, 2, 2],
              ],
              threshold: -0.003366104094311595,
              right_val: 0.5283598899841309,
              left_val: 0.4060279130935669,
            },
            {
              features: [
                [6, 12, 8, 2, -1],
                [6, 13, 8, 1, 2],
              ],
              threshold: 0.00039771420415490866,
              right_val: 0.5900775194168091,
              left_val: 0.4674113988876343,
            },
            {
              features: [
                [8, 11, 3, 3, -1],
                [8, 12, 3, 1, 3],
              ],
              threshold: 0.0014868030557408929,
              right_val: 0.6082053780555725,
              left_val: 0.4519116878509522,
            },
            {
              features: [
                [4, 5, 14, 10, -1],
                [11, 5, 7, 5, 2],
                [4, 10, 7, 5, 2],
              ],
              threshold: -0.0886867493391037,
              right_val: 0.5180991888046265,
              left_val: 0.2807899117469788,
            },
            {
              features: [
                [4, 12, 3, 2, -1],
                [4, 13, 3, 1, 2],
              ],
              threshold: -7429611287079751e-20,
              right_val: 0.408762514591217,
              left_val: 0.5295584201812744,
            },
            {
              features: [
                [9, 11, 6, 1, -1],
                [11, 11, 2, 1, 3],
              ],
              threshold: -14932939848222304e-21,
              right_val: 0.4538542926311493,
              left_val: 0.5461400151252747,
            },
            {
              features: [
                [4, 9, 7, 6, -1],
                [4, 11, 7, 2, 3],
              ],
              threshold: 0.005916223861277103,
              right_val: 0.4192134141921997,
              left_val: 0.5329161286354065,
            },
            {
              features: [
                [7, 10, 6, 3, -1],
                [7, 11, 6, 1, 3],
              ],
              threshold: 0.001114164013415575,
              right_val: 0.5706217288970947,
              left_val: 0.4512017965316773,
            },
            {
              features: [
                [9, 11, 2, 2, -1],
                [9, 12, 2, 1, 2],
              ],
              threshold: 8924936264520511e-20,
              right_val: 0.5897638201713562,
              left_val: 0.4577805995941162,
            },
            {
              features: [
                [0, 5, 20, 6, -1],
                [0, 7, 20, 2, 3],
              ],
              threshold: 0.0025319510605186224,
              right_val: 0.3357639014720917,
              left_val: 0.5299603939056396,
            },
            {
              features: [
                [6, 4, 6, 1, -1],
                [8, 4, 2, 1, 3],
              ],
              threshold: 0.0124262003228068,
              right_val: 0.1346601992845535,
              left_val: 0.4959059059619904,
            },
            {
              features: [
                [9, 11, 6, 1, -1],
                [11, 11, 2, 1, 3],
              ],
              threshold: 0.0283357501029968,
              right_val: 0.0006104363710619509,
              left_val: 0.5117079019546509,
            },
            {
              features: [
                [5, 11, 6, 1, -1],
                [7, 11, 2, 1, 3],
              ],
              threshold: 0.006616588216274977,
              right_val: 0.7011628150939941,
              left_val: 0.4736349880695343,
            },
            {
              features: [
                [10, 16, 3, 4, -1],
                [11, 16, 1, 4, 3],
              ],
              threshold: 0.008046876639127731,
              right_val: 0.3282819986343384,
              left_val: 0.5216417908668518,
            },
            {
              features: [
                [8, 7, 3, 3, -1],
                [9, 7, 1, 3, 3],
              ],
              threshold: -0.001119398046284914,
              right_val: 0.4563739001750946,
              left_val: 0.5809860825538635,
            },
            {
              features: [
                [2, 12, 16, 8, -1],
                [2, 16, 16, 4, 2],
              ],
              threshold: 0.0132775902748108,
              right_val: 0.4103901088237763,
              left_val: 0.5398362278938293,
            },
            {
              features: [
                [0, 15, 15, 2, -1],
                [0, 16, 15, 1, 2],
              ],
              threshold: 0.0004879473999608308,
              right_val: 0.5410590767860413,
              left_val: 0.424928605556488,
            },
            {
              features: [
                [15, 4, 5, 6, -1],
                [15, 6, 5, 2, 3],
              ],
              threshold: 0.0112431701272726,
              right_val: 0.3438215851783752,
              left_val: 0.526996374130249,
            },
            {
              features: [
                [9, 5, 2, 4, -1],
                [10, 5, 1, 4, 2],
              ],
              threshold: -0.0008989666821435094,
              right_val: 0.4456613063812256,
              left_val: 0.5633075833320618,
            },
            {
              features: [
                [8, 10, 9, 6, -1],
                [8, 12, 9, 2, 3],
              ],
              threshold: 0.006667715962976217,
              right_val: 0.4362679123878479,
              left_val: 0.5312889218330383,
            },
            {
              features: [
                [2, 19, 15, 1, -1],
                [7, 19, 5, 1, 3],
              ],
              threshold: 0.0289472993463278,
              right_val: 0.657579779624939,
              left_val: 0.4701794981956482,
            },
            {
              features: [
                [10, 16, 3, 4, -1],
                [11, 16, 1, 4, 3],
              ],
              threshold: -0.0234000496566296,
              right_val: 0.5137398838996887,
              left_val: 0,
            },
            {
              features: [
                [0, 15, 20, 4, -1],
                [0, 17, 20, 2, 2],
              ],
              threshold: -0.0891170501708984,
              right_val: 0.4942430853843689,
              left_val: 0.0237452797591686,
            },
            {
              features: [
                [10, 16, 3, 4, -1],
                [11, 16, 1, 4, 3],
              ],
              threshold: -0.0140546001493931,
              right_val: 0.511751115322113,
              left_val: 0.3127323091030121,
            },
            {
              features: [
                [7, 16, 3, 4, -1],
                [8, 16, 1, 4, 3],
              ],
              threshold: 0.008123939856886864,
              right_val: 0.2520025968551636,
              left_val: 0.50090491771698,
            },
            {
              features: [
                [9, 16, 3, 3, -1],
                [9, 17, 3, 1, 3],
              ],
              threshold: -0.004996465053409338,
              right_val: 0.4927811920642853,
              left_val: 0.6387143731117249,
            },
            {
              features: [
                [8, 11, 4, 6, -1],
                [8, 14, 4, 3, 2],
              ],
              threshold: 0.0031253970228135586,
              right_val: 0.3680452108383179,
              left_val: 0.5136849880218506,
            },
            {
              features: [
                [9, 6, 2, 12, -1],
                [9, 10, 2, 4, 3],
              ],
              threshold: 0.006766964215785265,
              right_val: 0.4363631904125214,
              left_val: 0.5509843826293945,
            },
            {
              features: [
                [8, 17, 4, 3, -1],
                [8, 18, 4, 1, 3],
              ],
              threshold: -0.002371144015341997,
              right_val: 0.4586946964263916,
              left_val: 0.6162335276603699,
            },
            {
              features: [
                [9, 18, 8, 2, -1],
                [13, 18, 4, 1, 2],
                [9, 19, 4, 1, 2],
              ],
              threshold: -0.005352279171347618,
              right_val: 0.4920490980148315,
              left_val: 0.6185457706451416,
            },
            {
              features: [
                [1, 18, 8, 2, -1],
                [1, 19, 8, 1, 2],
              ],
              threshold: -0.0159688591957092,
              right_val: 0.4983252882957459,
              left_val: 0.1382617950439453,
            },
            {
              features: [
                [13, 5, 6, 15, -1],
                [15, 5, 2, 15, 3],
              ],
              threshold: 0.004767606034874916,
              right_val: 0.5490046143531799,
              left_val: 0.4688057899475098,
            },
            {
              features: [
                [9, 8, 2, 2, -1],
                [9, 9, 2, 1, 2],
              ],
              threshold: -0.002471469109877944,
              right_val: 0.5003952980041504,
              left_val: 0.2368514984846115,
            },
            {
              features: [
                [9, 5, 2, 3, -1],
                [9, 5, 1, 3, 2],
              ],
              threshold: -0.0007103378884494305,
              right_val: 0.4721533060073853,
              left_val: 0.5856394171714783,
            },
            {
              features: [
                [1, 5, 6, 15, -1],
                [3, 5, 2, 15, 3],
              ],
              threshold: -0.1411755979061127,
              right_val: 0.4961591064929962,
              left_val: 0.0869000628590584,
            },
            {
              features: [
                [4, 1, 14, 8, -1],
                [11, 1, 7, 4, 2],
                [4, 5, 7, 4, 2],
              ],
              threshold: 0.1065180972218514,
              right_val: 0.1741005033254623,
              left_val: 0.5138837099075317,
            },
            {
              features: [
                [2, 4, 4, 16, -1],
                [2, 4, 2, 8, 2],
                [4, 12, 2, 8, 2],
              ],
              threshold: -0.0527447499334812,
              right_val: 0.4772881865501404,
              left_val: 0.7353636026382446,
            },
            {
              features: [
                [12, 4, 3, 12, -1],
                [12, 10, 3, 6, 2],
              ],
              threshold: -0.00474317604675889,
              right_val: 0.5292701721191406,
              left_val: 0.3884406089782715,
            },
            {
              features: [
                [4, 5, 10, 12, -1],
                [4, 5, 5, 6, 2],
                [9, 11, 5, 6, 2],
              ],
              threshold: 0.0009967676596716046,
              right_val: 0.4003424048423767,
              left_val: 0.5223492980003357,
            },
            {
              features: [
                [9, 14, 2, 3, -1],
                [9, 15, 2, 1, 3],
              ],
              threshold: 0.00802841316908598,
              right_val: 0.7212964296340942,
              left_val: 0.4959106147289276,
            },
            {
              features: [
                [5, 4, 2, 3, -1],
                [5, 5, 2, 1, 3],
              ],
              threshold: 0.0008602585876360536,
              right_val: 0.55384761095047,
              left_val: 0.4444884061813355,
            },
            {
              features: [
                [12, 2, 4, 10, -1],
                [14, 2, 2, 5, 2],
                [12, 7, 2, 5, 2],
              ],
              threshold: 0.0009319150121882558,
              right_val: 0.4163244068622589,
              left_val: 0.539837121963501,
            },
            {
              features: [
                [6, 4, 7, 3, -1],
                [6, 5, 7, 1, 3],
              ],
              threshold: -0.002508206060156226,
              right_val: 0.456250011920929,
              left_val: 0.5854265093803406,
            },
            {
              features: [
                [2, 0, 18, 2, -1],
                [11, 0, 9, 1, 2],
                [2, 1, 9, 1, 2],
              ],
              threshold: -0.0021378761157393456,
              right_val: 0.5280259251594543,
              left_val: 0.4608069062232971,
            },
            {
              features: [
                [0, 0, 18, 2, -1],
                [0, 0, 9, 1, 2],
                [9, 1, 9, 1, 2],
              ],
              threshold: -0.002154604997485876,
              right_val: 0.5255997180938721,
              left_val: 0.3791126906871796,
            },
            {
              features: [
                [13, 13, 4, 6, -1],
                [15, 13, 2, 3, 2],
                [13, 16, 2, 3, 2],
              ],
              threshold: -0.007621400989592075,
              right_val: 0.4952073991298676,
              left_val: 0.5998609066009521,
            },
            {
              features: [
                [3, 13, 4, 6, -1],
                [3, 13, 2, 3, 2],
                [5, 16, 2, 3, 2],
              ],
              threshold: 0.002205536002293229,
              right_val: 0.5588530898094177,
              left_val: 0.4484206140041351,
            },
            {
              features: [
                [10, 12, 2, 6, -1],
                [10, 15, 2, 3, 2],
              ],
              threshold: 0.0012586950324475765,
              right_val: 0.4423840939998627,
              left_val: 0.5450747013092041,
            },
            {
              features: [
                [5, 9, 10, 10, -1],
                [5, 9, 5, 5, 2],
                [10, 14, 5, 5, 2],
              ],
              threshold: -0.005092672072350979,
              right_val: 0.5263035893440247,
              left_val: 0.4118275046348572,
            },
            {
              features: [
                [11, 4, 4, 2, -1],
                [13, 4, 2, 1, 2],
                [11, 5, 2, 1, 2],
              ],
              threshold: -0.0025095739401876926,
              right_val: 0.4998494982719421,
              left_val: 0.5787907838821411,
            },
            {
              features: [
                [7, 12, 6, 8, -1],
                [10, 12, 3, 8, 2],
              ],
              threshold: -0.0773275569081306,
              right_val: 0.481112003326416,
              left_val: 0.8397865891456604,
            },
            {
              features: [
                [12, 2, 4, 10, -1],
                [14, 2, 2, 5, 2],
                [12, 7, 2, 5, 2],
              ],
              threshold: -0.041485819965601,
              right_val: 0.5176993012428284,
              left_val: 0.240861102938652,
            },
            {
              features: [
                [8, 11, 2, 1, -1],
                [9, 11, 1, 1, 2],
              ],
              threshold: 0.00010355669655837119,
              right_val: 0.5417054295539856,
              left_val: 0.4355360865592957,
            },
            {
              features: [
                [10, 5, 1, 12, -1],
                [10, 9, 1, 4, 3],
              ],
              threshold: 0.0013255809899419546,
              right_val: 0.4894095063209534,
              left_val: 0.5453971028327942,
            },
            {
              features: [
                [0, 11, 6, 9, -1],
                [3, 11, 3, 9, 2],
              ],
              threshold: -0.00805987324565649,
              right_val: 0.4577918946743012,
              left_val: 0.5771024227142334,
            },
            {
              features: [
                [12, 2, 4, 10, -1],
                [14, 2, 2, 5, 2],
                [12, 7, 2, 5, 2],
              ],
              threshold: 0.019058620557189,
              right_val: 0.3400475084781647,
              left_val: 0.5169867873191833,
            },
            {
              features: [
                [4, 2, 4, 10, -1],
                [4, 2, 2, 5, 2],
                [6, 7, 2, 5, 2],
              ],
              threshold: -0.0350578911602497,
              right_val: 0.5000503063201904,
              left_val: 0.2203243970870972,
            },
            {
              features: [
                [11, 4, 4, 2, -1],
                [13, 4, 2, 1, 2],
                [11, 5, 2, 1, 2],
              ],
              threshold: 0.005729605909436941,
              right_val: 0.6597570776939392,
              left_val: 0.5043408274650574,
            },
            {
              features: [
                [0, 14, 6, 3, -1],
                [0, 15, 6, 1, 3],
              ],
              threshold: -0.0116483299061656,
              right_val: 0.4996652901172638,
              left_val: 0.2186284959316254,
            },
            {
              features: [
                [11, 4, 4, 2, -1],
                [13, 4, 2, 1, 2],
                [11, 5, 2, 1, 2],
              ],
              threshold: 0.0014544479781761765,
              right_val: 0.5503727793693542,
              left_val: 0.5007681846618652,
            },
            {
              features: [
                [6, 1, 3, 2, -1],
                [7, 1, 1, 2, 3],
              ],
              threshold: -0.00025030909455381334,
              right_val: 0.524167001247406,
              left_val: 0.4129841029644013,
            },
            {
              features: [
                [11, 4, 4, 2, -1],
                [13, 4, 2, 1, 2],
                [11, 5, 2, 1, 2],
              ],
              threshold: -0.000829072727356106,
              right_val: 0.4974496066570282,
              left_val: 0.541286826133728,
            },
            {
              features: [
                [5, 4, 4, 2, -1],
                [5, 4, 2, 1, 2],
                [7, 5, 2, 1, 2],
              ],
              threshold: 0.0010862209601327777,
              right_val: 0.5879228711128235,
              left_val: 0.460552990436554,
            },
            {
              features: [
                [13, 0, 2, 12, -1],
                [14, 0, 1, 6, 2],
                [13, 6, 1, 6, 2],
              ],
              threshold: 0.0002000050008064136,
              right_val: 0.4705209136009216,
              left_val: 0.5278854966163635,
            },
            {
              features: [
                [6, 0, 3, 10, -1],
                [7, 0, 1, 10, 3],
              ],
              threshold: 0.0029212920926511288,
              right_val: 0.375553697347641,
              left_val: 0.5129609704017639,
            },
            {
              features: [
                [3, 0, 17, 8, -1],
                [3, 4, 17, 4, 2],
              ],
              threshold: 0.0253874007612467,
              right_val: 0.5790768265724182,
              left_val: 0.4822691977024078,
            },
            {
              features: [
                [0, 4, 20, 4, -1],
                [0, 6, 20, 2, 2],
              ],
              threshold: -0.00319684692658484,
              right_val: 0.3962840139865875,
              left_val: 0.5248395204544067,
            },
          ],
          threshold: 87.69602966308594,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [0, 3, 8, 2, -1],
                [4, 3, 4, 2, 2],
              ],
              threshold: 0.005803173873573542,
              right_val: 0.596198320388794,
              left_val: 0.3498983979225159,
            },
            {
              features: [
                [8, 11, 4, 3, -1],
                [8, 12, 4, 1, 3],
              ],
              threshold: -0.009000306949019432,
              right_val: 0.4478552043437958,
              left_val: 0.6816636919975281,
            },
            {
              features: [
                [5, 7, 6, 4, -1],
                [5, 7, 3, 2, 2],
                [8, 9, 3, 2, 2],
              ],
              threshold: -0.00115496595390141,
              right_val: 0.3578251004219055,
              left_val: 0.5585706233978271,
            },
            {
              features: [
                [8, 3, 4, 9, -1],
                [8, 6, 4, 3, 3],
              ],
              threshold: -0.0011069850297644734,
              right_val: 0.3050428032875061,
              left_val: 0.5365036129951477,
            },
            {
              features: [
                [8, 15, 1, 4, -1],
                [8, 17, 1, 2, 2],
              ],
              threshold: 0.00010308309720130637,
              right_val: 0.5344635844230652,
              left_val: 0.363909512758255,
            },
            {
              features: [
                [4, 5, 12, 7, -1],
                [8, 5, 4, 7, 3],
              ],
              threshold: -0.005098483990877867,
              right_val: 0.5504264831542969,
              left_val: 0.2859157025814056,
            },
            {
              features: [
                [4, 2, 4, 10, -1],
                [4, 2, 2, 5, 2],
                [6, 7, 2, 5, 2],
              ],
              threshold: 0.0008257220033556223,
              right_val: 0.3476041853427887,
              left_val: 0.5236523747444153,
            },
            {
              features: [
                [3, 0, 17, 2, -1],
                [3, 1, 17, 1, 2],
              ],
              threshold: 0.009978332556784153,
              right_val: 0.621964693069458,
              left_val: 0.4750322103500366,
            },
            {
              features: [
                [2, 2, 16, 15, -1],
                [2, 7, 16, 5, 3],
              ],
              threshold: -0.0374025292694569,
              right_val: 0.527806282043457,
              left_val: 0.334337592124939,
            },
            {
              features: [
                [15, 2, 5, 2, -1],
                [15, 3, 5, 1, 2],
              ],
              threshold: 0.0048548257909715176,
              right_val: 0.3700444102287293,
              left_val: 0.5192180871963501,
            },
            {
              features: [
                [9, 3, 2, 2, -1],
                [10, 3, 1, 2, 2],
              ],
              threshold: -0.001866447040811181,
              right_val: 0.5091944932937622,
              left_val: 0.2929843962192535,
            },
            {
              features: [
                [4, 5, 16, 15, -1],
                [4, 10, 16, 5, 3],
              ],
              threshold: 0.0168888904154301,
              right_val: 0.5431225895881653,
              left_val: 0.3686845898628235,
            },
            {
              features: [
                [7, 13, 5, 6, -1],
                [7, 16, 5, 3, 2],
              ],
              threshold: -0.005837262142449617,
              right_val: 0.5221335887908936,
              left_val: 0.3632183969020844,
            },
            {
              features: [
                [10, 7, 3, 2, -1],
                [11, 7, 1, 2, 3],
              ],
              threshold: -0.00147137395106256,
              right_val: 0.4700650870800018,
              left_val: 0.5870683789253235,
            },
            {
              features: [
                [8, 3, 3, 1, -1],
                [9, 3, 1, 1, 3],
              ],
              threshold: -0.0011522950371727347,
              right_val: 0.5140954256057739,
              left_val: 0.3195894956588745,
            },
            {
              features: [
                [9, 16, 3, 3, -1],
                [9, 17, 3, 1, 3],
              ],
              threshold: -0.004256030078977346,
              right_val: 0.4814921021461487,
              left_val: 0.6301859021186829,
            },
            {
              features: [
                [0, 2, 5, 2, -1],
                [0, 3, 5, 1, 2],
              ],
              threshold: -0.006737829186022282,
              right_val: 0.5025808215141296,
              left_val: 0.1977048069238663,
            },
            {
              features: [
                [12, 5, 4, 3, -1],
                [12, 6, 4, 1, 3],
              ],
              threshold: 0.0113826701417565,
              right_val: 0.6867045760154724,
              left_val: 0.495413213968277,
            },
            {
              features: [
                [1, 7, 12, 1, -1],
                [5, 7, 4, 1, 3],
              ],
              threshold: 0.005179470870643854,
              right_val: 0.3350647985935211,
              left_val: 0.5164427757263184,
            },
            {
              features: [
                [7, 5, 6, 14, -1],
                [7, 12, 6, 7, 2],
              ],
              threshold: -0.1174378991127014,
              right_val: 0.5234413743019104,
              left_val: 0.2315246015787125,
            },
            {
              features: [
                [0, 0, 8, 10, -1],
                [0, 0, 4, 5, 2],
                [4, 5, 4, 5, 2],
              ],
              threshold: 0.0287034492939711,
              right_val: 0.6722521185874939,
              left_val: 0.4664297103881836,
            },
            {
              features: [
                [9, 1, 3, 2, -1],
                [10, 1, 1, 2, 3],
              ],
              threshold: 0.004823103081434965,
              right_val: 0.2723532915115356,
              left_val: 0.5220875144004822,
            },
            {
              features: [
                [8, 1, 3, 2, -1],
                [9, 1, 1, 2, 3],
              ],
              threshold: 0.0026798530016094446,
              right_val: 0.2906948924064636,
              left_val: 0.5079277157783508,
            },
            {
              features: [
                [12, 4, 3, 3, -1],
                [12, 5, 3, 1, 3],
              ],
              threshold: 0.008050408214330673,
              right_val: 0.6395021080970764,
              left_val: 0.4885950982570648,
            },
            {
              features: [
                [7, 4, 6, 16, -1],
                [7, 12, 6, 8, 2],
              ],
              threshold: 0.004805495962500572,
              right_val: 0.365666389465332,
              left_val: 0.5197256803512573,
            },
            {
              features: [
                [12, 4, 3, 3, -1],
                [12, 5, 3, 1, 3],
              ],
              threshold: -0.0022420159075409174,
              right_val: 0.4763701856136322,
              left_val: 0.6153467893600464,
            },
            {
              features: [
                [2, 3, 2, 6, -1],
                [2, 5, 2, 2, 3],
              ],
              threshold: -0.0137577103450894,
              right_val: 0.5030903220176697,
              left_val: 0.2637344896793366,
            },
            {
              features: [
                [14, 2, 6, 9, -1],
                [14, 5, 6, 3, 3],
              ],
              threshold: -0.1033829972147942,
              right_val: 0.5182461142539978,
              left_val: 0.2287521958351135,
            },
            {
              features: [
                [5, 4, 3, 3, -1],
                [5, 5, 3, 1, 3],
              ],
              threshold: -0.009443208575248718,
              right_val: 0.4694949090480804,
              left_val: 0.6953303813934326,
            },
            {
              features: [
                [9, 17, 3, 2, -1],
                [10, 17, 1, 2, 3],
              ],
              threshold: 0.0008027118165045977,
              right_val: 0.4268783926963806,
              left_val: 0.5450655221939087,
            },
            {
              features: [
                [5, 5, 2, 3, -1],
                [5, 6, 2, 1, 3],
              ],
              threshold: -0.004194566980004311,
              right_val: 0.4571642875671387,
              left_val: 0.6091387867927551,
            },
            {
              features: [
                [13, 11, 3, 6, -1],
                [13, 13, 3, 2, 3],
              ],
              threshold: 0.0109422104433179,
              right_val: 0.3284547030925751,
              left_val: 0.5241063237190247,
            },
            {
              features: [
                [3, 14, 2, 6, -1],
                [3, 17, 2, 3, 2],
              ],
              threshold: -0.0005784106906503439,
              right_val: 0.4179368913173676,
              left_val: 0.5387929081916809,
            },
            {
              features: [
                [14, 3, 6, 2, -1],
                [14, 4, 6, 1, 2],
              ],
              threshold: -0.002088862005621195,
              right_val: 0.5301715731620789,
              left_val: 0.4292691051959992,
            },
            {
              features: [
                [0, 8, 16, 2, -1],
                [0, 9, 16, 1, 2],
              ],
              threshold: 0.0032383969519287348,
              right_val: 0.5220744013786316,
              left_val: 0.379234790802002,
            },
            {
              features: [
                [14, 3, 6, 2, -1],
                [14, 4, 6, 1, 2],
              ],
              threshold: 0.004907502792775631,
              right_val: 0.4126757979393005,
              left_val: 0.5237283110618591,
            },
            {
              features: [
                [0, 0, 5, 6, -1],
                [0, 2, 5, 2, 3],
              ],
              threshold: -0.0322779417037964,
              right_val: 0.4994502067565918,
              left_val: 0.1947655975818634,
            },
            {
              features: [
                [12, 5, 4, 3, -1],
                [12, 6, 4, 1, 3],
              ],
              threshold: -0.008971123024821281,
              right_val: 0.4929032027721405,
              left_val: 0.6011285185813904,
            },
            {
              features: [
                [4, 11, 3, 6, -1],
                [4, 13, 3, 2, 3],
              ],
              threshold: 0.0153210898861289,
              right_val: 0.2039822041988373,
              left_val: 0.5009753704071045,
            },
            {
              features: [
                [12, 5, 4, 3, -1],
                [12, 6, 4, 1, 3],
              ],
              threshold: 0.002085556974634528,
              right_val: 0.5721694827079773,
              left_val: 0.4862189888954163,
            },
            {
              features: [
                [9, 5, 1, 3, -1],
                [9, 6, 1, 1, 3],
              ],
              threshold: 0.005061502102762461,
              right_val: 0.1801805943250656,
              left_val: 0.5000218749046326,
            },
            {
              features: [
                [12, 5, 4, 3, -1],
                [12, 6, 4, 1, 3],
              ],
              threshold: -0.0037174751050770283,
              right_val: 0.4897592961788178,
              left_val: 0.5530117154121399,
            },
            {
              features: [
                [6, 6, 8, 12, -1],
                [6, 12, 8, 6, 2],
              ],
              threshold: -0.0121705001220107,
              right_val: 0.5383723974227905,
              left_val: 0.4178605973720551,
            },
            {
              features: [
                [12, 5, 4, 3, -1],
                [12, 6, 4, 1, 3],
              ],
              threshold: 0.004624839872121811,
              right_val: 0.5761327147483826,
              left_val: 0.4997169971466065,
            },
            {
              features: [
                [5, 12, 9, 2, -1],
                [8, 12, 3, 2, 3],
              ],
              threshold: -0.0002104042941937223,
              right_val: 0.4097681045532227,
              left_val: 0.5331807136535645,
            },
            {
              features: [
                [12, 5, 4, 3, -1],
                [12, 6, 4, 1, 3],
              ],
              threshold: -0.0146417804062366,
              right_val: 0.5051776170730591,
              left_val: 0.5755925178527832,
            },
            {
              features: [
                [4, 5, 4, 3, -1],
                [4, 6, 4, 1, 3],
              ],
              threshold: 0.00331994891166687,
              right_val: 0.6031805872917175,
              left_val: 0.4576976895332336,
            },
            {
              features: [
                [6, 6, 9, 2, -1],
                [9, 6, 3, 2, 3],
              ],
              threshold: 0.003723687957972288,
              right_val: 0.541588306427002,
              left_val: 0.4380396902561188,
            },
            {
              features: [
                [4, 11, 1, 3, -1],
                [4, 12, 1, 1, 3],
              ],
              threshold: 0.0008295116131193936,
              right_val: 0.3702219128608704,
              left_val: 0.5163031816482544,
            },
            {
              features: [
                [14, 12, 6, 6, -1],
                [14, 12, 3, 6, 2],
              ],
              threshold: -0.0114084901288152,
              right_val: 0.4862565100193024,
              left_val: 0.6072946786880493,
            },
            {
              features: [
                [7, 0, 3, 7, -1],
                [8, 0, 1, 7, 3],
              ],
              threshold: -0.004532012157142162,
              right_val: 0.5088962912559509,
              left_val: 0.3292475938796997,
            },
            {
              features: [
                [9, 8, 3, 3, -1],
                [10, 8, 1, 3, 3],
              ],
              threshold: 0.00512760179117322,
              right_val: 0.6122708916664124,
              left_val: 0.4829767942428589,
            },
            {
              features: [
                [8, 8, 3, 3, -1],
                [9, 8, 1, 3, 3],
              ],
              threshold: 0.00985831581056118,
              right_val: 0.6556177139282227,
              left_val: 0.4660679996013641,
            },
            {
              features: [
                [5, 10, 11, 3, -1],
                [5, 11, 11, 1, 3],
              ],
              threshold: 0.036985918879509,
              right_val: 0.1690472066402435,
              left_val: 0.5204849243164062,
            },
            {
              features: [
                [5, 7, 10, 1, -1],
                [10, 7, 5, 1, 2],
              ],
              threshold: 0.004649116192013025,
              right_val: 0.3725225031375885,
              left_val: 0.5167322158813477,
            },
            {
              features: [
                [9, 7, 3, 2, -1],
                [10, 7, 1, 2, 3],
              ],
              threshold: -0.004266470205038786,
              right_val: 0.4987342953681946,
              left_val: 0.6406493186950684,
            },
            {
              features: [
                [8, 7, 3, 2, -1],
                [9, 7, 1, 2, 3],
              ],
              threshold: -0.0004795659042429179,
              right_val: 0.4464873969554901,
              left_val: 0.5897293090820312,
            },
            {
              features: [
                [11, 9, 4, 2, -1],
                [11, 9, 2, 2, 2],
              ],
              threshold: 0.0036827160511165857,
              right_val: 0.347266286611557,
              left_val: 0.5441560745239258,
            },
            {
              features: [
                [5, 9, 4, 2, -1],
                [7, 9, 2, 2, 2],
              ],
              threshold: -0.0100598800927401,
              right_val: 0.500482976436615,
              left_val: 0.2143162935972214,
            },
            {
              features: [
                [14, 10, 2, 4, -1],
                [14, 12, 2, 2, 2],
              ],
              threshold: -0.0003036184061784297,
              right_val: 0.4590323865413666,
              left_val: 0.538642406463623,
            },
            {
              features: [
                [7, 7, 3, 2, -1],
                [8, 7, 1, 2, 3],
              ],
              threshold: -0.0014545479789376259,
              right_val: 0.4497095048427582,
              left_val: 0.5751184225082397,
            },
            {
              features: [
                [14, 17, 6, 3, -1],
                [14, 18, 6, 1, 3],
              ],
              threshold: 0.0016515209572389722,
              right_val: 0.4238520860671997,
              left_val: 0.5421937704086304,
            },
            {
              features: [
                [4, 5, 12, 12, -1],
                [4, 5, 6, 6, 2],
                [10, 11, 6, 6, 2],
              ],
              threshold: -0.007846863940358162,
              right_val: 0.5258157253265381,
              left_val: 0.4077920913696289,
            },
            {
              features: [
                [6, 9, 8, 8, -1],
                [10, 9, 4, 4, 2],
                [6, 13, 4, 4, 2],
              ],
              threshold: -0.005125985015183687,
              right_val: 0.5479453206062317,
              left_val: 0.422927588224411,
            },
            {
              features: [
                [0, 4, 15, 4, -1],
                [5, 4, 5, 4, 3],
              ],
              threshold: -0.0368909612298012,
              right_val: 0.4674678146839142,
              left_val: 0.6596375703811646,
            },
            {
              features: [
                [13, 2, 4, 1, -1],
                [13, 2, 2, 1, 2],
              ],
              threshold: 0.0002403563994448632,
              right_val: 0.5573202967643738,
              left_val: 0.4251135885715485,
            },
            {
              features: [
                [4, 12, 2, 2, -1],
                [4, 13, 2, 1, 2],
              ],
              threshold: -15150169929256663e-21,
              right_val: 0.4074114859104157,
              left_val: 0.5259246826171875,
            },
            {
              features: [
                [8, 13, 4, 3, -1],
                [8, 14, 4, 1, 3],
              ],
              threshold: 0.0022108471021056175,
              right_val: 0.5886352062225342,
              left_val: 0.4671722948551178,
            },
            {
              features: [
                [9, 13, 2, 3, -1],
                [9, 14, 2, 1, 3],
              ],
              threshold: -0.0011568620102480054,
              right_val: 0.4487161934375763,
              left_val: 0.5711066126823425,
            },
            {
              features: [
                [13, 11, 2, 3, -1],
                [13, 12, 2, 1, 3],
              ],
              threshold: 0.004999629221856594,
              right_val: 0.2898327112197876,
              left_val: 0.5264198184013367,
            },
            {
              features: [
                [7, 12, 4, 4, -1],
                [7, 12, 2, 2, 2],
                [9, 14, 2, 2, 2],
              ],
              threshold: -0.0014656189596280456,
              right_val: 0.5197871923446655,
              left_val: 0.3891738057136536,
            },
            {
              features: [
                [10, 11, 2, 2, -1],
                [11, 11, 1, 1, 2],
                [10, 12, 1, 1, 2],
              ],
              threshold: -0.0011975039960816503,
              right_val: 0.4927955865859985,
              left_val: 0.5795872807502747,
            },
            {
              features: [
                [8, 17, 3, 2, -1],
                [9, 17, 1, 2, 3],
              ],
              threshold: -0.0044954330660402775,
              right_val: 0.5012555122375488,
              left_val: 0.2377603054046631,
            },
            {
              features: [
                [10, 11, 2, 2, -1],
                [11, 11, 1, 1, 2],
                [10, 12, 1, 1, 2],
              ],
              threshold: 0.00014997160178609192,
              right_val: 0.5617607831954956,
              left_val: 0.4876626133918762,
            },
            {
              features: [
                [0, 17, 6, 3, -1],
                [0, 18, 6, 1, 3],
              ],
              threshold: 0.002639150945469737,
              right_val: 0.3765509128570557,
              left_val: 0.516808807849884,
            },
            {
              features: [
                [10, 11, 2, 2, -1],
                [11, 11, 1, 1, 2],
                [10, 12, 1, 1, 2],
              ],
              threshold: -0.0002936813107226044,
              right_val: 0.4874630868434906,
              left_val: 0.5446649193763733,
            },
            {
              features: [
                [8, 11, 2, 2, -1],
                [8, 11, 1, 1, 2],
                [9, 12, 1, 1, 2],
              ],
              threshold: 0.0014211760135367513,
              right_val: 0.669133186340332,
              left_val: 0.4687897861003876,
            },
            {
              features: [
                [12, 5, 8, 4, -1],
                [12, 5, 4, 4, 2],
              ],
              threshold: 0.0794276371598244,
              right_val: 0.273294597864151,
              left_val: 0.5193443894386292,
            },
            {
              features: [
                [0, 5, 8, 4, -1],
                [4, 5, 4, 4, 2],
              ],
              threshold: 0.0799375027418137,
              right_val: 0.1782083958387375,
              left_val: 0.4971731007099152,
            },
            {
              features: [
                [13, 2, 4, 1, -1],
                [13, 2, 2, 1, 2],
              ],
              threshold: 0.0110892597585917,
              right_val: 0.3209475874900818,
              left_val: 0.5165994763374329,
            },
            {
              features: [
                [3, 2, 4, 1, -1],
                [5, 2, 2, 1, 2],
              ],
              threshold: 0.00016560709627810866,
              right_val: 0.5307276248931885,
              left_val: 0.4058471918106079,
            },
            {
              features: [
                [10, 0, 4, 2, -1],
                [12, 0, 2, 1, 2],
                [10, 1, 2, 1, 2],
              ],
              threshold: -0.0053354292176663876,
              right_val: 0.5158129930496216,
              left_val: 0.3445056974887848,
            },
            {
              features: [
                [7, 12, 3, 1, -1],
                [8, 12, 1, 1, 3],
              ],
              threshold: 0.0011287260567769408,
              right_val: 0.6075533032417297,
              left_val: 0.4594863057136536,
            },
            {
              features: [
                [8, 11, 4, 8, -1],
                [10, 11, 2, 4, 2],
                [8, 15, 2, 4, 2],
              ],
              threshold: -0.0219692196696997,
              right_val: 0.5228595733642578,
              left_val: 0.1680400967597961,
            },
            {
              features: [
                [9, 9, 2, 2, -1],
                [9, 10, 2, 1, 2],
              ],
              threshold: -0.00021775320055894554,
              right_val: 0.5215672850608826,
              left_val: 0.3861596882343292,
            },
            {
              features: [
                [3, 18, 15, 2, -1],
                [3, 19, 15, 1, 2],
              ],
              threshold: 0.00020200149447191507,
              right_val: 0.4363039135932922,
              left_val: 0.5517979264259338,
            },
            {
              features: [
                [2, 6, 2, 12, -1],
                [2, 6, 1, 6, 2],
                [3, 12, 1, 6, 2],
              ],
              threshold: -0.0217331498861313,
              right_val: 0.4789851009845734,
              left_val: 0.7999460101127625,
            },
            {
              features: [
                [9, 8, 2, 3, -1],
                [9, 9, 2, 1, 3],
              ],
              threshold: -0.0008439993252977729,
              right_val: 0.5374773144721985,
              left_val: 0.4085975885391235,
            },
            {
              features: [
                [7, 10, 3, 2, -1],
                [8, 10, 1, 2, 3],
              ],
              threshold: -0.00043895249837078154,
              right_val: 0.4366143047809601,
              left_val: 0.5470405220985413,
            },
            {
              features: [
                [11, 11, 3, 1, -1],
                [12, 11, 1, 1, 3],
              ],
              threshold: 0.0015092400135472417,
              right_val: 0.5842149257659912,
              left_val: 0.4988996982574463,
            },
            {
              features: [
                [6, 11, 3, 1, -1],
                [7, 11, 1, 1, 3],
              ],
              threshold: -0.003554783994331956,
              right_val: 0.4721005856990814,
              left_val: 0.6753690242767334,
            },
            {
              features: [
                [9, 2, 4, 2, -1],
                [11, 2, 2, 1, 2],
                [9, 3, 2, 1, 2],
              ],
              threshold: 0.00048191400128416717,
              right_val: 0.4357109069824219,
              left_val: 0.541585385799408,
            },
            {
              features: [
                [4, 12, 2, 3, -1],
                [4, 13, 2, 1, 3],
              ],
              threshold: -0.00602643983438611,
              right_val: 0.499188095331192,
              left_val: 0.2258509993553162,
            },
            {
              features: [
                [2, 1, 18, 3, -1],
                [8, 1, 6, 3, 3],
              ],
              threshold: -0.0116681400686502,
              right_val: 0.4927498996257782,
              left_val: 0.625655472278595,
            },
            {
              features: [
                [5, 1, 4, 14, -1],
                [7, 1, 2, 14, 2],
              ],
              threshold: -0.0028718370012938976,
              right_val: 0.524580180644989,
              left_val: 0.3947784900665283,
            },
            {
              features: [
                [8, 16, 12, 3, -1],
                [8, 16, 6, 3, 2],
              ],
              threshold: 0.0170511696487665,
              right_val: 0.5794224143028259,
              left_val: 0.4752511084079742,
            },
            {
              features: [
                [1, 17, 18, 3, -1],
                [7, 17, 6, 3, 3],
              ],
              threshold: -0.0133520802482963,
              right_val: 0.4544535875320435,
              left_val: 0.6041104793548584,
            },
            {
              features: [
                [9, 14, 2, 6, -1],
                [9, 17, 2, 3, 2],
              ],
              threshold: -0.0003930180100724101,
              right_val: 0.5544905066490173,
              left_val: 0.4258275926113129,
            },
            {
              features: [
                [9, 12, 1, 8, -1],
                [9, 16, 1, 4, 2],
              ],
              threshold: 0.0030483349692076445,
              right_val: 0.3780272901058197,
              left_val: 0.5233420133590698,
            },
            {
              features: [
                [9, 14, 2, 3, -1],
                [9, 15, 2, 1, 3],
              ],
              threshold: -0.00435792887583375,
              right_val: 0.4838674068450928,
              left_val: 0.6371889114379883,
            },
            {
              features: [
                [9, 6, 2, 12, -1],
                [9, 10, 2, 4, 3],
              ],
              threshold: 0.0056661018170416355,
              right_val: 0.4163666069507599,
              left_val: 0.5374705791473389,
            },
            {
              features: [
                [12, 9, 3, 3, -1],
                [12, 10, 3, 1, 3],
              ],
              threshold: 6067733920644969e-20,
              right_val: 0.5311625003814697,
              left_val: 0.4638795852661133,
            },
            {
              features: [
                [0, 1, 4, 8, -1],
                [2, 1, 2, 8, 2],
              ],
              threshold: 0.0367381609976292,
              right_val: 0.6466524004936218,
              left_val: 0.4688656032085419,
            },
            {
              features: [
                [9, 1, 6, 2, -1],
                [12, 1, 3, 1, 2],
                [9, 2, 3, 1, 2],
              ],
              threshold: 0.008652813732624054,
              right_val: 0.2188657969236374,
              left_val: 0.5204318761825562,
            },
            {
              features: [
                [1, 3, 12, 14, -1],
                [1, 10, 12, 7, 2],
              ],
              threshold: -0.1537135988473892,
              right_val: 0.4958840012550354,
              left_val: 0.1630371958017349,
            },
            {
              features: [
                [8, 12, 4, 2, -1],
                [10, 12, 2, 1, 2],
                [8, 13, 2, 1, 2],
              ],
              threshold: -0.00041560421232134104,
              right_val: 0.4696458876132965,
              left_val: 0.577445924282074,
            },
            {
              features: [
                [1, 9, 10, 2, -1],
                [1, 9, 5, 1, 2],
                [6, 10, 5, 1, 2],
              ],
              threshold: -0.0012640169588848948,
              right_val: 0.5217198133468628,
              left_val: 0.3977175951004028,
            },
            {
              features: [
                [8, 15, 4, 3, -1],
                [8, 16, 4, 1, 3],
              ],
              threshold: -0.003547334112226963,
              right_val: 0.480831503868103,
              left_val: 0.6046528220176697,
            },
            {
              features: [
                [6, 8, 8, 3, -1],
                [6, 9, 8, 1, 3],
              ],
              threshold: 3001906952704303e-20,
              right_val: 0.5228201150894165,
              left_val: 0.3996723890304565,
            },
            {
              features: [
                [9, 15, 5, 3, -1],
                [9, 16, 5, 1, 3],
              ],
              threshold: 0.00131130195222795,
              right_val: 0.5765997767448425,
              left_val: 0.4712158143520355,
            },
            {
              features: [
                [8, 7, 4, 3, -1],
                [8, 8, 4, 1, 3],
              ],
              threshold: -0.0013374709524214268,
              right_val: 0.5253170132637024,
              left_val: 0.4109584987163544,
            },
            {
              features: [
                [7, 7, 6, 2, -1],
                [7, 8, 6, 1, 2],
              ],
              threshold: 0.0208767093718052,
              right_val: 0.1757981926202774,
              left_val: 0.5202993750572205,
            },
            {
              features: [
                [5, 7, 8, 2, -1],
                [5, 7, 4, 1, 2],
                [9, 8, 4, 1, 2],
              ],
              threshold: -0.007549794856458902,
              right_val: 0.4694975018501282,
              left_val: 0.6566609740257263,
            },
            {
              features: [
                [12, 9, 3, 3, -1],
                [12, 10, 3, 1, 3],
              ],
              threshold: 0.0241885501891375,
              right_val: 0.3370220959186554,
              left_val: 0.5128673911094666,
            },
            {
              features: [
                [4, 7, 4, 2, -1],
                [4, 8, 4, 1, 2],
              ],
              threshold: -0.002935882890596986,
              right_val: 0.4694541096687317,
              left_val: 0.658078670501709,
            },
            {
              features: [
                [14, 2, 6, 9, -1],
                [14, 5, 6, 3, 3],
              ],
              threshold: 0.0575579293072224,
              right_val: 0.2775259912014008,
              left_val: 0.5146445035934448,
            },
            {
              features: [
                [4, 9, 3, 3, -1],
                [5, 9, 1, 3, 3],
              ],
              threshold: -0.0011343370424583554,
              right_val: 0.5192667245864868,
              left_val: 0.3836601972579956,
            },
            {
              features: [
                [12, 9, 3, 3, -1],
                [12, 10, 3, 1, 3],
              ],
              threshold: 0.0168169997632504,
              right_val: 0.6177260875701904,
              left_val: 0.5085592865943909,
            },
            {
              features: [
                [0, 2, 6, 9, -1],
                [0, 5, 6, 3, 3],
              ],
              threshold: 0.005053517874330282,
              right_val: 0.3684791922569275,
              left_val: 0.5138763189315796,
            },
            {
              features: [
                [17, 3, 3, 6, -1],
                [18, 3, 1, 6, 3],
              ],
              threshold: -0.004587471019476652,
              right_val: 0.4835202097892761,
              left_val: 0.5989655256271362,
            },
            {
              features: [
                [0, 3, 3, 6, -1],
                [1, 3, 1, 6, 3],
              ],
              threshold: 0.001688246033154428,
              right_val: 0.5723056793212891,
              left_val: 0.4509486854076386,
            },
            {
              features: [
                [17, 14, 1, 2, -1],
                [17, 15, 1, 1, 2],
              ],
              threshold: -0.0016554000321775675,
              right_val: 0.5243319272994995,
              left_val: 0.3496770858764648,
            },
            {
              features: [
                [4, 9, 4, 3, -1],
                [6, 9, 2, 3, 2],
              ],
              threshold: -0.0193738006055355,
              right_val: 0.496871292591095,
              left_val: 0.1120536997914314,
            },
            {
              features: [
                [12, 9, 3, 3, -1],
                [12, 10, 3, 1, 3],
              ],
              threshold: 0.0103744501248002,
              right_val: 0.4395213127136231,
              left_val: 0.5148196816444397,
            },
            {
              features: [
                [5, 9, 3, 3, -1],
                [5, 10, 3, 1, 3],
              ],
              threshold: 0.00014973050565458834,
              right_val: 0.526988685131073,
              left_val: 0.4084999859333038,
            },
            {
              features: [
                [9, 5, 6, 8, -1],
                [12, 5, 3, 4, 2],
                [9, 9, 3, 4, 2],
              ],
              threshold: -0.042981930077076,
              right_val: 0.501850426197052,
              left_val: 0.6394104957580566,
            },
            {
              features: [
                [5, 5, 6, 8, -1],
                [5, 5, 3, 4, 2],
                [8, 9, 3, 4, 2],
              ],
              threshold: 0.008306593634188175,
              right_val: 0.6698353290557861,
              left_val: 0.470755398273468,
            },
            {
              features: [
                [16, 1, 4, 6, -1],
                [16, 4, 4, 3, 2],
              ],
              threshold: -0.0041285790503025055,
              right_val: 0.5323647260665894,
              left_val: 0.4541369080543518,
            },
            {
              features: [
                [1, 0, 6, 20, -1],
                [3, 0, 2, 20, 3],
              ],
              threshold: 0.0017399420030415058,
              right_val: 0.5439866185188293,
              left_val: 0.433396190404892,
            },
            {
              features: [
                [12, 11, 3, 2, -1],
                [13, 11, 1, 2, 3],
              ],
              threshold: 0.00011739750334527344,
              right_val: 0.5543426275253296,
              left_val: 0.4579687118530273,
            },
            {
              features: [
                [5, 11, 3, 2, -1],
                [6, 11, 1, 2, 3],
              ],
              threshold: 0.00018585780344437808,
              right_val: 0.5426754951477051,
              left_val: 0.4324643909931183,
            },
            {
              features: [
                [9, 4, 6, 1, -1],
                [11, 4, 2, 1, 3],
              ],
              threshold: 0.005558769218623638,
              right_val: 0.3550611138343811,
              left_val: 0.525722086429596,
            },
            {
              features: [
                [0, 0, 8, 3, -1],
                [4, 0, 4, 3, 2],
              ],
              threshold: -0.007985156029462814,
              right_val: 0.4630635976791382,
              left_val: 0.6043018102645874,
            },
            {
              features: [
                [15, 0, 2, 5, -1],
                [15, 0, 1, 5, 2],
              ],
              threshold: 0.0006059412262402475,
              right_val: 0.55331951379776,
              left_val: 0.4598254859447479,
            },
            {
              features: [
                [4, 1, 3, 2, -1],
                [5, 1, 1, 2, 3],
              ],
              threshold: -0.0002298304025316611,
              right_val: 0.5322461128234863,
              left_val: 0.4130752086639404,
            },
            {
              features: [
                [7, 0, 6, 15, -1],
                [9, 0, 2, 15, 3],
              ],
              threshold: 0.0004374021082185209,
              right_val: 0.5409289002418518,
              left_val: 0.4043039977550507,
            },
            {
              features: [
                [6, 11, 3, 1, -1],
                [7, 11, 1, 1, 3],
              ],
              threshold: 0.0002948202018160373,
              right_val: 0.5628852248191833,
              left_val: 0.4494963884353638,
            },
            {
              features: [
                [12, 0, 3, 4, -1],
                [13, 0, 1, 4, 3],
              ],
              threshold: 0.0103126596659422,
              right_val: 0.2704316973686218,
              left_val: 0.5177510976791382,
            },
            {
              features: [
                [5, 4, 6, 1, -1],
                [7, 4, 2, 1, 3],
              ],
              threshold: -0.007724110968410969,
              right_val: 0.4980553984642029,
              left_val: 0.1988019049167633,
            },
            {
              features: [
                [12, 7, 3, 2, -1],
                [12, 8, 3, 1, 2],
              ],
              threshold: -0.004679720848798752,
              right_val: 0.5018296241760254,
              left_val: 0.6644750237464905,
            },
            {
              features: [
                [0, 1, 4, 6, -1],
                [0, 4, 4, 3, 2],
              ],
              threshold: -0.005075545981526375,
              right_val: 0.5185269117355347,
              left_val: 0.3898304998874664,
            },
            {
              features: [
                [12, 7, 3, 2, -1],
                [12, 8, 3, 1, 2],
              ],
              threshold: 0.00224797404371202,
              right_val: 0.5660336017608643,
              left_val: 0.4801808893680573,
            },
            {
              features: [
                [2, 16, 3, 3, -1],
                [2, 17, 3, 1, 3],
              ],
              threshold: 0.0008332700817845762,
              right_val: 0.3957188129425049,
              left_val: 0.5210919976234436,
            },
            {
              features: [
                [13, 8, 6, 10, -1],
                [16, 8, 3, 5, 2],
                [13, 13, 3, 5, 2],
              ],
              threshold: -0.0412793308496475,
              right_val: 0.5007054209709167,
              left_val: 0.6154541969299316,
            },
            {
              features: [
                [0, 9, 5, 2, -1],
                [0, 10, 5, 1, 2],
              ],
              threshold: -0.0005093018990010023,
              right_val: 0.5228403806686401,
              left_val: 0.3975942134857178,
            },
            {
              features: [
                [12, 11, 2, 2, -1],
                [13, 11, 1, 1, 2],
                [12, 12, 1, 1, 2],
              ],
              threshold: 0.0012568780221045017,
              right_val: 0.5939183235168457,
              left_val: 0.4979138076305389,
            },
            {
              features: [
                [3, 15, 3, 3, -1],
                [3, 16, 3, 1, 3],
              ],
              threshold: 0.008004849776625633,
              right_val: 0.1633366048336029,
              left_val: 0.4984497129917145,
            },
            {
              features: [
                [12, 7, 3, 2, -1],
                [12, 8, 3, 1, 2],
              ],
              threshold: -0.0011879300000146031,
              right_val: 0.4942624866962433,
              left_val: 0.5904964804649353,
            },
            {
              features: [
                [5, 7, 3, 2, -1],
                [5, 8, 3, 1, 2],
              ],
              threshold: 0.0006194895249791443,
              right_val: 0.5328726172447205,
              left_val: 0.4199557900428772,
            },
            {
              features: [
                [9, 5, 9, 9, -1],
                [9, 8, 9, 3, 3],
              ],
              threshold: 0.006682985927909613,
              right_val: 0.490588903427124,
              left_val: 0.5418602824211121,
            },
            {
              features: [
                [5, 0, 3, 7, -1],
                [6, 0, 1, 7, 3],
              ],
              threshold: -0.0037062340416014194,
              right_val: 0.5138000249862671,
              left_val: 0.3725939095020294,
            },
            {
              features: [
                [5, 2, 12, 5, -1],
                [9, 2, 4, 5, 3],
              ],
              threshold: -0.0397394113242626,
              right_val: 0.5050346851348877,
              left_val: 0.6478961110115051,
            },
            {
              features: [
                [6, 11, 2, 2, -1],
                [6, 11, 1, 1, 2],
                [7, 12, 1, 1, 2],
              ],
              threshold: 0.0014085009461268783,
              right_val: 0.6377884149551392,
              left_val: 0.4682339131832123,
            },
            {
              features: [
                [15, 15, 3, 2, -1],
                [15, 16, 3, 1, 2],
              ],
              threshold: 0.0003932268882635981,
              right_val: 0.415048211812973,
              left_val: 0.5458530187606812,
            },
            {
              features: [
                [2, 15, 3, 2, -1],
                [2, 16, 3, 1, 2],
              ],
              threshold: -0.0018979819724336267,
              right_val: 0.5149704217910767,
              left_val: 0.3690159916877747,
            },
            {
              features: [
                [14, 12, 6, 8, -1],
                [17, 12, 3, 4, 2],
                [14, 16, 3, 4, 2],
              ],
              threshold: -0.0139704402536154,
              right_val: 0.4811357855796814,
              left_val: 0.6050562858581543,
            },
            {
              features: [
                [2, 8, 15, 6, -1],
                [7, 8, 5, 6, 3],
              ],
              threshold: -0.1010081991553307,
              right_val: 0.4992361962795258,
              left_val: 0.2017080038785934,
            },
            {
              features: [
                [2, 2, 18, 17, -1],
                [8, 2, 6, 17, 3],
              ],
              threshold: -0.0173469204455614,
              right_val: 0.4899486005306244,
              left_val: 0.5713148713111877,
            },
            {
              features: [
                [5, 1, 4, 1, -1],
                [7, 1, 2, 1, 2],
              ],
              threshold: 0.000156197595060803,
              right_val: 0.5392642021179199,
              left_val: 0.4215388894081116,
            },
            {
              features: [
                [5, 2, 12, 5, -1],
                [9, 2, 4, 5, 3],
              ],
              threshold: 0.1343892961740494,
              right_val: 0.3767612874507904,
              left_val: 0.5136151909828186,
            },
            {
              features: [
                [3, 2, 12, 5, -1],
                [7, 2, 4, 5, 3],
              ],
              threshold: -0.0245822407305241,
              right_val: 0.4747906923294067,
              left_val: 0.7027357816696167,
            },
            {
              features: [
                [4, 9, 12, 4, -1],
                [10, 9, 6, 2, 2],
                [4, 11, 6, 2, 2],
              ],
              threshold: -0.0038553720805794,
              right_val: 0.5427716970443726,
              left_val: 0.4317409098148346,
            },
            {
              features: [
                [5, 15, 6, 2, -1],
                [5, 15, 3, 1, 2],
                [8, 16, 3, 1, 2],
              ],
              threshold: -0.002316524973139167,
              right_val: 0.4618647992610931,
              left_val: 0.594269871711731,
            },
            {
              features: [
                [10, 14, 2, 3, -1],
                [10, 15, 2, 1, 3],
              ],
              threshold: -0.004851812031120062,
              right_val: 0.4884895086288452,
              left_val: 0.6191568970680237,
            },
            {
              features: [
                [0, 13, 20, 2, -1],
                [0, 13, 10, 1, 2],
                [10, 14, 10, 1, 2],
              ],
              threshold: 0.002469993894919753,
              right_val: 0.4017199873924255,
              left_val: 0.5256664752960205,
            },
            {
              features: [
                [4, 9, 12, 8, -1],
                [10, 9, 6, 4, 2],
                [4, 13, 6, 4, 2],
              ],
              threshold: 0.0454969592392445,
              right_val: 0.2685773968696594,
              left_val: 0.5237867832183838,
            },
            {
              features: [
                [8, 13, 3, 6, -1],
                [8, 16, 3, 3, 2],
              ],
              threshold: -0.0203195996582508,
              right_val: 0.4979738891124725,
              left_val: 0.213044598698616,
            },
            {
              features: [
                [10, 12, 2, 2, -1],
                [10, 13, 2, 1, 2],
              ],
              threshold: 0.0002699499891605228,
              right_val: 0.5543122291564941,
              left_val: 0.481404185295105,
            },
            {
              features: [
                [9, 12, 2, 2, -1],
                [9, 12, 1, 1, 2],
                [10, 13, 1, 1, 2],
              ],
              threshold: -0.0018232699949294329,
              right_val: 0.4709989130496979,
              left_val: 0.6482579708099365,
            },
            {
              features: [
                [4, 11, 14, 4, -1],
                [11, 11, 7, 2, 2],
                [4, 13, 7, 2, 2],
              ],
              threshold: -0.006301579065620899,
              right_val: 0.5306236147880554,
              left_val: 0.4581927955150604,
            },
            {
              features: [
                [8, 5, 4, 2, -1],
                [8, 6, 4, 1, 2],
              ],
              threshold: -0.0002413949987385422,
              right_val: 0.4051763117313385,
              left_val: 0.5232086777687073,
            },
            {
              features: [
                [10, 10, 6, 3, -1],
                [12, 10, 2, 3, 3],
              ],
              threshold: -0.001033036969602108,
              right_val: 0.4789193868637085,
              left_val: 0.5556201934814453,
            },
            {
              features: [
                [2, 14, 1, 2, -1],
                [2, 15, 1, 1, 2],
              ],
              threshold: 0.0001804116036510095,
              right_val: 0.4011810123920441,
              left_val: 0.5229442715644836,
            },
            {
              features: [
                [13, 8, 6, 12, -1],
                [16, 8, 3, 6, 2],
                [13, 14, 3, 6, 2],
              ],
              threshold: -0.0614078603684902,
              right_val: 0.5010703206062317,
              left_val: 0.62986820936203,
            },
            {
              features: [
                [1, 8, 6, 12, -1],
                [1, 8, 3, 6, 2],
                [4, 14, 3, 6, 2],
              ],
              threshold: -0.0695439130067825,
              right_val: 0.4773184061050415,
              left_val: 0.7228280901908875,
            },
            {
              features: [
                [10, 0, 6, 10, -1],
                [12, 0, 2, 10, 3],
              ],
              threshold: -0.0705426633358002,
              right_val: 0.5182529091835022,
              left_val: 0.2269513010978699,
            },
            {
              features: [
                [5, 11, 8, 4, -1],
                [5, 11, 4, 2, 2],
                [9, 13, 4, 2, 2],
              ],
              threshold: 0.0024423799477517605,
              right_val: 0.4098151028156281,
              left_val: 0.5237097144126892,
            },
            {
              features: [
                [10, 16, 8, 4, -1],
                [14, 16, 4, 2, 2],
                [10, 18, 4, 2, 2],
              ],
              threshold: 0.0015494349645450711,
              right_val: 0.5468043088912964,
              left_val: 0.4773750901222229,
            },
            {
              features: [
                [7, 7, 6, 6, -1],
                [9, 7, 2, 6, 3],
              ],
              threshold: -0.0239142198115587,
              right_val: 0.4783824980258942,
              left_val: 0.7146975994110107,
            },
            {
              features: [
                [10, 2, 4, 10, -1],
                [10, 2, 2, 10, 2],
              ],
              threshold: -0.0124536901712418,
              right_val: 0.5241122841835022,
              left_val: 0.2635296881198883,
            },
            {
              features: [
                [6, 1, 4, 9, -1],
                [8, 1, 2, 9, 2],
              ],
              threshold: -0.00020760179904755205,
              right_val: 0.5113608837127686,
              left_val: 0.3623757064342499,
            },
            {
              features: [
                [12, 19, 2, 1, -1],
                [12, 19, 1, 1, 2],
              ],
              threshold: 29781080229440704e-21,
              right_val: 0.5432801842689514,
              left_val: 0.4705932140350342,
            },
          ],
          threshold: 90.25334930419922,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [1, 2, 4, 9, -1],
                [3, 2, 2, 9, 2],
              ],
              threshold: 0.0117727499455214,
              right_val: 0.6421167254447937,
              left_val: 0.3860518932342529,
            },
            {
              features: [
                [7, 5, 6, 4, -1],
                [9, 5, 2, 4, 3],
              ],
              threshold: 0.0270375702530146,
              right_val: 0.675403892993927,
              left_val: 0.4385654926300049,
            },
            {
              features: [
                [9, 4, 2, 4, -1],
                [9, 6, 2, 2, 2],
              ],
              threshold: -3641950024757534e-20,
              right_val: 0.34233158826828,
              left_val: 0.5487101078033447,
            },
            {
              features: [
                [14, 5, 2, 8, -1],
                [14, 9, 2, 4, 2],
              ],
              threshold: 0.001999540952965617,
              right_val: 0.5400317907333374,
              left_val: 0.3230532109737396,
            },
            {
              features: [
                [7, 6, 5, 12, -1],
                [7, 12, 5, 6, 2],
              ],
              threshold: 0.0045278300531208515,
              right_val: 0.2935043871402741,
              left_val: 0.5091639757156372,
            },
            {
              features: [
                [14, 6, 2, 6, -1],
                [14, 9, 2, 3, 2],
              ],
              threshold: 0.00047890920541249216,
              right_val: 0.5344064235687256,
              left_val: 0.4178153872489929,
            },
            {
              features: [
                [4, 6, 2, 6, -1],
                [4, 9, 2, 3, 2],
              ],
              threshold: 0.0011720920447260141,
              right_val: 0.5132070779800415,
              left_val: 0.2899182140827179,
            },
            {
              features: [
                [8, 15, 10, 4, -1],
                [13, 15, 5, 2, 2],
                [8, 17, 5, 2, 2],
              ],
              threshold: 0.0009530570241622627,
              right_val: 0.5560845136642456,
              left_val: 0.428012490272522,
            },
            {
              features: [
                [6, 18, 2, 2, -1],
                [7, 18, 1, 2, 2],
              ],
              threshold: 15099150004971307e-21,
              right_val: 0.5404760241508484,
              left_val: 0.4044871926307678,
            },
            {
              features: [
                [11, 3, 6, 2, -1],
                [11, 4, 6, 1, 2],
              ],
              threshold: -0.0006081790197640657,
              right_val: 0.5503466129302979,
              left_val: 0.4271768927574158,
            },
            {
              features: [
                [2, 0, 16, 6, -1],
                [2, 2, 16, 2, 3],
              ],
              threshold: 0.003322452073916793,
              right_val: 0.5369734764099121,
              left_val: 0.3962723910808563,
            },
            {
              features: [
                [11, 3, 6, 2, -1],
                [11, 4, 6, 1, 2],
              ],
              threshold: -0.0011037490330636501,
              right_val: 0.5237749814987183,
              left_val: 0.4727177917957306,
            },
            {
              features: [
                [4, 11, 10, 3, -1],
                [4, 12, 10, 1, 3],
              ],
              threshold: -0.0014350269921123981,
              right_val: 0.4223509132862091,
              left_val: 0.5603008270263672,
            },
            {
              features: [
                [11, 3, 6, 2, -1],
                [11, 4, 6, 1, 2],
              ],
              threshold: 0.0020767399109899998,
              right_val: 0.4732725918292999,
              left_val: 0.5225917100906372,
            },
            {
              features: [
                [3, 3, 6, 2, -1],
                [3, 4, 6, 1, 2],
              ],
              threshold: -0.00016412809782195836,
              right_val: 0.5432739853858948,
              left_val: 0.3999075889587402,
            },
            {
              features: [
                [16, 0, 4, 7, -1],
                [16, 0, 2, 7, 2],
              ],
              threshold: 0.008830243721604347,
              right_val: 0.6027327179908752,
              left_val: 0.4678385853767395,
            },
            {
              features: [
                [0, 14, 9, 6, -1],
                [0, 16, 9, 2, 3],
              ],
              threshold: -0.0105520701035857,
              right_val: 0.5213974714279175,
              left_val: 0.3493967056274414,
            },
            {
              features: [
                [9, 16, 3, 3, -1],
                [9, 17, 3, 1, 3],
              ],
              threshold: -0.00227316003292799,
              right_val: 0.4749062955379486,
              left_val: 0.6185818910598755,
            },
            {
              features: [
                [4, 6, 6, 2, -1],
                [6, 6, 2, 2, 3],
              ],
              threshold: -0.0008478633244521916,
              right_val: 0.3843482136726379,
              left_val: 0.5285341143608093,
            },
            {
              features: [
                [15, 11, 1, 3, -1],
                [15, 12, 1, 1, 3],
              ],
              threshold: 0.0012081359745934606,
              right_val: 0.3447335958480835,
              left_val: 0.536064088344574,
            },
            {
              features: [
                [5, 5, 2, 3, -1],
                [5, 6, 2, 1, 3],
              ],
              threshold: 0.002651273040100932,
              right_val: 0.6193962097167969,
              left_val: 0.4558292031288147,
            },
            {
              features: [
                [10, 9, 2, 2, -1],
                [10, 10, 2, 1, 2],
              ],
              threshold: -0.0011012479662895203,
              right_val: 0.5327628254890442,
              left_val: 0.368023008108139,
            },
            {
              features: [
                [3, 1, 4, 3, -1],
                [5, 1, 2, 3, 2],
              ],
              threshold: 0.0004956151824444532,
              right_val: 0.5274940729141235,
              left_val: 0.396059513092041,
            },
            {
              features: [
                [16, 0, 4, 7, -1],
                [16, 0, 2, 7, 2],
              ],
              threshold: -0.0439017713069916,
              right_val: 0.4992839097976685,
              left_val: 0.7020444869995117,
            },
            {
              features: [
                [0, 0, 20, 1, -1],
                [10, 0, 10, 1, 2],
              ],
              threshold: 0.0346903502941132,
              right_val: 0.276660293340683,
              left_val: 0.5049164295196533,
            },
            {
              features: [
                [15, 11, 1, 3, -1],
                [15, 12, 1, 1, 3],
              ],
              threshold: -0.002744219033047557,
              right_val: 0.5274971127510071,
              left_val: 0.2672632932662964,
            },
            {
              features: [
                [0, 4, 3, 4, -1],
                [1, 4, 1, 4, 3],
              ],
              threshold: 0.003331658896058798,
              right_val: 0.6001101732254028,
              left_val: 0.4579482972621918,
            },
            {
              features: [
                [16, 3, 3, 6, -1],
                [16, 5, 3, 2, 3],
              ],
              threshold: -0.0200445707887411,
              right_val: 0.523571789264679,
              left_val: 0.3171594142913818,
            },
            {
              features: [
                [1, 3, 3, 6, -1],
                [1, 5, 3, 2, 3],
              ],
              threshold: 0.0013492030557245016,
              right_val: 0.4034324884414673,
              left_val: 0.5265362858772278,
            },
            {
              features: [
                [6, 2, 12, 6, -1],
                [12, 2, 6, 3, 2],
                [6, 5, 6, 3, 2],
              ],
              threshold: 0.0029702018946409225,
              right_val: 0.4571984112262726,
              left_val: 0.5332456827163696,
            },
            {
              features: [
                [8, 10, 4, 3, -1],
                [8, 11, 4, 1, 3],
              ],
              threshold: 0.006303998176008463,
              right_val: 0.6034635901451111,
              left_val: 0.4593310952186585,
            },
            {
              features: [
                [4, 2, 14, 6, -1],
                [11, 2, 7, 3, 2],
                [4, 5, 7, 3, 2],
              ],
              threshold: -0.0129365902394056,
              right_val: 0.5372971296310425,
              left_val: 0.4437963962554932,
            },
            {
              features: [
                [9, 11, 2, 3, -1],
                [9, 12, 2, 1, 3],
              ],
              threshold: 0.004014872945845127,
              right_val: 0.6437833905220032,
              left_val: 0.4680323898792267,
            },
            {
              features: [
                [15, 13, 2, 3, -1],
                [15, 14, 2, 1, 3],
              ],
              threshold: -0.002640167949721217,
              right_val: 0.5314332842826843,
              left_val: 0.3709631860256195,
            },
            {
              features: [
                [8, 12, 4, 3, -1],
                [8, 13, 4, 1, 3],
              ],
              threshold: 0.0139184398576617,
              right_val: 0.713080883026123,
              left_val: 0.4723555147647858,
            },
            {
              features: [
                [15, 11, 1, 3, -1],
                [15, 12, 1, 1, 3],
              ],
              threshold: -0.00045087869511917233,
              right_val: 0.5370404124259949,
              left_val: 0.4492394030094147,
            },
            {
              features: [
                [7, 13, 5, 2, -1],
                [7, 14, 5, 1, 2],
              ],
              threshold: 0.00025384349282830954,
              right_val: 0.5514402985572815,
              left_val: 0.4406864047050476,
            },
            {
              features: [
                [7, 12, 6, 3, -1],
                [7, 13, 6, 1, 3],
              ],
              threshold: 0.002271000063046813,
              right_val: 0.5967984199523926,
              left_val: 0.4682416915893555,
            },
            {
              features: [
                [5, 11, 4, 4, -1],
                [5, 13, 4, 2, 2],
              ],
              threshold: 0.002412077970802784,
              right_val: 0.3018598854541779,
              left_val: 0.5079392194747925,
            },
            {
              features: [
                [11, 4, 3, 3, -1],
                [12, 4, 1, 3, 3],
              ],
              threshold: -3602567085181363e-20,
              right_val: 0.4471096992492676,
              left_val: 0.560103714466095,
            },
            {
              features: [
                [6, 4, 3, 3, -1],
                [7, 4, 1, 3, 3],
              ],
              threshold: -0.0074905529618263245,
              right_val: 0.4989944100379944,
              left_val: 0.2207535058259964,
            },
            {
              features: [
                [16, 5, 3, 6, -1],
                [17, 5, 1, 6, 3],
              ],
              threshold: -0.017513120546937,
              right_val: 0.5017648935317993,
              left_val: 0.6531215906143188,
            },
            {
              features: [
                [3, 6, 12, 7, -1],
                [7, 6, 4, 7, 3],
              ],
              threshold: 0.1428163051605225,
              right_val: 0.1482062041759491,
              left_val: 0.4967963099479675,
            },
            {
              features: [
                [16, 5, 3, 6, -1],
                [17, 5, 1, 6, 3],
              ],
              threshold: 0.005534526892006397,
              right_val: 0.5954223871231079,
              left_val: 0.4898946881294251,
            },
            {
              features: [
                [3, 13, 2, 3, -1],
                [3, 14, 2, 1, 3],
              ],
              threshold: -0.0009632359142415226,
              right_val: 0.519607424736023,
              left_val: 0.3927116990089417,
            },
            {
              features: [
                [16, 5, 3, 6, -1],
                [17, 5, 1, 6, 3],
              ],
              threshold: -0.0020370010752230883,
              right_val: 0.4884858131408691,
              left_val: 0.5613325238227844,
            },
            {
              features: [
                [1, 5, 3, 6, -1],
                [2, 5, 1, 6, 3],
              ],
              threshold: 0.0016614829655736685,
              right_val: 0.5578880906105042,
              left_val: 0.4472880065441132,
            },
            {
              features: [
                [1, 9, 18, 1, -1],
                [7, 9, 6, 1, 3],
              ],
              threshold: -0.0031188090797513723,
              right_val: 0.5397477746009827,
              left_val: 0.3840532898902893,
            },
            {
              features: [
                [0, 9, 8, 7, -1],
                [4, 9, 4, 7, 2],
              ],
              threshold: -0.006400061771273613,
              right_val: 0.4533218145370483,
              left_val: 0.5843983888626099,
            },
            {
              features: [
                [12, 11, 8, 2, -1],
                [12, 12, 8, 1, 2],
              ],
              threshold: 0.0003131960111204535,
              right_val: 0.4234727919101715,
              left_val: 0.5439221858978271,
            },
            {
              features: [
                [0, 11, 8, 2, -1],
                [0, 12, 8, 1, 2],
              ],
              threshold: -0.0182220991700888,
              right_val: 0.4958404898643494,
              left_val: 0.1288464963436127,
            },
            {
              features: [
                [9, 13, 2, 3, -1],
                [9, 14, 2, 1, 3],
              ],
              threshold: 0.008796924725174904,
              right_val: 0.7153480052947998,
              left_val: 0.49512979388237,
            },
            {
              features: [
                [4, 10, 12, 4, -1],
                [4, 10, 6, 2, 2],
                [10, 12, 6, 2, 2],
              ],
              threshold: -0.004239507019519806,
              right_val: 0.5194936990737915,
              left_val: 0.3946599960327148,
            },
            {
              features: [
                [9, 3, 3, 7, -1],
                [10, 3, 1, 7, 3],
              ],
              threshold: 0.009708627127110958,
              right_val: 0.6064900159835815,
              left_val: 0.4897503852844238,
            },
            {
              features: [
                [7, 2, 3, 5, -1],
                [8, 2, 1, 5, 3],
              ],
              threshold: -0.003993417136371136,
              right_val: 0.5060828924179077,
              left_val: 0.3245440125465393,
            },
            {
              features: [
                [9, 12, 4, 6, -1],
                [11, 12, 2, 3, 2],
                [9, 15, 2, 3, 2],
              ],
              threshold: -0.0167850591242313,
              right_val: 0.5203778743743896,
              left_val: 0.1581953018903732,
            },
            {
              features: [
                [8, 7, 3, 6, -1],
                [9, 7, 1, 6, 3],
              ],
              threshold: 0.018272090703249,
              right_val: 0.6626979112625122,
              left_val: 0.4680935144424439,
            },
            {
              features: [
                [15, 4, 4, 2, -1],
                [15, 5, 4, 1, 2],
              ],
              threshold: 0.00568728381767869,
              right_val: 0.3512184917926788,
              left_val: 0.5211697816848755,
            },
            {
              features: [
                [8, 7, 3, 3, -1],
                [9, 7, 1, 3, 3],
              ],
              threshold: -0.0010739039862528443,
              right_val: 0.4529845118522644,
              left_val: 0.5768386125564575,
            },
            {
              features: [
                [14, 2, 6, 4, -1],
                [14, 4, 6, 2, 2],
              ],
              threshold: -0.00370938703417778,
              right_val: 0.5313581228256226,
              left_val: 0.4507763087749481,
            },
            {
              features: [
                [7, 16, 6, 1, -1],
                [9, 16, 2, 1, 3],
              ],
              threshold: -0.0002111070934915915,
              right_val: 0.4333376884460449,
              left_val: 0.5460820198059082,
            },
            {
              features: [
                [15, 13, 2, 3, -1],
                [15, 14, 2, 1, 3],
              ],
              threshold: 0.0010670139454305172,
              right_val: 0.4078390896320343,
              left_val: 0.5371856093406677,
            },
            {
              features: [
                [8, 7, 3, 10, -1],
                [9, 7, 1, 10, 3],
              ],
              threshold: 0.0035943021066486835,
              right_val: 0.5643836259841919,
              left_val: 0.4471287131309509,
            },
            {
              features: [
                [11, 10, 2, 6, -1],
                [11, 12, 2, 2, 3],
              ],
              threshold: -0.005177603103220463,
              right_val: 0.5280330181121826,
              left_val: 0.4499393105506897,
            },
            {
              features: [
                [6, 10, 4, 1, -1],
                [8, 10, 2, 1, 2],
              ],
              threshold: -0.00025414369883947074,
              right_val: 0.4407708048820496,
              left_val: 0.5516173243522644,
            },
            {
              features: [
                [10, 9, 2, 2, -1],
                [10, 10, 2, 1, 2],
              ],
              threshold: 0.006352256052196026,
              right_val: 0.2465227991342545,
              left_val: 0.5194190144538879,
            },
            {
              features: [
                [8, 9, 2, 2, -1],
                [8, 10, 2, 1, 2],
              ],
              threshold: -0.00044205080484971404,
              right_val: 0.5139682292938232,
              left_val: 0.3830705881118774,
            },
            {
              features: [
                [12, 7, 2, 2, -1],
                [13, 7, 1, 1, 2],
                [12, 8, 1, 1, 2],
              ],
              threshold: 0.0007448872784152627,
              right_val: 0.5974786877632141,
              left_val: 0.4891090989112854,
            },
            {
              features: [
                [5, 7, 2, 2, -1],
                [5, 7, 1, 1, 2],
                [6, 8, 1, 1, 2],
              ],
              threshold: -0.0035116379149258137,
              right_val: 0.4768764972686768,
              left_val: 0.7413681745529175,
            },
            {
              features: [
                [13, 0, 3, 14, -1],
                [14, 0, 1, 14, 3],
              ],
              threshold: -0.0125409103929996,
              right_val: 0.5252826809883118,
              left_val: 0.3648819029331207,
            },
            {
              features: [
                [4, 0, 3, 14, -1],
                [5, 0, 1, 14, 3],
              ],
              threshold: 0.009493185207247734,
              right_val: 0.362958699464798,
              left_val: 0.5100492835044861,
            },
            {
              features: [
                [13, 4, 3, 14, -1],
                [14, 4, 1, 14, 3],
              ],
              threshold: 0.0129611501470208,
              right_val: 0.4333561062812805,
              left_val: 0.5232442021369934,
            },
            {
              features: [
                [9, 14, 2, 3, -1],
                [9, 15, 2, 1, 3],
              ],
              threshold: 0.004720944911241531,
              right_val: 0.6331052780151367,
              left_val: 0.4648149013519287,
            },
            {
              features: [
                [8, 14, 4, 3, -1],
                [8, 15, 4, 1, 3],
              ],
              threshold: -0.0023119079414755106,
              right_val: 0.4531058073043823,
              left_val: 0.5930309891700745,
            },
            {
              features: [
                [4, 2, 3, 16, -1],
                [5, 2, 1, 16, 3],
              ],
              threshold: -0.002826229901984334,
              right_val: 0.5257101058959961,
              left_val: 0.3870477974414825,
            },
            {
              features: [
                [7, 2, 8, 10, -1],
                [7, 7, 8, 5, 2],
              ],
              threshold: -0.0014311339473351836,
              right_val: 0.4561854898929596,
              left_val: 0.552250325679779,
            },
            {
              features: [
                [6, 14, 7, 3, -1],
                [6, 15, 7, 1, 3],
              ],
              threshold: 0.0019378310535103083,
              right_val: 0.5736966729164124,
              left_val: 0.4546220898628235,
            },
            {
              features: [
                [9, 2, 10, 12, -1],
                [14, 2, 5, 6, 2],
                [9, 8, 5, 6, 2],
              ],
              threshold: 0.00026343559147790074,
              right_val: 0.4571875035762787,
              left_val: 0.5345739126205444,
            },
            {
              features: [
                [6, 7, 8, 2, -1],
                [6, 8, 8, 1, 2],
              ],
              threshold: 0.0007825752254575491,
              right_val: 0.5220187902450562,
              left_val: 0.3967815935611725,
            },
            {
              features: [
                [8, 13, 4, 6, -1],
                [8, 16, 4, 3, 2],
              ],
              threshold: -0.0195504408329725,
              right_val: 0.5243508219718933,
              left_val: 0.282964289188385,
            },
            {
              features: [
                [6, 6, 1, 3, -1],
                [6, 7, 1, 1, 3],
              ],
              threshold: 0.00043914958951063454,
              right_val: 0.589909017086029,
              left_val: 0.4590066969394684,
            },
            {
              features: [
                [16, 2, 4, 6, -1],
                [16, 4, 4, 2, 3],
              ],
              threshold: 0.0214520003646612,
              right_val: 0.2855378985404968,
              left_val: 0.523141086101532,
            },
            {
              features: [
                [6, 6, 4, 2, -1],
                [6, 6, 2, 1, 2],
                [8, 7, 2, 1, 2],
              ],
              threshold: 0.0005897358059883118,
              right_val: 0.550642192363739,
              left_val: 0.4397256970405579,
            },
            {
              features: [
                [16, 2, 4, 6, -1],
                [16, 4, 4, 2, 3],
              ],
              threshold: -0.0261576101183891,
              right_val: 0.5189175009727478,
              left_val: 0.3135079145431519,
            },
            {
              features: [
                [0, 2, 4, 6, -1],
                [0, 4, 4, 2, 3],
              ],
              threshold: -0.0139598604291677,
              right_val: 0.5040717720985413,
              left_val: 0.3213272988796234,
            },
            {
              features: [
                [9, 6, 2, 6, -1],
                [9, 6, 1, 6, 2],
              ],
              threshold: -0.006369901821017265,
              right_val: 0.4849506914615631,
              left_val: 0.6387544870376587,
            },
            {
              features: [
                [3, 4, 6, 10, -1],
                [3, 9, 6, 5, 2],
              ],
              threshold: -0.008561382070183754,
              right_val: 0.5032019019126892,
              left_val: 0.2759132087230682,
            },
            {
              features: [
                [9, 5, 2, 6, -1],
                [9, 5, 1, 6, 2],
              ],
              threshold: 0.000966229010373354,
              right_val: 0.5834879279136658,
              left_val: 0.4685640931129456,
            },
            {
              features: [
                [3, 13, 2, 3, -1],
                [3, 14, 2, 1, 3],
              ],
              threshold: 0.0007655026856809855,
              right_val: 0.389642208814621,
              left_val: 0.5175207257270813,
            },
            {
              features: [
                [13, 13, 3, 2, -1],
                [13, 14, 3, 1, 2],
              ],
              threshold: -0.008183334022760391,
              right_val: 0.5208122134208679,
              left_val: 0.2069136947393417,
            },
            {
              features: [
                [2, 16, 10, 4, -1],
                [2, 16, 5, 2, 2],
                [7, 18, 5, 2, 2],
              ],
              threshold: -0.009397693909704685,
              right_val: 0.4641222953796387,
              left_val: 0.6134091019630432,
            },
            {
              features: [
                [5, 6, 10, 6, -1],
                [10, 6, 5, 3, 2],
                [5, 9, 5, 3, 2],
              ],
              threshold: 0.004802898038178682,
              right_val: 0.439521998167038,
              left_val: 0.5454108119010925,
            },
            {
              features: [
                [7, 14, 1, 3, -1],
                [7, 15, 1, 1, 3],
              ],
              threshold: -0.003568056970834732,
              right_val: 0.4681093990802765,
              left_val: 0.6344485282897949,
            },
            {
              features: [
                [14, 16, 6, 3, -1],
                [14, 17, 6, 1, 3],
              ],
              threshold: 0.0040733120404183865,
              right_val: 0.4015620052814484,
              left_val: 0.5292683243751526,
            },
            {
              features: [
                [5, 4, 3, 3, -1],
                [5, 5, 3, 1, 3],
              ],
              threshold: 0.0012568129459396005,
              right_val: 0.5452824831008911,
              left_val: 0.4392988085746765,
            },
            {
              features: [
                [7, 4, 10, 3, -1],
                [7, 5, 10, 1, 3],
              ],
              threshold: -0.0029065010603517294,
              right_val: 0.4863379895687103,
              left_val: 0.5898832082748413,
            },
            {
              features: [
                [0, 4, 5, 4, -1],
                [0, 6, 5, 2, 2],
              ],
              threshold: -0.00244093406945467,
              right_val: 0.5247421860694885,
              left_val: 0.4069364964962006,
            },
            {
              features: [
                [13, 11, 3, 9, -1],
                [13, 14, 3, 3, 3],
              ],
              threshold: 0.0248307008296251,
              right_val: 0.3682524859905243,
              left_val: 0.5182725787162781,
            },
            {
              features: [
                [4, 11, 3, 9, -1],
                [4, 14, 3, 3, 3],
              ],
              threshold: -0.0488540083169937,
              right_val: 0.496128112077713,
              left_val: 0.1307577937841415,
            },
            {
              features: [
                [9, 7, 2, 1, -1],
                [9, 7, 1, 1, 2],
              ],
              threshold: -0.001611037994734943,
              right_val: 0.4872662127017975,
              left_val: 0.6421005725860596,
            },
            {
              features: [
                [5, 0, 6, 17, -1],
                [7, 0, 2, 17, 3],
              ],
              threshold: -0.0970094799995422,
              right_val: 0.495098888874054,
              left_val: 0.0477693490684032,
            },
            {
              features: [
                [10, 3, 6, 3, -1],
                [10, 3, 3, 3, 2],
              ],
              threshold: 0.0011209240183234215,
              right_val: 0.5354745984077454,
              left_val: 0.4616267085075378,
            },
            {
              features: [
                [2, 2, 15, 4, -1],
                [7, 2, 5, 4, 3],
              ],
              threshold: -0.001306409016251564,
              right_val: 0.4638805985450745,
              left_val: 0.626185417175293,
            },
            {
              features: [
                [8, 2, 8, 2, -1],
                [12, 2, 4, 1, 2],
                [8, 3, 4, 1, 2],
              ],
              threshold: 0.00045771620352752507,
              right_val: 0.4646640121936798,
              left_val: 0.5384417772293091,
            },
            {
              features: [
                [8, 1, 3, 6, -1],
                [8, 3, 3, 2, 3],
              ],
              threshold: -0.0006314995116554201,
              right_val: 0.51302570104599,
              left_val: 0.3804047107696533,
            },
            {
              features: [
                [9, 17, 2, 2, -1],
                [9, 18, 2, 1, 2],
              ],
              threshold: 0.0001450597046641633,
              right_val: 0.5664461851119995,
              left_val: 0.4554310142993927,
            },
            {
              features: [
                [0, 0, 2, 14, -1],
                [1, 0, 1, 14, 2],
              ],
              threshold: -0.0164745505899191,
              right_val: 0.4715859889984131,
              left_val: 0.6596958041191101,
            },
            {
              features: [
                [12, 0, 7, 3, -1],
                [12, 1, 7, 1, 3],
              ],
              threshold: 0.0133695797994733,
              right_val: 0.3035964965820313,
              left_val: 0.519546627998352,
            },
            {
              features: [
                [1, 14, 1, 2, -1],
                [1, 15, 1, 1, 2],
              ],
              threshold: 0.00010271780047332868,
              right_val: 0.4107066094875336,
              left_val: 0.522917628288269,
            },
            {
              features: [
                [14, 12, 2, 8, -1],
                [15, 12, 1, 4, 2],
                [14, 16, 1, 4, 2],
              ],
              threshold: -0.0055311559699475765,
              right_val: 0.4960907101631165,
              left_val: 0.6352887749671936,
            },
            {
              features: [
                [1, 0, 7, 3, -1],
                [1, 1, 7, 1, 3],
              ],
              threshold: -0.0026187049224972725,
              right_val: 0.5140984058380127,
              left_val: 0.3824546039104462,
            },
            {
              features: [
                [14, 12, 2, 8, -1],
                [15, 12, 1, 4, 2],
                [14, 16, 1, 4, 2],
              ],
              threshold: 0.005083426833152771,
              right_val: 0.6220818758010864,
              left_val: 0.4950439929962158,
            },
            {
              features: [
                [6, 0, 8, 12, -1],
                [6, 0, 4, 6, 2],
                [10, 6, 4, 6, 2],
              ],
              threshold: 0.0798181593418121,
              right_val: 0.1322475969791412,
              left_val: 0.4952335953712463,
            },
            {
              features: [
                [6, 1, 8, 9, -1],
                [6, 4, 8, 3, 3],
              ],
              threshold: -0.0992265865206718,
              right_val: 0.5008416771888733,
              left_val: 0.7542728781700134,
            },
            {
              features: [
                [5, 2, 2, 2, -1],
                [5, 3, 2, 1, 2],
              ],
              threshold: -0.0006517401780001819,
              right_val: 0.5130121111869812,
              left_val: 0.3699302971363068,
            },
            {
              features: [
                [13, 14, 6, 6, -1],
                [16, 14, 3, 3, 2],
                [13, 17, 3, 3, 2],
              ],
              threshold: -0.018996849656105,
              right_val: 0.4921202957630158,
              left_val: 0.6689178943634033,
            },
            {
              features: [
                [0, 17, 20, 2, -1],
                [0, 17, 10, 1, 2],
                [10, 18, 10, 1, 2],
              ],
              threshold: 0.0173468999564648,
              right_val: 0.1859198063611984,
              left_val: 0.4983300864696503,
            },
            {
              features: [
                [10, 3, 2, 6, -1],
                [11, 3, 1, 3, 2],
                [10, 6, 1, 3, 2],
              ],
              threshold: 0.0005508210160769522,
              right_val: 0.5522121787071228,
              left_val: 0.4574424028396606,
            },
            {
              features: [
                [5, 12, 6, 2, -1],
                [8, 12, 3, 2, 2],
              ],
              threshold: 0.002005605027079582,
              right_val: 0.3856469988822937,
              left_val: 0.5131744742393494,
            },
            {
              features: [
                [10, 7, 6, 13, -1],
                [10, 7, 3, 13, 2],
              ],
              threshold: -0.007768819108605385,
              right_val: 0.5434309244155884,
              left_val: 0.4361700117588043,
            },
            {
              features: [
                [5, 15, 10, 5, -1],
                [10, 15, 5, 5, 2],
              ],
              threshold: 0.0508782789111137,
              right_val: 0.6840639710426331,
              left_val: 0.4682720899581909,
            },
            {
              features: [
                [10, 4, 4, 10, -1],
                [10, 4, 2, 10, 2],
              ],
              threshold: -0.0022901780903339386,
              right_val: 0.5306099057197571,
              left_val: 0.4329245090484619,
            },
            {
              features: [
                [5, 7, 2, 1, -1],
                [6, 7, 1, 1, 2],
              ],
              threshold: -0.00015715380141045898,
              right_val: 0.4378164112567902,
              left_val: 0.5370057225227356,
            },
            {
              features: [
                [10, 3, 6, 7, -1],
                [10, 3, 3, 7, 2],
              ],
              threshold: 0.1051924005150795,
              right_val: 0.0673614665865898,
              left_val: 0.5137274265289307,
            },
            {
              features: [
                [4, 3, 6, 7, -1],
                [7, 3, 3, 7, 2],
              ],
              threshold: 0.002719891956076026,
              right_val: 0.5255665183067322,
              left_val: 0.4112060964107513,
            },
            {
              features: [
                [1, 7, 18, 5, -1],
                [7, 7, 6, 5, 3],
              ],
              threshold: 0.0483377799391747,
              right_val: 0.4438967108726502,
              left_val: 0.5404623746871948,
            },
            {
              features: [
                [3, 17, 4, 3, -1],
                [5, 17, 2, 3, 2],
              ],
              threshold: 0.0009570376132614911,
              right_val: 0.5399510860443115,
              left_val: 0.4355969130992889,
            },
            {
              features: [
                [8, 14, 12, 6, -1],
                [14, 14, 6, 3, 2],
                [8, 17, 6, 3, 2],
              ],
              threshold: -0.0253712590783834,
              right_val: 0.5031024813652039,
              left_val: 0.5995175242424011,
            },
            {
              features: [
                [0, 13, 20, 4, -1],
                [0, 13, 10, 2, 2],
                [10, 15, 10, 2, 2],
              ],
              threshold: 0.0524579510092735,
              right_val: 0.1398351043462753,
              left_val: 0.4950287938117981,
            },
            {
              features: [
                [4, 5, 14, 2, -1],
                [11, 5, 7, 1, 2],
                [4, 6, 7, 1, 2],
              ],
              threshold: -0.0123656298965216,
              right_val: 0.496410608291626,
              left_val: 0.639729917049408,
            },
            {
              features: [
                [1, 2, 10, 12, -1],
                [1, 2, 5, 6, 2],
                [6, 8, 5, 6, 2],
              ],
              threshold: -0.1458971947431564,
              right_val: 0.494632214307785,
              left_val: 0.1001669988036156,
            },
            {
              features: [
                [6, 1, 14, 3, -1],
                [6, 2, 14, 1, 3],
              ],
              threshold: -0.0159086007624865,
              right_val: 0.5208340883255005,
              left_val: 0.3312329947948456,
            },
            {
              features: [
                [8, 16, 2, 3, -1],
                [8, 17, 2, 1, 3],
              ],
              threshold: 0.00039486068999394774,
              right_val: 0.5426102876663208,
              left_val: 0.4406363964080811,
            },
            {
              features: [
                [9, 17, 3, 2, -1],
                [10, 17, 1, 2, 3],
              ],
              threshold: -0.0052454001270234585,
              right_val: 0.5189967155456543,
              left_val: 0.2799589931964874,
            },
            {
              features: [
                [5, 15, 4, 2, -1],
                [5, 15, 2, 1, 2],
                [7, 16, 2, 1, 2],
              ],
              threshold: -0.005042179953306913,
              right_val: 0.4752142131328583,
              left_val: 0.6987580060958862,
            },
            {
              features: [
                [10, 15, 1, 3, -1],
                [10, 16, 1, 1, 3],
              ],
              threshold: 0.0029812189750373363,
              right_val: 0.6307479739189148,
              left_val: 0.4983288943767548,
            },
            {
              features: [
                [8, 16, 4, 4, -1],
                [8, 16, 2, 2, 2],
                [10, 18, 2, 2, 2],
              ],
              threshold: -0.007288430817425251,
              right_val: 0.5026869773864746,
              left_val: 0.298233300447464,
            },
            {
              features: [
                [6, 11, 8, 6, -1],
                [6, 14, 8, 3, 2],
              ],
              threshold: 0.0015094350092113018,
              right_val: 0.3832970857620239,
              left_val: 0.5308442115783691,
            },
            {
              features: [
                [2, 13, 5, 2, -1],
                [2, 14, 5, 1, 2],
              ],
              threshold: -0.009334079921245575,
              right_val: 0.4969817101955414,
              left_val: 0.2037964016199112,
            },
            {
              features: [
                [13, 14, 6, 6, -1],
                [16, 14, 3, 3, 2],
                [13, 17, 3, 3, 2],
              ],
              threshold: 0.0286671407520771,
              right_val: 0.6928027272224426,
              left_val: 0.5025696754455566,
            },
            {
              features: [
                [1, 9, 18, 4, -1],
                [7, 9, 6, 4, 3],
              ],
              threshold: 0.1701968014240265,
              right_val: 0.1476442962884903,
              left_val: 0.4960052967071533,
            },
            {
              features: [
                [13, 14, 6, 6, -1],
                [16, 14, 3, 3, 2],
                [13, 17, 3, 3, 2],
              ],
              threshold: -0.003261447884142399,
              right_val: 0.4826056063175201,
              left_val: 0.5603063702583313,
            },
            {
              features: [
                [0, 2, 1, 6, -1],
                [0, 4, 1, 2, 3],
              ],
              threshold: 0.0005576927796937525,
              right_val: 0.4129633009433746,
              left_val: 0.5205562114715576,
            },
            {
              features: [
                [5, 0, 15, 20, -1],
                [5, 10, 15, 10, 2],
              ],
              threshold: 0.3625833988189697,
              right_val: 0.3768612146377564,
              left_val: 0.5221652984619141,
            },
            {
              features: [
                [1, 14, 6, 6, -1],
                [1, 14, 3, 3, 2],
                [4, 17, 3, 3, 2],
              ],
              threshold: -0.0116151301190257,
              right_val: 0.4637489914894104,
              left_val: 0.6022682785987854,
            },
            {
              features: [
                [8, 14, 4, 6, -1],
                [10, 14, 2, 3, 2],
                [8, 17, 2, 3, 2],
              ],
              threshold: -0.004079519771039486,
              right_val: 0.5337479114532471,
              left_val: 0.4070447087287903,
            },
            {
              features: [
                [7, 11, 2, 1, -1],
                [8, 11, 1, 1, 2],
              ],
              threshold: 0.0005720430053770542,
              right_val: 0.5900393128395081,
              left_val: 0.4601835012435913,
            },
            {
              features: [
                [9, 17, 3, 2, -1],
                [10, 17, 1, 2, 3],
              ],
              threshold: 0.000675433489959687,
              right_val: 0.4345428943634033,
              left_val: 0.5398252010345459,
            },
            {
              features: [
                [8, 17, 3, 2, -1],
                [9, 17, 1, 2, 3],
              ],
              threshold: 0.0006329569732770324,
              right_val: 0.4051358997821808,
              left_val: 0.5201563239097595,
            },
            {
              features: [
                [12, 14, 4, 6, -1],
                [14, 14, 2, 3, 2],
                [12, 17, 2, 3, 2],
              ],
              threshold: 0.00124353205319494,
              right_val: 0.5547441244125366,
              left_val: 0.4642387926578522,
            },
            {
              features: [
                [4, 14, 4, 6, -1],
                [4, 14, 2, 3, 2],
                [6, 17, 2, 3, 2],
              ],
              threshold: -0.004736385773867369,
              right_val: 0.4672552049160004,
              left_val: 0.6198567152023315,
            },
            {
              features: [
                [13, 14, 2, 6, -1],
                [14, 14, 1, 3, 2],
                [13, 17, 1, 3, 2],
              ],
              threshold: -0.006465846206992865,
              right_val: 0.5019000768661499,
              left_val: 0.6837332844734192,
            },
            {
              features: [
                [5, 14, 2, 6, -1],
                [5, 14, 1, 3, 2],
                [6, 17, 1, 3, 2],
              ],
              threshold: 0.000350173213519156,
              right_val: 0.5363622903823853,
              left_val: 0.4344803094863892,
            },
            {
              features: [
                [7, 0, 6, 12, -1],
                [7, 4, 6, 4, 3],
              ],
              threshold: 0.00015754920605104417,
              right_val: 0.5732020735740662,
              left_val: 0.4760079085826874,
            },
            {
              features: [
                [0, 7, 12, 2, -1],
                [4, 7, 4, 2, 3],
              ],
              threshold: 0.009977436624467373,
              right_val: 0.3635039925575256,
              left_val: 0.5090985894203186,
            },
            {
              features: [
                [10, 3, 3, 13, -1],
                [11, 3, 1, 13, 3],
              ],
              threshold: -0.0004146452993154526,
              right_val: 0.4593802094459534,
              left_val: 0.5570064783096313,
            },
            {
              features: [
                [7, 3, 3, 13, -1],
                [8, 3, 1, 13, 3],
              ],
              threshold: -0.00035888899583369493,
              right_val: 0.4339134991168976,
              left_val: 0.5356845855712891,
            },
            {
              features: [
                [10, 8, 6, 3, -1],
                [10, 9, 6, 1, 3],
              ],
              threshold: 0.0004046325047966093,
              right_val: 0.5436776876449585,
              left_val: 0.4439803063869476,
            },
            {
              features: [
                [3, 11, 3, 2, -1],
                [4, 11, 1, 2, 3],
              ],
              threshold: -0.0008218478760682046,
              right_val: 0.5176299214363098,
              left_val: 0.4042294919490814,
            },
            {
              features: [
                [13, 12, 6, 8, -1],
                [16, 12, 3, 4, 2],
                [13, 16, 3, 4, 2],
              ],
              threshold: 0.005946741905063391,
              right_val: 0.5633779764175415,
              left_val: 0.4927651882171631,
            },
            {
              features: [
                [7, 6, 6, 5, -1],
                [9, 6, 2, 5, 3],
              ],
              threshold: -0.0217533893883228,
              right_val: 0.480084091424942,
              left_val: 0.8006293773651123,
            },
            {
              features: [
                [17, 11, 2, 7, -1],
                [17, 11, 1, 7, 2],
              ],
              threshold: -0.0145403798669577,
              right_val: 0.5182222723960876,
              left_val: 0.3946054875850678,
            },
            {
              features: [
                [3, 13, 8, 2, -1],
                [7, 13, 4, 2, 2],
              ],
              threshold: -0.0405107699334621,
              right_val: 0.4935792982578278,
              left_val: 0.0213249903172255,
            },
            {
              features: [
                [6, 9, 8, 3, -1],
                [6, 10, 8, 1, 3],
              ],
              threshold: -0.0005845826817676425,
              right_val: 0.5314025282859802,
              left_val: 0.4012795984745026,
            },
            {
              features: [
                [4, 3, 4, 3, -1],
                [4, 4, 4, 1, 3],
              ],
              threshold: 0.005515180062502623,
              right_val: 0.5896260738372803,
              left_val: 0.4642418920993805,
            },
            {
              features: [
                [11, 3, 4, 3, -1],
                [11, 4, 4, 1, 3],
              ],
              threshold: -0.006062622182071209,
              right_val: 0.5016477704048157,
              left_val: 0.6502159237861633,
            },
            {
              features: [
                [1, 4, 17, 12, -1],
                [1, 8, 17, 4, 3],
              ],
              threshold: 0.0945358425378799,
              right_val: 0.4126827120780945,
              left_val: 0.5264708995819092,
            },
            {
              features: [
                [11, 3, 4, 3, -1],
                [11, 4, 4, 1, 3],
              ],
              threshold: 0.004731505177915096,
              right_val: 0.5892447829246521,
              left_val: 0.4879199862480164,
            },
            {
              features: [
                [4, 8, 6, 3, -1],
                [4, 9, 6, 1, 3],
              ],
              threshold: -0.0005257147131487727,
              right_val: 0.5189412832260132,
              left_val: 0.391728013753891,
            },
            {
              features: [
                [12, 3, 5, 3, -1],
                [12, 4, 5, 1, 3],
              ],
              threshold: -0.002546404954046011,
              right_val: 0.498570591211319,
              left_val: 0.5837599039077759,
            },
            {
              features: [
                [1, 11, 2, 7, -1],
                [2, 11, 1, 7, 2],
              ],
              threshold: -0.0260756891220808,
              right_val: 0.4955821931362152,
              left_val: 0.1261983960866928,
            },
            {
              features: [
                [15, 12, 2, 8, -1],
                [16, 12, 1, 4, 2],
                [15, 16, 1, 4, 2],
              ],
              threshold: -0.00547797093167901,
              right_val: 0.5010265707969666,
              left_val: 0.5722513794898987,
            },
            {
              features: [
                [4, 8, 11, 3, -1],
                [4, 9, 11, 1, 3],
              ],
              threshold: 0.005133774131536484,
              right_val: 0.4226376116275787,
              left_val: 0.527326226234436,
            },
            {
              features: [
                [9, 13, 6, 2, -1],
                [12, 13, 3, 1, 2],
                [9, 14, 3, 1, 2],
              ],
              threshold: 0.000479449809063226,
              right_val: 0.5819587111473083,
              left_val: 0.4450066983699799,
            },
            {
              features: [
                [6, 13, 4, 3, -1],
                [6, 14, 4, 1, 3],
              ],
              threshold: -0.0021114079281687737,
              right_val: 0.451171487569809,
              left_val: 0.5757653117179871,
            },
            {
              features: [
                [9, 12, 3, 3, -1],
                [10, 12, 1, 3, 3],
              ],
              threshold: -0.0131799904629588,
              right_val: 0.5160734057426453,
              left_val: 0.1884381026029587,
            },
            {
              features: [
                [5, 3, 3, 3, -1],
                [5, 4, 3, 1, 3],
              ],
              threshold: -0.004796809982508421,
              right_val: 0.4736118912696838,
              left_val: 0.6589789986610413,
            },
            {
              features: [
                [9, 4, 2, 3, -1],
                [9, 5, 2, 1, 3],
              ],
              threshold: 0.0067483168095350266,
              right_val: 0.3356395065784454,
              left_val: 0.5259429812431335,
            },
            {
              features: [
                [0, 2, 16, 3, -1],
                [0, 3, 16, 1, 3],
              ],
              threshold: 0.0014623369788751006,
              right_val: 0.4264092147350311,
              left_val: 0.5355271100997925,
            },
            {
              features: [
                [15, 12, 2, 8, -1],
                [16, 12, 1, 4, 2],
                [15, 16, 1, 4, 2],
              ],
              threshold: 0.004764515906572342,
              right_val: 0.5786827802658081,
              left_val: 0.5034406781196594,
            },
            {
              features: [
                [3, 12, 2, 8, -1],
                [3, 12, 1, 4, 2],
                [4, 16, 1, 4, 2],
              ],
              threshold: 0.0068066660314798355,
              right_val: 0.6677829027175903,
              left_val: 0.475660502910614,
            },
            {
              features: [
                [14, 13, 3, 6, -1],
                [14, 15, 3, 2, 3],
              ],
              threshold: 0.0036608621012419462,
              right_val: 0.4311546981334686,
              left_val: 0.5369611978530884,
            },
            {
              features: [
                [3, 13, 3, 6, -1],
                [3, 15, 3, 2, 3],
              ],
              threshold: 0.0214496403932571,
              right_val: 0.1888816058635712,
              left_val: 0.4968641996383667,
            },
            {
              features: [
                [6, 5, 10, 2, -1],
                [11, 5, 5, 1, 2],
                [6, 6, 5, 1, 2],
              ],
              threshold: 0.004167890176177025,
              right_val: 0.5815368890762329,
              left_val: 0.4930733144283295,
            },
            {
              features: [
                [2, 14, 14, 6, -1],
                [2, 17, 14, 3, 2],
              ],
              threshold: 0.008646756410598755,
              right_val: 0.4132595062255859,
              left_val: 0.5205205082893372,
            },
            {
              features: [
                [10, 14, 1, 3, -1],
                [10, 15, 1, 1, 3],
              ],
              threshold: -0.0003611407882999629,
              right_val: 0.4800927937030792,
              left_val: 0.5483555197715759,
            },
            {
              features: [
                [4, 16, 2, 2, -1],
                [4, 16, 1, 1, 2],
                [5, 17, 1, 1, 2],
              ],
              threshold: 0.0010808729566633701,
              right_val: 0.6041421294212341,
              left_val: 0.4689902067184448,
            },
            {
              features: [
                [10, 6, 2, 3, -1],
                [10, 7, 2, 1, 3],
              ],
              threshold: 0.005771995987743139,
              right_val: 0.3053277134895325,
              left_val: 0.5171142220497131,
            },
            {
              features: [
                [0, 17, 20, 2, -1],
                [0, 17, 10, 1, 2],
                [10, 18, 10, 1, 2],
              ],
              threshold: 0.001572077046148479,
              right_val: 0.4178803861141205,
              left_val: 0.5219978094100952,
            },
            {
              features: [
                [13, 6, 1, 3, -1],
                [13, 7, 1, 1, 3],
              ],
              threshold: -0.0019307859474793077,
              right_val: 0.4812920093536377,
              left_val: 0.5860369801521301,
            },
            {
              features: [
                [8, 13, 3, 2, -1],
                [9, 13, 1, 2, 3],
              ],
              threshold: -0.007892627269029617,
              right_val: 0.497173398733139,
              left_val: 0.1749276965856552,
            },
            {
              features: [
                [12, 2, 3, 3, -1],
                [13, 2, 1, 3, 3],
              ],
              threshold: -0.002222467912361026,
              right_val: 0.521284818649292,
              left_val: 0.434258908033371,
            },
            {
              features: [
                [3, 18, 2, 2, -1],
                [3, 18, 1, 1, 2],
                [4, 19, 1, 1, 2],
              ],
              threshold: 0.0019011989934369922,
              right_val: 0.689205527305603,
              left_val: 0.4765186905860901,
            },
            {
              features: [
                [9, 16, 3, 4, -1],
                [10, 16, 1, 4, 3],
              ],
              threshold: 0.0027576119173318148,
              right_val: 0.4337486028671265,
              left_val: 0.5262191295623779,
            },
            {
              features: [
                [6, 6, 1, 3, -1],
                [6, 7, 1, 1, 3],
              ],
              threshold: 0.005178744904696941,
              right_val: 0.7843729257583618,
              left_val: 0.4804069101810455,
            },
            {
              features: [
                [13, 1, 5, 2, -1],
                [13, 2, 5, 1, 2],
              ],
              threshold: -0.0009027334162965417,
              right_val: 0.5353423953056335,
              left_val: 0.412084698677063,
            },
            {
              features: [
                [7, 14, 6, 2, -1],
                [7, 14, 3, 1, 2],
                [10, 15, 3, 1, 2],
              ],
              threshold: 0.005179795902222395,
              right_val: 0.6425960063934326,
              left_val: 0.4740372896194458,
            },
            {
              features: [
                [11, 3, 3, 4, -1],
                [12, 3, 1, 4, 3],
              ],
              threshold: -0.0101140001788735,
              right_val: 0.5175017714500427,
              left_val: 0.2468792051076889,
            },
            {
              features: [
                [1, 13, 12, 6, -1],
                [5, 13, 4, 6, 3],
              ],
              threshold: -0.0186170600354671,
              right_val: 0.4628978967666626,
              left_val: 0.5756294131278992,
            },
            {
              features: [
                [14, 11, 5, 2, -1],
                [14, 12, 5, 1, 2],
              ],
              threshold: 0.0059225959703326225,
              right_val: 0.3214271068572998,
              left_val: 0.5169625878334045,
            },
            {
              features: [
                [2, 15, 14, 4, -1],
                [2, 15, 7, 2, 2],
                [9, 17, 7, 2, 2],
              ],
              threshold: -0.006294507998973131,
              right_val: 0.5141636729240417,
              left_val: 0.3872014880180359,
            },
            {
              features: [
                [3, 7, 14, 2, -1],
                [10, 7, 7, 1, 2],
                [3, 8, 7, 1, 2],
              ],
              threshold: 0.0065353019163012505,
              right_val: 0.6310489773750305,
              left_val: 0.4853048920631409,
            },
            {
              features: [
                [1, 11, 4, 2, -1],
                [1, 12, 4, 1, 2],
              ],
              threshold: 0.0010878399480134249,
              right_val: 0.3723258972167969,
              left_val: 0.5117315053939819,
            },
            {
              features: [
                [14, 0, 6, 14, -1],
                [16, 0, 2, 14, 3],
              ],
              threshold: -0.0225422400981188,
              right_val: 0.4887112975120544,
              left_val: 0.5692740082740784,
            },
            {
              features: [
                [4, 11, 1, 3, -1],
                [4, 12, 1, 1, 3],
              ],
              threshold: -0.003006566083058715,
              right_val: 0.5003992915153503,
              left_val: 0.2556012868881226,
            },
            {
              features: [
                [14, 0, 6, 14, -1],
                [16, 0, 2, 14, 3],
              ],
              threshold: 0.007474127225577831,
              right_val: 0.5675926804542542,
              left_val: 0.4810872972011566,
            },
            {
              features: [
                [1, 10, 3, 7, -1],
                [2, 10, 1, 7, 3],
              ],
              threshold: 0.0261623207479715,
              right_val: 0.1777237057685852,
              left_val: 0.4971194863319397,
            },
            {
              features: [
                [8, 12, 9, 2, -1],
                [8, 13, 9, 1, 2],
              ],
              threshold: 0.0009435273823328316,
              right_val: 0.549125075340271,
              left_val: 0.4940010905265808,
            },
            {
              features: [
                [0, 6, 20, 1, -1],
                [10, 6, 10, 1, 2],
              ],
              threshold: 0.0333632417023182,
              right_val: 0.2790724039077759,
              left_val: 0.5007612109184265,
            },
            {
              features: [
                [8, 4, 4, 4, -1],
                [8, 4, 2, 4, 2],
              ],
              threshold: -0.0151186501607299,
              right_val: 0.4973031878471375,
              left_val: 0.7059578895568848,
            },
            {
              features: [
                [0, 0, 2, 2, -1],
                [0, 1, 2, 1, 2],
              ],
              threshold: 0.0009864894673228264,
              right_val: 0.3776761889457703,
              left_val: 0.5128620266914368,
            },
          ],
          threshold: 104.74919891357422,
        },
        {
          simpleClassifiers: [
            {
              features: [
                [5, 3, 10, 9, -1],
                [5, 6, 10, 3, 3],
              ],
              threshold: -0.0951507985591888,
              right_val: 0.4017286896705627,
              left_val: 0.6470757126808167,
            },
            {
              features: [
                [15, 2, 4, 10, -1],
                [15, 2, 2, 10, 2],
              ],
              threshold: 0.006270234007388353,
              right_val: 0.574644923210144,
              left_val: 0.399982213973999,
            },
            {
              features: [
                [8, 2, 2, 7, -1],
                [9, 2, 1, 7, 2],
              ],
              threshold: 0.000300180894555524,
              right_val: 0.5538809895515442,
              left_val: 0.355877012014389,
            },
            {
              features: [
                [7, 4, 12, 1, -1],
                [11, 4, 4, 1, 3],
              ],
              threshold: 0.0011757409665733576,
              right_val: 0.5382617712020874,
              left_val: 0.425653487443924,
            },
            {
              features: [
                [3, 4, 9, 1, -1],
                [6, 4, 3, 1, 3],
              ],
              threshold: 4423526843311265e-20,
              right_val: 0.5589926838874817,
              left_val: 0.3682908117771149,
            },
            {
              features: [
                [15, 10, 1, 4, -1],
                [15, 12, 1, 2, 2],
              ],
              threshold: -29936920327600092e-21,
              right_val: 0.4020367860794067,
              left_val: 0.5452470183372498,
            },
            {
              features: [
                [4, 10, 6, 4, -1],
                [7, 10, 3, 4, 2],
              ],
              threshold: 0.003007319988682866,
              right_val: 0.3317843973636627,
              left_val: 0.5239058136940002,
            },
            {
              features: [
                [15, 9, 1, 6, -1],
                [15, 12, 1, 3, 2],
              ],
              threshold: -0.0105138896033168,
              right_val: 0.5307983756065369,
              left_val: 0.4320689141750336,
            },
            {
              features: [
                [7, 17, 6, 3, -1],
                [7, 18, 6, 1, 3],
              ],
              threshold: 0.008347682654857635,
              right_val: 0.6453298926353455,
              left_val: 0.4504637122154236,
            },
            {
              features: [
                [14, 3, 2, 16, -1],
                [15, 3, 1, 8, 2],
                [14, 11, 1, 8, 2],
              ],
              threshold: -0.0031492270063608885,
              right_val: 0.5370525121688843,
              left_val: 0.4313425123691559,
            },
            {
              features: [
                [4, 9, 1, 6, -1],
                [4, 12, 1, 3, 2],
              ],
              threshold: -1443564997316571e-20,
              right_val: 0.381797194480896,
              left_val: 0.5326603055000305,
            },
            {
              features: [
                [12, 1, 5, 2, -1],
                [12, 2, 5, 1, 2],
              ],
              threshold: -0.00042855090578086674,
              right_val: 0.5382009744644165,
              left_val: 0.430516391992569,
            },
            {
              features: [
                [6, 18, 4, 2, -1],
                [6, 18, 2, 1, 2],
                [8, 19, 2, 1, 2],
              ],
              threshold: 0.00015062429883982986,
              right_val: 0.5544965267181396,
              left_val: 0.4235970973968506,
            },
            {
              features: [
                [2, 4, 16, 10, -1],
                [10, 4, 8, 5, 2],
                [2, 9, 8, 5, 2],
              ],
              threshold: 0.0715598315000534,
              right_val: 0.2678802907466888,
              left_val: 0.5303059816360474,
            },
            {
              features: [
                [6, 5, 1, 10, -1],
                [6, 10, 1, 5, 2],
              ],
              threshold: 0.0008409518050029874,
              right_val: 0.5205433964729309,
              left_val: 0.3557108938694,
            },
            {
              features: [
                [4, 8, 15, 2, -1],
                [9, 8, 5, 2, 3],
              ],
              threshold: 0.0629865005612373,
              right_val: 0.2861376106739044,
              left_val: 0.5225362777709961,
            },
            {
              features: [
                [1, 8, 15, 2, -1],
                [6, 8, 5, 2, 3],
              ],
              threshold: -0.0033798629883676767,
              right_val: 0.5201697945594788,
              left_val: 0.3624185919761658,
            },
            {
              features: [
                [9, 5, 3, 6, -1],
                [9, 7, 3, 2, 3],
              ],
              threshold: -0.00011810739670181647,
              right_val: 0.3959893882274628,
              left_val: 0.547447681427002,
            },
            {
              features: [
                [5, 7, 8, 2, -1],
                [9, 7, 4, 2, 2],
              ],
              threshold: -0.0005450560129247606,
              right_val: 0.5215715765953064,
              left_val: 0.3740422129631043,
            },
            {
              features: [
                [9, 11, 2, 3, -1],
                [9, 12, 2, 1, 3],
              ],
              threshold: -0.0018454910023137927,
              right_val: 0.4584448933601379,
              left_val: 0.5893052220344543,
            },
            {
              features: [
                [1, 0, 16, 3, -1],
                [1, 1, 16, 1, 3],
              ],
              threshold: -0.0004383237101137638,
              right_val: 0.5385351181030273,
              left_val: 0.4084582030773163,
            },
            {
              features: [
                [11, 2, 7, 2, -1],
                [11, 3, 7, 1, 2],
              ],
              threshold: -0.002400083001703024,
              right_val: 0.5293580293655396,
              left_val: 0.377745509147644,
            },
            {
              features: [
                [5, 1, 10, 18, -1],
                [5, 7, 10, 6, 3],
              ],
              threshold: -0.0987957417964935,
              right_val: 0.5070089101791382,
              left_val: 0.2963612079620361,
            },
            {
              features: [
                [17, 4, 3, 2, -1],
                [18, 4, 1, 2, 3],
              ],
              threshold: 0.0031798239797353745,
              right_val: 0.6726443767547607,
              left_val: 0.4877632856369019,
            },
            {
              features: [
                [8, 13, 1, 3, -1],
                [8, 14, 1, 1, 3],
              ],
              threshold: 0.00032406419632025063,
              right_val: 0.5561109781265259,
              left_val: 0.4366911053657532,
            },
            {
              features: [
                [3, 14, 14, 6, -1],
                [3, 16, 14, 2, 3],
              ],
              threshold: -0.0325472503900528,
              right_val: 0.5308616161346436,
              left_val: 0.31281578540802,
            },
            {
              features: [
                [0, 2, 3, 4, -1],
                [1, 2, 1, 4, 3],
              ],
              threshold: -0.007756113074719906,
              right_val: 0.4639872014522553,
              left_val: 0.6560224890708923,
            },
            {
              features: [
                [12, 1, 5, 2, -1],
                [12, 2, 5, 1, 2],
              ],
              threshold: 0.0160272493958473,
              right_val: 0.3141897916793823,
              left_val: 0.5172680020332336,
            },
            {
              features: [
                [3, 1, 5, 2, -1],
                [3, 2, 5, 1, 2],
              ],
              threshold: 710023505234858e-20,
              right_val: 0.5336294770240784,
              left_val: 0.4084446132183075,
            },
            {
              features: [
                [10, 13, 2, 3, -1],
                [10, 14, 2, 1, 3],
              ],
              threshold: 0.007342280820012093,
              right_val: 0.660346508026123,
              left_val: 0.4966922104358673,
            },
            {
              features: [
                [8, 13, 2, 3, -1],
                [8, 14, 2, 1, 3],
              ],
              threshold: -0.0016970280557870865,
              right_val: 0.4500182867050171,
              left_val: 0.5908237099647522,
            },
            {
              features: [
                [14, 12, 2, 3, -1],
                [14, 13, 2, 1, 3],
              ],
              threshold: 0.0024118260480463505,
              right_val: 0.3599720895290375,
              left_val: 0.5315160751342773,
            },
            {
              features: [
                [7, 2, 2, 3, -1],
                [7, 3, 2, 1, 3],
              ],
              threshold: -0.005530093796551228,
              right_val: 0.4996814131736755,
              left_val: 0.2334040999412537,
            },
            {
              features: [
                [5, 6, 10, 4, -1],
                [10, 6, 5, 2, 2],
                [5, 8, 5, 2, 2],
              ],
              threshold: -0.0026478730142116547,
              right_val: 0.4684734046459198,
              left_val: 0.5880935788154602,
            },
            {
              features: [
                [9, 13, 1, 6, -1],
                [9, 16, 1, 3, 2],
              ],
              threshold: 0.0112956296652555,
              right_val: 0.1884590983390808,
              left_val: 0.4983777105808258,
            },
            {
              features: [
                [10, 12, 2, 2, -1],
                [11, 12, 1, 1, 2],
                [10, 13, 1, 1, 2],
              ],
              threshold: -0.000669528788421303,
              right_val: 0.4799019992351532,
              left_val: 0.5872138142585754,
            },
            {
              features: [
                [4, 12, 2, 3, -1],
                [4, 13, 2, 1, 3],
              ],
              threshold: 0.0014410680159926414,
              right_val: 0.350101113319397,
              left_val: 0.5131189227104187,
            },
            {
              features: [
                [14, 4, 6, 6, -1],
                [14, 6, 6, 2, 3],
              ],
              threshold: 0.0024637870956212282,
              right_val: 0.4117639064788818,
              left_val: 0.5339372158050537,
            },
            {
              features: [
                [8, 17, 2, 3, -1],
                [8, 18, 2, 1, 3],
              ],
              threshold: 0.0003311451873742044,
              right_val: 0.5398246049880981,
              left_val: 0.4313383102416992,
            },
            {
              features: [
                [16, 4, 4, 6, -1],
                [16, 6, 4, 2, 3],
              ],
              threshold: -0.0335572697222233,
              right_val: 0.5179154872894287,
              left_val: 0.26753368973732,
            },
            {
              features: [
                [0, 4, 4, 6, -1],
                [0, 6, 4, 2, 3],
              ],
              threshold: 0.0185394193977118,
              right_val: 0.2317177057266235,
              left_val: 0.4973869919776917,
            },
            {
              features: [
                [14, 6, 2, 3, -1],
                [14, 6, 1, 3, 2],
              ],
              threshold: -0.00029698139405809343,
              right_val: 0.4643664062023163,
              left_val: 0.552970826625824,
            },
            {
              features: [
                [4, 9, 8, 1, -1],
                [8, 9, 4, 1, 2],
              ],
              threshold: -0.0004557725915219635,
              right_val: 0.4469191133975983,
              left_val: 0.5629584193229675,
            },
            {
              features: [
                [8, 12, 4, 3, -1],
                [8, 13, 4, 1, 3],
              ],
              threshold: -0.0101589802652597,
              right_val: 0.4925918877124786,
              left_val: 0.6706212759017944,
            },
            {
              features: [
                [5, 12, 10, 6, -1],
                [5, 14, 10, 2, 3],
              ],
              threshold: -22413829356082715e-21,
              right_val: 0.3912901878356934,
              left_val: 0.5239421725273132,
            },
            {
              features: [
                [11, 12, 1, 2, -1],
                [11, 13, 1, 1, 2],
              ],
              threshold: 7203496352303773e-20,
              right_val: 0.5501788854598999,
              left_val: 0.4799438118934631,
            },
            {
              features: [
                [8, 15, 4, 2, -1],
                [8, 16, 4, 1, 2],
              ],
              threshold: -0.006926720961928368,
              right_val: 0.4698084890842438,
              left_val: 0.6930009722709656,
            },
            {
              features: [
                [6, 9, 8, 8, -1],
                [10, 9, 4, 4, 2],
                [6, 13, 4, 4, 2],
              ],
              threshold: -0.007699783891439438,
              right_val: 0.5480883121490479,
              left_val: 0.409962385892868,
            },
            {
              features: [
                [7, 12, 4, 6, -1],
                [7, 12, 2, 3, 2],
                [9, 15, 2, 3, 2],
              ],
              threshold: -0.007313054986298084,
              right_val: 0.5057886242866516,
              left_val: 0.3283475935459137,
            },
            {
              features: [
                [10, 11, 3, 1, -1],
                [11, 11, 1, 1, 3],
              ],
              threshold: 0.0019650589674711227,
              right_val: 0.6398249864578247,
              left_val: 0.4978047013282776,
            },
            {
              features: [
                [9, 7, 2, 10, -1],
                [9, 7, 1, 5, 2],
                [10, 12, 1, 5, 2],
              ],
              threshold: 0.007164760027080774,
              right_val: 0.6222137212753296,
              left_val: 0.4661160111427307,
            },
            {
              features: [
                [8, 0, 6, 6, -1],
                [10, 0, 2, 6, 3],
              ],
              threshold: -0.0240786392241716,
              right_val: 0.5222162008285522,
              left_val: 0.2334644943475723,
            },
            {
              features: [
                [3, 11, 2, 6, -1],
                [3, 13, 2, 2, 3],
              ],
              threshold: -0.0210279691964388,
              right_val: 0.4938226044178009,
              left_val: 0.1183653995394707,
            },
            {
              features: [
                [16, 12, 1, 2, -1],
                [16, 13, 1, 1, 2],
              ],
              threshold: 0.00036017020465806127,
              right_val: 0.4116711020469666,
              left_val: 0.5325019955635071,
            },
            {
              features: [
                [1, 14, 6, 6, -1],
                [1, 14, 3, 3, 2],
                [4, 17, 3, 3, 2],
              ],
              threshold: -0.0172197297215462,
              right_val: 0.4664269089698792,
              left_val: 0.6278762221336365,
            },
            {
              features: [
                [13, 1, 3, 6, -1],
                [14, 1, 1, 6, 3],
              ],
              threshold: -0.007867214269936085,
              right_val: 0.5249736905097961,
              left_val: 0.3403415083885193,
            },
            {
              features: [
                [8, 8, 2, 2, -1],
                [8, 9, 2, 1, 2],
              ],
              threshold: -0.000447773898486048,
              right_val: 0.5086259245872498,
              left_val: 0.3610411882400513,
            },
            {
              features: [
                [9, 9, 3, 3, -1],
                [10, 9, 1, 3, 3],
              ],
              threshold: 0.005548601038753986,
              right_val: 0.6203498244285583,
              left_val: 0.4884265959262848,
            },
            {
              features: [
                [8, 7, 3, 3, -1],
                [8, 8, 3, 1, 3],
              ],
              threshold: -0.00694611482322216,
              right_val: 0.5011097192764282,
              left_val: 0.262593001127243,
            },
            {
              features: [
                [14, 0, 2, 3, -1],
                [14, 0, 1, 3, 2],
              ],
              threshold: 0.00013569870498031378,
              right_val: 0.5628312230110168,
              left_val: 0.4340794980525971,
            },
            {
              features: [
                [1, 0, 18, 9, -1],
                [7, 0, 6, 9, 3],
              ],
              threshold: -0.0458802506327629,
              right_val: 0.4696274995803833,
              left_val: 0.6507998704910278,
            },
            {
              features: [
                [11, 5, 4, 15, -1],
                [11, 5, 2, 15, 2],
              ],
              threshold: -0.0215825606137514,
              right_val: 0.5287616848945618,
              left_val: 0.3826502859592438,
            },
            {
              features: [
                [5, 5, 4, 15, -1],
                [7, 5, 2, 15, 2],
              ],
              threshold: -0.0202095396816731,
              right_val: 0.5074477195739746,
              left_val: 0.3233368098735809,
            },
            {
              features: [
                [14, 0, 2, 3, -1],
                [14, 0, 1, 3, 2],
              ],
              threshold: 0.005849671084433794,
              right_val: 0.4489670991897583,
              left_val: 0.5177603960037231,
            },
            {
              features: [
                [4, 0, 2, 3, -1],
                [5, 0, 1, 3, 2],
              ],
              threshold: -5747637987951748e-20,
              right_val: 0.5246363878250122,
              left_val: 0.4020850956439972,
            },
            {
              features: [
                [11, 12, 2, 2, -1],
                [12, 12, 1, 1, 2],
                [11, 13, 1, 1, 2],
              ],
              threshold: -0.001151310047134757,
              right_val: 0.490515410900116,
              left_val: 0.6315072178840637,
            },
            {
              features: [
                [7, 12, 2, 2, -1],
                [7, 12, 1, 1, 2],
                [8, 13, 1, 1, 2],
              ],
              threshold: 0.0019862831104546785,
              right_val: 0.6497151255607605,
              left_val: 0.4702459871768951,
            },
            {
              features: [
                [12, 0, 3, 4, -1],
                [13, 0, 1, 4, 3],
              ],
              threshold: -0.005271951202303171,
              right_val: 0.5227652788162231,
              left_val: 0.3650383949279785,
            },
            {
              features: [
                [4, 11, 3, 3, -1],
                [4, 12, 3, 1, 3],
              ],
              threshold: 0.0012662699446082115,
              right_val: 0.387761801481247,
              left_val: 0.5166100859642029,
            },
            {
              features: [
                [12, 7, 4, 2, -1],
                [12, 8, 4, 1, 2],
              ],
              threshold: -0.006291944067925215,
              right_val: 0.5023847818374634,
              left_val: 0.737589418888092,
            },
            {
              features: [
                [8, 10, 3, 2, -1],
                [9, 10, 1, 2, 3],
              ],
              threshold: 0.000673601112794131,
              right_val: 0.5495585799217224,
              left_val: 0.4423226118087769,
            },
            {
              features: [
                [9, 9, 3, 2, -1],
                [10, 9, 1, 2, 3],
              ],
              threshold: -0.0010523450328037143,
              right_val: 0.4859583079814911,
              left_val: 0.5976396203041077,
            },
            {
              features: [
                [8, 9, 3, 2, -1],
                [9, 9, 1, 2, 3],
              ],
              threshold: -0.00044216238893568516,
              right_val: 0.4398930966854096,
              left_val: 0.5955939292907715,
            },
            {
              features: [
                [12, 0, 3, 4, -1],
                [13, 0, 1, 4, 3],
              ],
              threshold: 0.0011747940443456173,
              right_val: 0.4605058133602142,
              left_val: 0.5349888205528259,
            },
            {
              features: [
                [5, 0, 3, 4, -1],
                [6, 0, 1, 4, 3],
              ],
              threshold: 0.005245743785053492,
              right_val: 0.2941577136516571,
              left_val: 0.5049191117286682,
            },
            {
              features: [
                [4, 14, 12, 4, -1],
                [10, 14, 6, 2, 2],
                [4, 16, 6, 2, 2],
              ],
              threshold: -0.0245397202670574,
              right_val: 0.5218586921691895,
              left_val: 0.2550177872180939,
            },
            {
              features: [
                [8, 13, 2, 3, -1],
                [8, 14, 2, 1, 3],
              ],
              threshold: 0.0007379304151982069,
              right_val: 0.5490816235542297,
              left_val: 0.4424861073493958,
            },
            {
              features: [
                [10, 10, 3, 8, -1],
                [10, 14, 3, 4, 2],
              ],
              threshold: 0.0014233799884095788,
              right_val: 0.4081355929374695,
              left_val: 0.5319514274597168,
            },
            {
              features: [
                [8, 10, 4, 8, -1],
                [8, 10, 2, 4, 2],
                [10, 14, 2, 4, 2],
              ],
              threshold: -0.0024149110540747643,
              right_val: 0.5238950252532959,
              left_val: 0.4087659120559692,
            },
            {
              features: [
                [10, 8, 3, 1, -1],
                [11, 8, 1, 1, 3],
              ],
              threshold: -0.0012165299849584699,
              right_val: 0.4908052980899811,
              left_val: 0.567457914352417,
            },
            {
              features: [
                [9, 12, 1, 6, -1],
                [9, 15, 1, 3, 2],
              ],
              threshold: -0.0012438809499144554,
              right_val: 0.5256118178367615,
              left_val: 0.4129425883293152,
            },
            {
              features: [
                [10, 8, 3, 1, -1],
                [11, 8, 1, 1, 3],
              ],
              threshold: 0.006194273941218853,
              right_val: 0.7313653230667114,
              left_val: 0.5060194134712219,
            },
            {
              features: [
                [7, 8, 3, 1, -1],
                [8, 8, 1, 1, 3],
              ],
              threshold: -0.0016607169527560472,
              right_val: 0.4596369862556458,
              left_val: 0.5979632139205933,
            },
            {
              features: [
                [5, 2, 15, 14, -1],
                [5, 9, 15, 7, 2],
              ],
              threshold: -0.0273162592202425,
              right_val: 0.5308842062950134,
              left_val: 0.4174365103244782,
            },
            {
              features: [
                [2, 1, 2, 10, -1],
                [2, 1, 1, 5, 2],
                [3, 6, 1, 5, 2],
              ],
              threshold: -0.00158455700147897,
              right_val: 0.4519486129283905,
              left_val: 0.56158047914505,
            },
            {
              features: [
                [14, 14, 2, 3, -1],
                [14, 15, 2, 1, 3],
              ],
              threshold: -0.0015514739789068699,
              right_val: 0.5360785126686096,
              left_val: 0.4076187014579773,
            },
            {
              features: [
                [2, 7, 3, 3, -1],
                [3, 7, 1, 3, 3],
              ],
              threshold: 0.0003844655875582248,
              right_val: 0.5430442094802856,
              left_val: 0.4347293972969055,
            },
            {
              features: [
                [17, 4, 3, 3, -1],
                [17, 5, 3, 1, 3],
              ],
              threshold: -0.0146722598001361,
              right_val: 0.5146093964576721,
              left_val: 0.1659304946660996,
            },
            {
              features: [
                [0, 4, 3, 3, -1],
                [0, 5, 3, 1, 3],
              ],
              threshold: 0.008160888217389584,
              right_val: 0.1884745955467224,
              left_val: 0.4961819052696228,
            },
            {
              features: [
                [13, 5, 6, 2, -1],
                [16, 5, 3, 1, 2],
                [13, 6, 3, 1, 2],
              ],
              threshold: 0.0011121659772470593,
              right_val: 0.6093816161155701,
              left_val: 0.4868263900279999,
            },
            {
              features: [
                [4, 19, 12, 1, -1],
                [8, 19, 4, 1, 3],
              ],
              threshold: -0.007260377053171396,
              right_val: 0.4690375924110413,
              left_val: 0.6284325122833252,
            },
            {
              features: [
                [12, 12, 2, 4, -1],
                [12, 14, 2, 2, 2],
              ],
              threshold: -0.00024046430189628154,
              right_val: 0.4046044051647186,
              left_val: 0.5575000047683716,
            },
            {
              features: [
                [3, 15, 1, 3, -1],
                [3, 16, 1, 1, 3],
              ],
              threshold: -0.00023348190006799996,
              right_val: 0.5252848267555237,
              left_val: 0.4115762114524841,
            },
            {
              features: [
                [11, 16, 6, 4, -1],
                [11, 16, 3, 4, 2],
              ],
              threshold: 0.005573648028075695,
              right_val: 0.5690100789070129,
              left_val: 0.4730072915554047,
            },
            {
              features: [
                [2, 10, 3, 10, -1],
                [3, 10, 1, 10, 3],
              ],
              threshold: 0.0306237693876028,
              right_val: 0.1740095019340515,
              left_val: 0.4971886873245239,
            },
            {
              features: [
                [12, 8, 2, 4, -1],
                [12, 8, 1, 4, 2],
              ],
              threshold: 0.0009207479888573289,
              right_val: 0.4354872107505798,
              left_val: 0.5372117757797241,
            },
            {
              features: [
                [6, 8, 2, 4, -1],
                [7, 8, 1, 4, 2],
              ],
              threshold: -4355073906481266e-20,
              right_val: 0.4347316920757294,
              left_val: 0.5366883873939514,
            },
            {
              features: [
                [10, 14, 2, 3, -1],
                [10, 14, 1, 3, 2],
              ],
              threshold: -0.006645271088927984,
              right_val: 0.516053318977356,
              left_val: 0.3435518145561218,
            },
            {
              features: [
                [5, 1, 10, 3, -1],
                [10, 1, 5, 3, 2],
              ],
              threshold: 0.0432219989597797,
              right_val: 0.7293652892112732,
              left_val: 0.4766792058944702,
            },
            {
              features: [
                [10, 7, 3, 2, -1],
                [11, 7, 1, 2, 3],
              ],
              threshold: 0.0022331769578158855,
              right_val: 0.5633171200752258,
              left_val: 0.5029315948486328,
            },
            {
              features: [
                [5, 6, 9, 2, -1],
                [8, 6, 3, 2, 3],
              ],
              threshold: 0.0031829739455133677,
              right_val: 0.5192136764526367,
              left_val: 0.4016092121601105,
            },
            {
              features: [
                [9, 8, 2, 2, -1],
                [9, 9, 2, 1, 2],
              ],
              threshold: -0.00018027749320026487,
              right_val: 0.5417919754981995,
              left_val: 0.4088315963745117,
            },
            {
              features: [
                [2, 11, 16, 6, -1],
                [2, 11, 8, 3, 2],
                [10, 14, 8, 3, 2],
              ],
              threshold: -0.0052934689447283745,
              right_val: 0.5243561863899231,
              left_val: 0.407567709684372,
            },
            {
              features: [
                [12, 7, 2, 2, -1],
                [13, 7, 1, 1, 2],
                [12, 8, 1, 1, 2],
              ],
              threshold: 0.0012750959722325206,
              right_val: 0.6387010812759399,
              left_val: 0.4913282990455627,
            },
            {
              features: [
                [9, 5, 2, 3, -1],
                [9, 6, 2, 1, 3],
              ],
              threshold: 0.004338532220572233,
              right_val: 0.2947346866130829,
              left_val: 0.5031672120094299,
            },
            {
              features: [
                [9, 7, 3, 2, -1],
                [10, 7, 1, 2, 3],
              ],
              threshold: 0.00852507445961237,
              right_val: 0.6308869123458862,
              left_val: 0.4949789047241211,
            },
            {
              features: [
                [5, 1, 8, 12, -1],
                [5, 7, 8, 6, 2],
              ],
              threshold: -0.0009426635224372149,
              right_val: 0.4285649955272675,
              left_val: 0.5328366756439209,
            },
            {
              features: [
                [13, 5, 2, 2, -1],
                [13, 6, 2, 1, 2],
              ],
              threshold: 0.0013609660090878606,
              right_val: 0.5941501259803772,
              left_val: 0.4991525113582611,
            },
            {
              features: [
                [5, 5, 2, 2, -1],
                [5, 6, 2, 1, 2],
              ],
              threshold: 0.0004478250921238214,
              right_val: 0.5854480862617493,
              left_val: 0.4573504030704498,
            },
            {
              features: [
                [12, 4, 3, 3, -1],
                [12, 5, 3, 1, 3],
              ],
              threshold: 0.001336005050688982,
              right_val: 0.584905207157135,
              left_val: 0.4604358971118927,
            },
            {
              features: [
                [4, 14, 2, 3, -1],
                [4, 15, 2, 1, 3],
              ],
              threshold: -0.0006096754805184901,
              right_val: 0.522942304611206,
              left_val: 0.3969388902187347,
            },
            {
              features: [
                [12, 4, 3, 3, -1],
                [12, 5, 3, 1, 3],
              ],
              threshold: -0.002365678083151579,
              right_val: 0.4898357093334198,
              left_val: 0.5808320045471191,
            },
            {
              features: [
                [5, 4, 3, 3, -1],
                [5, 5, 3, 1, 3],
              ],
              threshold: 0.001073434017598629,
              right_val: 0.5470039248466492,
              left_val: 0.435121089220047,
            },
            {
              features: [
                [9, 14, 2, 6, -1],
                [10, 14, 1, 3, 2],
                [9, 17, 1, 3, 2],
              ],
              threshold: 0.0021923359017819166,
              right_val: 0.3842903971672058,
              left_val: 0.535506010055542,
            },
            {
              features: [
                [8, 14, 3, 2, -1],
                [9, 14, 1, 2, 3],
              ],
              threshold: 0.005496861878782511,
              right_val: 0.2827191948890686,
              left_val: 0.5018138885498047,
            },
            {
              features: [
                [9, 5, 6, 6, -1],
                [11, 5, 2, 6, 3],
              ],
              threshold: -0.0753688216209412,
              right_val: 0.5148826837539673,
              left_val: 0.1225076019763947,
            },
            {
              features: [
                [5, 5, 6, 6, -1],
                [7, 5, 2, 6, 3],
              ],
              threshold: 0.0251344703137875,
              right_val: 0.702544629573822,
              left_val: 0.4731766879558563,
            },
            {
              features: [
                [13, 13, 1, 2, -1],
                [13, 14, 1, 1, 2],
              ],
              threshold: -2935859993158374e-20,
              right_val: 0.465608686208725,
              left_val: 0.5430532097816467,
            },
            {
              features: [
                [0, 2, 10, 2, -1],
                [0, 3, 10, 1, 2],
              ],
              threshold: -0.0005835591000504792,
              right_val: 0.5190119743347168,
              left_val: 0.4031040072441101,
            },
            {
              features: [
                [13, 13, 1, 2, -1],
                [13, 14, 1, 1, 2],
              ],
              threshold: -0.0026639450807124376,
              right_val: 0.5161771178245544,
              left_val: 0.4308126866817474,
            },
            {
              features: [
                [5, 7, 2, 2, -1],
                [5, 7, 1, 1, 2],
                [6, 8, 1, 1, 2],
              ],
              threshold: -0.0013804089976474643,
              right_val: 0.4695515930652618,
              left_val: 0.621982991695404,
            },
            {
              features: [
                [13, 5, 2, 7, -1],
                [13, 5, 1, 7, 2],
              ],
              threshold: 0.0012313219485804439,
              right_val: 0.4425831139087677,
              left_val: 0.5379363894462585,
            },
            {
              features: [
                [6, 13, 1, 2, -1],
                [6, 14, 1, 1, 2],
              ],
              threshold: -14644179827882908e-21,
              right_val: 0.4222503006458283,
              left_val: 0.5281640291213989,
            },
            {
              features: [
                [11, 0, 3, 7, -1],
                [12, 0, 1, 7, 3],
              ],
              threshold: -0.0128188095986843,
              right_val: 0.5179932713508606,
              left_val: 0.2582092881202698,
            },
            {
              features: [
                [0, 3, 2, 16, -1],
                [0, 3, 1, 8, 2],
                [1, 11, 1, 8, 2],
              ],
              threshold: 0.0228521898388863,
              right_val: 0.7609264254570007,
              left_val: 0.4778693020343781,
            },
            {
              features: [
                [11, 0, 3, 7, -1],
                [12, 0, 1, 7, 3],
              ],
              threshold: 0.0008230597013607621,
              right_val: 0.4671724140644074,
              left_val: 0.5340992212295532,
            },
            {
              features: [
                [6, 0, 3, 7, -1],
                [7, 0, 1, 7, 3],
              ],
              threshold: 0.0127701200544834,
              right_val: 0.1472366005182266,
              left_val: 0.4965761005878449,
            },
            {
              features: [
                [11, 16, 8, 4, -1],
                [11, 16, 4, 4, 2],
              ],
              threshold: -0.0500515103340149,
              right_val: 0.5016592144966125,
              left_val: 0.641499400138855,
            },
            {
              features: [
                [1, 16, 8, 4, -1],
                [5, 16, 4, 4, 2],
              ],
              threshold: 0.0157752707600594,
              right_val: 0.5685362219810486,
              left_val: 0.4522320032119751,
            },
            {
              features: [
                [13, 5, 2, 7, -1],
                [13, 5, 1, 7, 2],
              ],
              threshold: -0.0185016207396984,
              right_val: 0.5137959122657776,
              left_val: 0.2764748930931091,
            },
            {
              features: [
                [5, 5, 2, 7, -1],
                [6, 5, 1, 7, 2],
              ],
              threshold: 0.0024626250378787518,
              right_val: 0.3795408010482788,
              left_val: 0.5141941905021667,
            },
            {
              features: [
                [18, 6, 2, 14, -1],
                [18, 13, 2, 7, 2],
              ],
              threshold: 0.0629161670804024,
              right_val: 0.658043384552002,
              left_val: 0.5060648918151855,
            },
            {
              features: [
                [6, 10, 3, 4, -1],
                [6, 12, 3, 2, 2],
              ],
              threshold: -21648500478477217e-21,
              right_val: 0.401988685131073,
              left_val: 0.5195388197898865,
            },
            {
              features: [
                [14, 7, 1, 2, -1],
                [14, 8, 1, 1, 2],
              ],
              threshold: 0.0021180990152060986,
              right_val: 0.5954458713531494,
              left_val: 0.4962365031242371,
            },
            {
              features: [
                [0, 1, 18, 6, -1],
                [0, 1, 9, 3, 2],
                [9, 4, 9, 3, 2],
              ],
              threshold: -0.0166348908096552,
              right_val: 0.517544686794281,
              left_val: 0.3757933080196381,
            },
            {
              features: [
                [14, 7, 1, 2, -1],
                [14, 8, 1, 1, 2],
              ],
              threshold: -0.002889947034418583,
              right_val: 0.5057178735733032,
              left_val: 0.6624013781547546,
            },
            {
              features: [
                [0, 6, 2, 14, -1],
                [0, 13, 2, 7, 2],
              ],
              threshold: 0.076783262193203,
              right_val: 0.8047714829444885,
              left_val: 0.4795796871185303,
            },
            {
              features: [
                [17, 0, 3, 12, -1],
                [18, 0, 1, 12, 3],
              ],
              threshold: 0.003917067777365446,
              right_val: 0.5719941854476929,
              left_val: 0.4937882125377655,
            },
            {
              features: [
                [0, 6, 18, 3, -1],
                [0, 7, 18, 1, 3],
              ],
              threshold: -0.0726706013083458,
              right_val: 0.4943903982639313,
              left_val: 0.0538945607841015,
            },
            {
              features: [
                [6, 0, 14, 16, -1],
                [6, 8, 14, 8, 2],
              ],
              threshold: 0.5403950214385986,
              right_val: 0.1143338978290558,
              left_val: 0.5129774212837219,
            },
            {
              features: [
                [0, 0, 3, 12, -1],
                [1, 0, 1, 12, 3],
              ],
              threshold: 0.0029510019812732935,
              right_val: 0.5698574185371399,
              left_val: 0.4528343975543976,
            },
            {
              features: [
                [13, 0, 3, 7, -1],
                [14, 0, 1, 7, 3],
              ],
              threshold: 0.0034508369863033295,
              right_val: 0.4218730926513672,
              left_val: 0.5357726812362671,
            },
            {
              features: [
                [5, 7, 1, 2, -1],
                [5, 8, 1, 1, 2],
              ],
              threshold: -0.0004207793972454965,
              right_val: 0.4637925922870636,
              left_val: 0.5916172862052917,
            },
            {
              features: [
                [14, 4, 6, 6, -1],
                [14, 6, 6, 2, 3],
              ],
              threshold: 0.0033051050268113613,
              right_val: 0.438204288482666,
              left_val: 0.5273385047912598,
            },
            {
              features: [
                [5, 7, 7, 2, -1],
                [5, 8, 7, 1, 2],
              ],
              threshold: 0.0004773506079800427,
              right_val: 0.5181884765625,
              left_val: 0.4046528041362763,
            },
            {
              features: [
                [8, 6, 6, 9, -1],
                [8, 9, 6, 3, 3],
              ],
              threshold: -0.0259285103529692,
              right_val: 0.5089386105537415,
              left_val: 0.7452235817909241,
            },
            {
              features: [
                [5, 4, 6, 1, -1],
                [7, 4, 2, 1, 3],
              ],
              threshold: -0.002972979098558426,
              right_val: 0.5058795213699341,
              left_val: 0.3295435905456543,
            },
            {
              features: [
                [13, 0, 6, 4, -1],
                [16, 0, 3, 2, 2],
                [13, 2, 3, 2, 2],
              ],
              threshold: 0.005850832909345627,
              right_val: 0.5793024897575378,
              left_val: 0.4857144057750702,
            },
            {
              features: [
                [1, 2, 18, 12, -1],
                [1, 6, 18, 4, 3],
              ],
              threshold: -0.0459675192832947,
              right_val: 0.5380653142929077,
              left_val: 0.4312731027603149,
            },
            {
              features: [
                [3, 2, 17, 12, -1],
                [3, 6, 17, 4, 3],
              ],
              threshold: 0.1558596044778824,
              right_val: 0.1684713959693909,
              left_val: 0.5196170210838318,
            },
            {
              features: [
                [5, 14, 7, 3, -1],
                [5, 15, 7, 1, 3],
              ],
              threshold: 0.0151648297905922,
              right_val: 0.6735026836395264,
              left_val: 0.4735757112503052,
            },
            {
              features: [
                [10, 14, 1, 3, -1],
                [10, 15, 1, 1, 3],
              ],
              threshold: -0.0010604249546304345,
              right_val: 0.4775702953338623,
              left_val: 0.5822926759719849,
            },
            {
              features: [
                [3, 14, 3, 3, -1],
                [3, 15, 3, 1, 3],
              ],
              threshold: 0.006647629197686911,
              right_val: 0.231953501701355,
              left_val: 0.4999198913574219,
            },
            {
              features: [
                [14, 4, 6, 6, -1],
                [14, 6, 6, 2, 3],
              ],
              threshold: -0.0122311301529408,
              right_val: 0.5262982249259949,
              left_val: 0.4750893115997315,
            },
            {
              features: [
                [0, 4, 6, 6, -1],
                [0, 6, 6, 2, 3],
              ],
              threshold: 0.005652888212352991,
              right_val: 0.3561818897724152,
              left_val: 0.5069767832756042,
            },
            {
              features: [
                [12, 5, 4, 3, -1],
                [12, 6, 4, 1, 3],
              ],
              threshold: 0.0012977829901501536,
              right_val: 0.5619062781333923,
              left_val: 0.4875693917274475,
            },
            {
              features: [
                [4, 5, 4, 3, -1],
                [4, 6, 4, 1, 3],
              ],
              threshold: 0.0107815898954868,
              right_val: 0.6782308220863342,
              left_val: 0.4750770032405853,
            },
            {
              features: [
                [18, 0, 2, 6, -1],
                [18, 2, 2, 2, 3],
              ],
              threshold: 0.002865477930754423,
              right_val: 0.4290736019611359,
              left_val: 0.5305461883544922,
            },
            {
              features: [
                [8, 1, 4, 9, -1],
                [10, 1, 2, 9, 2],
              ],
              threshold: 0.0028663428965955973,
              right_val: 0.5539351105690002,
              left_val: 0.4518479108810425,
            },
            {
              features: [
                [6, 6, 8, 2, -1],
                [6, 6, 4, 2, 2],
              ],
              threshold: -0.005198332015424967,
              right_val: 0.5434188842773438,
              left_val: 0.4149119853973389,
            },
            {
              features: [
                [6, 5, 4, 2, -1],
                [6, 5, 2, 1, 2],
                [8, 6, 2, 1, 2],
              ],
              threshold: 0.005373999010771513,
              right_val: 0.6507657170295715,
              left_val: 0.471789687871933,
            },
            {
              features: [
                [10, 5, 2, 3, -1],
                [10, 6, 2, 1, 3],
              ],
              threshold: -0.0146415298804641,
              right_val: 0.5161777138710022,
              left_val: 0.2172164022922516,
            },
            {
              features: [
                [9, 5, 1, 3, -1],
                [9, 6, 1, 1, 3],
              ],
              threshold: -15042580344015732e-21,
              right_val: 0.4298836886882782,
              left_val: 0.533738374710083,
            },
            {
              features: [
                [9, 10, 2, 2, -1],
                [9, 11, 2, 1, 2],
              ],
              threshold: -0.0001187566012958996,
              right_val: 0.5582447052001953,
              left_val: 0.4604594111442566,
            },
            {
              features: [
                [0, 8, 4, 3, -1],
                [0, 9, 4, 1, 3],
              ],
              threshold: 0.0169955305755138,
              right_val: 0.0738800764083862,
              left_val: 0.4945895075798035,
            },
            {
              features: [
                [6, 0, 8, 6, -1],
                [6, 3, 8, 3, 2],
              ],
              threshold: -0.0350959412753582,
              right_val: 0.4977591037750244,
              left_val: 0.70055091381073,
            },
            {
              features: [
                [1, 0, 6, 4, -1],
                [1, 0, 3, 2, 2],
                [4, 2, 3, 2, 2],
              ],
              threshold: 0.0024217350874096155,
              right_val: 0.5477694272994995,
              left_val: 0.4466265141963959,
            },
            {
              features: [
                [13, 0, 3, 7, -1],
                [14, 0, 1, 7, 3],
              ],
              threshold: -0.0009634033776819706,
              right_val: 0.5313338041305542,
              left_val: 0.4714098870754242,
            },
            {
              features: [
                [9, 16, 2, 2, -1],
                [9, 17, 2, 1, 2],
              ],
              threshold: 0.00016391130338888615,
              right_val: 0.5342242121696472,
              left_val: 0.4331546127796173,
            },
            {
              features: [
                [11, 4, 6, 10, -1],
                [11, 9, 6, 5, 2],
              ],
              threshold: -0.0211414601653814,
              right_val: 0.5204498767852783,
              left_val: 0.2644700109958649,
            },
            {
              features: [
                [0, 10, 19, 2, -1],
                [0, 11, 19, 1, 2],
              ],
              threshold: 0.0008777520270086825,
              right_val: 0.4152742922306061,
              left_val: 0.5208349823951721,
            },
            {
              features: [
                [9, 5, 8, 9, -1],
                [9, 8, 8, 3, 3],
              ],
              threshold: -0.0279439203441143,
              right_val: 0.5018811821937561,
              left_val: 0.6344125270843506,
            },
            {
              features: [
                [4, 0, 3, 7, -1],
                [5, 0, 1, 7, 3],
              ],
              threshold: 0.006729737855494022,
              right_val: 0.3500863909721375,
              left_val: 0.5050438046455383,
            },
            {
              features: [
                [8, 6, 4, 12, -1],
                [10, 6, 2, 6, 2],
                [8, 12, 2, 6, 2],
              ],
              threshold: 0.0232810396701097,
              right_val: 0.6968677043914795,
              left_val: 0.4966318011283875,
            },
            {
              features: [
                [0, 2, 6, 4, -1],
                [0, 4, 6, 2, 2],
              ],
              threshold: -0.0116449799388647,
              right_val: 0.5049629807472229,
              left_val: 0.3300260007381439,
            },
            {
              features: [
                [8, 15, 4, 3, -1],
                [8, 16, 4, 1, 3],
              ],
              threshold: 0.0157643090933561,
              right_val: 0.7321153879165649,
              left_val: 0.4991598129272461,
            },
            {
              features: [
                [8, 0, 3, 7, -1],
                [9, 0, 1, 7, 3],
              ],
              threshold: -0.001361147966235876,
              right_val: 0.5160670876502991,
              left_val: 0.3911735117435455,
            },
            {
              features: [
                [9, 5, 3, 4, -1],
                [10, 5, 1, 4, 3],
              ],
              threshold: -0.0008152233785949647,
              right_val: 0.49497190117836,
              left_val: 0.5628911256790161,
            },
            {
              features: [
                [8, 5, 3, 4, -1],
                [9, 5, 1, 4, 3],
              ],
              threshold: -0.0006006627227179706,
              right_val: 0.4550595879554749,
              left_val: 0.585359513759613,
            },
            {
              features: [
                [7, 6, 6, 1, -1],
                [9, 6, 2, 1, 3],
              ],
              threshold: 0.0004971551825292408,
              right_val: 0.5443599224090576,
              left_val: 0.4271470010280609,
            },
            {
              features: [
                [7, 14, 4, 4, -1],
                [7, 14, 2, 2, 2],
                [9, 16, 2, 2, 2],
              ],
              threshold: 0.0023475370835512877,
              right_val: 0.3887656927108765,
              left_val: 0.5143110752105713,
            },
            {
              features: [
                [13, 14, 4, 6, -1],
                [15, 14, 2, 3, 2],
                [13, 17, 2, 3, 2],
              ],
              threshold: -0.008926156908273697,
              right_val: 0.497172087430954,
              left_val: 0.6044502258300781,
            },
            {
              features: [
                [7, 8, 1, 8, -1],
                [7, 12, 1, 4, 2],
              ],
              threshold: -0.013919910416007,
              right_val: 0.5000367760658264,
              left_val: 0.2583160996437073,
            },
            {
              features: [
                [16, 0, 2, 8, -1],
                [17, 0, 1, 4, 2],
                [16, 4, 1, 4, 2],
              ],
              threshold: 0.0010209949687123299,
              right_val: 0.5560358166694641,
              left_val: 0.4857374131679535,
            },
            {
              features: [
                [2, 0, 2, 8, -1],
                [2, 0, 1, 4, 2],
                [3, 4, 1, 4, 2],
              ],
              threshold: -0.0027441629208624363,
              right_val: 0.464577704668045,
              left_val: 0.5936884880065918,
            },
            {
              features: [
                [6, 1, 14, 3, -1],
                [6, 2, 14, 1, 3],
              ],
              threshold: -0.0162001308053732,
              right_val: 0.5193495154380798,
              left_val: 0.3163014948368073,
            },
            {
              features: [
                [7, 9, 3, 10, -1],
                [7, 14, 3, 5, 2],
              ],
              threshold: 0.004333198070526123,
              right_val: 0.3458878993988037,
              left_val: 0.5061224102973938,
            },
            {
              features: [
                [9, 14, 2, 2, -1],
                [9, 15, 2, 1, 2],
              ],
              threshold: 0.0005849793087691069,
              right_val: 0.5870177745819092,
              left_val: 0.4779017865657806,
            },
            {
              features: [
                [7, 7, 6, 8, -1],
                [7, 11, 6, 4, 2],
              ],
              threshold: -0.0022466450463980436,
              right_val: 0.5374773144721985,
              left_val: 0.4297851026058197,
            },
            {
              features: [
                [9, 7, 3, 6, -1],
                [9, 10, 3, 3, 2],
              ],
              threshold: 0.0023146099410951138,
              right_val: 0.4640969932079315,
              left_val: 0.5438671708106995,
            },
            {
              features: [
                [7, 13, 3, 3, -1],
                [7, 14, 3, 1, 3],
              ],
              threshold: 0.008767912164330482,
              right_val: 0.6771789789199829,
              left_val: 0.472689300775528,
            },
            {
              features: [
                [9, 9, 2, 2, -1],
                [9, 10, 2, 1, 2],
              ],
              threshold: -0.00022448020172305405,
              right_val: 0.5428048968315125,
              left_val: 0.4229173064231873,
            },
            {
              features: [
                [0, 1, 18, 2, -1],
                [6, 1, 6, 2, 3],
              ],
              threshold: -0.007433602120727301,
              right_val: 0.4683673977851868,
              left_val: 0.6098880767822266,
            },
            {
              features: [
                [7, 1, 6, 14, -1],
                [7, 8, 6, 7, 2],
              ],
              threshold: -0.0023189240600913763,
              right_val: 0.4424242079257965,
              left_val: 0.5689436793327332,
            },
            {
              features: [
                [1, 9, 18, 1, -1],
                [7, 9, 6, 1, 3],
              ],
              threshold: -0.0021042178850620985,
              right_val: 0.5187087059020996,
              left_val: 0.3762221038341522,
            },
            {
              features: [
                [9, 7, 2, 2, -1],
                [9, 7, 1, 2, 2],
              ],
              threshold: 0.000460348412161693,
              right_val: 0.5771207213401794,
              left_val: 0.4699405133724213,
            },
            {
              features: [
                [9, 3, 2, 9, -1],
                [10, 3, 1, 9, 2],
              ],
              threshold: 0.0010547629790380597,
              right_val: 0.5601701736450195,
              left_val: 0.4465216994285584,
            },
            {
              features: [
                [18, 14, 2, 3, -1],
                [18, 15, 2, 1, 3],
              ],
              threshold: 0.0008714881842024624,
              right_val: 0.3914709091186523,
              left_val: 0.544980525970459,
            },
            {
              features: [
                [7, 11, 3, 1, -1],
                [8, 11, 1, 1, 3],
              ],
              threshold: 0.00033364820410497487,
              right_val: 0.5645738840103149,
              left_val: 0.4564009010791779,
            },
            {
              features: [
                [10, 8, 3, 4, -1],
                [11, 8, 1, 4, 3],
              ],
              threshold: -0.0014853250468149781,
              right_val: 0.4692778885364533,
              left_val: 0.5747377872467041,
            },
            {
              features: [
                [7, 14, 3, 6, -1],
                [8, 14, 1, 6, 3],
              ],
              threshold: 0.0030251620337367058,
              right_val: 0.3762814104557037,
              left_val: 0.5166196823120117,
            },
            {
              features: [
                [10, 8, 3, 4, -1],
                [11, 8, 1, 4, 3],
              ],
              threshold: 0.005028074141591787,
              right_val: 0.6151527166366577,
              left_val: 0.5002111792564392,
            },
            {
              features: [
                [7, 8, 3, 4, -1],
                [8, 8, 1, 4, 3],
              ],
              threshold: -0.0005816451157443225,
              right_val: 0.4390751123428345,
              left_val: 0.5394598245620728,
            },
            {
              features: [
                [7, 9, 6, 9, -1],
                [7, 12, 6, 3, 3],
              ],
              threshold: 0.0451415292918682,
              right_val: 0.206303596496582,
              left_val: 0.5188326835632324,
            },
            {
              features: [
                [0, 14, 2, 3, -1],
                [0, 15, 2, 1, 3],
              ],
              threshold: -0.001079562003724277,
              right_val: 0.5137907266616821,
              left_val: 0.3904685080051422,
            },
            {
              features: [
                [11, 12, 1, 2, -1],
                [11, 13, 1, 1, 2],
              ],
              threshold: 0.00015995999274309725,
              right_val: 0.5427504181861877,
              left_val: 0.4895322918891907,
            },
            {
              features: [
                [4, 3, 8, 3, -1],
                [8, 3, 4, 3, 2],
              ],
              threshold: -0.0193592701107264,
              right_val: 0.4773507118225098,
              left_val: 0.6975228786468506,
            },
            {
              features: [
                [0, 4, 20, 6, -1],
                [0, 4, 10, 6, 2],
              ],
              threshold: 0.207255095243454,
              right_val: 0.3034991919994354,
              left_val: 0.5233635902404785,
            },
            {
              features: [
                [9, 14, 1, 3, -1],
                [9, 15, 1, 1, 3],
              ],
              threshold: -0.00041953290929086506,
              right_val: 0.4460186064243317,
              left_val: 0.5419396758079529,
            },
            {
              features: [
                [8, 14, 4, 3, -1],
                [8, 15, 4, 1, 3],
              ],
              threshold: 0.0022582069505006075,
              right_val: 0.6027408838272095,
              left_val: 0.4815764129161835,
            },
            {
              features: [
                [0, 15, 14, 4, -1],
                [0, 17, 14, 2, 2],
              ],
              threshold: -0.0067811207845807076,
              right_val: 0.5183305740356445,
              left_val: 0.3980278968811035,
            },
            {
              features: [
                [1, 14, 18, 6, -1],
                [1, 17, 18, 3, 2],
              ],
              threshold: 0.0111543098464608,
              right_val: 0.4188759922981262,
              left_val: 0.543123185634613,
            },
            {
              features: [
                [0, 0, 10, 6, -1],
                [0, 0, 5, 3, 2],
                [5, 3, 5, 3, 2],
              ],
              threshold: 0.0431624315679073,
              right_val: 0.6522961258888245,
              left_val: 0.4738228023052216,
            },
          ],
          threshold: 105.76110076904297,
        },
      ],
      size: [20, 20],
      tilted: !1,
    };
  })(jsfeat.haar);
var jsfeat_face = function (a) {
  var b,
    c,
    d,
    e,
    f,
    g,
    h = a.width,
    i = a.height;
  "VIDEO" == a.tagName || "IMG" == a.tagName
    ? ((c = document.createElement("canvas")),
      (c.height = i),
      (c.width = h),
      (d = c.getContext("2d")))
    : "CANVAS" == a.tagName && (d = a.getContext("2d")),
    (b = new jsfeat.matrix_t(h, i, jsfeat.U8_t | jsfeat.C1_t)),
    (e = new Int32Array((h + 1) * (i + 1))),
    (f = new Int32Array((h + 1) * (i + 1))),
    (g = new Int32Array((h + 1) * (i + 1)));
  var j = jsfeat.haar.frontalface;
  this.findFace = function () {
    ("VIDEO" == a.tagName || "IMG" == a.tagName) && d.drawImage(a, 0, 0);
    var c = d.getImageData(0, 0, h, i);
    jsfeat.imgproc.grayscale(c.data, b.data),
      jsfeat.imgproc.equalize_histogram(b, b),
      jsfeat.imgproc.compute_integral_image(b, e, f, null);
    var k = jsfeat.haar.detect_multi_scale(
      e,
      f,
      g,
      null,
      b.cols,
      b.rows,
      j,
      1.15,
      2
    );
    k = jsfeat.haar.group_rectangles(k, 1);
    var l = k.length;
    if (l > 0) {
      for (var m = k[0], n = 1; l > n; n++)
        k[n].neighbors > m.neighbors
          ? (m = k[n])
          : k[n].neighbors == m.neighbors &&
            k[n].confidence > m.confidence &&
            (m = k[n]);
      return [m];
    }
    return !1;
  };
};
